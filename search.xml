<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>为什么学习辩论？</title>
    <url>/2024/11/08/TyporaNotes/Typora_Logic/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AD%A6%E4%B9%A0%E8%BE%A9%E8%AE%BA%EF%BC%9F/</url>
    <content><![CDATA[<h1 id="为什么学习辩论？"><a href="#为什么学习辩论？" class="headerlink" title="为什么学习辩论？"></a>为什么学习辩论？</h1><p>一、观点 冲突普遍</p>
<p>二、辩论是解决争端的最好方式。</p>
<p>三、好的辩论很难得</p>
<p>四、说服力是综合素质的最好体现。论？</p>
<p>一、观点 冲突普遍</p>
<p>二、辩论是解决争端的最好方式。</p>
<p>三、好的辩论很难得</p>
<p>四、说服力是综合素质的最好体现。论？</p>
<p>一、观点 冲突普遍</p>
<p>二、辩论是解决争端的最好方式。</p>
<p>三、好的辩论很难得</p>
<p>四、说服力是综合素质的最好体现。论？</p>
<p>一、观点 冲突普遍</p>
<p>二、辩论是解决争端的最好方式。</p>
<p>三、好的辩论很难得</p>
<p>四、说服力是综合素质的最好体现。</p>
]]></content>
      <categories>
        <category>Logic</category>
      </categories>
  </entry>
  <entry>
    <title>价值观之辩</title>
    <url>/2024/11/08/TyporaNotes/Typora_Logic/%E4%BB%B7%E5%80%BC%E8%A7%82%E4%B9%8B%E8%BE%A9/</url>
    <content><![CDATA[<h1 id="价值观之辩"><a href="#价值观之辩" class="headerlink" title="价值观之辩"></a>价值观之辩</h1><p>一、人们的争论往往是由价值观的不同而引起的。<br>二、价值观冲突是辩论中的草蛇灰线。<br>价值观冲突源于不同个体不同的生命体验。<br>价值观的争论关键不在于辩驳，而在于发掘。</p>
<p>三、</p>
<p><img src="/./../TyporaImage/Logic/image-20240909124455408.png" alt="image-20240909124455408"></p>
<p>四、思维源于概念，概念源于定义。<br>定义：规范性+描述性。<br>五、要观察到自己容易忽略的一面，智者察仁中之智，仁者察智中之仁。之辩</p>
<p>一、人们的争论往往是由价值观的不同而引起的。<br>二、价值观冲突是辩论中的草蛇灰线。<br>价值观冲突源于不同个体不同的生命体验。<br>价值观的争论关键不在于辩驳，而在于发掘。</p>
<p>三、</p>
<p><img src="/./../TyporaImage/Logic/image-20240909124455408.png" alt="image-20240909124455408"></p>
<p>四、思维源于概念，概念源于定义。<br>定义：规范性+描述性。<br>五、要观察到自己容易忽略的一面，智者察仁中之智，仁者察智中之仁。之辩</p>
<p>一、人们的争论往往是由价值观的不同而引起的。<br>二、价值观冲突是辩论中的草蛇灰线。<br>价值观冲突源于不同个体不同的生命体验。<br>价值观的争论关键不在于辩驳，而在于发掘。</p>
<p>三、</p>
<p><img src="/./../TyporaImage/Logic/image-20240909124455408.png" alt="image-20240909124455408"></p>
<p>四、思维源于概念，概念源于定义。<br>定义：规范性+描述性。<br>五、要观察到自己容易忽略的一面，智者察仁中之智，仁者察智中之仁。之辩</p>
<p>一、人们的争论往往是由价值观的不同而引起的。<br>二、价值观冲突是辩论中的草蛇灰线。<br>价值观冲突源于不同个体不同的生命体验。<br>价值观的争论关键不在于辩驳，而在于发掘。</p>
<p>三、</p>
<p><img src="/./../TyporaImage/Logic/image-20240909124455408.png" alt="image-20240909124455408"></p>
<p>四、思维源于概念，概念源于定义。<br>定义：规范性+描述性。<br>五、要观察到自己容易忽略的一面，智者察仁中之智，仁者察智中之仁。</p>
]]></content>
      <categories>
        <category>Logic</category>
      </categories>
  </entry>
  <entry>
    <title>事实之辩</title>
    <url>/2024/11/08/TyporaNotes/Typora_Logic/%E4%BA%8B%E5%AE%9E%E4%B9%8B%E8%BE%A9/</url>
    <content><![CDATA[<h1 id="事实之辩"><a href="#事实之辩" class="headerlink" title="事实之辩"></a>事实之辩</h1><p>一、不同理论的争辩，观察的角度不同。<br>二、对统计结果的争论，孤证不立，统计数字又容易出问题。<br>三、价值观的冲突，公众对理论有观感。之辩</p>
<p>一、不同理论的争辩，观察的角度不同。<br>二、对统计结果的争论，孤证不立，统计数字又容易出问题。<br>三、价值观的冲突，公众对理论有观感。之辩</p>
<p>一、不同理论的争辩，观察的角度不同。<br>二、对统计结果的争论，孤证不立，统计数字又容易出问题。<br>三、价值观的冲突，公众对理论有观感。之辩</p>
<p>一、不同理论的争辩，观察的角度不同。<br>二、对统计结果的争论，孤证不立，统计数字又容易出问题。<br>三、价值观的冲突，公众对理论有观感。</p>
]]></content>
      <categories>
        <category>Logic</category>
      </categories>
  </entry>
  <entry>
    <title>思维逻辑</title>
    <url>/2024/11/08/TyporaNotes/Typora_Logic/%E6%80%9D%E7%BB%B4%E9%80%BB%E8%BE%91/</url>
    <content><![CDATA[<h1 id="思维逻辑"><a href="#思维逻辑" class="headerlink" title="思维逻辑"></a>思维逻辑</h1><h2 id="判断命题真伪"><a href="#判断命题真伪" class="headerlink" title="判断命题真伪"></a>判断命题真伪</h2><p>一、正反逻辑<br>二、建立因果关系：断联系、找他因、推他果。<br>三、确定充要条件逻辑</p>
<h2 id="判断命题真伪-1"><a href="#判断命题真伪-1" class="headerlink" title="判断命题真伪"></a>判断命题真伪</h2><p>一、正反逻辑<br>二、建立因果关系：断联系、找他因、推他果。<br>三、确定充要条件逻辑</p>
<h2 id="判断命题真伪-2"><a href="#判断命题真伪-2" class="headerlink" title="判断命题真伪"></a>判断命题真伪</h2><p>一、正反逻辑<br>二、建立因果关系：断联系、找他因、推他果。<br>三、确定充要条件逻辑</p>
<h2 id="判断命题真伪-3"><a href="#判断命题真伪-3" class="headerlink" title="判断命题真伪"></a>判断命题真伪</h2><p>一、正反逻辑<br>二、建立因果关系：断联系、找他因、推他果。<br>三、确定充要条件</p>
]]></content>
      <categories>
        <category>Logic</category>
      </categories>
  </entry>
  <entry>
    <title>反驳：不被忽悠的秘诀</title>
    <url>/2024/11/08/TyporaNotes/Typora_Logic/%E5%8F%8D%E9%A9%B3%EF%BC%9A%E4%B8%8D%E8%A2%AB%E5%BF%BD%E6%82%A0%E7%9A%84%E7%A7%98%E8%AF%80/</url>
    <content><![CDATA[<h1 id="反驳：不被忽悠的秘诀"><a href="#反驳：不被忽悠的秘诀" class="headerlink" title="反驳：不被忽悠的秘诀"></a>反驳：不被忽悠的秘诀</h1><h2 id="一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。"><a href="#一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。" class="headerlink" title="一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。"></a>一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。</h2><h2 id="二、谬论分类"><a href="#二、谬论分类" class="headerlink" title="二、谬论分类"></a>二、谬论分类</h2><p><img src="/./../TyporaImage/Logic/image-20240909124351628.png" alt="image-20240909124351628"></p>
<h2 id="三、滑坡论证和归谬"><a href="#三、滑坡论证和归谬" class="headerlink" title="三、滑坡论证和归谬"></a>三、滑坡论证和归谬</h2><p><img src="/./../TyporaImage/Logic/image-20240909124403690.png" alt="image-20240909124403690">秘诀</p>
<h2 id="一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。-1"><a href="#一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。-1" class="headerlink" title="一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。"></a>一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。</h2><h2 id="二、谬论分类-1"><a href="#二、谬论分类-1" class="headerlink" title="二、谬论分类"></a>二、谬论分类</h2><p><img src="/./../TyporaImage/Logic/image-20240909124351628.png" alt="image-20240909124351628"></p>
<h2 id="三、滑坡论证和归谬-1"><a href="#三、滑坡论证和归谬-1" class="headerlink" title="三、滑坡论证和归谬"></a>三、滑坡论证和归谬</h2><p><img src="/./../TyporaImage/Logic/image-20240909124403690.png" alt="image-20240909124403690">秘诀</p>
<h2 id="一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。-2"><a href="#一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。-2" class="headerlink" title="一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。"></a>一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。</h2><h2 id="二、谬论分类-2"><a href="#二、谬论分类-2" class="headerlink" title="二、谬论分类"></a>二、谬论分类</h2><p><img src="/./../TyporaImage/Logic/image-20240909124351628.png" alt="image-20240909124351628"></p>
<h2 id="三、滑坡论证和归谬-2"><a href="#三、滑坡论证和归谬-2" class="headerlink" title="三、滑坡论证和归谬"></a>三、滑坡论证和归谬</h2><p><img src="/./../TyporaImage/Logic/image-20240909124403690.png" alt="image-20240909124403690">秘诀</p>
<h2 id="一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。-3"><a href="#一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。-3" class="headerlink" title="一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。"></a>一、同一个意思可以用不同种情绪化语言表达出来，注意这点，避免无意义争端。</h2><h2 id="二、谬论分类-3"><a href="#二、谬论分类-3" class="headerlink" title="二、谬论分类"></a>二、谬论分类</h2><p><img src="/./../TyporaImage/Logic/image-20240909124351628.png" alt="image-20240909124351628"></p>
<h2 id="三、滑坡论证和归谬-3"><a href="#三、滑坡论证和归谬-3" class="headerlink" title="三、滑坡论证和归谬"></a>三、滑坡论证和归谬</h2><p><img src="/./../TyporaImage/Logic/image-20240909124403690.png" alt="image-20240909124403690"></p>
]]></content>
      <categories>
        <category>Logic</category>
      </categories>
  </entry>
  <entry>
    <title>哲理之辩</title>
    <url>/2024/11/08/TyporaNotes/Typora_Logic/%E5%93%B2%E7%90%86%E4%B9%8B%E8%BE%A9/</url>
    <content><![CDATA[<h1 id="哲理之辩"><a href="#哲理之辩" class="headerlink" title="哲理之辩"></a>哲理之辩</h1><p>一、辩论以学理为归宿<br>二、辩论是为了厘清争端之辩</p>
<p>一、辩论以学理为归宿<br>二、辩论是为了厘清争端之辩</p>
<p>一、辩论以学理为归宿<br>二、辩论是为了厘清争端之辩</p>
<p>一、辩论以学理为归宿<br>二、辩论是为了厘清争端</p>
]]></content>
      <categories>
        <category>Logic</category>
      </categories>
  </entry>
  <entry>
    <title>总结：观点的升华</title>
    <url>/2024/11/08/TyporaNotes/Typora_Logic/%E6%80%BB%E7%BB%93%EF%BC%9A%E8%A7%82%E7%82%B9%E7%9A%84%E5%8D%87%E5%8D%8E/</url>
    <content><![CDATA[<h1 id="总结：观点的升华"><a href="#总结：观点的升华" class="headerlink" title="总结：观点的升华"></a>总结：观点的升华</h1><p>一、结合实际进行辩论，不要幻想辩论。<br>二、抓住重点<br>三、深化观点</p>
<p>升华</p>
<p>一、结合实际进行辩论，不要幻想辩论。<br>二、抓住重点<br>三、深化观点升华</p>
<p>一、结合实际进行辩论，不要幻想辩论。<br>二、抓住重点<br>三、深化观点</p>
<p>升华</p>
<p>一、结合实际进行辩论，不要幻想辩论。<br>二、抓住重点<br>三、深化观点</p>
]]></content>
      <categories>
        <category>Logic</category>
      </categories>
  </entry>
  <entry>
    <title>政策之辩</title>
    <url>/2024/11/08/TyporaNotes/Typora_Logic/%E6%94%BF%E7%AD%96%E4%B9%8B%E8%BE%A9/</url>
    <content><![CDATA[<h1 id="政策之辩"><a href="#政策之辩" class="headerlink" title="政策之辩"></a>政策之辩</h1><h2 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h2><p>“应当”</p>
<h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>事实+价值</p>
<h2 id="方向"><a href="#方向" class="headerlink" title="方向"></a>方向</h2><p>情与理</p>
<h2 id="基本框架"><a href="#基本框架" class="headerlink" title="基本框架"></a>基本框架</h2><p>1.必要性<br>2.根属性<br>3.解决力<br>4.收益比之辩</p>
<h2 id="核心-1"><a href="#核心-1" class="headerlink" title="核心"></a>核心</h2><p>“应当”</p>
<h2 id="内容-1"><a href="#内容-1" class="headerlink" title="内容"></a>内容</h2><p>事实+价值</p>
<h2 id="方向-1"><a href="#方向-1" class="headerlink" title="方向"></a>方向</h2><p>情与理</p>
<h2 id="基本框架-1"><a href="#基本框架-1" class="headerlink" title="基本框架"></a>基本框架</h2><p>1.必要性<br>2.根属性<br>3.解决力<br>4.收益比之辩</p>
<h2 id="核心-2"><a href="#核心-2" class="headerlink" title="核心"></a>核心</h2><p>“应当”</p>
<h2 id="内容-2"><a href="#内容-2" class="headerlink" title="内容"></a>内容</h2><p>事实+价值</p>
<h2 id="方向-2"><a href="#方向-2" class="headerlink" title="方向"></a>方向</h2><p>情与理</p>
<h2 id="基本框架-2"><a href="#基本框架-2" class="headerlink" title="基本框架"></a>基本框架</h2><p>1.必要性<br>2.根属性<br>3.解决力<br>4.收益比之辩</p>
<h2 id="核心-3"><a href="#核心-3" class="headerlink" title="核心"></a>核心</h2><p>“应当”</p>
<h2 id="内容-3"><a href="#内容-3" class="headerlink" title="内容"></a>内容</h2><p>事实+价值</p>
<h2 id="方向-3"><a href="#方向-3" class="headerlink" title="方向"></a>方向</h2><p>情与理</p>
<h2 id="基本框架-3"><a href="#基本框架-3" class="headerlink" title="基本框架"></a>基本框架</h2><p>1.必要性<br>2.根属性<br>3.解决力<br>4.收益比</p>
]]></content>
      <categories>
        <category>Logic</category>
      </categories>
  </entry>
  <entry>
    <title>表达逻辑</title>
    <url>/2024/11/08/TyporaNotes/Typora_Logic/%E8%A1%A8%E8%BE%BE%E9%80%BB%E8%BE%91/</url>
    <content><![CDATA[<h1 id="表达逻辑"><a href="#表达逻辑" class="headerlink" title="表达逻辑"></a>表达逻辑</h1><h2 id="一、标点运用"><a href="#一、标点运用" class="headerlink" title="一、标点运用"></a>一、标点运用</h2><h2 id="二、分段分点"><a href="#二、分段分点" class="headerlink" title="二、分段分点"></a>二、分段分点</h2><h2 id="三、段句结构"><a href="#三、段句结构" class="headerlink" title="三、段句结构"></a>三、段句结构</h2><h2 id="四、不重复不错误"><a href="#四、不重复不错误" class="headerlink" title="四、不重复不错误"></a>四、不重复不错误</h2><h2 id="五、表达顺序"><a href="#五、表达顺序" class="headerlink" title="五、表达顺序"></a>五、表达顺序</h2><h2 id="六、类比举例"><a href="#六、类比举例" class="headerlink" title="六、类比举例"></a>六、类比举例</h2><p>逻辑</p>
<h2 id="一、标点运用-1"><a href="#一、标点运用-1" class="headerlink" title="一、标点运用"></a>一、标点运用</h2><h2 id="二、分段分点-1"><a href="#二、分段分点-1" class="headerlink" title="二、分段分点"></a>二、分段分点</h2><h2 id="三、段句结构-1"><a href="#三、段句结构-1" class="headerlink" title="三、段句结构"></a>三、段句结构</h2><h2 id="四、不重复不错误-1"><a href="#四、不重复不错误-1" class="headerlink" title="四、不重复不错误"></a>四、不重复不错误</h2><h2 id="五、表达顺序-1"><a href="#五、表达顺序-1" class="headerlink" title="五、表达顺序"></a>五、表达顺序</h2><h2 id="六、类比举例逻辑"><a href="#六、类比举例逻辑" class="headerlink" title="六、类比举例逻辑"></a>六、类比举例逻辑</h2><h2 id="一、标点运用-2"><a href="#一、标点运用-2" class="headerlink" title="一、标点运用"></a>一、标点运用</h2><h2 id="二、分段分点-2"><a href="#二、分段分点-2" class="headerlink" title="二、分段分点"></a>二、分段分点</h2><h2 id="三、段句结构-2"><a href="#三、段句结构-2" class="headerlink" title="三、段句结构"></a>三、段句结构</h2><h2 id="四、不重复不错误-2"><a href="#四、不重复不错误-2" class="headerlink" title="四、不重复不错误"></a>四、不重复不错误</h2><h2 id="五、表达顺序-2"><a href="#五、表达顺序-2" class="headerlink" title="五、表达顺序"></a>五、表达顺序</h2><h2 id="六、类比举例-1"><a href="#六、类比举例-1" class="headerlink" title="六、类比举例"></a>六、类比举例</h2><p>逻辑</p>
<h2 id="一、标点运用-3"><a href="#一、标点运用-3" class="headerlink" title="一、标点运用"></a>一、标点运用</h2><h2 id="二、分段分点-3"><a href="#二、分段分点-3" class="headerlink" title="二、分段分点"></a>二、分段分点</h2><h2 id="三、段句结构-3"><a href="#三、段句结构-3" class="headerlink" title="三、段句结构"></a>三、段句结构</h2><h2 id="四、不重复不错误-3"><a href="#四、不重复不错误-3" class="headerlink" title="四、不重复不错误"></a>四、不重复不错误</h2><h2 id="五、表达顺序-3"><a href="#五、表达顺序-3" class="headerlink" title="五、表达顺序"></a>五、表达顺序</h2><h2 id="六、类比举例-2"><a href="#六、类比举例-2" class="headerlink" title="六、类比举例"></a>六、类比举例</h2>]]></content>
      <categories>
        <category>Logic</category>
      </categories>
  </entry>
  <entry>
    <title>质询：听比说重要</title>
    <url>/2024/11/08/TyporaNotes/Typora_Logic/%E8%B4%A8%E8%AF%A2%EF%BC%9A%E5%90%AC%E6%AF%94%E8%AF%B4%E9%87%8D%E8%A6%81/</url>
    <content><![CDATA[<h1 id="质询：听比说重要"><a href="#质询：听比说重要" class="headerlink" title="质询：听比说重要"></a>质询：听比说重要</h1><p>一、找到问题，论断以及支持它的论据。<br>二、发掘隐含信息，重新推导推理过程。<br>三、注意含糊的词，找出不合理之处进行询问。（自相矛盾，不当类比，衡量标准不合理）<br>四、最后一招提出竞争性假说。</p>
<p>重要</p>
<p>一、找到问题，论断以及支持它的论据。<br>二、发掘隐含信息，重新推导推理过程。<br>三、注意含糊的词，找出不合理之处进行询问。（自相矛盾，不当类比，衡量标准不合理）<br>四、最后一招提出竞争性假说。重要</p>
<p>一、找到问题，论断以及支持它的论据。<br>二、发掘隐含信息，重新推导推理过程。<br>三、注意含糊的词，找出不合理之处进行询问。（自相矛盾，不当类比，衡量标准不合理）<br>四、最后一招提出竞争性假说。</p>
<p>重要</p>
<p>一、找到问题，论断以及支持它的论据。<br>二、发掘隐含信息，重新推导推理过程。<br>三、注意含糊的词，找出不合理之处进行询问。（自相矛盾，不当类比，衡量标准不合理）<br>四、最后一招提出竞争性假说。</p>
]]></content>
      <categories>
        <category>Logic</category>
      </categories>
  </entry>
  <entry>
    <title>立论</title>
    <url>/2024/11/08/TyporaNotes/Typora_Logic/%E7%AB%8B%E8%AE%BA/</url>
    <content><![CDATA[<h1 id="立论"><a href="#立论" class="headerlink" title="立论"></a>立论</h1><h2 id="战略方向"><a href="#战略方向" class="headerlink" title="战略方向"></a>战略方向</h2><p>注意对抗环境,注意论证成本，以受众为核心。</p>
<h2 id="战术方向"><a href="#战术方向" class="headerlink" title="战术方向"></a>战术方向</h2><p>切割，捆绑，处境化；发掘，整理，求合题。</p>
<p>立论</p>
<h2 id="战略方向-1"><a href="#战略方向-1" class="headerlink" title="战略方向"></a>战略方向</h2><p>注意对抗环境,注意论证成本，以受众为核心。</p>
<h2 id="战术方向-1"><a href="#战术方向-1" class="headerlink" title="战术方向"></a>战术方向</h2><p>切割，捆绑，处境化；发掘，整理，求合题。立论</p>
<h2 id="战略方向-2"><a href="#战略方向-2" class="headerlink" title="战略方向"></a>战略方向</h2><p>注意对抗环境,注意论证成本，以受众为核心。</p>
<h2 id="战术方向-2"><a href="#战术方向-2" class="headerlink" title="战术方向"></a>战术方向</h2><p>切割，捆绑，处境化；发掘，整理，求合题。</p>
<p>立论</p>
<h2 id="战略方向-3"><a href="#战略方向-3" class="headerlink" title="战略方向"></a>战略方向</h2><p>注意对抗环境,注意论证成本，以受众为核心。</p>
<h2 id="战术方向-3"><a href="#战术方向-3" class="headerlink" title="战术方向"></a>战术方向</h2><p>切割，捆绑，处境化；发掘，整理，求合题。</p>
]]></content>
      <categories>
        <category>Logic</category>
      </categories>
  </entry>
  <entry>
    <title>辩论是什么？</title>
    <url>/2024/11/08/TyporaNotes/Typora_Logic/%E8%BE%A9%E8%AE%BA%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
    <content><![CDATA[<h1 id="辩论是什么？"><a href="#辩论是什么？" class="headerlink" title="辩论是什么？"></a>辩论是什么？</h1><h2 id="对人不对事"><a href="#对人不对事" class="headerlink" title="对人不对事"></a>对人不对事</h2><p>争吵、论断</p>
<h2 id="对事不对人"><a href="#对事不对人" class="headerlink" title="对事不对人"></a>对事不对人</h2><p>辩论、论证<br>辩：弄清楚是非，即批判性思维<br>论：遵循一定道理而且说的很好的言语。<br>①定义：在特定的立场下，以批判性思维去说服对方。<br> ②重点：有立场、有论据、第三方、有目标<br>③态度：包容与协商，可以观察到一体两面，并采用换位思考的方式进行说服。<br>④基本功：思维与感悟（理性与感性），思维：普遍、本质、自洽、概念。（洞悉事理）感悟：个体、处境、直觉。（体察人心）<br>⑤组织：立题（精确界定，免生枝节，真正对立）——流程——评判么？</p>
<h2 id="对人不对事-1"><a href="#对人不对事-1" class="headerlink" title="对人不对事"></a>对人不对事</h2><p>争吵、论断</p>
<h2 id="对事不对人-1"><a href="#对事不对人-1" class="headerlink" title="对事不对人"></a>对事不对人</h2><p>辩论、论证<br>辩：弄清楚是非，即批判性思维<br>论：遵循一定道理而且说的很好的言语。<br>①定义：在特定的立场下，以批判性思维去说服对方。<br> ②重点：有立场、有论据、第三方、有目标<br>③态度：包容与协商，可以观察到一体两面，并采用换位思考的方式进行说服。<br>④基本功：思维与感悟（理性与感性），思维：普遍、本质、自洽、概念。（洞悉事理）感悟：个体、处境、直觉。（体察人心）<br>⑤组织：立题（精确界定，免生枝节，真正对立）——流程——评判么？</p>
<h2 id="对人不对事-2"><a href="#对人不对事-2" class="headerlink" title="对人不对事"></a>对人不对事</h2><p>争吵、论断</p>
<h2 id="对事不对人-2"><a href="#对事不对人-2" class="headerlink" title="对事不对人"></a>对事不对人</h2><p>辩论、论证<br>辩：弄清楚是非，即批判性思维<br>论：遵循一定道理而且说的很好的言语。<br>①定义：在特定的立场下，以批判性思维去说服对方。<br> ②重点：有立场、有论据、第三方、有目标<br>③态度：包容与协商，可以观察到一体两面，并采用换位思考的方式进行说服。<br>④基本功：思维与感悟（理性与感性），思维：普遍、本质、自洽、概念。（洞悉事理）感悟：个体、处境、直觉。（体察人心）<br>⑤组织：立题（精确界定，免生枝节，真正对立）——流程——评判么？</p>
<h2 id="对人不对事-3"><a href="#对人不对事-3" class="headerlink" title="对人不对事"></a>对人不对事</h2><p>争吵、论断</p>
<h2 id="对事不对人-3"><a href="#对事不对人-3" class="headerlink" title="对事不对人"></a>对事不对人</h2><p>辩论、论证<br>辩：弄清楚是非，即批判性思维<br>论：遵循一定道理而且说的很好的言语。<br>①定义：在特定的立场下，以批判性思维去说服对方。<br> ②重点：有立场、有论据、第三方、有目标<br>③态度：包容与协商，可以观察到一体两面，并采用换位思考的方式进行说服。<br>④基本功：思维与感悟（理性与感性），思维：普遍、本质、自洽、概念。（洞悉事理）感悟：个体、处境、直觉。（体察人心）<br>⑤组织：立题（精确界定，免生枝节，真正对立）——流程——评判</p>
]]></content>
      <categories>
        <category>Logic</category>
      </categories>
  </entry>
  <entry>
    <title>取势</title>
    <url>/2024/11/08/TyporaNotes/Typora_MethodOfStudy/%E5%8F%96%E5%8A%BF/</url>
    <content><![CDATA[<h1 id="取势"><a href="#取势" class="headerlink" title="取势"></a>取势</h1><p>1，学习带有目的性<br>2.先整理大体框架，明晰大意取势</p>
<p>1，学习带有目的性<br>2.先整理大体框架，明晰大意</p>
]]></content>
      <categories>
        <category>MethodOfStudy</category>
      </categories>
  </entry>
  <entry>
    <title>明道</title>
    <url>/2024/11/08/TyporaNotes/Typora_MethodOfStudy/%E6%98%8E%E9%81%93/</url>
    <content><![CDATA[<h1 id="明道"><a href="#明道" class="headerlink" title="明道"></a>明道</h1><p>记忆<br>1，不断解析学习方法<br>2、不断重复，形成记忆<br>3.不断进行短期记忆，不让大脑负载<br>4.分散记忆，学习不同学科明道</p>
<p>记忆<br>1，不断解析学习方法<br>2、不断重复，形成记忆<br>3.不断进行短期记忆，不让大脑负载<br>4.分散记忆，学习不同学科</p>
]]></content>
      <categories>
        <category>MethodOfStudy</category>
      </categories>
  </entry>
  <entry>
    <title>优术</title>
    <url>/2024/11/08/TyporaNotes/Typora_MethodOfStudy/%E4%BC%98%E6%9C%AF/</url>
    <content><![CDATA[<h1 id="优术"><a href="#优术" class="headerlink" title="优术"></a>优术</h1><p>1.进行复盘<br>2.拆解问题找本质<br>3.提出方法，实践验证<br>4.分类汇总，形成新思维<br>5.庖丁解牛般进行错题整理优术</p>
<p>1.进行复盘<br>2.拆解问题找本质<br>3.提出方法，实践验证<br>4.分类汇总，形成新思维<br>5.庖丁解牛般进行错题整理</p>
]]></content>
      <categories>
        <category>MethodOfStudy</category>
      </categories>
  </entry>
  <entry>
    <title>专业杂记</title>
    <url>/2024/11/08/TyporaNotes/Typora_MiscellanyOfThoughts/%E4%B8%93%E4%B8%9A%E6%9D%82%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="专业杂记"><a href="#专业杂记" class="headerlink" title="专业杂记"></a>专业杂记</h1><p>一、写代码需要模块化，功能性模块化。<br>二、写出的代码要简洁，但简洁不是大道至简，直指本质；而是形式上的简洁。<br>三、一个变量名通过映射指向了数据本身，也就是说变量名通过间接访问空间地址访问了数据。<br>三、无条件循环可以通过for循环实现。<br>四、根据什么查找，需要在根据的层次上落实。<br>五、思维设计是虚，运行是实。虚实结合就是程序。<br>六、重要的是思想和操作，至于语法不重要。<br>七、系统思维和整体思维、底层思维相互结合。<br>八、代码的编写需要直观性、简洁性。<br>九、记忆知识点时，需要零散型和系统性相结合。<br>十、搞懂一件事，实际上是从具体到抽象。<br>十一、一切以客观事实为准<br>十二、</p>
<ol>
<li>是什么： 学习概念的定义，包括不同概念的特殊种类和它们的描述，性质。这一步骤强调对数学概念的确切理解和内涵。</li>
<li>怎么做： 通过做题具体理解。这一步骤注重实际应用，通过解决问题来深入理解数学概念，培养解决实际问题的能力。</li>
<li>为什么： 了解概念的重要性，包括历史和证明等。这一步骤强调对数学概念的深层次理解，包括它们的起源、发展历程，以及为什么它们在数学领域中具有重要意义。<br>十三、写代码不仅要考虑到正确情况，还要考虑到不正确的情况。考虑不正确的情况需要用取反。杂记</li>
</ol>
<p>一、写代码需要模块化，功能性模块化。<br>二、写出的代码要简洁，但简洁不是大道至简，直指本质；而是形式上的简洁。<br>三、一个变量名通过映射指向了数据本身，也就是说变量名通过间接访问空间地址访问了数据。<br>三、无条件循环可以通过for循环实现。<br>四、根据什么查找，需要在根据的层次上落实。<br>五、思维设计是虚，运行是实。虚实结合就是程序。<br>六、重要的是思想和操作，至于语法不重要。<br>七、系统思维和整体思维、底层思维相互结合。<br>八、代码的编写需要直观性、简洁性。<br>九、记忆知识点时，需要零散型和系统性相结合。<br>十、搞懂一件事，实际上是从具体到抽象。<br>十一、一切以客观事实为准<br>十二、</p>
<ol>
<li>是什么： 学习概念的定义，包括不同概念的特殊种类和它们的描述，性质。这一步骤强调对数学概念的确切理解和内涵。</li>
<li>怎么做： 通过做题具体理解。这一步骤注重实际应用，通过解决问题来深入理解数学概念，培养解决实际问题的能力。</li>
<li>为什么： 了解概念的重要性，包括历史和证明等。这一步骤强调对数学概念的深层次理解，包括它们的起源、发展历程，以及为什么它们在数学领域中具有重要意义。<br>十三、写代码不仅要考虑到正确情况，还要考虑到不正确的情况。考虑不正确的情况需要用取反。</li>
</ol>
]]></content>
      <categories>
        <category>MiscellanyOfThoughts</category>
      </categories>
  </entry>
  <entry>
    <title>网络视频</title>
    <url>/2024/11/08/TyporaNotes/Typora_MiscellanyOfThoughts/%E7%BD%91%E7%BB%9C%E8%A7%86%E9%A2%91/</url>
    <content><![CDATA[<h1 id="网络视频"><a href="#网络视频" class="headerlink" title="网络视频"></a>网络视频</h1><p>学习的底层原理：</p>
<p>一、话题引入的原因<br>二、正式引入<br>三、引入概念：心智、心智计算理论、心里表征。<br>并类比讲解<br>四、提出重点：三个重点：心里表征、记忆、晶体智力。<br>五、引出重点：</p>
<p><img src="/./../TyporaImage/MiscellanyOfThoughts/image-20240909122610599.png" alt="image-20240909122610599"></p>
<p>起因、经过、结果都要记住。 现在主要是经过的大致操作记不住。</p>
<p>为什么：<br>为什么需要，为什么（原理）。</p>
<p>思维混乱的原因及其解决措施：</p>
<p>原因一：压力  措施：运动<br>原因二：过度刺激导致了注意力分散   措施：冥想<br>原因三：睡眠不足   措施：改善睡眠质量，比如，早上晒太阳、晚上<br>原因四：饮食     措施:合理饮食视频</p>
<p>学习的底层原理：</p>
<p>一、话题引入的原因<br>二、正式引入<br>三、引入概念：心智、心智计算理论、心里表征。<br>并类比讲解<br>四、提出重点：三个重点：心里表征、记忆、晶体智力。<br>五、引出重点：</p>
<p><img src="/./../TyporaImage/MiscellanyOfThoughts/image-20240909122610599.png" alt="image-20240909122610599"></p>
<p>起因、经过、结果都要记住。 现在主要是经过的大致操作记不住。</p>
<p>为什么：<br>为什么需要，为什么（原理）。</p>
<p>思维混乱的原因及其解决措施：</p>
<p>原因一：压力  措施：运动<br>原因二：过度刺激导致了注意力分散   措施：冥想<br>原因三：睡眠不足   措施：改善睡眠质量，比如，早上晒太阳、晚上<br>原因四：饮食     措施:合理饮食</p>
]]></content>
      <categories>
        <category>MiscellanyOfThoughts</category>
      </categories>
  </entry>
  <entry>
    <title>感悟杂记</title>
    <url>/2024/11/08/TyporaNotes/Typora_MiscellanyOfThoughts/%E6%84%9F%E6%82%9F%E6%9D%82%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="感悟杂记"><a href="#感悟杂记" class="headerlink" title="感悟杂记"></a>感悟杂记</h1><p>一、人之所以坚持是因为有了希望，有了希望才能坚持。<br>二、学而不思则罔，思而不学则殆。<br>三、思考怎么解决一件事时，是从高层次到低层次。实际执行时是从低到高去执行。<br>四、概念混乱是因为一开始就没有给出明确的定义，一直在套娃解释。<br>五、有些事有绝对的先后吗，难道不是同时存在吗？<br>六、我喜欢的究竟是二次元呢？还是二次元中美好的事物 呢？<br>我喜欢的是二次元中美好的事物。推而广之，现实中的美好事物也应该得到我的注意。<br>七、玩手机使我开心，可是这种开心占据了我大量的时间；反而灭杀了我接触更开心更有激情事物的可能。<br>八、思想上最大的阻碍，不是前方的困难，而是自己的作茧自缚。<br>九、我的心里只能有一个声音，那就是我自己的声音。<br>十、学习一件事时，时刻牢记系统思维，时刻把握中心思想，以中心思想构成系统。<br>十一、<br>什么是知止？怎么能知止？为什么要知止？<br>知止是懂得停止；<br>如何知止： 当事情逐渐发展到不利于自身发展时，就停止做这件事；<br>为什么：为了达到至善的境界，即为了达到自己理想的目的。<br>十二、人往往是自大的，以至于不自知。因此，个人与他人交往时需要坚定原则来保护自己的核心利益，必要时候舍弃次要利益或者带点刺。<br>十三、<br>学习的基本过程涉及到宏观到微观和从微观到宏观的学习方式，且这两种方式动态切换<br>十四、<br>我的思维是离散型的，这导致了我思考过程无法连续。我需要进行阶段性连续思考，这样才能搞清楚事情的全貌。<br>十五、<br>我搞不懂一个知识点，因为不懂他的意义。为什么不懂他的意义，因为不懂他的应用。为什么不懂他的应用，因为不懂他的目的。 归根结底，是因为没有目标，没有方向。<br>十六、知识体系不仅有以逻辑性为根的层次划分，还有以动态性和多样性的概念关联。<br>十七、我的人生方向标就是我自己。（虚无主义有感）<br>十八、万事万物都有一个核心。<br>十九、关于人生的意义，每个人都不同的看法，没有绝对正确一说。杂记</p>
<p>一、人之所以坚持是因为有了希望，有了希望才能坚持。<br>二、学而不思则罔，思而不学则殆。<br>三、思考怎么解决一件事时，是从高层次到低层次。实际执行时是从低到高去执行。<br>四、概念混乱是因为一开始就没有给出明确的定义，一直在套娃解释。<br>五、有些事有绝对的先后吗，难道不是同时存在吗？<br>六、我喜欢的究竟是二次元呢？还是二次元中美好的事物 呢？<br>我喜欢的是二次元中美好的事物。推而广之，现实中的美好事物也应该得到我的注意。<br>七、玩手机使我开心，可是这种开心占据了我大量的时间；反而灭杀了我接触更开心更有激情事物的可能。<br>八、思想上最大的阻碍，不是前方的困难，而是自己的作茧自缚。<br>九、我的心里只能有一个声音，那就是我自己的声音。<br>十、学习一件事时，时刻牢记系统思维，时刻把握中心思想，以中心思想构成系统。<br>十一、<br>什么是知止？怎么能知止？为什么要知止？<br>知止是懂得停止；<br>如何知止： 当事情逐渐发展到不利于自身发展时，就停止做这件事；<br>为什么：为了达到至善的境界，即为了达到自己理想的目的。<br>十二、人往往是自大的，以至于不自知。因此，个人与他人交往时需要坚定原则来保护自己的核心利益，必要时候舍弃次要利益或者带点刺。<br>十三、<br>学习的基本过程涉及到宏观到微观和从微观到宏观的学习方式，且这两种方式动态切换<br>十四、<br>我的思维是离散型的，这导致了我思考过程无法连续。我需要进行阶段性连续思考，这样才能搞清楚事情的全貌。<br>十五、<br>我搞不懂一个知识点，因为不懂他的意义。为什么不懂他的意义，因为不懂他的应用。为什么不懂他的应用，因为不懂他的目的。 归根结底，是因为没有目标，没有方向。<br>十六、知识体系不仅有以逻辑性为根的层次划分，还有以动态性和多样性的概念关联。<br>十七、我的人生方向标就是我自己。（虚无主义有感）<br>十八、万事万物都有一个核心。<br>十九、关于人生的意义，每个人都不同的看法，没有绝对正确一说。</p>
]]></content>
      <categories>
        <category>MiscellanyOfThoughts</category>
      </categories>
  </entry>
  <entry>
    <title>理解</title>
    <url>/2024/11/08/TyporaNotes/Typora_MethodOfStudy/%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h1><p>1.建立抽象概念与实际例子的联系<br>2.建立抽象概念之间的联系<br>3.理解前需要先走记忆<br>4.多角度理解理解</p>
<p>1.建立抽象概念与实际例子的联系<br>2.建立抽象概念之间的联系<br>3.理解前需要先走记忆<br>4.多角度理解</p>
]]></content>
      <categories>
        <category>MethodOfStudy</category>
      </categories>
  </entry>
  <entry>
    <title>人的思维</title>
    <url>/2024/11/08/TyporaNotes/Typora_MiscellanyOfThoughts/%E4%BA%BA%E7%9A%84%E6%80%9D%E7%BB%B4/</url>
    <content><![CDATA[<h1 id="人的思维"><a href="#人的思维" class="headerlink" title="人的思维"></a>人的思维</h1><p>概念、内涵、定义、对象、对象集、外延、属性、属性集合、性质、关系。</p>
<p>概念是内涵和外延的统称。</p>
<p>属性是对象的性质和对象之间的关系的统称。</p>
<p>特点对应事物是外延。</p>
<p>关系是事物和外界的联系。</p>
<p>属性是性质和关系的统称。</p>
<p>属性集就是内涵。</p>
<ol>
<li>概念（Concept）： 概念是思维中的抽象构建，用于代表一类对象、事物或思想。概念包括内涵和外延两个关键部分。</li>
<li>内涵（Intension）： 内涵是概念的核心，包括了属性、特点和关系的集合，用于精确定义和描述概念的特性和含义。内涵可以被看作属性集，但要强调它不仅包括属性，还包括了特点和关系。</li>
<li>外延（Extension）： 外延是概念的实际应用，包括了符合概念定义的具体对象或实例。外延是内涵的具体体现，但这一部分是实际存在的对象或实例。</li>
<li>属性（Attribute）： 属性是内涵中的一个部分，表示概念所具有的性质、特征或特点。属性有助于区分不同概念。</li>
<li>特点（Characteristic）： 特点是属性的一种，用于描述概念的某一方面或性质。特点是属性的具体表现。</li>
<li>关系（Relation）： 关系是属性的一种，表示概念之间的联系或互动。关系用于描述不同概念之间的相互作用和依存关系。<br>  对象集（Extension）： 对象集是概念的外延，包括了符合概念定义的具体对象或实例。它们是概念在实际世界中的具体表现。</li>
</ol>
<p>应用，也就是要注意理论联系实际。</p>
<p>思维方式：<br>发散性思维、逻辑思维、图像思维、结构化思维、系统性思维。</p>
<p>图像表示：</p>
<p><img src="/./../TyporaImage/MiscellanyOfThoughts/image-20240908131613705.png" alt="image-20240908131613705"></p>
<p>发散性思维：<br>看到一个事物或者事情，想到与其相关的其他事物或者事情。</p>
<p>逻辑思维：<br> 从规律层面研究内容之间的关系。</p>
<p>图像思维：<br>把学习的内容用图像形象化进行记忆。</p>
<p>结构化思维：<br>逻辑思维的进阶，将处理的内容整合为结构，从整体上把握记忆内容。</p>
<p>系统化思维：<br>全面统筹学习的整个过程，综合运用各种合适的方法提高学习效率，不断优化过程中的每一个步骤。思维</p>
<p>概念、内涵、定义、对象、对象集、外延、属性、属性集合、性质、关系。</p>
<p>概念是内涵和外延的统称。</p>
<p>属性是对象的性质和对象之间的关系的统称。</p>
<p>特点对应事物是外延。</p>
<p>关系是事物和外界的联系。</p>
<p>属性是性质和关系的统称。</p>
<p>属性集就是内涵。</p>
<ol>
<li>概念（Concept）： 概念是思维中的抽象构建，用于代表一类对象、事物或思想。概念包括内涵和外延两个关键部分。</li>
<li>内涵（Intension）： 内涵是概念的核心，包括了属性、特点和关系的集合，用于精确定义和描述概念的特性和含义。内涵可以被看作属性集，但要强调它不仅包括属性，还包括了特点和关系。</li>
<li>外延（Extension）： 外延是概念的实际应用，包括了符合概念定义的具体对象或实例。外延是内涵的具体体现，但这一部分是实际存在的对象或实例。</li>
<li>属性（Attribute）： 属性是内涵中的一个部分，表示概念所具有的性质、特征或特点。属性有助于区分不同概念。</li>
<li>特点（Characteristic）： 特点是属性的一种，用于描述概念的某一方面或性质。特点是属性的具体表现。</li>
<li>关系（Relation）： 关系是属性的一种，表示概念之间的联系或互动。关系用于描述不同概念之间的相互作用和依存关系。<br>  对象集（Extension）： 对象集是概念的外延，包括了符合概念定义的具体对象或实例。它们是概念在实际世界中的具体表现。</li>
</ol>
<p>应用，也就是要注意理论联系实际。</p>
<p>思维方式：<br>发散性思维、逻辑思维、图像思维、结构化思维、系统性思维。</p>
<p>图像表示：</p>
<p><img src="/./../TyporaImage/MiscellanyOfThoughts/image-20240908131613705.png" alt="image-20240908131613705"></p>
<p>发散性思维：<br>看到一个事物或者事情，想到与其相关的其他事物或者事情。</p>
<p>逻辑思维：<br> 从规律层面研究内容之间的关系。</p>
<p>图像思维：<br>把学习的内容用图像形象化进行记忆。</p>
<p>结构化思维：<br>逻辑思维的进阶，将处理的内容整合为结构，从整体上把握记忆内容。</p>
<p>系统化思维：<br>全面统筹学习的整个过程，综合运用各种合适的方法提高学习效率，不断优化过程中的每一个步骤。</p>
]]></content>
      <categories>
        <category>MiscellanyOfThoughts</category>
      </categories>
  </entry>
  <entry>
    <title>AJAX</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/AJAX/</url>
    <content><![CDATA[<h1 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>AJAX（Asynchronous JavaScript and XML）是一种用于创建动态网页的技术，允许网页在不重新加载整个页面的情况下，与服务器进行异步通信和数据交换。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-JavaScript"><a href="#1-JavaScript" class="headerlink" title="1.JavaScript"></a>1.JavaScript</h3><p>用于发起异步请求和处理响应。</p>
<h3 id="2-XMLHttpRequest对象"><a href="#2-XMLHttpRequest对象" class="headerlink" title="2.XMLHttpRequest对象"></a>2.XMLHttpRequest对象</h3><p>核心对象，用于与服务器交换数据。</p>
<h3 id="3-数据格式"><a href="#3-数据格式" class="headerlink" title="3.数据格式"></a>3.数据格式</h3><p>通常使用XML、JSON、HTML或纯文本进行数据传输。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>AJAX利用JavaScript中的XMLHttpRequest对象发起HTTP请求，并处理服务器返回的数据，更新网页的部分内容而无需重新加载整个页面。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.XML</p>
<p>XML（eXtensible Markup Language，可扩展标记语言）是一种标记语言，用于描述和存储数据，具有自定义标签的能力，使得数据具有自描述性和可扩展性。</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>AJAX（Asynchronous JavaScript and XML）是一种用于创建动态网页的技术，允许网页在不重新加载整个页面的情况下，与服务器进行异步通信和数据交换。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-JavaScript-1"><a href="#1-JavaScript-1" class="headerlink" title="1.JavaScript"></a>1.JavaScript</h3><p>用于发起异步请求和处理响应。</p>
<h3 id="2-XMLHttpRequest对象-1"><a href="#2-XMLHttpRequest对象-1" class="headerlink" title="2.XMLHttpRequest对象"></a>2.XMLHttpRequest对象</h3><p>核心对象，用于与服务器交换数据。</p>
<h3 id="3-数据格式-1"><a href="#3-数据格式-1" class="headerlink" title="3.数据格式"></a>3.数据格式</h3><p>通常使用XML、JSON、HTML或纯文本进行数据传输。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>AJAX利用JavaScript中的XMLHttpRequest对象发起HTTP请求，并处理服务器返回的数据，更新网页的部分内容而无需重新加载整个页面。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.XML</p>
<p>XML（eXtensible Markup Language，可扩展标记语言）是一种标记语言，用于描述和存储数据，具有自定义标签的能力，使得数据具有自描述性和可扩展性。AX</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>AJAX（Asynchronous JavaScript and XML）是一种用于创建动态网页的技术，允许网页在不重新加载整个页面的情况下，与服务器进行异步通信和数据交换。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-JavaScript-2"><a href="#1-JavaScript-2" class="headerlink" title="1.JavaScript"></a>1.JavaScript</h3><p>用于发起异步请求和处理响应。</p>
<h3 id="2-XMLHttpRequest对象-2"><a href="#2-XMLHttpRequest对象-2" class="headerlink" title="2.XMLHttpRequest对象"></a>2.XMLHttpRequest对象</h3><p>核心对象，用于与服务器交换数据。</p>
<h3 id="3-数据格式-2"><a href="#3-数据格式-2" class="headerlink" title="3.数据格式"></a>3.数据格式</h3><p>通常使用XML、JSON、HTML或纯文本进行数据传输。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>AJAX利用JavaScript中的XMLHttpRequest对象发起HTTP请求，并处理服务器返回的数据，更新网页的部分内容而无需重新加载整个页面。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.XML</p>
<p>XML（eXtensible Markup Language，可扩展标记语言）是一种标记语言，用于描述和存储数据，具有自定义标签的能力，使得数据具有自描述性和可扩展性。</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>AJAX（Asynchronous JavaScript and XML）是一种用于创建动态网页的技术，允许网页在不重新加载整个页面的情况下，与服务器进行异步通信和数据交换。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-JavaScript-3"><a href="#1-JavaScript-3" class="headerlink" title="1.JavaScript"></a>1.JavaScript</h3><p>用于发起异步请求和处理响应。</p>
<h3 id="2-XMLHttpRequest对象-3"><a href="#2-XMLHttpRequest对象-3" class="headerlink" title="2.XMLHttpRequest对象"></a>2.XMLHttpRequest对象</h3><p>核心对象，用于与服务器交换数据。</p>
<h3 id="3-数据格式-3"><a href="#3-数据格式-3" class="headerlink" title="3.数据格式"></a>3.数据格式</h3><p>通常使用XML、JSON、HTML或纯文本进行数据传输。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>AJAX利用JavaScript中的XMLHttpRequest对象发起HTTP请求，并处理服务器返回的数据，更新网页的部分内容而无需重新加载整个页面。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.XML</p>
<p>XML（eXtensible Markup Language，可扩展标记语言）是一种标记语言，用于描述和存储数据，具有自定义标签的能力，使得数据具有自描述性和可扩展性。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Array对象</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Array%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="Array对象"><a href="#Array对象" class="headerlink" title="Array对象"></a>Array对象</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>length：</p>
<p>数组的长度</p>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1.JS中数组元素类型可以变化。</p>
<p>2.数组长度可以变化。</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p><img src="/../TyporaImage/image-20240515210507082.png" alt="image-20240515210507082"></p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>join（参数）：</p>
<p>将数组中的元素按照指定的分隔符拼接成字符串</p>
<p>– 等等还有许多其他的方法。</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h3><p>length：</p>
<p>数组的长度</p>
<h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p>1.JS中数组元素类型可以变化。</p>
<p>2.数组长度可以变化。</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h4><p><img src="/../TyporaImage/image-20240515210507082.png" alt="image-20240515210507082"></p>
<h4 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h4><p>join（参数）：</p>
<p>将数组中的元素按照指定的分隔符拼接成字符串</p>
<p>– 等等还有许多其他的方法。对象</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h3><p>length：</p>
<p>数组的长度</p>
<h3 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h3><p>1.JS中数组元素类型可以变化。</p>
<p>2.数组长度可以变化。</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="创建-2"><a href="#创建-2" class="headerlink" title="创建"></a>创建</h4><p><img src="/../TyporaImage/image-20240515210507082.png" alt="image-20240515210507082"></p>
<h4 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h4><p>join（参数）：</p>
<p>将数组中的元素按照指定的分隔符拼接成字符串</p>
<p>– 等等还有许多其他的方法。</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h3><p>length：</p>
<p>数组的长度</p>
<h3 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h3><p>1.JS中数组元素类型可以变化。</p>
<p>2.数组长度可以变化。</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="创建-3"><a href="#创建-3" class="headerlink" title="创建"></a>创建</h4><p><img src="/../TyporaImage/image-20240515210507082.png" alt="image-20240515210507082"></p>
<h4 id="使用-3"><a href="#使用-3" class="headerlink" title="使用"></a>使用</h4><p>join（参数）：</p>
<p>将数组中的元素按照指定的分隔符拼接成字符串</p>
<p>– 等等还有许多其他的方法。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>AJAX实现</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/AJAX%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="AJAX实现"><a href="#AJAX实现" class="headerlink" title="AJAX实现"></a>AJAX实现</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-JS方式"><a href="#1-JS方式" class="headerlink" title="1.JS方式"></a>1.JS方式</h3><p>①</p>
<h3 id="2-JQ方式"><a href="#2-JQ方式" class="headerlink" title="2.JQ方式"></a>2.JQ方式</h3><p>①$.ajax()</p>
<p>②$.get()</p>
<p>③$.post()</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="Ⅰ、JS方式"><a href="#Ⅰ、JS方式" class="headerlink" title="Ⅰ、JS方式"></a>Ⅰ、JS方式</h3><p>①创建核心对象</p>
<p><img src="/./../TyporaImage/image-20240724160241516.png" alt="image-20240724160241516"></p>
<p>②建立连接</p>
<p><img src="/./../TyporaImage/image-20240724160445573.png" alt="image-20240724160445573"></p>
<p>③发送请求</p>
<p><img src="/./../TyporaImage/image-20240724160501071.png" alt="image-20240724160501071"></p>
<p>④接收并处理来自服务器的响应结果</p>
<p><img src="/./../TyporaImage/image-20240724162242190.png" alt="image-20240724162242190"></p>
<h3 id="Ⅱ-JQ方式"><a href="#Ⅱ-JQ方式" class="headerlink" title="Ⅱ.JQ方式"></a>Ⅱ.JQ方式</h3><h4 id="1-ajax（）"><a href="#1-ajax（）" class="headerlink" title="1.$.ajax（）"></a>1.$.ajax（）</h4><p><img src="/./../TyporaImage/image-20240724163206954.png" alt="image-20240724163206954"></p>
<h4 id="2-get"><a href="#2-get" class="headerlink" title="2.$.get()"></a>2.$.get()</h4><p><img src="/./../TyporaImage/image-20240724163315911.png" alt="image-20240724163315911"></p>
<h4 id="3-post"><a href="#3-post" class="headerlink" title="3.$.post()"></a>3.$.post()</h4><p><img src="/./../TyporaImage/image-20240724163337206.png" alt="image-20240724163337206">## 分类</p>
<h3 id="1-JS方式-1"><a href="#1-JS方式-1" class="headerlink" title="1.JS方式"></a>1.JS方式</h3><p>①</p>
<h3 id="2-JQ方式-1"><a href="#2-JQ方式-1" class="headerlink" title="2.JQ方式"></a>2.JQ方式</h3><p>①$.ajax()</p>
<p>②$.get()</p>
<p>③$.post()</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="Ⅰ、JS方式-1"><a href="#Ⅰ、JS方式-1" class="headerlink" title="Ⅰ、JS方式"></a>Ⅰ、JS方式</h3><p>①创建核心对象</p>
<p><img src="/./../TyporaImage/image-20240724160241516.png" alt="image-20240724160241516"></p>
<p>②建立连接</p>
<p><img src="/./../TyporaImage/image-20240724160445573.png" alt="image-20240724160445573"></p>
<p>③发送请求</p>
<p><img src="/./../TyporaImage/image-20240724160501071.png" alt="image-20240724160501071"></p>
<p>④接收并处理来自服务器的响应结果</p>
<p><img src="/./../TyporaImage/image-20240724162242190.png" alt="image-20240724162242190"></p>
<h3 id="Ⅱ-JQ方式-1"><a href="#Ⅱ-JQ方式-1" class="headerlink" title="Ⅱ.JQ方式"></a>Ⅱ.JQ方式</h3><h4 id="1-ajax（）-1"><a href="#1-ajax（）-1" class="headerlink" title="1.$.ajax（）"></a>1.$.ajax（）</h4><p><img src="/./../TyporaImage/image-20240724163206954.png" alt="image-20240724163206954"></p>
<h4 id="2-get-1"><a href="#2-get-1" class="headerlink" title="2.$.get()"></a>2.$.get()</h4><p><img src="/./../TyporaImage/image-20240724163315911.png" alt="image-20240724163315911"></p>
<h4 id="3-post-1"><a href="#3-post-1" class="headerlink" title="3.$.post()"></a>3.$.post()</h4><p><img src="/./../TyporaImage/image-20240724163337206.png" alt="image-20240724163337206">实现</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-JS方式-2"><a href="#1-JS方式-2" class="headerlink" title="1.JS方式"></a>1.JS方式</h3><p>①</p>
<h3 id="2-JQ方式-2"><a href="#2-JQ方式-2" class="headerlink" title="2.JQ方式"></a>2.JQ方式</h3><p>①$.ajax()</p>
<p>②$.get()</p>
<p>③$.post()</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="Ⅰ、JS方式-2"><a href="#Ⅰ、JS方式-2" class="headerlink" title="Ⅰ、JS方式"></a>Ⅰ、JS方式</h3><p>①创建核心对象</p>
<p><img src="/./../TyporaImage/image-20240724160241516.png" alt="image-20240724160241516"></p>
<p>②建立连接</p>
<p><img src="/./../TyporaImage/image-20240724160445573.png" alt="image-20240724160445573"></p>
<p>③发送请求</p>
<p><img src="/./../TyporaImage/image-20240724160501071.png" alt="image-20240724160501071"></p>
<p>④接收并处理来自服务器的响应结果</p>
<p><img src="/./../TyporaImage/image-20240724162242190.png" alt="image-20240724162242190"></p>
<h3 id="Ⅱ-JQ方式-2"><a href="#Ⅱ-JQ方式-2" class="headerlink" title="Ⅱ.JQ方式"></a>Ⅱ.JQ方式</h3><h4 id="1-ajax（）-2"><a href="#1-ajax（）-2" class="headerlink" title="1.$.ajax（）"></a>1.$.ajax（）</h4><p><img src="/./../TyporaImage/image-20240724163206954.png" alt="image-20240724163206954"></p>
<h4 id="2-get-2"><a href="#2-get-2" class="headerlink" title="2.$.get()"></a>2.$.get()</h4><p><img src="/./../TyporaImage/image-20240724163315911.png" alt="image-20240724163315911"></p>
<h4 id="3-post-2"><a href="#3-post-2" class="headerlink" title="3.$.post()"></a>3.$.post()</h4><p><img src="/./../TyporaImage/image-20240724163337206.png" alt="image-20240724163337206">## 分类</p>
<h3 id="1-JS方式-3"><a href="#1-JS方式-3" class="headerlink" title="1.JS方式"></a>1.JS方式</h3><p>①</p>
<h3 id="2-JQ方式-3"><a href="#2-JQ方式-3" class="headerlink" title="2.JQ方式"></a>2.JQ方式</h3><p>①$.ajax()</p>
<p>②$.get()</p>
<p>③$.post()</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="Ⅰ、JS方式-3"><a href="#Ⅰ、JS方式-3" class="headerlink" title="Ⅰ、JS方式"></a>Ⅰ、JS方式</h3><p>①创建核心对象</p>
<p><img src="/./../TyporaImage/image-20240724160241516.png" alt="image-20240724160241516"></p>
<p>②建立连接</p>
<p><img src="/./../TyporaImage/image-20240724160445573.png" alt="image-20240724160445573"></p>
<p>③发送请求</p>
<p><img src="/./../TyporaImage/image-20240724160501071.png" alt="image-20240724160501071"></p>
<p>④接收并处理来自服务器的响应结果</p>
<p><img src="/./../TyporaImage/image-20240724162242190.png" alt="image-20240724162242190"></p>
<h3 id="Ⅱ-JQ方式-3"><a href="#Ⅱ-JQ方式-3" class="headerlink" title="Ⅱ.JQ方式"></a>Ⅱ.JQ方式</h3><h4 id="1-ajax（）-3"><a href="#1-ajax（）-3" class="headerlink" title="1.$.ajax（）"></a>1.$.ajax（）</h4><p><img src="/./../TyporaImage/image-20240724163206954.png" alt="image-20240724163206954"></p>
<h4 id="2-get-3"><a href="#2-get-3" class="headerlink" title="2.$.get()"></a>2.$.get()</h4><p><img src="/./../TyporaImage/image-20240724163315911.png" alt="image-20240724163315911"></p>
<h4 id="3-post-3"><a href="#3-post-3" class="headerlink" title="3.$.post()"></a>3.$.post()</h4><p><img src="/./../TyporaImage/image-20240724163337206.png" alt="image-20240724163337206"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>BootStrap</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/BootStrap/</url>
    <content><![CDATA[<h1 id="BootStrap"><a href="#BootStrap" class="headerlink" title="BootStrap"></a>BootStrap</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>是一个前端开发的框架。</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>前提准备</p>
<p>1.下载Bootstrap</p>
<p>2.项目中引入相关的文件</p>
<p>3.创建html页面，引入必要的相关的代码。</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>让开发人员在框架的基础上，快速开发项目。</p>
<h3 id="应用价值"><a href="#应用价值" class="headerlink" title="应用价值"></a>应用价值</h3><p>1.定义了很多css样式和js插件。我们开发人员可以使用这些样式和插件得到丰富的页面效果。</p>
<p>2.响应式布局。</p>
<p>即一套界面可以兼容不同分辨率的设备。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.框架：</p>
<p>一个半成品软件</p>
<p>2.响应式布局</p>
<p>同一套页面可以兼容不同分辨率的设备。</p>
<p>它的实现依赖于栅格系统，栅格系统将一行平均分为12个格子，可以指定元素占据了几个格子。</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>是一个前端开发的框架。</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p>前提准备</p>
<p>1.下载Bootstrap</p>
<p>2.项目中引入相关的文件</p>
<p>3.创建html页面，引入必要的相关的代码。</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>让开发人员在框架的基础上，快速开发项目。</p>
<h3 id="应用价值-1"><a href="#应用价值-1" class="headerlink" title="应用价值"></a>应用价值</h3><p>1.定义了很多css样式和js插件。我们开发人员可以使用这些样式和插件得到丰富的页面效果。</p>
<p>2.响应式布局。</p>
<p>即一套界面可以兼容不同分辨率的设备。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.框架：</p>
<p>一个半成品软件</p>
<p>2.响应式布局</p>
<p>同一套页面可以兼容不同分辨率的设备。</p>
<p>它的实现依赖于栅格系统，栅格系统将一行平均分为12个格子，可以指定元素占据了几个格子。ap</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>是一个前端开发的框架。</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p>前提准备</p>
<p>1.下载Bootstrap</p>
<p>2.项目中引入相关的文件</p>
<p>3.创建html页面，引入必要的相关的代码。</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>让开发人员在框架的基础上，快速开发项目。</p>
<h3 id="应用价值-2"><a href="#应用价值-2" class="headerlink" title="应用价值"></a>应用价值</h3><p>1.定义了很多css样式和js插件。我们开发人员可以使用这些样式和插件得到丰富的页面效果。</p>
<p>2.响应式布局。</p>
<p>即一套界面可以兼容不同分辨率的设备。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.框架：</p>
<p>一个半成品软件</p>
<p>2.响应式布局</p>
<p>同一套页面可以兼容不同分辨率的设备。</p>
<p>它的实现依赖于栅格系统，栅格系统将一行平均分为12个格子，可以指定元素占据了几个格子。</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>是一个前端开发的框架。</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><p>前提准备</p>
<p>1.下载Bootstrap</p>
<p>2.项目中引入相关的文件</p>
<p>3.创建html页面，引入必要的相关的代码。</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>让开发人员在框架的基础上，快速开发项目。</p>
<h3 id="应用价值-3"><a href="#应用价值-3" class="headerlink" title="应用价值"></a>应用价值</h3><p>1.定义了很多css样式和js插件。我们开发人员可以使用这些样式和插件得到丰富的页面效果。</p>
<p>2.响应式布局。</p>
<p>即一套界面可以兼容不同分辨率的设备。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.框架：</p>
<p>一个半成品软件</p>
<p>2.响应式布局</p>
<p>同一套页面可以兼容不同分辨率的设备。</p>
<p>它的实现依赖于栅格系统，栅格系统将一行平均分为12个格子，可以指定元素占据了几个格子。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>BOM</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/BOM/</url>
    <content><![CDATA[<h1 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>Browser Object Model 浏览器对象模型。即将浏览器的各个部分封装成对象。</p>
<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.Navigator：浏览器对象</p>
<p>2.window：窗口对象</p>
<p>3.Location：地址栏对象</p>
<p>4.History：历史记录对象</p>
<p>5.Screen：显示器屏幕对象</p>
<h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><h2 id="为什么-是什么"><a href="#为什么-是什么" class="headerlink" title="为什么## 是什么"></a>为什么## 是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>Browser Object Model 浏览器对象模型。即将浏览器的各个部分封装成对象。</p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.Navigator：浏览器对象</p>
<p>2.window：窗口对象</p>
<p>3.Location：地址栏对象</p>
<p>4.History：历史记录对象</p>
<p>5.Screen：显示器屏幕对象</p>
<h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><h2 id="为什么OM"><a href="#为什么OM" class="headerlink" title="为什么OM"></a>为什么OM</h2><h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>Browser Object Model 浏览器对象模型。即将浏览器的各个部分封装成对象。</p>
<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.Navigator：浏览器对象</p>
<p>2.window：窗口对象</p>
<p>3.Location：地址栏对象</p>
<p>4.History：历史记录对象</p>
<p>5.Screen：显示器屏幕对象</p>
<h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><h2 id="为什么-是什么-1"><a href="#为什么-是什么-1" class="headerlink" title="为什么## 是什么"></a>为什么## 是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>Browser Object Model 浏览器对象模型。即将浏览器的各个部分封装成对象。</p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.Navigator：浏览器对象</p>
<p>2.window：窗口对象</p>
<p>3.Location：地址栏对象</p>
<p>4.History：历史记录对象</p>
<p>5.Screen：显示器屏幕对象</p>
<h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>CSS属性</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/CSS%E5%B1%9E%E6%80%A7/</url>
    <content><![CDATA[<h1 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>常用属性</p>
<p>1.字体、文本</p>
<p>2.背景</p>
<p>3.边框</p>
<p>4.尺寸</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><img src="../TyporaImage/image-20240512171131071.png" alt="image-20240512171131071" style="zoom:67%;" />

<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>常用属性</p>
<p>1.字体、文本</p>
<p>2.背景</p>
<p>3.边框</p>
<p>4.尺寸</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="../TyporaImage/image-20240512171131071.png" alt="image-20240512171131071" style="zoom:67%;" />属性</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>常用属性</p>
<p>1.字体、文本</p>
<p>2.背景</p>
<p>3.边框</p>
<p>4.尺寸</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><img src="../TyporaImage/image-20240512171131071.png" alt="image-20240512171131071" style="zoom:67%;" />

<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>常用属性</p>
<p>1.字体、文本</p>
<p>2.背景</p>
<p>3.边框</p>
<p>4.尺寸</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><img src="../TyporaImage/image-20240512171131071.png" alt="image-20240512171131071" style="zoom:67%;" />]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>CSS概述</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/CSS%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>Cascading  Style Sheets 层叠样式表</p>
<h3 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h3><img src="../TyporaImage/image-20240512170110505.png" alt="image-20240512170110505" style="zoom:67%;" />

<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-内联样式"><a href="#1-内联样式" class="headerlink" title="1.内联样式"></a>1.内联样式</h4><p>在标签内部使用</p>
<h2 id="2-内部样式"><a href="#2-内部样式" class="headerlink" title="2.内部样式"></a>2.内部样式</h2><p>在head标签内定义style标签。style标签体内容就是css代码</p>
<h2 id="3-外部样式"><a href="#3-外部样式" class="headerlink" title="3.外部样式"></a>3.外部样式</h2><p>在head标签内定义link标签。link标签引入外部的css文件</p>
<h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-内联样式-1"><a href="#1-内联样式-1" class="headerlink" title="1.内联样式"></a>1.内联样式</h4><p><img src="/../TyporaImage/image-20240512164959181.png" alt="image-20240512164959181"></p>
<h4 id="2-内部样式-1"><a href="#2-内部样式-1" class="headerlink" title="2.内部样式"></a>2.内部样式</h4><p><img src="/../TyporaImage/image-20240512165016367.png" alt="image-20240512165016367"></p>
<h4 id="3-外部样式-1"><a href="#3-外部样式-1" class="headerlink" title="3.外部样式"></a>3.外部样式</h4><p><img src="/../TyporaImage/image-20240512165050217.png" alt="image-20240512165050217"></p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="应用价值"><a href="#应用价值" class="headerlink" title="应用价值"></a>应用价值</h3><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>1.降低耦合度</p>
<p>2.功能强大</p>
<p>3.分工协作更加容易，提高开发效率</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>@import  “”；    – 也可以引入css文件，但是不常用</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>Cascading  Style Sheets 层叠样式表</p>
<h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h3><img src="../TyporaImage/image-20240512170110505.png" alt="image-20240512170110505" style="zoom:67%;" />

<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-内联样式-2"><a href="#1-内联样式-2" class="headerlink" title="1.内联样式"></a>1.内联样式</h4><p>在标签内部使用</p>
<h2 id="2-内部样式-2"><a href="#2-内部样式-2" class="headerlink" title="2.内部样式"></a>2.内部样式</h2><p>在head标签内定义style标签。style标签体内容就是css代码</p>
<h2 id="3-外部样式-2"><a href="#3-外部样式-2" class="headerlink" title="3.外部样式"></a>3.外部样式</h2><p>在head标签内定义link标签。link标签引入外部的css文件</p>
<h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-内联样式-3"><a href="#1-内联样式-3" class="headerlink" title="1.内联样式"></a>1.内联样式</h4><p><img src="/../TyporaImage/image-20240512164959181.png" alt="image-20240512164959181"></p>
<h4 id="2-内部样式-3"><a href="#2-内部样式-3" class="headerlink" title="2.内部样式"></a>2.内部样式</h4><p><img src="/../TyporaImage/image-20240512165016367.png" alt="image-20240512165016367"></p>
<h4 id="3-外部样式-3"><a href="#3-外部样式-3" class="headerlink" title="3.外部样式"></a>3.外部样式</h4><p><img src="/../TyporaImage/image-20240512165050217.png" alt="image-20240512165050217"></p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="应用价值-1"><a href="#应用价值-1" class="headerlink" title="应用价值"></a>应用价值</h3><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><p>1.降低耦合度</p>
<p>2.功能强大</p>
<p>3.分工协作更加容易，提高开发效率</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>@import  “”；    – 也可以引入css文件，但是不常用SS</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>Cascading  Style Sheets 层叠样式表</p>
<h3 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h3><img src="../TyporaImage/image-20240512170110505.png" alt="image-20240512170110505" style="zoom:67%;" />

<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-内联样式-4"><a href="#1-内联样式-4" class="headerlink" title="1.内联样式"></a>1.内联样式</h4><p>在标签内部使用</p>
<h2 id="2-内部样式-4"><a href="#2-内部样式-4" class="headerlink" title="2.内部样式"></a>2.内部样式</h2><p>在head标签内定义style标签。style标签体内容就是css代码</p>
<h2 id="3-外部样式-4"><a href="#3-外部样式-4" class="headerlink" title="3.外部样式"></a>3.外部样式</h2><p>在head标签内定义link标签。link标签引入外部的css文件</p>
<h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-内联样式-5"><a href="#1-内联样式-5" class="headerlink" title="1.内联样式"></a>1.内联样式</h4><p><img src="/../TyporaImage/image-20240512164959181.png" alt="image-20240512164959181"></p>
<h4 id="2-内部样式-5"><a href="#2-内部样式-5" class="headerlink" title="2.内部样式"></a>2.内部样式</h4><p><img src="/../TyporaImage/image-20240512165016367.png" alt="image-20240512165016367"></p>
<h4 id="3-外部样式-5"><a href="#3-外部样式-5" class="headerlink" title="3.外部样式"></a>3.外部样式</h4><p><img src="/../TyporaImage/image-20240512165050217.png" alt="image-20240512165050217"></p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="应用价值-2"><a href="#应用价值-2" class="headerlink" title="应用价值"></a>应用价值</h3><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><p>1.降低耦合度</p>
<p>2.功能强大</p>
<p>3.分工协作更加容易，提高开发效率</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>@import  “”；    – 也可以引入css文件，但是不常用</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>Cascading  Style Sheets 层叠样式表</p>
<h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h3><img src="../TyporaImage/image-20240512170110505.png" alt="image-20240512170110505" style="zoom:67%;" />

<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-内联样式-6"><a href="#1-内联样式-6" class="headerlink" title="1.内联样式"></a>1.内联样式</h4><p>在标签内部使用</p>
<h2 id="2-内部样式-6"><a href="#2-内部样式-6" class="headerlink" title="2.内部样式"></a>2.内部样式</h2><p>在head标签内定义style标签。style标签体内容就是css代码</p>
<h2 id="3-外部样式-6"><a href="#3-外部样式-6" class="headerlink" title="3.外部样式"></a>3.外部样式</h2><p>在head标签内定义link标签。link标签引入外部的css文件</p>
<h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-内联样式-7"><a href="#1-内联样式-7" class="headerlink" title="1.内联样式"></a>1.内联样式</h4><p><img src="/../TyporaImage/image-20240512164959181.png" alt="image-20240512164959181"></p>
<h4 id="2-内部样式-7"><a href="#2-内部样式-7" class="headerlink" title="2.内部样式"></a>2.内部样式</h4><p><img src="/../TyporaImage/image-20240512165016367.png" alt="image-20240512165016367"></p>
<h4 id="3-外部样式-7"><a href="#3-外部样式-7" class="headerlink" title="3.外部样式"></a>3.外部样式</h4><p><img src="/../TyporaImage/image-20240512165050217.png" alt="image-20240512165050217"></p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="应用价值-3"><a href="#应用价值-3" class="headerlink" title="应用价值"></a>应用价值</h3><h4 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a>优点</h4><p>1.降低耦合度</p>
<p>2.功能强大</p>
<p>3.分工协作更加容易，提高开发效率</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>@import  “”；    – 也可以引入css文件，但是不常用</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>C3p0</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/C3p0/</url>
    <content><![CDATA[<h1 id="C3p0"><a href="#C3p0" class="headerlink" title="C3p0"></a>C3p0</h1><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-导入jar包-–两个c3p0的jar包，一个数据库驱动jar包。"><a href="#1-导入jar包-–两个c3p0的jar包，一个数据库驱动jar包。" class="headerlink" title="1.导入jar包           –两个c3p0的jar包，一个数据库驱动jar包。"></a>1.导入jar包           –两个c3p0的jar包，一个数据库驱动jar包。</h4><h4 id="2-定义配置文件-–名称：名字必须为-c3p0-properties-或者-c3p0-config-xml"><a href="#2-定义配置文件-–名称：名字必须为-c3p0-properties-或者-c3p0-config-xml" class="headerlink" title="2.定义配置文件              –名称：名字必须为 c3p0.properties 或者 c3p0-config.xml"></a>2.定义配置文件              –名称：名字必须为 c3p0.properties 或者 c3p0-config.xml</h4><p>​											– 路径：直接讲文件放在src目录中即可。</p>
<h4 id="3-创建数据库连接池对象"><a href="#3-创建数据库连接池对象" class="headerlink" title="3.创建数据库连接池对象"></a>3.创建数据库连接池对象</h4><p>通过new   ComboPooledDataSource（）获得。</p>
<p>不传参数是默认配置，如果想用其他配置需要给 ComboPooledDataSource对象传递参数。</p>
<h4 id="4-获取连接"><a href="#4-获取连接" class="headerlink" title="4.获取连接"></a>4.获取连接</h4><p>getConnection（）</p>
<h2 id="为什么-怎么做"><a href="#为什么-怎么做" class="headerlink" title="为什么## 怎么做"></a>为什么## 怎么做</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-导入jar包-–两个c3p0的jar包，一个数据库驱动jar包。-1"><a href="#1-导入jar包-–两个c3p0的jar包，一个数据库驱动jar包。-1" class="headerlink" title="1.导入jar包           –两个c3p0的jar包，一个数据库驱动jar包。"></a>1.导入jar包           –两个c3p0的jar包，一个数据库驱动jar包。</h4><h4 id="2-定义配置文件-–名称：名字必须为-c3p0-properties-或者-c3p0-config-xml-1"><a href="#2-定义配置文件-–名称：名字必须为-c3p0-properties-或者-c3p0-config-xml-1" class="headerlink" title="2.定义配置文件              –名称：名字必须为 c3p0.properties 或者 c3p0-config.xml"></a>2.定义配置文件              –名称：名字必须为 c3p0.properties 或者 c3p0-config.xml</h4><p>​											– 路径：直接讲文件放在src目录中即可。</p>
<h4 id="3-创建数据库连接池对象-1"><a href="#3-创建数据库连接池对象-1" class="headerlink" title="3.创建数据库连接池对象"></a>3.创建数据库连接池对象</h4><p>通过new   ComboPooledDataSource（）获得。</p>
<p>不传参数是默认配置，如果想用其他配置需要给 ComboPooledDataSource对象传递参数。</p>
<h4 id="4-获取连接-1"><a href="#4-获取连接-1" class="headerlink" title="4.获取连接"></a>4.获取连接</h4><p>getConnection（）</p>
<h2 id="为什么p0"><a href="#为什么p0" class="headerlink" title="为什么p0"></a>为什么p0</h2><h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-导入jar包-–两个c3p0的jar包，一个数据库驱动jar包。-2"><a href="#1-导入jar包-–两个c3p0的jar包，一个数据库驱动jar包。-2" class="headerlink" title="1.导入jar包           –两个c3p0的jar包，一个数据库驱动jar包。"></a>1.导入jar包           –两个c3p0的jar包，一个数据库驱动jar包。</h4><h4 id="2-定义配置文件-–名称：名字必须为-c3p0-properties-或者-c3p0-config-xml-2"><a href="#2-定义配置文件-–名称：名字必须为-c3p0-properties-或者-c3p0-config-xml-2" class="headerlink" title="2.定义配置文件              –名称：名字必须为 c3p0.properties 或者 c3p0-config.xml"></a>2.定义配置文件              –名称：名字必须为 c3p0.properties 或者 c3p0-config.xml</h4><p>​											– 路径：直接讲文件放在src目录中即可。</p>
<h4 id="3-创建数据库连接池对象-2"><a href="#3-创建数据库连接池对象-2" class="headerlink" title="3.创建数据库连接池对象"></a>3.创建数据库连接池对象</h4><p>通过new   ComboPooledDataSource（）获得。</p>
<p>不传参数是默认配置，如果想用其他配置需要给 ComboPooledDataSource对象传递参数。</p>
<h4 id="4-获取连接-2"><a href="#4-获取连接-2" class="headerlink" title="4.获取连接"></a>4.获取连接</h4><p>getConnection（）</p>
<h2 id="为什么-怎么做-1"><a href="#为什么-怎么做-1" class="headerlink" title="为什么## 怎么做"></a>为什么## 怎么做</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-导入jar包-–两个c3p0的jar包，一个数据库驱动jar包。-3"><a href="#1-导入jar包-–两个c3p0的jar包，一个数据库驱动jar包。-3" class="headerlink" title="1.导入jar包           –两个c3p0的jar包，一个数据库驱动jar包。"></a>1.导入jar包           –两个c3p0的jar包，一个数据库驱动jar包。</h4><h4 id="2-定义配置文件-–名称：名字必须为-c3p0-properties-或者-c3p0-config-xml-3"><a href="#2-定义配置文件-–名称：名字必须为-c3p0-properties-或者-c3p0-config-xml-3" class="headerlink" title="2.定义配置文件              –名称：名字必须为 c3p0.properties 或者 c3p0-config.xml"></a>2.定义配置文件              –名称：名字必须为 c3p0.properties 或者 c3p0-config.xml</h4><p>​											– 路径：直接讲文件放在src目录中即可。</p>
<h4 id="3-创建数据库连接池对象-3"><a href="#3-创建数据库连接池对象-3" class="headerlink" title="3.创建数据库连接池对象"></a>3.创建数据库连接池对象</h4><p>通过new   ComboPooledDataSource（）获得。</p>
<p>不传参数是默认配置，如果想用其他配置需要给 ComboPooledDataSource对象传递参数。</p>
<h4 id="4-获取连接-3"><a href="#4-获取连接-3" class="headerlink" title="4.获取连接"></a>4.获取连接</h4><p>getConnection（）</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>CSS选择器</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/CSS%E9%80%89%E6%8B%A9%E5%99%A8/</url>
    <content><![CDATA[<h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h3><ol>
<li><p>元素选择器</p>
</li>
<li><p>类选择器</p>
</li>
<li><p>id选择器</p>
</li>
</ol>
<h3 id="扩展选择器"><a href="#扩展选择器" class="headerlink" title="扩展选择器"></a>扩展选择器</h3><ol>
<li>选择所有元素</li>
<li>并集选择器</li>
<li>子选择器</li>
<li>父选择器</li>
<li>属性选择器</li>
<li>伪类选择器</li>
</ol>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="基础选择器-1"><a href="#基础选择器-1" class="headerlink" title="基础选择器"></a>基础选择器</h3><ol>
<li>元素选择器</li>
</ol>
<img src="../TyporaImage/image-20240512170416819.png" alt="image-20240512170416819" style="zoom:67%;" />

<ol start="2">
<li>类选择器</li>
</ol>
<img src="../TyporaImage/image-20240512170431814.png" alt="image-20240512170431814" style="zoom:67%;" />

<ol start="3">
<li>id选择器</li>
</ol>
<p><img src="/../TyporaImage/image-20240512170439218.png" alt="image-20240512170439218"></p>
<h3 id="扩展选择器-1"><a href="#扩展选择器-1" class="headerlink" title="扩展选择器"></a>扩展选择器</h3><ol>
<li><p>选择所有元素</p>
<img src="../TyporaImage/image-20240512170739282.png" alt="image-20240512170739282" style="zoom:67%;" />
</li>
<li><p>并集选择器</p>
<img src="../TyporaImage/image-20240512170747599.png" alt="image-20240512170747599" style="zoom:67%;" />
</li>
<li><p>子选择器</p>
<img src="../TyporaImage/image-20240512170756290.png" alt="image-20240512170756290" style="zoom:67%;" />
</li>
<li><p>父选择器</p>
<img src="../TyporaImage/image-20240512170802867.png" alt="image-20240512170802867" style="zoom:67%;" />
</li>
<li><p>属性选择器</p>
<img src="../TyporaImage/image-20240512170819059.png" alt="image-20240512170819059" style="zoom:67%;" />
</li>
<li><p>伪类选择器</p>
</li>
</ol>
<p><img src="../TyporaImage/image-20240512170833181.png" alt="image-20240512170833181" style="zoom:67%;" />## 分类和组成</p>
<h3 id="基础选择器-2"><a href="#基础选择器-2" class="headerlink" title="基础选择器"></a>基础选择器</h3><ol>
<li><p>元素选择器</p>
</li>
<li><p>类选择器</p>
</li>
<li><p>id选择器</p>
</li>
</ol>
<h3 id="扩展选择器-2"><a href="#扩展选择器-2" class="headerlink" title="扩展选择器"></a>扩展选择器</h3><ol>
<li>选择所有元素</li>
<li>并集选择器</li>
<li>子选择器</li>
<li>父选择器</li>
<li>属性选择器</li>
<li>伪类选择器</li>
</ol>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="基础选择器-3"><a href="#基础选择器-3" class="headerlink" title="基础选择器"></a>基础选择器</h3><ol>
<li>元素选择器</li>
</ol>
<img src="../TyporaImage/image-20240512170416819.png" alt="image-20240512170416819" style="zoom:67%;" />

<ol start="2">
<li>类选择器</li>
</ol>
<img src="../TyporaImage/image-20240512170431814.png" alt="image-20240512170431814" style="zoom:67%;" />

<ol start="3">
<li>id选择器</li>
</ol>
<p><img src="/../TyporaImage/image-20240512170439218.png" alt="image-20240512170439218"></p>
<h3 id="扩展选择器-3"><a href="#扩展选择器-3" class="headerlink" title="扩展选择器"></a>扩展选择器</h3><ol>
<li><p>选择所有元素</p>
<img src="../TyporaImage/image-20240512170739282.png" alt="image-20240512170739282" style="zoom:67%;" />
</li>
<li><p>并集选择器</p>
<img src="../TyporaImage/image-20240512170747599.png" alt="image-20240512170747599" style="zoom:67%;" />
</li>
<li><p>子选择器</p>
<img src="../TyporaImage/image-20240512170756290.png" alt="image-20240512170756290" style="zoom:67%;" />
</li>
<li><p>父选择器</p>
<img src="../TyporaImage/image-20240512170802867.png" alt="image-20240512170802867" style="zoom:67%;" />
</li>
<li><p>属性选择器</p>
<img src="../TyporaImage/image-20240512170819059.png" alt="image-20240512170819059" style="zoom:67%;" />
</li>
<li><p>伪类选择器</p>
</li>
</ol>
<p><img src="../TyporaImage/image-20240512170833181.png" alt="image-20240512170833181" style="zoom:67%;" />择器</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="基础选择器-4"><a href="#基础选择器-4" class="headerlink" title="基础选择器"></a>基础选择器</h3><ol>
<li><p>元素选择器</p>
</li>
<li><p>类选择器</p>
</li>
<li><p>id选择器</p>
</li>
</ol>
<h3 id="扩展选择器-4"><a href="#扩展选择器-4" class="headerlink" title="扩展选择器"></a>扩展选择器</h3><ol>
<li>选择所有元素</li>
<li>并集选择器</li>
<li>子选择器</li>
<li>父选择器</li>
<li>属性选择器</li>
<li>伪类选择器</li>
</ol>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="基础选择器-5"><a href="#基础选择器-5" class="headerlink" title="基础选择器"></a>基础选择器</h3><ol>
<li>元素选择器</li>
</ol>
<img src="../TyporaImage/image-20240512170416819.png" alt="image-20240512170416819" style="zoom:67%;" />

<ol start="2">
<li>类选择器</li>
</ol>
<img src="../TyporaImage/image-20240512170431814.png" alt="image-20240512170431814" style="zoom:67%;" />

<ol start="3">
<li>id选择器</li>
</ol>
<p><img src="/../TyporaImage/image-20240512170439218.png" alt="image-20240512170439218"></p>
<h3 id="扩展选择器-5"><a href="#扩展选择器-5" class="headerlink" title="扩展选择器"></a>扩展选择器</h3><ol>
<li><p>选择所有元素</p>
<img src="../TyporaImage/image-20240512170739282.png" alt="image-20240512170739282" style="zoom:67%;" />
</li>
<li><p>并集选择器</p>
<img src="../TyporaImage/image-20240512170747599.png" alt="image-20240512170747599" style="zoom:67%;" />
</li>
<li><p>子选择器</p>
<img src="../TyporaImage/image-20240512170756290.png" alt="image-20240512170756290" style="zoom:67%;" />
</li>
<li><p>父选择器</p>
<img src="../TyporaImage/image-20240512170802867.png" alt="image-20240512170802867" style="zoom:67%;" />
</li>
<li><p>属性选择器</p>
<img src="../TyporaImage/image-20240512170819059.png" alt="image-20240512170819059" style="zoom:67%;" />
</li>
<li><p>伪类选择器</p>
</li>
</ol>
<p><img src="../TyporaImage/image-20240512170833181.png" alt="image-20240512170833181" style="zoom:67%;" />## 分类和组成</p>
<h3 id="基础选择器-6"><a href="#基础选择器-6" class="headerlink" title="基础选择器"></a>基础选择器</h3><ol>
<li><p>元素选择器</p>
</li>
<li><p>类选择器</p>
</li>
<li><p>id选择器</p>
</li>
</ol>
<h3 id="扩展选择器-6"><a href="#扩展选择器-6" class="headerlink" title="扩展选择器"></a>扩展选择器</h3><ol>
<li>选择所有元素</li>
<li>并集选择器</li>
<li>子选择器</li>
<li>父选择器</li>
<li>属性选择器</li>
<li>伪类选择器</li>
</ol>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="基础选择器-7"><a href="#基础选择器-7" class="headerlink" title="基础选择器"></a>基础选择器</h3><ol>
<li>元素选择器</li>
</ol>
<img src="../TyporaImage/image-20240512170416819.png" alt="image-20240512170416819" style="zoom:67%;" />

<ol start="2">
<li>类选择器</li>
</ol>
<img src="../TyporaImage/image-20240512170431814.png" alt="image-20240512170431814" style="zoom:67%;" />

<ol start="3">
<li>id选择器</li>
</ol>
<p><img src="/../TyporaImage/image-20240512170439218.png" alt="image-20240512170439218"></p>
<h3 id="扩展选择器-7"><a href="#扩展选择器-7" class="headerlink" title="扩展选择器"></a>扩展选择器</h3><ol>
<li><p>选择所有元素</p>
<img src="../TyporaImage/image-20240512170739282.png" alt="image-20240512170739282" style="zoom:67%;" />
</li>
<li><p>并集选择器</p>
<img src="../TyporaImage/image-20240512170747599.png" alt="image-20240512170747599" style="zoom:67%;" />
</li>
<li><p>子选择器</p>
<img src="../TyporaImage/image-20240512170756290.png" alt="image-20240512170756290" style="zoom:67%;" />
</li>
<li><p>父选择器</p>
<img src="../TyporaImage/image-20240512170802867.png" alt="image-20240512170802867" style="zoom:67%;" />
</li>
<li><p>属性选择器</p>
<img src="../TyporaImage/image-20240512170819059.png" alt="image-20240512170819059" style="zoom:67%;" />
</li>
<li><p>伪类选择器</p>
</li>
</ol>
<img src="../TyporaImage/image-20240512170833181.png" alt="image-20240512170833181" style="zoom:67%;" />]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Cookie</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Cookie/</url>
    <content><![CDATA[<h1 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Cookie是由服务器生成并发送到客户端的一小段数据，客户端会在后续请求中将其附加回服务器，用于在多个请求之间保持状态。</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><h3 id="1-可以创建多个Cookie对象"><a href="#1-可以创建多个Cookie对象" class="headerlink" title="1.可以创建多个Cookie对象"></a>1.可以创建多个Cookie对象</h3><h3 id="2-保存时间"><a href="#2-保存时间" class="headerlink" title="2.保存时间"></a>2.保存时间</h3><p>①默认情况下，浏览器关闭Cookie销毁</p>
<p>②持久化存储</p>
<p>setMaxAge（int seconds）</p>
<p>正数：将Cookie数据写到硬盘文件中，并且有一定的存活时间</p>
<p>0：删除Cookie信息</p>
<p>负数：默认值</p>
<h3 id="3-Cookie可以存储中文数据"><a href="#3-Cookie可以存储中文数据" class="headerlink" title="3.Cookie可以存储中文数据"></a>3.Cookie可以存储中文数据</h3><h3 id="4-Cookie获取范围"><a href="#4-Cookie获取范围" class="headerlink" title="4.Cookie获取范围"></a>4.Cookie获取范围</h3><p>①默认情况下Cookie在多个web项目下不可以共享</p>
<p>②运用setPath（String path）方法，可以改变Cookie的共享范围</p>
<p>如果在多个web项目下共享，可以将path设置为“&#x2F;”、</p>
<p>③如果在不同的tomcat服务器之间进行共享</p>
<p>可以用setDomain（String path）方法</p>
<p><img src="/./../TyporaImage/image-20240709082210313.png" alt="image-20240709082210313"></p>
<h3 id="5-Cookie存储在浏览器"><a href="#5-Cookie存储在浏览器" class="headerlink" title="5.Cookie存储在浏览器"></a>5.Cookie存储在浏览器</h3><h3 id="6-浏览器对于单个cookie大小和同一个域名的cookie数量有限制"><a href="#6-浏览器对于单个cookie大小和同一个域名的cookie数量有限制" class="headerlink" title="6.浏览器对于单个cookie大小和同一个域名的cookie数量有限制"></a>6.浏览器对于单个cookie大小和同一个域名的cookie数量有限制</h3><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/./../TyporaImage/image-20240709081503575.png" alt="image-20240709081503575"></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-创建Cookie对象，绑定数据"><a href="#1-创建Cookie对象，绑定数据" class="headerlink" title="1.创建Cookie对象，绑定数据"></a>1.创建Cookie对象，绑定数据</h3><p>new Cookie（Sstring name，String value）</p>
<h3 id="2-发送Cookie对象"><a href="#2-发送Cookie对象" class="headerlink" title="2.发送Cookie对象"></a>2.发送Cookie对象</h3><p>response.addCookie（Cookie cookie）</p>
<h3 id="3-获取Cookie，拿到数据"><a href="#3-获取Cookie，拿到数据" class="headerlink" title="3.获取Cookie，拿到数据"></a>3.获取Cookie，拿到数据</h3><p>request.getCookies（）	</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Cookie是由服务器生成并发送到客户端的一小段数据，客户端会在后续请求中将其附加回服务器，用于在多个请求之间保持状态。</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><h3 id="1-可以创建多个Cookie对象-1"><a href="#1-可以创建多个Cookie对象-1" class="headerlink" title="1.可以创建多个Cookie对象"></a>1.可以创建多个Cookie对象</h3><h3 id="2-保存时间-1"><a href="#2-保存时间-1" class="headerlink" title="2.保存时间"></a>2.保存时间</h3><p>①默认情况下，浏览器关闭Cookie销毁</p>
<p>②持久化存储</p>
<p>setMaxAge（int seconds）</p>
<p>正数：将Cookie数据写到硬盘文件中，并且有一定的存活时间</p>
<p>0：删除Cookie信息</p>
<p>负数：默认值</p>
<h3 id="3-Cookie可以存储中文数据-1"><a href="#3-Cookie可以存储中文数据-1" class="headerlink" title="3.Cookie可以存储中文数据"></a>3.Cookie可以存储中文数据</h3><h3 id="4-Cookie获取范围-1"><a href="#4-Cookie获取范围-1" class="headerlink" title="4.Cookie获取范围"></a>4.Cookie获取范围</h3><p>①默认情况下Cookie在多个web项目下不可以共享</p>
<p>②运用setPath（String path）方法，可以改变Cookie的共享范围</p>
<p>如果在多个web项目下共享，可以将path设置为“&#x2F;”、</p>
<p>③如果在不同的tomcat服务器之间进行共享</p>
<p>可以用setDomain（String path）方法</p>
<p><img src="/./../TyporaImage/image-20240709082210313.png" alt="image-20240709082210313"></p>
<h3 id="5-Cookie存储在浏览器-1"><a href="#5-Cookie存储在浏览器-1" class="headerlink" title="5.Cookie存储在浏览器"></a>5.Cookie存储在浏览器</h3><h3 id="6-浏览器对于单个cookie大小和同一个域名的cookie数量有限制-1"><a href="#6-浏览器对于单个cookie大小和同一个域名的cookie数量有限制-1" class="headerlink" title="6.浏览器对于单个cookie大小和同一个域名的cookie数量有限制"></a>6.浏览器对于单个cookie大小和同一个域名的cookie数量有限制</h3><h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/./../TyporaImage/image-20240709081503575.png" alt="image-20240709081503575"></p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-创建Cookie对象，绑定数据-1"><a href="#1-创建Cookie对象，绑定数据-1" class="headerlink" title="1.创建Cookie对象，绑定数据"></a>1.创建Cookie对象，绑定数据</h3><p>new Cookie（Sstring name，String value）</p>
<h3 id="2-发送Cookie对象-1"><a href="#2-发送Cookie对象-1" class="headerlink" title="2.发送Cookie对象"></a>2.发送Cookie对象</h3><p>response.addCookie（Cookie cookie）</p>
<h3 id="3-获取Cookie，拿到数据-1"><a href="#3-获取Cookie，拿到数据-1" class="headerlink" title="3.获取Cookie，拿到数据"></a>3.获取Cookie，拿到数据</h3><p>request.getCookies（）ie</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>Cookie是由服务器生成并发送到客户端的一小段数据，客户端会在后续请求中将其附加回服务器，用于在多个请求之间保持状态。</p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><h3 id="1-可以创建多个Cookie对象-2"><a href="#1-可以创建多个Cookie对象-2" class="headerlink" title="1.可以创建多个Cookie对象"></a>1.可以创建多个Cookie对象</h3><h3 id="2-保存时间-2"><a href="#2-保存时间-2" class="headerlink" title="2.保存时间"></a>2.保存时间</h3><p>①默认情况下，浏览器关闭Cookie销毁</p>
<p>②持久化存储</p>
<p>setMaxAge（int seconds）</p>
<p>正数：将Cookie数据写到硬盘文件中，并且有一定的存活时间</p>
<p>0：删除Cookie信息</p>
<p>负数：默认值</p>
<h3 id="3-Cookie可以存储中文数据-2"><a href="#3-Cookie可以存储中文数据-2" class="headerlink" title="3.Cookie可以存储中文数据"></a>3.Cookie可以存储中文数据</h3><h3 id="4-Cookie获取范围-2"><a href="#4-Cookie获取范围-2" class="headerlink" title="4.Cookie获取范围"></a>4.Cookie获取范围</h3><p>①默认情况下Cookie在多个web项目下不可以共享</p>
<p>②运用setPath（String path）方法，可以改变Cookie的共享范围</p>
<p>如果在多个web项目下共享，可以将path设置为“&#x2F;”、</p>
<p>③如果在不同的tomcat服务器之间进行共享</p>
<p>可以用setDomain（String path）方法</p>
<p><img src="/./../TyporaImage/image-20240709082210313.png" alt="image-20240709082210313"></p>
<h3 id="5-Cookie存储在浏览器-2"><a href="#5-Cookie存储在浏览器-2" class="headerlink" title="5.Cookie存储在浏览器"></a>5.Cookie存储在浏览器</h3><h3 id="6-浏览器对于单个cookie大小和同一个域名的cookie数量有限制-2"><a href="#6-浏览器对于单个cookie大小和同一个域名的cookie数量有限制-2" class="headerlink" title="6.浏览器对于单个cookie大小和同一个域名的cookie数量有限制"></a>6.浏览器对于单个cookie大小和同一个域名的cookie数量有限制</h3><h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/./../TyporaImage/image-20240709081503575.png" alt="image-20240709081503575"></p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-创建Cookie对象，绑定数据-2"><a href="#1-创建Cookie对象，绑定数据-2" class="headerlink" title="1.创建Cookie对象，绑定数据"></a>1.创建Cookie对象，绑定数据</h3><p>new Cookie（Sstring name，String value）</p>
<h3 id="2-发送Cookie对象-2"><a href="#2-发送Cookie对象-2" class="headerlink" title="2.发送Cookie对象"></a>2.发送Cookie对象</h3><p>response.addCookie（Cookie cookie）</p>
<h3 id="3-获取Cookie，拿到数据-2"><a href="#3-获取Cookie，拿到数据-2" class="headerlink" title="3.获取Cookie，拿到数据"></a>3.获取Cookie，拿到数据</h3><p>request.getCookies（）	</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>Cookie是由服务器生成并发送到客户端的一小段数据，客户端会在后续请求中将其附加回服务器，用于在多个请求之间保持状态。</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><h3 id="1-可以创建多个Cookie对象-3"><a href="#1-可以创建多个Cookie对象-3" class="headerlink" title="1.可以创建多个Cookie对象"></a>1.可以创建多个Cookie对象</h3><h3 id="2-保存时间-3"><a href="#2-保存时间-3" class="headerlink" title="2.保存时间"></a>2.保存时间</h3><p>①默认情况下，浏览器关闭Cookie销毁</p>
<p>②持久化存储</p>
<p>setMaxAge（int seconds）</p>
<p>正数：将Cookie数据写到硬盘文件中，并且有一定的存活时间</p>
<p>0：删除Cookie信息</p>
<p>负数：默认值</p>
<h3 id="3-Cookie可以存储中文数据-3"><a href="#3-Cookie可以存储中文数据-3" class="headerlink" title="3.Cookie可以存储中文数据"></a>3.Cookie可以存储中文数据</h3><h3 id="4-Cookie获取范围-3"><a href="#4-Cookie获取范围-3" class="headerlink" title="4.Cookie获取范围"></a>4.Cookie获取范围</h3><p>①默认情况下Cookie在多个web项目下不可以共享</p>
<p>②运用setPath（String path）方法，可以改变Cookie的共享范围</p>
<p>如果在多个web项目下共享，可以将path设置为“&#x2F;”、</p>
<p>③如果在不同的tomcat服务器之间进行共享</p>
<p>可以用setDomain（String path）方法</p>
<p><img src="/./../TyporaImage/image-20240709082210313.png" alt="image-20240709082210313"></p>
<h3 id="5-Cookie存储在浏览器-3"><a href="#5-Cookie存储在浏览器-3" class="headerlink" title="5.Cookie存储在浏览器"></a>5.Cookie存储在浏览器</h3><h3 id="6-浏览器对于单个cookie大小和同一个域名的cookie数量有限制-3"><a href="#6-浏览器对于单个cookie大小和同一个域名的cookie数量有限制-3" class="headerlink" title="6.浏览器对于单个cookie大小和同一个域名的cookie数量有限制"></a>6.浏览器对于单个cookie大小和同一个域名的cookie数量有限制</h3><h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/./../TyporaImage/image-20240709081503575.png" alt="image-20240709081503575"></p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-创建Cookie对象，绑定数据-3"><a href="#1-创建Cookie对象，绑定数据-3" class="headerlink" title="1.创建Cookie对象，绑定数据"></a>1.创建Cookie对象，绑定数据</h3><p>new Cookie（Sstring name，String value）</p>
<h3 id="2-发送Cookie对象-3"><a href="#2-发送Cookie对象-3" class="headerlink" title="2.发送Cookie对象"></a>2.发送Cookie对象</h3><p>response.addCookie（Cookie cookie）</p>
<h3 id="3-获取Cookie，拿到数据-3"><a href="#3-获取Cookie，拿到数据-3" class="headerlink" title="3.获取Cookie，拿到数据"></a>3.获取Cookie，拿到数据</h3><p>request.getCookies（）</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Css样式_BootStrap</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Css%E6%A0%B7%E5%BC%8F_BootStrap/</url>
    <content><![CDATA[<h1 id="CSS样式"><a href="#CSS样式" class="headerlink" title="CSS样式"></a>CSS样式</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="全局CSS样式"><a href="#全局CSS样式" class="headerlink" title="全局CSS样式"></a>全局CSS样式</h3><p>1.按钮</p>
<p>2.图片</p>
<p>3.表格</p>
<p>4.表单</p>
<h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><p>1.导航条</p>
<p>2.分页条</p>
<h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="1-按钮"><a href="#1-按钮" class="headerlink" title="1.按钮"></a>1.按钮</h3><p>class&#x3D;”btn btn-default”</p>
<h3 id="2-图片"><a href="#2-图片" class="headerlink" title="2.图片"></a>2.图片</h3><p>class&#x3D;”img-responsive”:图片在人体尺寸都占据100%</p>
<p>图片形状</p>
<p>1.class&#x3D;”img-rounded” 方形</p>
<p>2.class&#x3D;”img-circle” 圆形</p>
<p>3.class&#x3D;”img-thumbnail” 相框</p>
<h3 id="3-表格"><a href="#3-表格" class="headerlink" title="3.表格"></a>3.表格</h3><p>table、table-bordered、table-hover</p>
<h3 id="4-表单"><a href="#4-表单" class="headerlink" title="4.表单"></a>4.表单</h3><p>class&#x3D;”form-control”</p>
<h3 id="5导航条"><a href="#5导航条" class="headerlink" title="5导航条"></a>5导航条</h3><p>自己尝试着摸索</p>
<h3 id="6-分页条"><a href="#6-分页条" class="headerlink" title="6.分页条"></a>6.分页条</h3><p>自己尝试着摸索</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="全局CSS样式-1"><a href="#全局CSS样式-1" class="headerlink" title="全局CSS样式"></a>全局CSS样式</h3><p>1.按钮</p>
<p>2.图片</p>
<p>3.表格</p>
<p>4.表单</p>
<h3 id="组件-1"><a href="#组件-1" class="headerlink" title="组件"></a>组件</h3><p>1.导航条</p>
<p>2.分页条</p>
<h2 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="1-按钮-1"><a href="#1-按钮-1" class="headerlink" title="1.按钮"></a>1.按钮</h3><p>class&#x3D;”btn btn-default”</p>
<h3 id="2-图片-1"><a href="#2-图片-1" class="headerlink" title="2.图片"></a>2.图片</h3><p>class&#x3D;”img-responsive”:图片在人体尺寸都占据100%</p>
<p>图片形状</p>
<p>1.class&#x3D;”img-rounded” 方形</p>
<p>2.class&#x3D;”img-circle” 圆形</p>
<p>3.class&#x3D;”img-thumbnail” 相框</p>
<h3 id="3-表格-1"><a href="#3-表格-1" class="headerlink" title="3.表格"></a>3.表格</h3><p>table、table-bordered、table-hover</p>
<h3 id="4-表单-1"><a href="#4-表单-1" class="headerlink" title="4.表单"></a>4.表单</h3><p>class&#x3D;”form-control”</p>
<h3 id="5导航条-1"><a href="#5导航条-1" class="headerlink" title="5导航条"></a>5导航条</h3><p>自己尝试着摸索</p>
<h3 id="6-分页条-1"><a href="#6-分页条-1" class="headerlink" title="6.分页条"></a>6.分页条</h3><p>自己尝试着摸索样式</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="全局CSS样式-2"><a href="#全局CSS样式-2" class="headerlink" title="全局CSS样式"></a>全局CSS样式</h3><p>1.按钮</p>
<p>2.图片</p>
<p>3.表格</p>
<p>4.表单</p>
<h3 id="组件-2"><a href="#组件-2" class="headerlink" title="组件"></a>组件</h3><p>1.导航条</p>
<p>2.分页条</p>
<h2 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="1-按钮-2"><a href="#1-按钮-2" class="headerlink" title="1.按钮"></a>1.按钮</h3><p>class&#x3D;”btn btn-default”</p>
<h3 id="2-图片-2"><a href="#2-图片-2" class="headerlink" title="2.图片"></a>2.图片</h3><p>class&#x3D;”img-responsive”:图片在人体尺寸都占据100%</p>
<p>图片形状</p>
<p>1.class&#x3D;”img-rounded” 方形</p>
<p>2.class&#x3D;”img-circle” 圆形</p>
<p>3.class&#x3D;”img-thumbnail” 相框</p>
<h3 id="3-表格-2"><a href="#3-表格-2" class="headerlink" title="3.表格"></a>3.表格</h3><p>table、table-bordered、table-hover</p>
<h3 id="4-表单-2"><a href="#4-表单-2" class="headerlink" title="4.表单"></a>4.表单</h3><p>class&#x3D;”form-control”</p>
<h3 id="5导航条-2"><a href="#5导航条-2" class="headerlink" title="5导航条"></a>5导航条</h3><p>自己尝试着摸索</p>
<h3 id="6-分页条-2"><a href="#6-分页条-2" class="headerlink" title="6.分页条"></a>6.分页条</h3><p>自己尝试着摸索</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="全局CSS样式-3"><a href="#全局CSS样式-3" class="headerlink" title="全局CSS样式"></a>全局CSS样式</h3><p>1.按钮</p>
<p>2.图片</p>
<p>3.表格</p>
<p>4.表单</p>
<h3 id="组件-3"><a href="#组件-3" class="headerlink" title="组件"></a>组件</h3><p>1.导航条</p>
<p>2.分页条</p>
<h2 id="使用方式-3"><a href="#使用方式-3" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="1-按钮-3"><a href="#1-按钮-3" class="headerlink" title="1.按钮"></a>1.按钮</h3><p>class&#x3D;”btn btn-default”</p>
<h3 id="2-图片-3"><a href="#2-图片-3" class="headerlink" title="2.图片"></a>2.图片</h3><p>class&#x3D;”img-responsive”:图片在人体尺寸都占据100%</p>
<p>图片形状</p>
<p>1.class&#x3D;”img-rounded” 方形</p>
<p>2.class&#x3D;”img-circle” 圆形</p>
<p>3.class&#x3D;”img-thumbnail” 相框</p>
<h3 id="3-表格-3"><a href="#3-表格-3" class="headerlink" title="3.表格"></a>3.表格</h3><p>table、table-bordered、table-hover</p>
<h3 id="4-表单-3"><a href="#4-表单-3" class="headerlink" title="4.表单"></a>4.表单</h3><p>class&#x3D;”form-control”</p>
<h3 id="5导航条-3"><a href="#5导航条-3" class="headerlink" title="5导航条"></a>5导航条</h3><p>自己尝试着摸索</p>
<h3 id="6-分页条-3"><a href="#6-分页条-3" class="headerlink" title="6.分页条"></a>6.分页条</h3><p>自己尝试着摸索</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>DML</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/DML/</url>
    <content><![CDATA[<h1 id="怎么做："><a href="#怎么做：" class="headerlink" title="怎么做："></a>怎么做：</h1><h2 id="操作数据："><a href="#操作数据：" class="headerlink" title="操作数据："></a>操作数据：</h2><h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><p>insert into 表名（列名1，列名2，….）values（值1，值2，……）;</p>
<p>insert into 表名 values（值1，值2……）;                   除了数值类型，其他数据类型         																											都需要用引号引起来。</p>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>delete from  表名 【where 条件】；          如果没有条件，则删除表中的所有记录。</p>
<p>truncate table  表名；                           删除表，然后再创建一模一样的空表。</p>
<h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>update  表名 set 列名1&#x3D;值1，列名2&#x3D; 值2，…….【where 条件】；</p>
<h2 id="操作数据：-1"><a href="#操作数据：-1" class="headerlink" title="操作数据："></a>操作数据：</h2><h3 id="添加-1"><a href="#添加-1" class="headerlink" title="添加"></a>添加</h3><p>insert into 表名（列名1，列名2，….）values（值1，值2，……）;</p>
<p>insert into 表名 values（值1，值2……）;                   除了数值类型，其他数据类型         																											都需要用引号引起来。</p>
<h3 id="删除-1"><a href="#删除-1" class="headerlink" title="删除"></a>删除</h3><p>delete from  表名 【where 条件】；          如果没有条件，则删除表中的所有记录。</p>
<p>truncate table  表名；                           删除表，然后再创建一模一样的空表。</p>
<h3 id="修改-1"><a href="#修改-1" class="headerlink" title="修改"></a>修改</h3><p>update  表名 set 列名1&#x3D;值1，列名2&#x3D; 值2，…….【where 条件】；做：</p>
<h2 id="操作数据：-2"><a href="#操作数据：-2" class="headerlink" title="操作数据："></a>操作数据：</h2><h3 id="添加-2"><a href="#添加-2" class="headerlink" title="添加"></a>添加</h3><p>insert into 表名（列名1，列名2，….）values（值1，值2，……）;</p>
<p>insert into 表名 values（值1，值2……）;                   除了数值类型，其他数据类型         																											都需要用引号引起来。</p>
<h3 id="删除-2"><a href="#删除-2" class="headerlink" title="删除"></a>删除</h3><p>delete from  表名 【where 条件】；          如果没有条件，则删除表中的所有记录。</p>
<p>truncate table  表名；                           删除表，然后再创建一模一样的空表。</p>
<h3 id="修改-2"><a href="#修改-2" class="headerlink" title="修改"></a>修改</h3><p>update  表名 set 列名1&#x3D;值1，列名2&#x3D; 值2，…….【where 条件】；</p>
<h2 id="操作数据：-3"><a href="#操作数据：-3" class="headerlink" title="操作数据："></a>操作数据：</h2><h3 id="添加-3"><a href="#添加-3" class="headerlink" title="添加"></a>添加</h3><p>insert into 表名（列名1，列名2，….）values（值1，值2，……）;</p>
<p>insert into 表名 values（值1，值2……）;                   除了数值类型，其他数据类型         																											都需要用引号引起来。</p>
<h3 id="删除-3"><a href="#删除-3" class="headerlink" title="删除"></a>删除</h3><p>delete from  表名 【where 条件】；          如果没有条件，则删除表中的所有记录。</p>
<p>truncate table  表名；                           删除表，然后再创建一模一样的空表。</p>
<h3 id="修改-3"><a href="#修改-3" class="headerlink" title="修改"></a>修改</h3><p>update  表名 set 列名1&#x3D;值1，列名2&#x3D; 值2，…….【where 条件】；</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>DCL</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/DCL/</url>
    <content><![CDATA[<h1 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h1><h2 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>create user ‘用户名’@‘主机名’ identified ‘密码’；</p>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>drop user ‘用户名’@‘主机名’；</p>
<h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>update user set password &#x3D; password（‘新密码’） where user &#x3D; ‘用户名’；</p>
<p>set password  for ‘用户名’@‘主机名’ &#x3D; password（‘新密码’）；</p>
<h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>select * from 表名；</p>
<h3 id="PS："><a href="#PS：" class="headerlink" title="PS："></a>PS：</h3><p>%表示可以在任意主机使用用户登录数据库。</p>
<p>mysql忘记了root用户的密码：</p>
<p>1.用cmd 停止mysql服务。</p>
<p>2.使用无验证方式启动mysql服务。：mysql –skip-grant-tables；</p>
<p>3.打开新的cmd窗口，直接输入mysql命令即可，就可以登录成功了。</p>
<p>4.use mysql ；</p>
<p>5.update user set password &#x3D; password（‘新密码’） where user &#x3D; ‘root’；</p>
<p>6.关闭两个窗口，手动结束mysqld.exe的进程。</p>
<p>7.启动mysql服务</p>
<p>8.使用新密码重新登录。</p>
<h2 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h2><h3 id="授予"><a href="#授予" class="headerlink" title="授予"></a>授予</h3><p>grant 权限列表  on 数据库名.表名 to ‘用户名’@‘主机名’；</p>
<h3 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h3><p>revoke	 权限列表  on 数据库名.表名  from  ‘用户名’@‘主机名’；</p>
<h3 id="查询-1"><a href="#查询-1" class="headerlink" title="查询"></a>查询</h3><p>show grants for ‘用户名’@‘主机名’；</p>
<h3 id="PS：-1"><a href="#PS：-1" class="headerlink" title="PS："></a>PS：</h3><p>权限列表的通配符是ALL，数据库名的通配符是<em><strong><strong>，表名的是</strong></strong></em>## 管理用户</p>
<h3 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h3><p>create user ‘用户名’@‘主机名’ identified ‘密码’；</p>
<h3 id="删除-1"><a href="#删除-1" class="headerlink" title="删除"></a>删除</h3><p>drop user ‘用户名’@‘主机名’；</p>
<h3 id="修改-1"><a href="#修改-1" class="headerlink" title="修改"></a>修改</h3><p>update user set password &#x3D; password（‘新密码’） where user &#x3D; ‘用户名’；</p>
<p>set password  for ‘用户名’@‘主机名’ &#x3D; password（‘新密码’）；</p>
<h3 id="查询-2"><a href="#查询-2" class="headerlink" title="查询"></a>查询</h3><p>select * from 表名；</p>
<h3 id="PS：-2"><a href="#PS：-2" class="headerlink" title="PS："></a>PS：</h3><p>%表示可以在任意主机使用用户登录数据库。</p>
<p>mysql忘记了root用户的密码：</p>
<p>1.用cmd 停止mysql服务。</p>
<p>2.使用无验证方式启动mysql服务。：mysql –skip-grant-tables；</p>
<p>3.打开新的cmd窗口，直接输入mysql命令即可，就可以登录成功了。</p>
<p>4.use mysql ；</p>
<p>5.update user set password &#x3D; password（‘新密码’） where user &#x3D; ‘root’；</p>
<p>6.关闭两个窗口，手动结束mysqld.exe的进程。</p>
<p>7.启动mysql服务</p>
<p>8.使用新密码重新登录。</p>
<h2 id="授予权限-1"><a href="#授予权限-1" class="headerlink" title="授予权限"></a>授予权限</h2><h3 id="授予-1"><a href="#授予-1" class="headerlink" title="授予"></a>授予</h3><p>grant 权限列表  on 数据库名.表名 to ‘用户名’@‘主机名’；</p>
<h3 id="撤销-1"><a href="#撤销-1" class="headerlink" title="撤销"></a>撤销</h3><p>revoke	 权限列表  on 数据库名.表名  from  ‘用户名’@‘主机名’；</p>
<h3 id="查询-3"><a href="#查询-3" class="headerlink" title="查询"></a>查询</h3><p>show grants for ‘用户名’@‘主机名’；</p>
<h3 id="PS：-3"><a href="#PS：-3" class="headerlink" title="PS："></a>PS：</h3><p>权限列表的通配符是ALL，数据库名的通配符是<em><strong><strong>，表名的是</strong></strong></em>么用</p>
<h2 id="管理用户-1"><a href="#管理用户-1" class="headerlink" title="管理用户"></a>管理用户</h2><h3 id="创建-2"><a href="#创建-2" class="headerlink" title="创建"></a>创建</h3><p>create user ‘用户名’@‘主机名’ identified ‘密码’；</p>
<h3 id="删除-2"><a href="#删除-2" class="headerlink" title="删除"></a>删除</h3><p>drop user ‘用户名’@‘主机名’；</p>
<h3 id="修改-2"><a href="#修改-2" class="headerlink" title="修改"></a>修改</h3><p>update user set password &#x3D; password（‘新密码’） where user &#x3D; ‘用户名’；</p>
<p>set password  for ‘用户名’@‘主机名’ &#x3D; password（‘新密码’）；</p>
<h3 id="查询-4"><a href="#查询-4" class="headerlink" title="查询"></a>查询</h3><p>select * from 表名；</p>
<h3 id="PS：-4"><a href="#PS：-4" class="headerlink" title="PS："></a>PS：</h3><p>%表示可以在任意主机使用用户登录数据库。</p>
<p>mysql忘记了root用户的密码：</p>
<p>1.用cmd 停止mysql服务。</p>
<p>2.使用无验证方式启动mysql服务。：mysql –skip-grant-tables；</p>
<p>3.打开新的cmd窗口，直接输入mysql命令即可，就可以登录成功了。</p>
<p>4.use mysql ；</p>
<p>5.update user set password &#x3D; password（‘新密码’） where user &#x3D; ‘root’；</p>
<p>6.关闭两个窗口，手动结束mysqld.exe的进程。</p>
<p>7.启动mysql服务</p>
<p>8.使用新密码重新登录。</p>
<h2 id="授予权限-2"><a href="#授予权限-2" class="headerlink" title="授予权限"></a>授予权限</h2><h3 id="授予-2"><a href="#授予-2" class="headerlink" title="授予"></a>授予</h3><p>grant 权限列表  on 数据库名.表名 to ‘用户名’@‘主机名’；</p>
<h3 id="撤销-2"><a href="#撤销-2" class="headerlink" title="撤销"></a>撤销</h3><p>revoke	 权限列表  on 数据库名.表名  from  ‘用户名’@‘主机名’；</p>
<h3 id="查询-5"><a href="#查询-5" class="headerlink" title="查询"></a>查询</h3><p>show grants for ‘用户名’@‘主机名’；</p>
<h3 id="PS：-5"><a href="#PS：-5" class="headerlink" title="PS："></a>PS：</h3><p>权限列表的通配符是ALL，数据库名的通配符是<em><strong><strong>，表名的是</strong></strong></em>## 管理用户</p>
<h3 id="创建-3"><a href="#创建-3" class="headerlink" title="创建"></a>创建</h3><p>create user ‘用户名’@‘主机名’ identified ‘密码’；</p>
<h3 id="删除-3"><a href="#删除-3" class="headerlink" title="删除"></a>删除</h3><p>drop user ‘用户名’@‘主机名’；</p>
<h3 id="修改-3"><a href="#修改-3" class="headerlink" title="修改"></a>修改</h3><p>update user set password &#x3D; password（‘新密码’） where user &#x3D; ‘用户名’；</p>
<p>set password  for ‘用户名’@‘主机名’ &#x3D; password（‘新密码’）；</p>
<h3 id="查询-6"><a href="#查询-6" class="headerlink" title="查询"></a>查询</h3><p>select * from 表名；</p>
<h3 id="PS：-6"><a href="#PS：-6" class="headerlink" title="PS："></a>PS：</h3><p>%表示可以在任意主机使用用户登录数据库。</p>
<p>mysql忘记了root用户的密码：</p>
<p>1.用cmd 停止mysql服务。</p>
<p>2.使用无验证方式启动mysql服务。：mysql –skip-grant-tables；</p>
<p>3.打开新的cmd窗口，直接输入mysql命令即可，就可以登录成功了。</p>
<p>4.use mysql ；</p>
<p>5.update user set password &#x3D; password（‘新密码’） where user &#x3D; ‘root’；</p>
<p>6.关闭两个窗口，手动结束mysqld.exe的进程。</p>
<p>7.启动mysql服务</p>
<p>8.使用新密码重新登录。</p>
<h2 id="授予权限-3"><a href="#授予权限-3" class="headerlink" title="授予权限"></a>授予权限</h2><h3 id="授予-3"><a href="#授予-3" class="headerlink" title="授予"></a>授予</h3><p>grant 权限列表  on 数据库名.表名 to ‘用户名’@‘主机名’；</p>
<h3 id="撤销-3"><a href="#撤销-3" class="headerlink" title="撤销"></a>撤销</h3><p>revoke	 权限列表  on 数据库名.表名  from  ‘用户名’@‘主机名’；</p>
<h3 id="查询-7"><a href="#查询-7" class="headerlink" title="查询"></a>查询</h3><p>show grants for ‘用户名’@‘主机名’；</p>
<h3 id="PS：-7"><a href="#PS：-7" class="headerlink" title="PS："></a>PS：</h3><p>权限列表的通配符是ALL，数据库名的通配符是<em><strong><strong>，表名的是</strong></strong></em></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>DDL</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/DDL/</url>
    <content><![CDATA[<h1 id="怎么用："><a href="#怎么用：" class="headerlink" title="怎么用："></a>怎么用：</h1><h2 id="操作数据库："><a href="#操作数据库：" class="headerlink" title="操作数据库："></a>操作数据库：</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>create database 数据库名称；</p>
<p>create database  if not exists 数据库名称；</p>
<p>create database 数据库名称 character set 字符集；</p>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>drop database 数据库名称；</p>
<p>drop database  if exists  数据库名称；</p>
<h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>alter database 数据库名称  character set 字符集；</p>
<h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>show databases；   查询所有数据库的名称。</p>
<p>show create database 数据库名称；    –  查看数据库创建的详细信息。</p>
<p>select database（）； 查询正在使用的数据库名称。</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>use 数据库名称；</p>
<h2 id="操作表："><a href="#操作表：" class="headerlink" title="操作表："></a>操作表：</h2><h3 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h3><p>create table 表名（列名1 数据类型1，….）；      最后一列不需要加逗号。</p>
<p>create table 表名 like 想复制的表名；    复制表。</p>
<h3 id="删除-1"><a href="#删除-1" class="headerlink" title="删除"></a>删除</h3><p>drop table 表名；</p>
<p>drop table if exists 表名；</p>
<h3 id="修改-1"><a href="#修改-1" class="headerlink" title="修改"></a>修改</h3><p>alter table 表名 rename to 新表名；  修改表名。</p>
<p>alter table 表名 character set utf8；   修改表的字符集。</p>
<p>alter table 表名 add  列名 数据名称；    添加一列。</p>
<p>alter  table 表名 change 列名 新列名  新数据类型；   修改列的名称、数据类型。</p>
<p>alter  table 表名 modify  列名 新数据类型；     修改列的数据类型。</p>
<h3 id="查询-1"><a href="#查询-1" class="headerlink" title="查询"></a>查询</h3><p>查询数据库中所有有的表：</p>
<p>show tables ;  </p>
<p>查询表结构：</p>
<p>desc表名；</p>
<h2 id="操作数据库：-1"><a href="#操作数据库：-1" class="headerlink" title="操作数据库："></a>操作数据库：</h2><h3 id="创建-2"><a href="#创建-2" class="headerlink" title="创建"></a>创建</h3><p>create database 数据库名称；</p>
<p>create database  if not exists 数据库名称；</p>
<p>create database 数据库名称 character set 字符集；</p>
<h3 id="删除-2"><a href="#删除-2" class="headerlink" title="删除"></a>删除</h3><p>drop database 数据库名称；</p>
<p>drop database  if exists  数据库名称；</p>
<h3 id="修改-2"><a href="#修改-2" class="headerlink" title="修改"></a>修改</h3><p>alter database 数据库名称  character set 字符集；</p>
<h3 id="查询-2"><a href="#查询-2" class="headerlink" title="查询"></a>查询</h3><p>show databases；   查询所有数据库的名称。</p>
<p>show create database 数据库名称；    –  查看数据库创建的详细信息。</p>
<p>select database（）； 查询正在使用的数据库名称。</p>
<h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p>use 数据库名称；</p>
<h2 id="操作表：-1"><a href="#操作表：-1" class="headerlink" title="操作表："></a>操作表：</h2><h3 id="创建-3"><a href="#创建-3" class="headerlink" title="创建"></a>创建</h3><p>create table 表名（列名1 数据类型1，….）；      最后一列不需要加逗号。</p>
<p>create table 表名 like 想复制的表名；    复制表。</p>
<h3 id="删除-3"><a href="#删除-3" class="headerlink" title="删除"></a>删除</h3><p>drop table 表名；</p>
<p>drop table if exists 表名；</p>
<h3 id="修改-3"><a href="#修改-3" class="headerlink" title="修改"></a>修改</h3><p>alter table 表名 rename to 新表名；  修改表名。</p>
<p>alter table 表名 character set utf8；   修改表的字符集。</p>
<p>alter table 表名 add  列名 数据名称；    添加一列。</p>
<p>alter  table 表名 change 列名 新列名  新数据类型；   修改列的名称、数据类型。</p>
<p>alter  table 表名 modify  列名 新数据类型；     修改列的数据类型。</p>
<h3 id="查询-3"><a href="#查询-3" class="headerlink" title="查询"></a>查询</h3><p>查询数据库中所有有的表：</p>
<p>show tables ;  </p>
<p>查询表结构：</p>
<p>desc表名；用：</p>
<h2 id="操作数据库：-2"><a href="#操作数据库：-2" class="headerlink" title="操作数据库："></a>操作数据库：</h2><h3 id="创建-4"><a href="#创建-4" class="headerlink" title="创建"></a>创建</h3><p>create database 数据库名称；</p>
<p>create database  if not exists 数据库名称；</p>
<p>create database 数据库名称 character set 字符集；</p>
<h3 id="删除-4"><a href="#删除-4" class="headerlink" title="删除"></a>删除</h3><p>drop database 数据库名称；</p>
<p>drop database  if exists  数据库名称；</p>
<h3 id="修改-4"><a href="#修改-4" class="headerlink" title="修改"></a>修改</h3><p>alter database 数据库名称  character set 字符集；</p>
<h3 id="查询-4"><a href="#查询-4" class="headerlink" title="查询"></a>查询</h3><p>show databases；   查询所有数据库的名称。</p>
<p>show create database 数据库名称；    –  查看数据库创建的详细信息。</p>
<p>select database（）； 查询正在使用的数据库名称。</p>
<h3 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h3><p>use 数据库名称；</p>
<h2 id="操作表：-2"><a href="#操作表：-2" class="headerlink" title="操作表："></a>操作表：</h2><h3 id="创建-5"><a href="#创建-5" class="headerlink" title="创建"></a>创建</h3><p>create table 表名（列名1 数据类型1，….）；      最后一列不需要加逗号。</p>
<p>create table 表名 like 想复制的表名；    复制表。</p>
<h3 id="删除-5"><a href="#删除-5" class="headerlink" title="删除"></a>删除</h3><p>drop table 表名；</p>
<p>drop table if exists 表名；</p>
<h3 id="修改-5"><a href="#修改-5" class="headerlink" title="修改"></a>修改</h3><p>alter table 表名 rename to 新表名；  修改表名。</p>
<p>alter table 表名 character set utf8；   修改表的字符集。</p>
<p>alter table 表名 add  列名 数据名称；    添加一列。</p>
<p>alter  table 表名 change 列名 新列名  新数据类型；   修改列的名称、数据类型。</p>
<p>alter  table 表名 modify  列名 新数据类型；     修改列的数据类型。</p>
<h3 id="查询-5"><a href="#查询-5" class="headerlink" title="查询"></a>查询</h3><p>查询数据库中所有有的表：</p>
<p>show tables ;  </p>
<p>查询表结构：</p>
<p>desc表名；</p>
<h2 id="操作数据库：-3"><a href="#操作数据库：-3" class="headerlink" title="操作数据库："></a>操作数据库：</h2><h3 id="创建-6"><a href="#创建-6" class="headerlink" title="创建"></a>创建</h3><p>create database 数据库名称；</p>
<p>create database  if not exists 数据库名称；</p>
<p>create database 数据库名称 character set 字符集；</p>
<h3 id="删除-6"><a href="#删除-6" class="headerlink" title="删除"></a>删除</h3><p>drop database 数据库名称；</p>
<p>drop database  if exists  数据库名称；</p>
<h3 id="修改-6"><a href="#修改-6" class="headerlink" title="修改"></a>修改</h3><p>alter database 数据库名称  character set 字符集；</p>
<h3 id="查询-6"><a href="#查询-6" class="headerlink" title="查询"></a>查询</h3><p>show databases；   查询所有数据库的名称。</p>
<p>show create database 数据库名称；    –  查看数据库创建的详细信息。</p>
<p>select database（）； 查询正在使用的数据库名称。</p>
<h3 id="使用-3"><a href="#使用-3" class="headerlink" title="使用"></a>使用</h3><p>use 数据库名称；</p>
<h2 id="操作表：-3"><a href="#操作表：-3" class="headerlink" title="操作表："></a>操作表：</h2><h3 id="创建-7"><a href="#创建-7" class="headerlink" title="创建"></a>创建</h3><p>create table 表名（列名1 数据类型1，….）；      最后一列不需要加逗号。</p>
<p>create table 表名 like 想复制的表名；    复制表。</p>
<h3 id="删除-7"><a href="#删除-7" class="headerlink" title="删除"></a>删除</h3><p>drop table 表名；</p>
<p>drop table if exists 表名；</p>
<h3 id="修改-7"><a href="#修改-7" class="headerlink" title="修改"></a>修改</h3><p>alter table 表名 rename to 新表名；  修改表名。</p>
<p>alter table 表名 character set utf8；   修改表的字符集。</p>
<p>alter table 表名 add  列名 数据名称；    添加一列。</p>
<p>alter  table 表名 change 列名 新列名  新数据类型；   修改列的名称、数据类型。</p>
<p>alter  table 表名 modify  列名 新数据类型；     修改列的数据类型。</p>
<h3 id="查询-7"><a href="#查询-7" class="headerlink" title="查询"></a>查询</h3><p>查询数据库中所有有的表：</p>
<p>show tables ;  </p>
<p>查询表结构：</p>
<p>desc表名；</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>DOM对象＿核心</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/DOM%E5%AF%B9%E8%B1%A1%EF%BC%BF%E6%A0%B8%E5%BF%83/</url>
    <content><![CDATA[<h1 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>Document Object Model 文档对象模型。将标记语言文档的各个部分，封装成对象。可以使用对象，对标记语言文档进行CRUD的动态操作。</p>
<h3 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h3><img src="../TyporaImage/image-20240516213158113.png" alt="image-20240516213158113" style="zoom:150%;" />



<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-核心DOM"><a href="#1-核心DOM" class="headerlink" title="1.核心DOM"></a>1.核心DOM</h3><p>①Node 节点对象</p>
<p>②Document文档对象</p>
<p>③Element  元素对象</p>
<p>④Attribute  属性对象</p>
<p>⑤Text 文本对象</p>
<p> ⑥Commit  注释对象</p>
<h3 id="2-XML-DOM"><a href="#2-XML-DOM" class="headerlink" title="2.XML DOM"></a>2.XML DOM</h3><p>–针对ＸＭＬ文档的标准模型</p>
<h3 id="3-HTML-DOM"><a href="#3-HTML-DOM" class="headerlink" title="3.HTML DOM"></a>3.HTML DOM</h3><p>–针对HTML文档的标准模型</p>
<h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>1.获取对象：</p>
<p><img src="/../TyporaImage/image-20240515214954970.png" alt="image-20240515214954970"></p>
<p>2.修改属性值</p>
<p>3.修改标签体内容</p>
<p>属性：innerHTML</p>
<h2 id="为什么-是什么"><a href="#为什么-是什么" class="headerlink" title="为什么## 是什么"></a>为什么## 是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>Document Object Model 文档对象模型。将标记语言文档的各个部分，封装成对象。可以使用对象，对标记语言文档进行CRUD的动态操作。</p>
<h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h3><img src="../TyporaImage/image-20240516213158113.png" alt="image-20240516213158113" style="zoom:150%;" />



<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-核心DOM-1"><a href="#1-核心DOM-1" class="headerlink" title="1.核心DOM"></a>1.核心DOM</h3><p>①Node 节点对象</p>
<p>②Document文档对象</p>
<p>③Element  元素对象</p>
<p>④Attribute  属性对象</p>
<p>⑤Text 文本对象</p>
<p> ⑥Commit  注释对象</p>
<h3 id="2-XML-DOM-1"><a href="#2-XML-DOM-1" class="headerlink" title="2.XML DOM"></a>2.XML DOM</h3><p>–针对ＸＭＬ文档的标准模型</p>
<h3 id="3-HTML-DOM-1"><a href="#3-HTML-DOM-1" class="headerlink" title="3.HTML DOM"></a>3.HTML DOM</h3><p>–针对HTML文档的标准模型</p>
<h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h3><p>1.获取对象：</p>
<p><img src="/../TyporaImage/image-20240515214954970.png" alt="image-20240515214954970"></p>
<p>2.修改属性值</p>
<p>3.修改标签体内容</p>
<p>属性：innerHTML</p>
<h2 id="为什么OM"><a href="#为什么OM" class="headerlink" title="为什么OM"></a>为什么OM</h2><h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>Document Object Model 文档对象模型。将标记语言文档的各个部分，封装成对象。可以使用对象，对标记语言文档进行CRUD的动态操作。</p>
<h3 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h3><img src="../TyporaImage/image-20240516213158113.png" alt="image-20240516213158113" style="zoom:150%;" />



<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-核心DOM-2"><a href="#1-核心DOM-2" class="headerlink" title="1.核心DOM"></a>1.核心DOM</h3><p>①Node 节点对象</p>
<p>②Document文档对象</p>
<p>③Element  元素对象</p>
<p>④Attribute  属性对象</p>
<p>⑤Text 文本对象</p>
<p> ⑥Commit  注释对象</p>
<h3 id="2-XML-DOM-2"><a href="#2-XML-DOM-2" class="headerlink" title="2.XML DOM"></a>2.XML DOM</h3><p>–针对ＸＭＬ文档的标准模型</p>
<h3 id="3-HTML-DOM-2"><a href="#3-HTML-DOM-2" class="headerlink" title="3.HTML DOM"></a>3.HTML DOM</h3><p>–针对HTML文档的标准模型</p>
<h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h3><p>1.获取对象：</p>
<p><img src="/../TyporaImage/image-20240515214954970.png" alt="image-20240515214954970"></p>
<p>2.修改属性值</p>
<p>3.修改标签体内容</p>
<p>属性：innerHTML</p>
<h2 id="为什么-是什么-1"><a href="#为什么-是什么-1" class="headerlink" title="为什么## 是什么"></a>为什么## 是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>Document Object Model 文档对象模型。将标记语言文档的各个部分，封装成对象。可以使用对象，对标记语言文档进行CRUD的动态操作。</p>
<h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h3><img src="../TyporaImage/image-20240516213158113.png" alt="image-20240516213158113" style="zoom:150%;" />



<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-核心DOM-3"><a href="#1-核心DOM-3" class="headerlink" title="1.核心DOM"></a>1.核心DOM</h3><p>①Node 节点对象</p>
<p>②Document文档对象</p>
<p>③Element  元素对象</p>
<p>④Attribute  属性对象</p>
<p>⑤Text 文本对象</p>
<p> ⑥Commit  注释对象</p>
<h3 id="2-XML-DOM-3"><a href="#2-XML-DOM-3" class="headerlink" title="2.XML DOM"></a>2.XML DOM</h3><p>–针对ＸＭＬ文档的标准模型</p>
<h3 id="3-HTML-DOM-3"><a href="#3-HTML-DOM-3" class="headerlink" title="3.HTML DOM"></a>3.HTML DOM</h3><p>–针对HTML文档的标准模型</p>
<h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方式-3"><a href="#使用方式-3" class="headerlink" title="使用方式"></a>使用方式</h3><p>1.获取对象：</p>
<p><img src="/../TyporaImage/image-20240515214954970.png" alt="image-20240515214954970"></p>
<p>2.修改属性值</p>
<p>3.修改标签体内容</p>
<p>属性：innerHTML</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>DQL</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/DQL/</url>
    <content><![CDATA[<h1 id="怎么做："><a href="#怎么做：" class="headerlink" title="怎么做："></a>怎么做：</h1><h2 id="操作数据："><a href="#操作数据：" class="headerlink" title="操作数据："></a>操作数据：</h2><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><p>select 字段列表</p>
<p> from 表名列表 </p>
<p>where 条件列表</p>
<p>   group by  分组字段 </p>
<p>having 分组之后的条件</p>
<p>  order by 排序</p>
<p> limit 分页限定；</p>
<h4 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h4><p>select * form 表名；</p>
<p>select  distinct 字段列表 from 表名；   去除重复的结果集。</p>
<p>select 列1+列 2  from 表名；       列进行参与计算，如果有null参与，则结果null。</p>
<p>可以通过ifnull（）函数对可能为空的字段进行操作。</p>
<h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><p>where 子句后面跟着条件</p>
<h4 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h4><p>select * from  表名 where  列名 like “想查询的内容”；   可以运用占字符。</p>
<h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><p>语法：</p>
<p>order by  排序字段1 排序方法1，排序字段2  排序方法2，……..;</p>
<p>排序方式：</p>
<p>ASC ：升序，默认排序方式。</p>
<p>DESC：降序。  </p>
<p>ps：如果有多个排序条件，那么当前面的条件都一样时，才会依次判断后面的条件。                                </p>
<h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h4><p>定义：</p>
<p>将一列数据作为一个整体，进行纵向计算。</p>
<p>组成：</p>
<p>count、max、min、sum、avg</p>
<p>特点：</p>
<p>结果都是单行单列，即只有一个结果。</p>
<p>使用：</p>
<p>select count（*） from  表名；</p>
<h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><p>group by 分组字段； </p>
<p>PS：分组之后查询的是分组字段或者聚合函数。</p>
<p>   where在分组之前进行限定，如果不满足条件，不参与分组。where不能进行聚合函数的判断。</p>
<p>having在分组之后进行限定，如果不满足条件，则不会被查询到。可以进行聚合函数的判断。</p>
<h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><p>定义：</p>
<p>limit这个语法是mysql的特有语法。</p>
<p>使用形式：</p>
<p>limit 开始的索引，每一页查询的条数；     </p>
<p>​       公式总结，开始的索引&#x3D;（当前的页码—1）*每一页显示的条数。</p>
<h3 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h3><p>as  别名。    这个操作可以简化列原本的名字，便于记忆。as也可以省略。</p>
<h3 id="相关知识"><a href="#相关知识" class="headerlink" title="相关知识"></a>相关知识</h3><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><p>比较运算符：</p>
<p><img src="/../TyporaImage/image-20240421204007788.png" alt="image-20240421204007788"></p>
<p>逻辑运算符：</p>
<p><img src="/../TyporaImage/image-20240421204028207.png" alt="image-20240421204028207"></p>
<h4 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h4><p>_: 单个的任意占字符；</p>
<p>%：多个的任意占字符。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Date对象</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Date%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h1><h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p><img src="/../TyporaImage/image-20240515210857549.png" alt="image-20240515210857549"></p>
<h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h3><p><img src="/../TyporaImage/image-20240515210857549.png" alt="image-20240515210857549">te</p>
<h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h3><p><img src="/../TyporaImage/image-20240515210857549.png" alt="image-20240515210857549"></p>
<h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方式-3"><a href="#使用方式-3" class="headerlink" title="使用方式"></a>使用方式</h3><p><img src="/../TyporaImage/image-20240515210857549.png" alt="image-20240515210857549"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Document对象-DOM</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Document%E5%AF%B9%E8%B1%A1-DOM/</url>
    <content><![CDATA[<h1 id="Document对象"><a href="#Document对象" class="headerlink" title="Document对象"></a>Document对象</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-获取Element对象"><a href="#1-获取Element对象" class="headerlink" title="1.获取Element对象"></a>1.获取Element对象</h3><p><img src="/../TyporaImage/image-20240516213523396.png" alt="image-20240516213523396">      </p>
<h3 id="2-创建其他Document对象"><a href="#2-创建其他Document对象" class="headerlink" title="2.创建其他Document对象"></a>2.创建其他Document对象</h3><p><img src="/../TyporaImage/image-20240516213853592.png" alt="image-20240516213853592"></p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-获取Element对象-1"><a href="#1-获取Element对象-1" class="headerlink" title="1.获取Element对象"></a>1.获取Element对象</h3><p><img src="/../TyporaImage/image-20240516213523396.png" alt="image-20240516213523396">      </p>
<h3 id="2-创建其他Document对象-1"><a href="#2-创建其他Document对象-1" class="headerlink" title="2.创建其他Document对象"></a>2.创建其他Document对象</h3><p><img src="/../TyporaImage/image-20240516213853592.png" alt="image-20240516213853592">对象</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-获取Element对象-2"><a href="#1-获取Element对象-2" class="headerlink" title="1.获取Element对象"></a>1.获取Element对象</h3><p><img src="/../TyporaImage/image-20240516213523396.png" alt="image-20240516213523396">      </p>
<h3 id="2-创建其他Document对象-2"><a href="#2-创建其他Document对象-2" class="headerlink" title="2.创建其他Document对象"></a>2.创建其他Document对象</h3><p><img src="/../TyporaImage/image-20240516213853592.png" alt="image-20240516213853592"></p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-获取Element对象-3"><a href="#1-获取Element对象-3" class="headerlink" title="1.获取Element对象"></a>1.获取Element对象</h3><p><img src="/../TyporaImage/image-20240516213523396.png" alt="image-20240516213523396">      </p>
<h3 id="2-创建其他Document对象-3"><a href="#2-创建其他Document对象-3" class="headerlink" title="2.创建其他Document对象"></a>2.创建其他Document对象</h3><p><img src="/../TyporaImage/image-20240516213853592.png" alt="image-20240516213853592"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Document_HTML</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Document_HTML/</url>
    <content><![CDATA[<h1 id="HTML的DOM对象"><a href="#HTML的DOM对象" class="headerlink" title="HTML的DOM对象"></a>HTML的DOM对象</h1><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p>innerHTML：</p>
<p>标签的设置和获取</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>1.Document对象，可以使用window对象来获取</p>
<p>window.document</p>
<p>2.可以直接使用</p>
<p>document</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="控制元素样式"><a href="#控制元素样式" class="headerlink" title="控制元素样式"></a>控制元素样式</h3><p><img src="/../TyporaImage/image-20240516214946431.png" alt="image-20240516214946431"></p>
<h2 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h2><p>innerHTML：</p>
<p>标签的设置和获取</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p>1.Document对象，可以使用window对象来获取</p>
<p>window.document</p>
<p>2.可以直接使用</p>
<p>document</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="控制元素样式-1"><a href="#控制元素样式-1" class="headerlink" title="控制元素样式"></a>控制元素样式</h3><p><img src="/../TyporaImage/image-20240516214946431.png" alt="image-20240516214946431">对象</p>
<h2 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h2><p>innerHTML：</p>
<p>标签的设置和获取</p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p>1.Document对象，可以使用window对象来获取</p>
<p>window.document</p>
<p>2.可以直接使用</p>
<p>document</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="控制元素样式-2"><a href="#控制元素样式-2" class="headerlink" title="控制元素样式"></a>控制元素样式</h3><p><img src="/../TyporaImage/image-20240516214946431.png" alt="image-20240516214946431"></p>
<h2 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h2><p>innerHTML：</p>
<p>标签的设置和获取</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p>1.Document对象，可以使用window对象来获取</p>
<p>window.document</p>
<p>2.可以直接使用</p>
<p>document</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="控制元素样式-3"><a href="#控制元素样式-3" class="headerlink" title="控制元素样式"></a>控制元素样式</h3><p><img src="/../TyporaImage/image-20240516214946431.png" alt="image-20240516214946431"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Document对象-jsoup</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Document%E5%AF%B9%E8%B1%A1-jsoup/</url>
    <content><![CDATA[<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240523101348349.png" alt="image-20240523101348349"><img src="/../TyporaImage/image-20240523101348349.png" alt="image-20240523101348349">用方法</p>
<p><img src="/../TyporaImage/image-20240523101348349.png" alt="image-20240523101348349"><img src="/../TyporaImage/image-20240523101348349.png" alt="image-20240523101348349"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Druid工具类</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Druid%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<h1 id="Druid工具类"><a href="#Druid工具类" class="headerlink" title="Druid工具类"></a>Druid工具类</h1><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-定义一个JDBCUtils类"><a href="#1-定义一个JDBCUtils类" class="headerlink" title="1.定义一个JDBCUtils类"></a>1.定义一个JDBCUtils类</h4><h4 id="2-提供静态代码块，用来加载配置文件，初始化连接池对象。"><a href="#2-提供静态代码块，用来加载配置文件，初始化连接池对象。" class="headerlink" title="2.提供静态代码块，用来加载配置文件，初始化连接池对象。"></a>2.提供静态代码块，用来加载配置文件，初始化连接池对象。</h4><p><img src="/../TyporaImage/image-20240507221644276.png" alt="image-20240507221644276"></p>
<h4 id="3-提供方法"><a href="#3-提供方法" class="headerlink" title="3.提供方法"></a>3.提供方法</h4><p>   ①获取连接方法</p>
<p><img src="/../TyporaImage/image-20240507221703977.png" alt="image-20240507221703977"></p>
<p>②释放资源</p>
<p><img src="/../TyporaImage/image-20240507221726212.png" alt="image-20240507221726212"></p>
<p>③获取连接池方法</p>
<p><img src="/../TyporaImage/image-20240507221849717.png" alt="image-20240507221849717"></p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>简化不必要的流程。</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-定义一个JDBCUtils类-1"><a href="#1-定义一个JDBCUtils类-1" class="headerlink" title="1.定义一个JDBCUtils类"></a>1.定义一个JDBCUtils类</h4><h4 id="2-提供静态代码块，用来加载配置文件，初始化连接池对象。-1"><a href="#2-提供静态代码块，用来加载配置文件，初始化连接池对象。-1" class="headerlink" title="2.提供静态代码块，用来加载配置文件，初始化连接池对象。"></a>2.提供静态代码块，用来加载配置文件，初始化连接池对象。</h4><p><img src="/../TyporaImage/image-20240507221644276.png" alt="image-20240507221644276"></p>
<h4 id="3-提供方法-1"><a href="#3-提供方法-1" class="headerlink" title="3.提供方法"></a>3.提供方法</h4><p>   ①获取连接方法</p>
<p><img src="/../TyporaImage/image-20240507221703977.png" alt="image-20240507221703977"></p>
<p>②释放资源</p>
<p><img src="/../TyporaImage/image-20240507221726212.png" alt="image-20240507221726212"></p>
<p>③获取连接池方法</p>
<p><img src="/../TyporaImage/image-20240507221849717.png" alt="image-20240507221849717"></p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>简化不必要的流程。具类</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-定义一个JDBCUtils类-2"><a href="#1-定义一个JDBCUtils类-2" class="headerlink" title="1.定义一个JDBCUtils类"></a>1.定义一个JDBCUtils类</h4><h4 id="2-提供静态代码块，用来加载配置文件，初始化连接池对象。-2"><a href="#2-提供静态代码块，用来加载配置文件，初始化连接池对象。-2" class="headerlink" title="2.提供静态代码块，用来加载配置文件，初始化连接池对象。"></a>2.提供静态代码块，用来加载配置文件，初始化连接池对象。</h4><p><img src="/../TyporaImage/image-20240507221644276.png" alt="image-20240507221644276"></p>
<h4 id="3-提供方法-2"><a href="#3-提供方法-2" class="headerlink" title="3.提供方法"></a>3.提供方法</h4><p>   ①获取连接方法</p>
<p><img src="/../TyporaImage/image-20240507221703977.png" alt="image-20240507221703977"></p>
<p>②释放资源</p>
<p><img src="/../TyporaImage/image-20240507221726212.png" alt="image-20240507221726212"></p>
<p>③获取连接池方法</p>
<p><img src="/../TyporaImage/image-20240507221849717.png" alt="image-20240507221849717"></p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>简化不必要的流程。</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-定义一个JDBCUtils类-3"><a href="#1-定义一个JDBCUtils类-3" class="headerlink" title="1.定义一个JDBCUtils类"></a>1.定义一个JDBCUtils类</h4><h4 id="2-提供静态代码块，用来加载配置文件，初始化连接池对象。-3"><a href="#2-提供静态代码块，用来加载配置文件，初始化连接池对象。-3" class="headerlink" title="2.提供静态代码块，用来加载配置文件，初始化连接池对象。"></a>2.提供静态代码块，用来加载配置文件，初始化连接池对象。</h4><p><img src="/../TyporaImage/image-20240507221644276.png" alt="image-20240507221644276"></p>
<h4 id="3-提供方法-3"><a href="#3-提供方法-3" class="headerlink" title="3.提供方法"></a>3.提供方法</h4><p>   ①获取连接方法</p>
<p><img src="/../TyporaImage/image-20240507221703977.png" alt="image-20240507221703977"></p>
<p>②释放资源</p>
<p><img src="/../TyporaImage/image-20240507221726212.png" alt="image-20240507221726212"></p>
<p>③获取连接池方法</p>
<p><img src="/../TyporaImage/image-20240507221849717.png" alt="image-20240507221849717"></p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>简化不必要的流程。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Druid</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Druid/</url>
    <content><![CDATA[<h1 id="Druid"><a href="#Druid" class="headerlink" title="Druid"></a>Druid</h1><h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-导入jar包"><a href="#1-导入jar包" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h4><h4 id="2-定义配置文件"><a href="#2-定义配置文件" class="headerlink" title="2.定义配置文件"></a>2.定义配置文件</h4><p>properties文件，文件名字任意、放的位置任意</p>
<p>通过new Properties（）等一系列步骤来获取配置信息。</p>
<p><img src="/../TyporaImage/image-20240507220512695.png" alt="image-20240507220512695"></p>
<h4 id="3-获取数据库连接池对象"><a href="#3-获取数据库连接池对象" class="headerlink" title="3.获取数据库连接池对象"></a>3.获取数据库连接池对象</h4><p>通过工厂类来获取：DruidDataSourceFactory</p>
<p><img src="/../TyporaImage/image-20240507220613515.png" alt="image-20240507220613515"></p>
<h4 id="4-获取连接"><a href="#4-获取连接" class="headerlink" title="4.获取连接"></a>4.获取连接</h4><h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-导入jar包-1"><a href="#1-导入jar包-1" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h4><h4 id="2-定义配置文件-1"><a href="#2-定义配置文件-1" class="headerlink" title="2.定义配置文件"></a>2.定义配置文件</h4><p>properties文件，文件名字任意、放的位置任意</p>
<p>通过new Properties（）等一系列步骤来获取配置信息。</p>
<p><img src="/../TyporaImage/image-20240507220512695.png" alt="image-20240507220512695"></p>
<h4 id="3-获取数据库连接池对象-1"><a href="#3-获取数据库连接池对象-1" class="headerlink" title="3.获取数据库连接池对象"></a>3.获取数据库连接池对象</h4><p>通过工厂类来获取：DruidDataSourceFactory</p>
<p><img src="/../TyporaImage/image-20240507220613515.png" alt="image-20240507220613515"></p>
<h4 id="4-获取连接-1"><a href="#4-获取连接-1" class="headerlink" title="4.获取连接"></a>4.获取连接</h4><h2 id="为什么id"><a href="#为什么id" class="headerlink" title="为什么id"></a>为什么id</h2><h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-导入jar包-2"><a href="#1-导入jar包-2" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h4><h4 id="2-定义配置文件-2"><a href="#2-定义配置文件-2" class="headerlink" title="2.定义配置文件"></a>2.定义配置文件</h4><p>properties文件，文件名字任意、放的位置任意</p>
<p>通过new Properties（）等一系列步骤来获取配置信息。</p>
<p><img src="/../TyporaImage/image-20240507220512695.png" alt="image-20240507220512695"></p>
<h4 id="3-获取数据库连接池对象-2"><a href="#3-获取数据库连接池对象-2" class="headerlink" title="3.获取数据库连接池对象"></a>3.获取数据库连接池对象</h4><p>通过工厂类来获取：DruidDataSourceFactory</p>
<p><img src="/../TyporaImage/image-20240507220613515.png" alt="image-20240507220613515"></p>
<h4 id="4-获取连接-2"><a href="#4-获取连接-2" class="headerlink" title="4.获取连接"></a>4.获取连接</h4><h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-导入jar包-3"><a href="#1-导入jar包-3" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h4><h4 id="2-定义配置文件-3"><a href="#2-定义配置文件-3" class="headerlink" title="2.定义配置文件"></a>2.定义配置文件</h4><p>properties文件，文件名字任意、放的位置任意</p>
<p>通过new Properties（）等一系列步骤来获取配置信息。</p>
<p><img src="/../TyporaImage/image-20240507220512695.png" alt="image-20240507220512695"></p>
<h4 id="3-获取数据库连接池对象-3"><a href="#3-获取数据库连接池对象-3" class="headerlink" title="3.获取数据库连接池对象"></a>3.获取数据库连接池对象</h4><p>通过工厂类来获取：DruidDataSourceFactory</p>
<p><img src="/../TyporaImage/image-20240507220613515.png" alt="image-20240507220613515"></p>
<h4 id="4-获取连接-3"><a href="#4-获取连接-3" class="headerlink" title="4.获取连接"></a>4.获取连接</h4><h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Element对象-jsoup</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Element%E5%AF%B9%E8%B1%A1-jsoup/</url>
    <content><![CDATA[<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240523101437377.png" alt="image-20240523101437377"></p>
<p><img src="/../TyporaImage/image-20240523101437377.png" alt="image-20240523101437377">用方法</p>
<p><img src="/../TyporaImage/image-20240523101437377.png" alt="image-20240523101437377"></p>
<p><img src="/../TyporaImage/image-20240523101437377.png" alt="image-20240523101437377"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>EL</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/EL/</url>
    <content><![CDATA[<h1 id="EL（Expression-Language）"><a href="#EL（Expression-Language）" class="headerlink" title="EL（Expression Language）"></a>EL（Expression Language）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>EL（表达式语言）是一种用于访问 Java 对象属性和调用方法的语言，主要用于 JSP（JavaServer Pages）页面中，通过简化的语法进行数据读取和操作。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>简化 JSP 页面中的数据访问和操作，使开发者可以更加方便地显示和处理数据。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>EL 通过解析 <code>$&#123;&#125;</code> 语法中的表达式，动态地从作用域对象中获取数据，进行运算并返回结果。它支持多种数据类型和运算符，提供丰富的功能。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h4 id="Ⅰ、忽略当前jsp页面的表达式："><a href="#Ⅰ、忽略当前jsp页面的表达式：" class="headerlink" title="Ⅰ、忽略当前jsp页面的表达式："></a>Ⅰ、忽略当前jsp页面的表达式：</h4><p>1.\&amp;{表达式}：忽略当前这个表达式</p>
<p>2.忽略所有表示式：</p>
<p>设置jsp中的page命令isELIgonred&#x3D;“true”</p>
<h4 id="Ⅱ、获取值"><a href="#Ⅱ、获取值" class="headerlink" title="Ⅱ、获取值"></a>Ⅱ、获取值</h4><p>el表达式只能从域对象中获得值</p>
<h5 id="1-域名称-键名-："><a href="#1-域名称-键名-：" class="headerlink" title="1.${域名称.键名}："></a>1.${域名称.键名}：</h5><p>从指定域中获取键的值。</p>
<h5 id="2-键名-："><a href="#2-键名-：" class="headerlink" title="2.${键名}："></a>2.${键名}：</h5><p>依次从pagecontext、request、session、application中查找对应的键，获取相应的值。</p>
<h5 id="3-获取对象值的值"><a href="#3-获取对象值的值" class="headerlink" title="3.获取对象值的值"></a>3.获取对象值的值</h5><p>setter、getter方法，去掉get、set，再将剩余部分的首字母变成小写。</p>
<p>setName-&gt; Name-&gt;name</p>
<p> 格式：   ${域.对象.属性}</p>
<h5 id="4-获取域中集合的值"><a href="#4-获取域中集合的值" class="headerlink" title="4.获取域中集合的值"></a>4.获取域中集合的值</h5><p>list：</p>
<p>${集合名[index]}   ,index超出界限也不会报错</p>
<p> map：</p>
<p>${集合名.键名}</p>
<p>${集合名[“键名”]}</p>
<h4 id="Ⅲ、空运算符"><a href="#Ⅲ、空运算符" class="headerlink" title="Ⅲ、空运算符"></a>Ⅲ、空运算符</h4><p>${empty 对象}</p>
<p>判断是否为长度为0或者为null</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h4 id="Ⅰ、隐式对象"><a href="#Ⅰ、隐式对象" class="headerlink" title="Ⅰ、隐式对象"></a>Ⅰ、隐式对象</h4><p>隐式对象是内置对象的一种特定类型，它们在JSP页面中隐式存在，无需显式声明即可使用。</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>EL（表达式语言）是一种用于访问 Java 对象属性和调用方法的语言，主要用于 JSP（JavaServer Pages）页面中，通过简化的语法进行数据读取和操作。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>简化 JSP 页面中的数据访问和操作，使开发者可以更加方便地显示和处理数据。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>EL 通过解析 <code>$&#123;&#125;</code> 语法中的表达式，动态地从作用域对象中获取数据，进行运算并返回结果。它支持多种数据类型和运算符，提供丰富的功能。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h4 id="Ⅰ、忽略当前jsp页面的表达式：-1"><a href="#Ⅰ、忽略当前jsp页面的表达式：-1" class="headerlink" title="Ⅰ、忽略当前jsp页面的表达式："></a>Ⅰ、忽略当前jsp页面的表达式：</h4><p>1.\&amp;{表达式}：忽略当前这个表达式</p>
<p>2.忽略所有表示式：</p>
<p>设置jsp中的page命令isELIgonred&#x3D;“true”</p>
<h4 id="Ⅱ、获取值-1"><a href="#Ⅱ、获取值-1" class="headerlink" title="Ⅱ、获取值"></a>Ⅱ、获取值</h4><p>el表达式只能从域对象中获得值</p>
<h5 id="1-域名称-键名-：-1"><a href="#1-域名称-键名-：-1" class="headerlink" title="1.${域名称.键名}："></a>1.${域名称.键名}：</h5><p>从指定域中获取键的值。</p>
<h5 id="2-键名-：-1"><a href="#2-键名-：-1" class="headerlink" title="2.${键名}："></a>2.${键名}：</h5><p>依次从pagecontext、request、session、application中查找对应的键，获取相应的值。</p>
<h5 id="3-获取对象值的值-1"><a href="#3-获取对象值的值-1" class="headerlink" title="3.获取对象值的值"></a>3.获取对象值的值</h5><p>setter、getter方法，去掉get、set，再将剩余部分的首字母变成小写。</p>
<p>setName-&gt; Name-&gt;name</p>
<p> 格式：   ${域.对象.属性}</p>
<h5 id="4-获取域中集合的值-1"><a href="#4-获取域中集合的值-1" class="headerlink" title="4.获取域中集合的值"></a>4.获取域中集合的值</h5><p>list：</p>
<p>${集合名[index]}   ,index超出界限也不会报错</p>
<p> map：</p>
<p>${集合名.键名}</p>
<p>${集合名[“键名”]}</p>
<h4 id="Ⅲ、空运算符-1"><a href="#Ⅲ、空运算符-1" class="headerlink" title="Ⅲ、空运算符"></a>Ⅲ、空运算符</h4><p>${empty 对象}</p>
<p>判断是否为长度为0或者为null</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h4 id="Ⅰ、隐式对象-1"><a href="#Ⅰ、隐式对象-1" class="headerlink" title="Ⅰ、隐式对象"></a>Ⅰ、隐式对象</h4><p>隐式对象是内置对象的一种特定类型，它们在JSP页面中隐式存在，无需显式声明即可使用。e）</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>EL（表达式语言）是一种用于访问 Java 对象属性和调用方法的语言，主要用于 JSP（JavaServer Pages）页面中，通过简化的语法进行数据读取和操作。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>简化 JSP 页面中的数据访问和操作，使开发者可以更加方便地显示和处理数据。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>EL 通过解析 <code>$&#123;&#125;</code> 语法中的表达式，动态地从作用域对象中获取数据，进行运算并返回结果。它支持多种数据类型和运算符，提供丰富的功能。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h4 id="Ⅰ、忽略当前jsp页面的表达式：-2"><a href="#Ⅰ、忽略当前jsp页面的表达式：-2" class="headerlink" title="Ⅰ、忽略当前jsp页面的表达式："></a>Ⅰ、忽略当前jsp页面的表达式：</h4><p>1.\&amp;{表达式}：忽略当前这个表达式</p>
<p>2.忽略所有表示式：</p>
<p>设置jsp中的page命令isELIgonred&#x3D;“true”</p>
<h4 id="Ⅱ、获取值-2"><a href="#Ⅱ、获取值-2" class="headerlink" title="Ⅱ、获取值"></a>Ⅱ、获取值</h4><p>el表达式只能从域对象中获得值</p>
<h5 id="1-域名称-键名-：-2"><a href="#1-域名称-键名-：-2" class="headerlink" title="1.${域名称.键名}："></a>1.${域名称.键名}：</h5><p>从指定域中获取键的值。</p>
<h5 id="2-键名-：-2"><a href="#2-键名-：-2" class="headerlink" title="2.${键名}："></a>2.${键名}：</h5><p>依次从pagecontext、request、session、application中查找对应的键，获取相应的值。</p>
<h5 id="3-获取对象值的值-2"><a href="#3-获取对象值的值-2" class="headerlink" title="3.获取对象值的值"></a>3.获取对象值的值</h5><p>setter、getter方法，去掉get、set，再将剩余部分的首字母变成小写。</p>
<p>setName-&gt; Name-&gt;name</p>
<p> 格式：   ${域.对象.属性}</p>
<h5 id="4-获取域中集合的值-2"><a href="#4-获取域中集合的值-2" class="headerlink" title="4.获取域中集合的值"></a>4.获取域中集合的值</h5><p>list：</p>
<p>${集合名[index]}   ,index超出界限也不会报错</p>
<p> map：</p>
<p>${集合名.键名}</p>
<p>${集合名[“键名”]}</p>
<h4 id="Ⅲ、空运算符-2"><a href="#Ⅲ、空运算符-2" class="headerlink" title="Ⅲ、空运算符"></a>Ⅲ、空运算符</h4><p>${empty 对象}</p>
<p>判断是否为长度为0或者为null</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h4 id="Ⅰ、隐式对象-2"><a href="#Ⅰ、隐式对象-2" class="headerlink" title="Ⅰ、隐式对象"></a>Ⅰ、隐式对象</h4><p>隐式对象是内置对象的一种特定类型，它们在JSP页面中隐式存在，无需显式声明即可使用。</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>EL（表达式语言）是一种用于访问 Java 对象属性和调用方法的语言，主要用于 JSP（JavaServer Pages）页面中，通过简化的语法进行数据读取和操作。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>简化 JSP 页面中的数据访问和操作，使开发者可以更加方便地显示和处理数据。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>EL 通过解析 <code>$&#123;&#125;</code> 语法中的表达式，动态地从作用域对象中获取数据，进行运算并返回结果。它支持多种数据类型和运算符，提供丰富的功能。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h4 id="Ⅰ、忽略当前jsp页面的表达式：-3"><a href="#Ⅰ、忽略当前jsp页面的表达式：-3" class="headerlink" title="Ⅰ、忽略当前jsp页面的表达式："></a>Ⅰ、忽略当前jsp页面的表达式：</h4><p>1.\&amp;{表达式}：忽略当前这个表达式</p>
<p>2.忽略所有表示式：</p>
<p>设置jsp中的page命令isELIgonred&#x3D;“true”</p>
<h4 id="Ⅱ、获取值-3"><a href="#Ⅱ、获取值-3" class="headerlink" title="Ⅱ、获取值"></a>Ⅱ、获取值</h4><p>el表达式只能从域对象中获得值</p>
<h5 id="1-域名称-键名-：-3"><a href="#1-域名称-键名-：-3" class="headerlink" title="1.${域名称.键名}："></a>1.${域名称.键名}：</h5><p>从指定域中获取键的值。</p>
<h5 id="2-键名-：-3"><a href="#2-键名-：-3" class="headerlink" title="2.${键名}："></a>2.${键名}：</h5><p>依次从pagecontext、request、session、application中查找对应的键，获取相应的值。</p>
<h5 id="3-获取对象值的值-3"><a href="#3-获取对象值的值-3" class="headerlink" title="3.获取对象值的值"></a>3.获取对象值的值</h5><p>setter、getter方法，去掉get、set，再将剩余部分的首字母变成小写。</p>
<p>setName-&gt; Name-&gt;name</p>
<p> 格式：   ${域.对象.属性}</p>
<h5 id="4-获取域中集合的值-3"><a href="#4-获取域中集合的值-3" class="headerlink" title="4.获取域中集合的值"></a>4.获取域中集合的值</h5><p>list：</p>
<p>${集合名[index]}   ,index超出界限也不会报错</p>
<p> map：</p>
<p>${集合名.键名}</p>
<p>${集合名[“键名”]}</p>
<h4 id="Ⅲ、空运算符-3"><a href="#Ⅲ、空运算符-3" class="headerlink" title="Ⅲ、空运算符"></a>Ⅲ、空运算符</h4><p>${empty 对象}</p>
<p>判断是否为长度为0或者为null</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h4 id="Ⅰ、隐式对象-3"><a href="#Ⅰ、隐式对象-3" class="headerlink" title="Ⅰ、隐式对象"></a>Ⅰ、隐式对象</h4><p>隐式对象是内置对象的一种特定类型，它们在JSP页面中隐式存在，无需显式声明即可使用。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Element对象—DOM</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Element%E5%AF%B9%E8%B1%A1%E2%80%94DOM/</url>
    <content><![CDATA[<h1 id="Element对象"><a href="#Element对象" class="headerlink" title="Element对象"></a>Element对象</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>通过Document对象来创建</p>
<h3 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h3><p><img src="/../TyporaImage/image-20240516214111055.png" alt="image-20240516214111055"></p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h3><p>通过Document对象来创建</p>
<h3 id="调用-1"><a href="#调用-1" class="headerlink" title="调用"></a>调用</h3><p><img src="/../TyporaImage/image-20240516214111055.png" alt="image-20240516214111055">对象</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="创建-2"><a href="#创建-2" class="headerlink" title="创建"></a>创建</h3><p>通过Document对象来创建</p>
<h3 id="调用-2"><a href="#调用-2" class="headerlink" title="调用"></a>调用</h3><p><img src="/../TyporaImage/image-20240516214111055.png" alt="image-20240516214111055"></p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="创建-3"><a href="#创建-3" class="headerlink" title="创建"></a>创建</h3><p>通过Document对象来创建</p>
<h3 id="调用-3"><a href="#调用-3" class="headerlink" title="调用"></a>调用</h3><p><img src="/../TyporaImage/image-20240516214111055.png" alt="image-20240516214111055"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Global对象</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Global%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="Global"><a href="#Global" class="headerlink" title="Global"></a>Global</h1><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>1.全局对象</p>
<p>2.这个对象中的方法，不需要创建对象就可以直接调用。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240515211911466.png" alt="image-20240515211911466">## 特点</p>
<p>1.全局对象</p>
<p>2.这个对象中的方法，不需要创建对象就可以直接调用。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240515211911466.png" alt="image-20240515211911466">al</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p>1.全局对象</p>
<p>2.这个对象中的方法，不需要创建对象就可以直接调用。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240515211911466.png" alt="image-20240515211911466">## 特点</p>
<p>1.全局对象</p>
<p>2.这个对象中的方法，不需要创建对象就可以直接调用。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240515211911466.png" alt="image-20240515211911466"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Function对象</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Function%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="Function对象"><a href="#Function对象" class="headerlink" title="Function对象"></a>Function对象</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>length：</p>
<p>代表形参的个数</p>
<h3 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h3><p>1.方法的定义，形参的类型不用写，返回值类型也不用写</p>
<p>2.方法是一个对象，如果定义相同名称的方法，会发生覆盖</p>
<p>3.在JS中，方法的调用只与方法的名称有关，和参数列表无关</p>
<p>4.在方法声明中，有一个隐藏的内置对象（数组），arguments，封装了所有的实际参数。</p>
<h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240515210251915.png" alt="image-20240515210251915"></p>
<p>调用：</p>
<p>方法名称（实际参数列表）；## 是什么</p>
<h3 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h3><p>length：</p>
<p>代表形参的个数</p>
<h3 id="特点：-1"><a href="#特点：-1" class="headerlink" title="特点："></a>特点：</h3><p>1.方法的定义，形参的类型不用写，返回值类型也不用写</p>
<p>2.方法是一个对象，如果定义相同名称的方法，会发生覆盖</p>
<p>3.在JS中，方法的调用只与方法的名称有关，和参数列表无关</p>
<p>4.在方法声明中，有一个隐藏的内置对象（数组），arguments，封装了所有的实际参数。</p>
<h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240515210251915.png" alt="image-20240515210251915"></p>
<p>调用：</p>
<p>方法名称（实际参数列表）；对象</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h3><p>length：</p>
<p>代表形参的个数</p>
<h3 id="特点：-2"><a href="#特点：-2" class="headerlink" title="特点："></a>特点：</h3><p>1.方法的定义，形参的类型不用写，返回值类型也不用写</p>
<p>2.方法是一个对象，如果定义相同名称的方法，会发生覆盖</p>
<p>3.在JS中，方法的调用只与方法的名称有关，和参数列表无关</p>
<p>4.在方法声明中，有一个隐藏的内置对象（数组），arguments，封装了所有的实际参数。</p>
<h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240515210251915.png" alt="image-20240515210251915"></p>
<p>调用：</p>
<p>方法名称（实际参数列表）；## 是什么</p>
<h3 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h3><p>length：</p>
<p>代表形参的个数</p>
<h3 id="特点：-3"><a href="#特点：-3" class="headerlink" title="特点："></a>特点：</h3><p>1.方法的定义，形参的类型不用写，返回值类型也不用写</p>
<p>2.方法是一个对象，如果定义相同名称的方法，会发生覆盖</p>
<p>3.在JS中，方法的调用只与方法的名称有关，和参数列表无关</p>
<p>4.在方法声明中，有一个隐藏的内置对象（数组），arguments，封装了所有的实际参数。</p>
<h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240515210251915.png" alt="image-20240515210251915"></p>
<p>调用：</p>
<p>方法名称（实际参数列表）；</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Filter</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Filter/</url>
    <content><![CDATA[<h1 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>在Java Web应用程序中，过滤器（Filter）是一种组件，用于拦截和修改请求和响应，通常在Servlet之前或之后执行特定操作。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-Filter接口"><a href="#1-Filter接口" class="headerlink" title="1.Filter接口"></a>1.Filter接口</h3><p>定义过滤器的核心接口。</p>
<h3 id="2-过滤器类"><a href="#2-过滤器类" class="headerlink" title="2.过滤器类"></a>2.过滤器类</h3><p>实现Filter接口的具体类。</p>
<h3 id="3-过滤器配置"><a href="#3-过滤器配置" class="headerlink" title="3.过滤器配置"></a>3.过滤器配置</h3><p>Ⅰ、拦截路径配置</p>
<p>①直接用注解</p>
<p>②在web.xml文件中配置过滤器或使用注解进行配置。</p>
<p>Ⅱ、拦截方式</p>
<p>通过注解配置</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>在不改变Servlet代码的情况下，对请求和响应进行处理，以实现认证、日志记录、数据压缩等功能。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="物理描述"><a href="#物理描述" class="headerlink" title="物理描述"></a>物理描述</h3><p>1.请求到达服务器后，首先进入过滤器链的第一个过滤器。</p>
<p>2.过滤器1执行其逻辑，然后调用chain.doFilter(request, response)将请求传递给下一个过滤器。</p>
<p>3.请求依次经过所有过滤器，直到最后一个过滤器。</p>
<p>4.最后一个过滤器调用chain.doFilter(request, response)将请求传递给Servlet容器。</p>
<p>5.Servlet容器将请求路由到目标资源，目标资源生成响应。</p>
<p>6.响应依次返回通过所有过滤器，直到返回给客户端。</p>
<h3 id="数学描述"><a href="#数学描述" class="headerlink" title="数学描述"></a>数学描述</h3><p>无特定的数学描述，属于编程设计模式的一部分。</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>在Java Web应用程序中，过滤器（Filter）是一种组件，用于拦截和修改请求和响应，通常在Servlet之前或之后执行特定操作。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-Filter接口-1"><a href="#1-Filter接口-1" class="headerlink" title="1.Filter接口"></a>1.Filter接口</h3><p>定义过滤器的核心接口。</p>
<h3 id="2-过滤器类-1"><a href="#2-过滤器类-1" class="headerlink" title="2.过滤器类"></a>2.过滤器类</h3><p>实现Filter接口的具体类。</p>
<h3 id="3-过滤器配置-1"><a href="#3-过滤器配置-1" class="headerlink" title="3.过滤器配置"></a>3.过滤器配置</h3><p>Ⅰ、拦截路径配置</p>
<p>①直接用注解</p>
<p>②在web.xml文件中配置过滤器或使用注解进行配置。</p>
<p>Ⅱ、拦截方式</p>
<p>通过注解配置</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>在不改变Servlet代码的情况下，对请求和响应进行处理，以实现认证、日志记录、数据压缩等功能。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="物理描述-1"><a href="#物理描述-1" class="headerlink" title="物理描述"></a>物理描述</h3><p>1.请求到达服务器后，首先进入过滤器链的第一个过滤器。</p>
<p>2.过滤器1执行其逻辑，然后调用chain.doFilter(request, response)将请求传递给下一个过滤器。</p>
<p>3.请求依次经过所有过滤器，直到最后一个过滤器。</p>
<p>4.最后一个过滤器调用chain.doFilter(request, response)将请求传递给Servlet容器。</p>
<p>5.Servlet容器将请求路由到目标资源，目标资源生成响应。</p>
<p>6.响应依次返回通过所有过滤器，直到返回给客户端。</p>
<h3 id="数学描述-1"><a href="#数学描述-1" class="headerlink" title="数学描述"></a>数学描述</h3><p>无特定的数学描述，属于编程设计模式的一部分。er</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>在Java Web应用程序中，过滤器（Filter）是一种组件，用于拦截和修改请求和响应，通常在Servlet之前或之后执行特定操作。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-Filter接口-2"><a href="#1-Filter接口-2" class="headerlink" title="1.Filter接口"></a>1.Filter接口</h3><p>定义过滤器的核心接口。</p>
<h3 id="2-过滤器类-2"><a href="#2-过滤器类-2" class="headerlink" title="2.过滤器类"></a>2.过滤器类</h3><p>实现Filter接口的具体类。</p>
<h3 id="3-过滤器配置-2"><a href="#3-过滤器配置-2" class="headerlink" title="3.过滤器配置"></a>3.过滤器配置</h3><p>Ⅰ、拦截路径配置</p>
<p>①直接用注解</p>
<p>②在web.xml文件中配置过滤器或使用注解进行配置。</p>
<p>Ⅱ、拦截方式</p>
<p>通过注解配置</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>在不改变Servlet代码的情况下，对请求和响应进行处理，以实现认证、日志记录、数据压缩等功能。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="物理描述-2"><a href="#物理描述-2" class="headerlink" title="物理描述"></a>物理描述</h3><p>1.请求到达服务器后，首先进入过滤器链的第一个过滤器。</p>
<p>2.过滤器1执行其逻辑，然后调用chain.doFilter(request, response)将请求传递给下一个过滤器。</p>
<p>3.请求依次经过所有过滤器，直到最后一个过滤器。</p>
<p>4.最后一个过滤器调用chain.doFilter(request, response)将请求传递给Servlet容器。</p>
<p>5.Servlet容器将请求路由到目标资源，目标资源生成响应。</p>
<p>6.响应依次返回通过所有过滤器，直到返回给客户端。</p>
<h3 id="数学描述-2"><a href="#数学描述-2" class="headerlink" title="数学描述"></a>数学描述</h3><p>无特定的数学描述，属于编程设计模式的一部分。</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>在Java Web应用程序中，过滤器（Filter）是一种组件，用于拦截和修改请求和响应，通常在Servlet之前或之后执行特定操作。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-Filter接口-3"><a href="#1-Filter接口-3" class="headerlink" title="1.Filter接口"></a>1.Filter接口</h3><p>定义过滤器的核心接口。</p>
<h3 id="2-过滤器类-3"><a href="#2-过滤器类-3" class="headerlink" title="2.过滤器类"></a>2.过滤器类</h3><p>实现Filter接口的具体类。</p>
<h3 id="3-过滤器配置-3"><a href="#3-过滤器配置-3" class="headerlink" title="3.过滤器配置"></a>3.过滤器配置</h3><p>Ⅰ、拦截路径配置</p>
<p>①直接用注解</p>
<p>②在web.xml文件中配置过滤器或使用注解进行配置。</p>
<p>Ⅱ、拦截方式</p>
<p>通过注解配置</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>在不改变Servlet代码的情况下，对请求和响应进行处理，以实现认证、日志记录、数据压缩等功能。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="物理描述-3"><a href="#物理描述-3" class="headerlink" title="物理描述"></a>物理描述</h3><p>1.请求到达服务器后，首先进入过滤器链的第一个过滤器。</p>
<p>2.过滤器1执行其逻辑，然后调用chain.doFilter(request, response)将请求传递给下一个过滤器。</p>
<p>3.请求依次经过所有过滤器，直到最后一个过滤器。</p>
<p>4.最后一个过滤器调用chain.doFilter(request, response)将请求传递给Servlet容器。</p>
<p>5.Servlet容器将请求路由到目标资源，目标资源生成响应。</p>
<p>6.响应依次返回通过所有过滤器，直到返回给客户端。</p>
<h3 id="数学描述-3"><a href="#数学描述-3" class="headerlink" title="数学描述"></a>数学描述</h3><p>无特定的数学描述，属于编程设计模式的一部分。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>HTML</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/HTML/</url>
    <content><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>Hyper Text Markup Language，超文本标记语言。如，html，xml</p>
<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-围堵标签"><a href="#1-围堵标签" class="headerlink" title="1.围堵标签"></a>1.围堵标签</h4><p>有开始标签和结束标签。如，<html></html></p>
<h4 id="2-自闭合标签"><a href="#2-自闭合标签" class="headerlink" title="2.自闭合标签"></a>2.自闭合标签</h4><p>开始标签和结束标签一体化。如，<br/></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.在开始标签中可以定义属性，属性由键值对构成，值需要用<strong>引号</strong>（单双引号都可以）引起来。</p>
<p>2.标签可以嵌套</p>
<img src="../TyporaImage/image-20240509213447104.png" alt="image-20240509213447104" style="zoom:67%;" />

<p>3.html标签不区分大小写，建议使用<strong>小写</strong></p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>创建和展示网页内容</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="超文本"><a href="#超文本" class="headerlink" title="超文本"></a>超文本</h3><p>是用超链接的方法，将各种不同空间的文字信息组织在一起的网状文本。</p>
<h3 id="标记语言"><a href="#标记语言" class="headerlink" title="标记语言"></a>标记语言</h3><p>由标签构成的语言。标记语言不是编程语言。</p>
<h3 id="html文档后缀"><a href="#html文档后缀" class="headerlink" title="html文档后缀"></a>html文档后缀</h3><p>.html或者.htm</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>Hyper Text Markup Language，超文本标记语言。如，html，xml</p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-围堵标签-1"><a href="#1-围堵标签-1" class="headerlink" title="1.围堵标签"></a>1.围堵标签</h4><p>有开始标签和结束标签。如，<html></html></p>
<h4 id="2-自闭合标签-1"><a href="#2-自闭合标签-1" class="headerlink" title="2.自闭合标签"></a>2.自闭合标签</h4><p>开始标签和结束标签一体化。如，<br/></p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.在开始标签中可以定义属性，属性由键值对构成，值需要用<strong>引号</strong>（单双引号都可以）引起来。</p>
<p>2.标签可以嵌套</p>
<img src="../TyporaImage/image-20240509213447104.png" alt="image-20240509213447104" style="zoom:67%;" />

<p>3.html标签不区分大小写，建议使用<strong>小写</strong></p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>创建和展示网页内容</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="超文本-1"><a href="#超文本-1" class="headerlink" title="超文本"></a>超文本</h3><p>是用超链接的方法，将各种不同空间的文字信息组织在一起的网状文本。</p>
<h3 id="标记语言-1"><a href="#标记语言-1" class="headerlink" title="标记语言"></a>标记语言</h3><p>由标签构成的语言。标记语言不是编程语言。</p>
<h3 id="html文档后缀-1"><a href="#html文档后缀-1" class="headerlink" title="html文档后缀"></a>html文档后缀</h3><p>.html或者.htmML</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>Hyper Text Markup Language，超文本标记语言。如，html，xml</p>
<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-围堵标签-2"><a href="#1-围堵标签-2" class="headerlink" title="1.围堵标签"></a>1.围堵标签</h4><p>有开始标签和结束标签。如，<html></html></p>
<h4 id="2-自闭合标签-2"><a href="#2-自闭合标签-2" class="headerlink" title="2.自闭合标签"></a>2.自闭合标签</h4><p>开始标签和结束标签一体化。如，<br/></p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.在开始标签中可以定义属性，属性由键值对构成，值需要用<strong>引号</strong>（单双引号都可以）引起来。</p>
<p>2.标签可以嵌套</p>
<img src="../TyporaImage/image-20240509213447104.png" alt="image-20240509213447104" style="zoom:67%;" />

<p>3.html标签不区分大小写，建议使用<strong>小写</strong></p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>创建和展示网页内容</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="超文本-2"><a href="#超文本-2" class="headerlink" title="超文本"></a>超文本</h3><p>是用超链接的方法，将各种不同空间的文字信息组织在一起的网状文本。</p>
<h3 id="标记语言-2"><a href="#标记语言-2" class="headerlink" title="标记语言"></a>标记语言</h3><p>由标签构成的语言。标记语言不是编程语言。</p>
<h3 id="html文档后缀-2"><a href="#html文档后缀-2" class="headerlink" title="html文档后缀"></a>html文档后缀</h3><p>.html或者.htm</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>Hyper Text Markup Language，超文本标记语言。如，html，xml</p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-围堵标签-3"><a href="#1-围堵标签-3" class="headerlink" title="1.围堵标签"></a>1.围堵标签</h4><p>有开始标签和结束标签。如，<html></html></p>
<h4 id="2-自闭合标签-3"><a href="#2-自闭合标签-3" class="headerlink" title="2.自闭合标签"></a>2.自闭合标签</h4><p>开始标签和结束标签一体化。如，<br/></p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.在开始标签中可以定义属性，属性由键值对构成，值需要用<strong>引号</strong>（单双引号都可以）引起来。</p>
<p>2.标签可以嵌套</p>
<img src="../TyporaImage/image-20240509213447104.png" alt="image-20240509213447104" style="zoom:67%;" />

<p>3.html标签不区分大小写，建议使用<strong>小写</strong></p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>创建和展示网页内容</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="超文本-3"><a href="#超文本-3" class="headerlink" title="超文本"></a>超文本</h3><p>是用超链接的方法，将各种不同空间的文字信息组织在一起的网状文本。</p>
<h3 id="标记语言-3"><a href="#标记语言-3" class="headerlink" title="标记语言"></a>标记语言</h3><p>由标签构成的语言。标记语言不是编程语言。</p>
<h3 id="html文档后缀-3"><a href="#html文档后缀-3" class="headerlink" title="html文档后缀"></a>html文档后缀</h3><p>.html或者.htm</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>HTTP</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/HTTP/</url>
    <content><![CDATA[<h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>Hyper Text Transfer  Protocal，超文本传输协议</p>
<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><h3 id="内部组成部分"><a href="#内部组成部分" class="headerlink" title="内部组成部分"></a>内部组成部分</h3><h4 id="请求数据格式："><a href="#请求数据格式：" class="headerlink" title="请求数据格式："></a>请求数据格式：</h4><p>1.请求行</p>
<img src="../TyporaImage/image-20240530194526631.png" alt="image-20240530194526631" style="zoom:50%;" />

<p>2.请求头</p>
<p>格式：</p>
<p>请求头名称：请求头值</p>
<p><img src="/../TyporaImage/image-20240530195109768.png" alt="image-20240530195109768"></p>
<p>3.请求空行</p>
<p>就是一个空行，用来分割POST请求方式中请求头和请求体</p>
<p>4.请求体</p>
<h4 id="响应数据格式"><a href="#响应数据格式" class="headerlink" title="响应数据格式"></a>响应数据格式</h4><p>1.响应行</p>
<p>响应状态码：服务器告诉客户端浏览器本次请求和响应的一个状态。</p>
<p>①状态码都是三位</p>
<p> ②分类</p>
<p><img src="/./../TyporaImage/image-20240708144841548.png" alt="image-20240708144841548"></p>
<p>2.响应头</p>
<p>3.响应空行</p>
<p>4.响应体</p>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1.基于Tcp&#x2F;Ip协议的高级协议</p>
<p>2.默认端口号：80</p>
<p>3.基于请求&#x2F;响应模型的：一次请求，一次响应</p>
<p>4.无状态的：每次请求之间相互独立，不能交互数据</p>
<h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>Hyper Text Transfer  Protocal，超文本传输协议</p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><h3 id="内部组成部分-1"><a href="#内部组成部分-1" class="headerlink" title="内部组成部分"></a>内部组成部分</h3><h4 id="请求数据格式：-1"><a href="#请求数据格式：-1" class="headerlink" title="请求数据格式："></a>请求数据格式：</h4><p>1.请求行</p>
<img src="../TyporaImage/image-20240530194526631.png" alt="image-20240530194526631" style="zoom:50%;" />

<p>2.请求头</p>
<p>格式：</p>
<p>请求头名称：请求头值</p>
<p><img src="/../TyporaImage/image-20240530195109768.png" alt="image-20240530195109768"></p>
<p>3.请求空行</p>
<p>就是一个空行，用来分割POST请求方式中请求头和请求体</p>
<p>4.请求体</p>
<h4 id="响应数据格式-1"><a href="#响应数据格式-1" class="headerlink" title="响应数据格式"></a>响应数据格式</h4><p>1.响应行</p>
<p>响应状态码：服务器告诉客户端浏览器本次请求和响应的一个状态。</p>
<p>①状态码都是三位</p>
<p> ②分类</p>
<p><img src="/./../TyporaImage/image-20240708144841548.png" alt="image-20240708144841548"></p>
<p>2.响应头</p>
<p>3.响应空行</p>
<p>4.响应体</p>
<h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p>1.基于Tcp&#x2F;Ip协议的高级协议</p>
<p>2.默认端口号：80</p>
<p>3.基于请求&#x2F;响应模型的：一次请求，一次响应</p>
<p>4.无状态的：每次请求之间相互独立，不能交互数据TP</p>
<h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>Hyper Text Transfer  Protocal，超文本传输协议</p>
<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><h3 id="内部组成部分-2"><a href="#内部组成部分-2" class="headerlink" title="内部组成部分"></a>内部组成部分</h3><h4 id="请求数据格式：-2"><a href="#请求数据格式：-2" class="headerlink" title="请求数据格式："></a>请求数据格式：</h4><p>1.请求行</p>
<img src="../TyporaImage/image-20240530194526631.png" alt="image-20240530194526631" style="zoom:50%;" />

<p>2.请求头</p>
<p>格式：</p>
<p>请求头名称：请求头值</p>
<p><img src="/../TyporaImage/image-20240530195109768.png" alt="image-20240530195109768"></p>
<p>3.请求空行</p>
<p>就是一个空行，用来分割POST请求方式中请求头和请求体</p>
<p>4.请求体</p>
<h4 id="响应数据格式-2"><a href="#响应数据格式-2" class="headerlink" title="响应数据格式"></a>响应数据格式</h4><p>1.响应行</p>
<p>响应状态码：服务器告诉客户端浏览器本次请求和响应的一个状态。</p>
<p>①状态码都是三位</p>
<p> ②分类</p>
<p><img src="/./../TyporaImage/image-20240708144841548.png" alt="image-20240708144841548"></p>
<p>2.响应头</p>
<p>3.响应空行</p>
<p>4.响应体</p>
<h3 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h3><p>1.基于Tcp&#x2F;Ip协议的高级协议</p>
<p>2.默认端口号：80</p>
<p>3.基于请求&#x2F;响应模型的：一次请求，一次响应</p>
<p>4.无状态的：每次请求之间相互独立，不能交互数据</p>
<h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>Hyper Text Transfer  Protocal，超文本传输协议</p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><h3 id="内部组成部分-3"><a href="#内部组成部分-3" class="headerlink" title="内部组成部分"></a>内部组成部分</h3><h4 id="请求数据格式：-3"><a href="#请求数据格式：-3" class="headerlink" title="请求数据格式："></a>请求数据格式：</h4><p>1.请求行</p>
<img src="../TyporaImage/image-20240530194526631.png" alt="image-20240530194526631" style="zoom:50%;" />

<p>2.请求头</p>
<p>格式：</p>
<p>请求头名称：请求头值</p>
<p><img src="/../TyporaImage/image-20240530195109768.png" alt="image-20240530195109768"></p>
<p>3.请求空行</p>
<p>就是一个空行，用来分割POST请求方式中请求头和请求体</p>
<p>4.请求体</p>
<h4 id="响应数据格式-3"><a href="#响应数据格式-3" class="headerlink" title="响应数据格式"></a>响应数据格式</h4><p>1.响应行</p>
<p>响应状态码：服务器告诉客户端浏览器本次请求和响应的一个状态。</p>
<p>①状态码都是三位</p>
<p> ②分类</p>
<p><img src="/./../TyporaImage/image-20240708144841548.png" alt="image-20240708144841548"></p>
<p>2.响应头</p>
<p>3.响应空行</p>
<p>4.响应体</p>
<h3 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h3><p>1.基于Tcp&#x2F;Ip协议的高级协议</p>
<p>2.默认端口号：80</p>
<p>3.基于请求&#x2F;响应模型的：一次请求，一次响应</p>
<p>4.无状态的：每次请求之间相互独立，不能交互数据</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>History历史记录对象</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/History%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="History"><a href="#History" class="headerlink" title="History"></a>History</h1><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p>length</p>
<p>返回返回当前窗口浏览记录的URL数量。</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><h4 id="1-对象不需要创建，可以直接使用。"><a href="#1-对象不需要创建，可以直接使用。" class="headerlink" title="1.对象不需要创建，可以直接使用。"></a>1.对象不需要创建，可以直接使用。</h4><p>location.方法名（）；</p>
<h4 id="2-引用可以省略。"><a href="#2-引用可以省略。" class="headerlink" title="2.引用可以省略。"></a>2.引用可以省略。</h4><p>方法名（）；</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240516165204381.png" alt="image-20240516165204381"></p>
<h2 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h2><p>length</p>
<p>返回返回当前窗口浏览记录的URL数量。</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><h4 id="1-对象不需要创建，可以直接使用。-1"><a href="#1-对象不需要创建，可以直接使用。-1" class="headerlink" title="1.对象不需要创建，可以直接使用。"></a>1.对象不需要创建，可以直接使用。</h4><p>location.方法名（）；</p>
<h4 id="2-引用可以省略。-1"><a href="#2-引用可以省略。-1" class="headerlink" title="2.引用可以省略。"></a>2.引用可以省略。</h4><p>方法名（）；</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240516165204381.png" alt="image-20240516165204381">ry</p>
<h2 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h2><p>length</p>
<p>返回返回当前窗口浏览记录的URL数量。</p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><h4 id="1-对象不需要创建，可以直接使用。-2"><a href="#1-对象不需要创建，可以直接使用。-2" class="headerlink" title="1.对象不需要创建，可以直接使用。"></a>1.对象不需要创建，可以直接使用。</h4><p>location.方法名（）；</p>
<h4 id="2-引用可以省略。-2"><a href="#2-引用可以省略。-2" class="headerlink" title="2.引用可以省略。"></a>2.引用可以省略。</h4><p>方法名（）；</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240516165204381.png" alt="image-20240516165204381"></p>
<h2 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h2><p>length</p>
<p>返回返回当前窗口浏览记录的URL数量。</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><h4 id="1-对象不需要创建，可以直接使用。-3"><a href="#1-对象不需要创建，可以直接使用。-3" class="headerlink" title="1.对象不需要创建，可以直接使用。"></a>1.对象不需要创建，可以直接使用。</h4><p>location.方法名（）；</p>
<h4 id="2-引用可以省略。-3"><a href="#2-引用可以省略。-3" class="headerlink" title="2.引用可以省略。"></a>2.引用可以省略。</h4><p>方法名（）；</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240516165204381.png" alt="image-20240516165204381"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JDBCTemplate</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JDBCTemplate/</url>
    <content><![CDATA[<h1 id="JDBCTemplate"><a href="#JDBCTemplate" class="headerlink" title="JDBCTemplate"></a>JDBCTemplate</h1><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-导入jar包"><a href="#1-导入jar包" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h4><h4 id="2-创建JDBCTemplate对象，依赖于数据源DataSource对象。"><a href="#2-创建JDBCTemplate对象，依赖于数据源DataSource对象。" class="headerlink" title="2.创建JDBCTemplate对象，依赖于数据源DataSource对象。"></a>2.创建JDBCTemplate对象，依赖于数据源DataSource对象。</h4><h4 id="3-调用JDBCTemplate对象的方法，来完成CRUD操作。"><a href="#3-调用JDBCTemplate对象的方法，来完成CRUD操作。" class="headerlink" title="3.调用JDBCTemplate对象的方法，来完成CRUD操作。"></a>3.调用JDBCTemplate对象的方法，来完成CRUD操作。</h4><p><img src="/../TyporaImage/image-20240508203234561.png" alt="image-20240508203234561"></p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>简化JDBC的开发。</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-导入jar包-1"><a href="#1-导入jar包-1" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h4><h4 id="2-创建JDBCTemplate对象，依赖于数据源DataSource对象。-1"><a href="#2-创建JDBCTemplate对象，依赖于数据源DataSource对象。-1" class="headerlink" title="2.创建JDBCTemplate对象，依赖于数据源DataSource对象。"></a>2.创建JDBCTemplate对象，依赖于数据源DataSource对象。</h4><h4 id="3-调用JDBCTemplate对象的方法，来完成CRUD操作。-1"><a href="#3-调用JDBCTemplate对象的方法，来完成CRUD操作。-1" class="headerlink" title="3.调用JDBCTemplate对象的方法，来完成CRUD操作。"></a>3.调用JDBCTemplate对象的方法，来完成CRUD操作。</h4><p><img src="/../TyporaImage/image-20240508203234561.png" alt="image-20240508203234561"></p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>简化JDBC的开发。te</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-导入jar包-2"><a href="#1-导入jar包-2" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h4><h4 id="2-创建JDBCTemplate对象，依赖于数据源DataSource对象。-2"><a href="#2-创建JDBCTemplate对象，依赖于数据源DataSource对象。-2" class="headerlink" title="2.创建JDBCTemplate对象，依赖于数据源DataSource对象。"></a>2.创建JDBCTemplate对象，依赖于数据源DataSource对象。</h4><h4 id="3-调用JDBCTemplate对象的方法，来完成CRUD操作。-2"><a href="#3-调用JDBCTemplate对象的方法，来完成CRUD操作。-2" class="headerlink" title="3.调用JDBCTemplate对象的方法，来完成CRUD操作。"></a>3.调用JDBCTemplate对象的方法，来完成CRUD操作。</h4><p><img src="/../TyporaImage/image-20240508203234561.png" alt="image-20240508203234561"></p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>简化JDBC的开发。</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-导入jar包-3"><a href="#1-导入jar包-3" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h4><h4 id="2-创建JDBCTemplate对象，依赖于数据源DataSource对象。-3"><a href="#2-创建JDBCTemplate对象，依赖于数据源DataSource对象。-3" class="headerlink" title="2.创建JDBCTemplate对象，依赖于数据源DataSource对象。"></a>2.创建JDBCTemplate对象，依赖于数据源DataSource对象。</h4><h4 id="3-调用JDBCTemplate对象的方法，来完成CRUD操作。-3"><a href="#3-调用JDBCTemplate对象的方法，来完成CRUD操作。-3" class="headerlink" title="3.调用JDBCTemplate对象的方法，来完成CRUD操作。"></a>3.调用JDBCTemplate对象的方法，来完成CRUD操作。</h4><p><img src="/../TyporaImage/image-20240508203234561.png" alt="image-20240508203234561"></p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>简化JDBC的开发。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JDBC</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JDBC/</url>
    <content><![CDATA[<h1 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>全名是Java DataBase Connectivity  数据库连接，JAVA语言操作数据库。本质是官方（sun公司）定义的一套操作所有关系型数据库的规则，即接口。   </p>
<h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>1.导入驱动jar包</p>
<p>2.注册驱动</p>
<p>3.获取数据库连接对象connection</p>
<p>4.定义sql语句</p>
<p>5.获取执行sql语句的对象   Statment</p>
<p>6.执行sql，接受返回结果</p>
<p>7.处理结果</p>
<p>8.释放资源</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>用统一的一套java代码可以操作所有的关系型数据库。</p>
<h2 id="相关的知识点"><a href="#相关的知识点" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><h3 id="使用中会用到的各个对象"><a href="#使用中会用到的各个对象" class="headerlink" title="使用中会用到的各个对象"></a>使用中会用到的各个对象</h3><p>1.DriverManager：驱动管理对象</p>
<p>2.Connection：数据库连接对象</p>
<p>3.Statement：执行sql对象</p>
<p>4.ResultSet：结果集对象</p>
<p>5.PrepareStatement：执行sql对象，但是比Statement对象更加强大。## 是什么</p>
<h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>全名是Java DataBase Connectivity  数据库连接，JAVA语言操作数据库。本质是官方（sun公司）定义的一套操作所有关系型数据库的规则，即接口。   </p>
<h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h3><p>1.导入驱动jar包</p>
<p>2.注册驱动</p>
<p>3.获取数据库连接对象connection</p>
<p>4.定义sql语句</p>
<p>5.获取执行sql语句的对象   Statment</p>
<p>6.执行sql，接受返回结果</p>
<p>7.处理结果</p>
<p>8.释放资源</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>用统一的一套java代码可以操作所有的关系型数据库。</p>
<h2 id="相关的知识点-1"><a href="#相关的知识点-1" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><h3 id="使用中会用到的各个对象-1"><a href="#使用中会用到的各个对象-1" class="headerlink" title="使用中会用到的各个对象"></a>使用中会用到的各个对象</h3><p>1.DriverManager：驱动管理对象</p>
<p>2.Connection：数据库连接对象</p>
<p>3.Statement：执行sql对象</p>
<p>4.ResultSet：结果集对象</p>
<p>5.PrepareStatement：执行sql对象，但是比Statement对象更加强大。BC</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>全名是Java DataBase Connectivity  数据库连接，JAVA语言操作数据库。本质是官方（sun公司）定义的一套操作所有关系型数据库的规则，即接口。   </p>
<h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤"></a>步骤</h3><p>1.导入驱动jar包</p>
<p>2.注册驱动</p>
<p>3.获取数据库连接对象connection</p>
<p>4.定义sql语句</p>
<p>5.获取执行sql语句的对象   Statment</p>
<p>6.执行sql，接受返回结果</p>
<p>7.处理结果</p>
<p>8.释放资源</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>用统一的一套java代码可以操作所有的关系型数据库。</p>
<h2 id="相关的知识点-2"><a href="#相关的知识点-2" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><h3 id="使用中会用到的各个对象-2"><a href="#使用中会用到的各个对象-2" class="headerlink" title="使用中会用到的各个对象"></a>使用中会用到的各个对象</h3><p>1.DriverManager：驱动管理对象</p>
<p>2.Connection：数据库连接对象</p>
<p>3.Statement：执行sql对象</p>
<p>4.ResultSet：结果集对象</p>
<p>5.PrepareStatement：执行sql对象，但是比Statement对象更加强大。## 是什么</p>
<h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>全名是Java DataBase Connectivity  数据库连接，JAVA语言操作数据库。本质是官方（sun公司）定义的一套操作所有关系型数据库的规则，即接口。   </p>
<h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="步骤-3"><a href="#步骤-3" class="headerlink" title="步骤"></a>步骤</h3><p>1.导入驱动jar包</p>
<p>2.注册驱动</p>
<p>3.获取数据库连接对象connection</p>
<p>4.定义sql语句</p>
<p>5.获取执行sql语句的对象   Statment</p>
<p>6.执行sql，接受返回结果</p>
<p>7.处理结果</p>
<p>8.释放资源</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>用统一的一套java代码可以操作所有的关系型数据库。</p>
<h2 id="相关的知识点-3"><a href="#相关的知识点-3" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><h3 id="使用中会用到的各个对象-3"><a href="#使用中会用到的各个对象-3" class="headerlink" title="使用中会用到的各个对象"></a>使用中会用到的各个对象</h3><p>1.DriverManager：驱动管理对象</p>
<p>2.Connection：数据库连接对象</p>
<p>3.Statement：执行sql对象</p>
<p>4.ResultSet：结果集对象</p>
<p>5.PrepareStatement：执行sql对象，但是比Statement对象更加强大。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JDBC对象--Connection</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JDBC%E5%AF%B9%E8%B1%A1--Connection/</url>
    <content><![CDATA[<h1 id="Connection（数据库连接对象）"><a href="#Connection（数据库连接对象）" class="headerlink" title="Connection（数据库连接对象）"></a>Connection（数据库连接对象）</h1><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用及应用场景"><a href="#作用及应用场景" class="headerlink" title="作用及应用场景"></a>作用及应用场景</h3><h4 id="1-执行sql的对象"><a href="#1-执行sql的对象" class="headerlink" title="1.执行sql的对象"></a>1.执行sql的对象</h4><p>Statement    createStatement（）</p>
<p>PrepareStatement prepareStatement（String url）</p>
<h4 id="2-管理事务"><a href="#2-管理事务" class="headerlink" title="2.管理事务"></a>2.管理事务</h4><p>开启事务</p>
<p>void	setAutoCommit（boolean autoCommit）：设置参数为false，即开启事务。</p>
<p>提交事务</p>
<p>commit（）</p>
<p>回滚事务</p>
<p>rollback（）</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用及应用场景-1"><a href="#作用及应用场景-1" class="headerlink" title="作用及应用场景"></a>作用及应用场景</h3><h4 id="1-执行sql的对象-1"><a href="#1-执行sql的对象-1" class="headerlink" title="1.执行sql的对象"></a>1.执行sql的对象</h4><p>Statement    createStatement（）</p>
<p>PrepareStatement prepareStatement（String url）</p>
<h4 id="2-管理事务-1"><a href="#2-管理事务-1" class="headerlink" title="2.管理事务"></a>2.管理事务</h4><p>开启事务</p>
<p>void	setAutoCommit（boolean autoCommit）：设置参数为false，即开启事务。</p>
<p>提交事务</p>
<p>commit（）</p>
<p>回滚事务</p>
<p>rollback（）</p>
<h2 id="为什么象）"><a href="#为什么象）" class="headerlink" title="为什么象）"></a>为什么象）</h2><h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用及应用场景-2"><a href="#作用及应用场景-2" class="headerlink" title="作用及应用场景"></a>作用及应用场景</h3><h4 id="1-执行sql的对象-2"><a href="#1-执行sql的对象-2" class="headerlink" title="1.执行sql的对象"></a>1.执行sql的对象</h4><p>Statement    createStatement（）</p>
<p>PrepareStatement prepareStatement（String url）</p>
<h4 id="2-管理事务-2"><a href="#2-管理事务-2" class="headerlink" title="2.管理事务"></a>2.管理事务</h4><p>开启事务</p>
<p>void	setAutoCommit（boolean autoCommit）：设置参数为false，即开启事务。</p>
<p>提交事务</p>
<p>commit（）</p>
<p>回滚事务</p>
<p>rollback（）</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用及应用场景-3"><a href="#作用及应用场景-3" class="headerlink" title="作用及应用场景"></a>作用及应用场景</h3><h4 id="1-执行sql的对象-3"><a href="#1-执行sql的对象-3" class="headerlink" title="1.执行sql的对象"></a>1.执行sql的对象</h4><p>Statement    createStatement（）</p>
<p>PrepareStatement prepareStatement（String url）</p>
<h4 id="2-管理事务-3"><a href="#2-管理事务-3" class="headerlink" title="2.管理事务"></a>2.管理事务</h4><p>开启事务</p>
<p>void	setAutoCommit（boolean autoCommit）：设置参数为false，即开启事务。</p>
<p>提交事务</p>
<p>commit（）</p>
<p>回滚事务</p>
<p>rollback（）</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JDBC对象--Statement</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JDBC%E5%AF%B9%E8%B1%A1--Statement/</url>
    <content><![CDATA[<h1 id="Statement（执行sql-的对象）"><a href="#Statement（执行sql-的对象）" class="headerlink" title="Statement（执行sql 的对象）"></a>Statement（执行sql 的对象）</h1><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="执行sql语句"><a href="#执行sql语句" class="headerlink" title="执行sql语句"></a>执行sql语句</h3><h4 id="1-执行任意的sql语句"><a href="#1-执行任意的sql语句" class="headerlink" title="1.执行任意的sql语句"></a>1.执行任意的sql语句</h4><p>boolean execute（String url）</p>
<h4 id="2-执行DDL、DML语句"><a href="#2-执行DDL、DML语句" class="headerlink" title="2.执行DDL、DML语句"></a>2.执行DDL、DML语句</h4><p>int  executeUpdate（String url）</p>
<p>返回值：影响的行数，可以通过这个判断DML语句是否执行成功，如果&gt;0，则执行成功。如果是DDL则不会返回任何东西，因此默认返回0.</p>
<h4 id="3-执行DQL语句"><a href="#3-执行DQL语句" class="headerlink" title="3.执行DQL语句"></a>3.执行DQL语句</h4><p>ResultSet executeQuery（String url）</p>
<h2 id="为什么-怎么做"><a href="#为什么-怎么做" class="headerlink" title="为什么## 怎么做"></a>为什么## 怎么做</h2><h3 id="执行sql语句-1"><a href="#执行sql语句-1" class="headerlink" title="执行sql语句"></a>执行sql语句</h3><h4 id="1-执行任意的sql语句-1"><a href="#1-执行任意的sql语句-1" class="headerlink" title="1.执行任意的sql语句"></a>1.执行任意的sql语句</h4><p>boolean execute（String url）</p>
<h4 id="2-执行DDL、DML语句-1"><a href="#2-执行DDL、DML语句-1" class="headerlink" title="2.执行DDL、DML语句"></a>2.执行DDL、DML语句</h4><p>int  executeUpdate（String url）</p>
<p>返回值：影响的行数，可以通过这个判断DML语句是否执行成功，如果&gt;0，则执行成功。如果是DDL则不会返回任何东西，因此默认返回0.</p>
<h4 id="3-执行DQL语句-1"><a href="#3-执行DQL语句-1" class="headerlink" title="3.执行DQL语句"></a>3.执行DQL语句</h4><p>ResultSet executeQuery（String url）</p>
<h2 id="为什么象）"><a href="#为什么象）" class="headerlink" title="为什么象）"></a>为什么象）</h2><h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="执行sql语句-2"><a href="#执行sql语句-2" class="headerlink" title="执行sql语句"></a>执行sql语句</h3><h4 id="1-执行任意的sql语句-2"><a href="#1-执行任意的sql语句-2" class="headerlink" title="1.执行任意的sql语句"></a>1.执行任意的sql语句</h4><p>boolean execute（String url）</p>
<h4 id="2-执行DDL、DML语句-2"><a href="#2-执行DDL、DML语句-2" class="headerlink" title="2.执行DDL、DML语句"></a>2.执行DDL、DML语句</h4><p>int  executeUpdate（String url）</p>
<p>返回值：影响的行数，可以通过这个判断DML语句是否执行成功，如果&gt;0，则执行成功。如果是DDL则不会返回任何东西，因此默认返回0.</p>
<h4 id="3-执行DQL语句-2"><a href="#3-执行DQL语句-2" class="headerlink" title="3.执行DQL语句"></a>3.执行DQL语句</h4><p>ResultSet executeQuery（String url）</p>
<h2 id="为什么-怎么做-1"><a href="#为什么-怎么做-1" class="headerlink" title="为什么## 怎么做"></a>为什么## 怎么做</h2><h3 id="执行sql语句-3"><a href="#执行sql语句-3" class="headerlink" title="执行sql语句"></a>执行sql语句</h3><h4 id="1-执行任意的sql语句-3"><a href="#1-执行任意的sql语句-3" class="headerlink" title="1.执行任意的sql语句"></a>1.执行任意的sql语句</h4><p>boolean execute（String url）</p>
<h4 id="2-执行DDL、DML语句-3"><a href="#2-执行DDL、DML语句-3" class="headerlink" title="2.执行DDL、DML语句"></a>2.执行DDL、DML语句</h4><p>int  executeUpdate（String url）</p>
<p>返回值：影响的行数，可以通过这个判断DML语句是否执行成功，如果&gt;0，则执行成功。如果是DDL则不会返回任何东西，因此默认返回0.</p>
<h4 id="3-执行DQL语句-3"><a href="#3-执行DQL语句-3" class="headerlink" title="3.执行DQL语句"></a>3.执行DQL语句</h4><p>ResultSet executeQuery（String url）</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JDBC工具类</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JDBC%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<h1 id="JDBC工具类"><a href="#JDBC工具类" class="headerlink" title="JDBC工具类"></a>JDBC工具类</h1><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="1-将注册驱动的相关代码抽取成一个方法。-–因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块"><a href="#1-将注册驱动的相关代码抽取成一个方法。-–因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块" class="headerlink" title="1.将注册驱动的相关代码抽取成一个方法。 –因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块"></a>1.将注册驱动的相关代码抽取成一个方法。 –因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块</h3><p><img src="/../TyporaImage/image-20240501165055692.png"></p>
<p><img src="/../TyporaImage/image-20240501165118873.png" alt="image-20240501165118873"></p>
<h3 id="2-将连接对象的相关代码抽取成一个方法-–-可以通过properties文件进行连接对象更改。"><a href="#2-将连接对象的相关代码抽取成一个方法-–-可以通过properties文件进行连接对象更改。" class="headerlink" title="2.将连接对象的相关代码抽取成一个方法     – 可以通过properties文件进行连接对象更改。"></a>2.将连接对象的相关代码抽取成一个方法     – 可以通过properties文件进行连接对象更改。</h3><p>properties文件：</p>
<p>url &#x3D; ？</p>
<p>user&#x3D; ？</p>
<p>password &#x3D;？ </p>
<p>Driver&#x3D;？</p>
<h3 id="3-将释放资源的相关代码抽取成一个方法"><a href="#3-将释放资源的相关代码抽取成一个方法" class="headerlink" title="3.将释放资源的相关代码抽取成一个方法"></a>3.将释放资源的相关代码抽取成一个方法</h3><h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>简化书写。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>获取src路径下文件方法：</p>
<p>通过ClassLoader类加载器获取properties文件的<strong>相对路径</strong>。</p>
<p><img src="/../TyporaImage/image-20240501171050011.png" alt="image-20240501171050011"></p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="1-将注册驱动的相关代码抽取成一个方法。-–因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块-1"><a href="#1-将注册驱动的相关代码抽取成一个方法。-–因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块-1" class="headerlink" title="1.将注册驱动的相关代码抽取成一个方法。 –因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块"></a>1.将注册驱动的相关代码抽取成一个方法。 –因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块</h3><p><img src="/../TyporaImage/image-20240501165055692.png"></p>
<p><img src="/../TyporaImage/image-20240501165118873.png" alt="image-20240501165118873"></p>
<h3 id="2-将连接对象的相关代码抽取成一个方法-–-可以通过properties文件进行连接对象更改。-1"><a href="#2-将连接对象的相关代码抽取成一个方法-–-可以通过properties文件进行连接对象更改。-1" class="headerlink" title="2.将连接对象的相关代码抽取成一个方法     – 可以通过properties文件进行连接对象更改。"></a>2.将连接对象的相关代码抽取成一个方法     – 可以通过properties文件进行连接对象更改。</h3><p>properties文件：</p>
<p>url &#x3D; ？</p>
<p>user&#x3D; ？</p>
<p>password &#x3D;？ </p>
<p>Driver&#x3D;？</p>
<h3 id="3-将释放资源的相关代码抽取成一个方法-1"><a href="#3-将释放资源的相关代码抽取成一个方法-1" class="headerlink" title="3.将释放资源的相关代码抽取成一个方法"></a>3.将释放资源的相关代码抽取成一个方法</h3><h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>简化书写。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>获取src路径下文件方法：</p>
<p>通过ClassLoader类加载器获取properties文件的<strong>相对路径</strong>。</p>
<p><img src="/../TyporaImage/image-20240501171050011.png" alt="image-20240501171050011">具类</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="1-将注册驱动的相关代码抽取成一个方法。-–因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块-2"><a href="#1-将注册驱动的相关代码抽取成一个方法。-–因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块-2" class="headerlink" title="1.将注册驱动的相关代码抽取成一个方法。 –因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块"></a>1.将注册驱动的相关代码抽取成一个方法。 –因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块</h3><p><img src="/../TyporaImage/image-20240501165055692.png"></p>
<p><img src="/../TyporaImage/image-20240501165118873.png" alt="image-20240501165118873"></p>
<h3 id="2-将连接对象的相关代码抽取成一个方法-–-可以通过properties文件进行连接对象更改。-2"><a href="#2-将连接对象的相关代码抽取成一个方法-–-可以通过properties文件进行连接对象更改。-2" class="headerlink" title="2.将连接对象的相关代码抽取成一个方法     – 可以通过properties文件进行连接对象更改。"></a>2.将连接对象的相关代码抽取成一个方法     – 可以通过properties文件进行连接对象更改。</h3><p>properties文件：</p>
<p>url &#x3D; ？</p>
<p>user&#x3D; ？</p>
<p>password &#x3D;？ </p>
<p>Driver&#x3D;？</p>
<h3 id="3-将释放资源的相关代码抽取成一个方法-2"><a href="#3-将释放资源的相关代码抽取成一个方法-2" class="headerlink" title="3.将释放资源的相关代码抽取成一个方法"></a>3.将释放资源的相关代码抽取成一个方法</h3><h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>简化书写。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>获取src路径下文件方法：</p>
<p>通过ClassLoader类加载器获取properties文件的<strong>相对路径</strong>。</p>
<p><img src="/../TyporaImage/image-20240501171050011.png" alt="image-20240501171050011"></p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="1-将注册驱动的相关代码抽取成一个方法。-–因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块-3"><a href="#1-将注册驱动的相关代码抽取成一个方法。-–因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块-3" class="headerlink" title="1.将注册驱动的相关代码抽取成一个方法。 –因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块"></a>1.将注册驱动的相关代码抽取成一个方法。 –因为是只用注册一次以及相关文件的读取只需要一次，所以用静态代码块</h3><p><img src="/../TyporaImage/image-20240501165055692.png"></p>
<p><img src="/../TyporaImage/image-20240501165118873.png" alt="image-20240501165118873"></p>
<h3 id="2-将连接对象的相关代码抽取成一个方法-–-可以通过properties文件进行连接对象更改。-3"><a href="#2-将连接对象的相关代码抽取成一个方法-–-可以通过properties文件进行连接对象更改。-3" class="headerlink" title="2.将连接对象的相关代码抽取成一个方法     – 可以通过properties文件进行连接对象更改。"></a>2.将连接对象的相关代码抽取成一个方法     – 可以通过properties文件进行连接对象更改。</h3><p>properties文件：</p>
<p>url &#x3D; ？</p>
<p>user&#x3D; ？</p>
<p>password &#x3D;？ </p>
<p>Driver&#x3D;？</p>
<h3 id="3-将释放资源的相关代码抽取成一个方法-3"><a href="#3-将释放资源的相关代码抽取成一个方法-3" class="headerlink" title="3.将释放资源的相关代码抽取成一个方法"></a>3.将释放资源的相关代码抽取成一个方法</h3><h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>简化书写。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>获取src路径下文件方法：</p>
<p>通过ClassLoader类加载器获取properties文件的<strong>相对路径</strong>。</p>
<p><img src="/../TyporaImage/image-20240501171050011.png" alt="image-20240501171050011"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JDBC对象--DriverManager</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JDBC%E5%AF%B9%E8%B1%A1--DriverManager/</url>
    <content><![CDATA[<h1 id="DriverManager（驱动管理对象）"><a href="#DriverManager（驱动管理对象）" class="headerlink" title="DriverManager（驱动管理对象）"></a>DriverManager（驱动管理对象）</h1><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用与应用场景"><a href="#作用与应用场景" class="headerlink" title="作用与应用场景"></a>作用与应用场景</h3><h4 id="1-注册驱动"><a href="#1-注册驱动" class="headerlink" title="1.注册驱动"></a>1.注册驱动</h4><p>写代码：  Class.forName(“com.mysql.jdbc.Driver”);</p>
<p>即使不写代码，软件也会通过相关文件进行自动注册。</p>
<h4 id="2-获取数据库连接"><a href="#2-获取数据库连接" class="headerlink" title="2.获取数据库连接"></a>2.获取数据库连接</h4><p>static Connection getConnection（String  url，String user，String password）</p>
<p>url：指定连接的路径。    </p>
<p>语法：jdbc：mysql：&#x2F;&#x2F;ip地址（域名）：端口号&#x2F;数据库名称</p>
<p>PS：如果连接的是本机mysql服务器，并且端口号是3306，则url可以简写成jdbc：mysql：&#x2F;&#x2F;&#x2F;数据库名称</p>
<p>user：用户名</p>
<p>password ：密码</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="注册驱动的目的"><a href="#注册驱动的目的" class="headerlink" title="注册驱动的目的"></a>注册驱动的目的</h3><p> 告诉程序应该使用哪一个数据库驱动包。</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用与应用场景-1"><a href="#作用与应用场景-1" class="headerlink" title="作用与应用场景"></a>作用与应用场景</h3><h4 id="1-注册驱动-1"><a href="#1-注册驱动-1" class="headerlink" title="1.注册驱动"></a>1.注册驱动</h4><p>写代码：  Class.forName(“com.mysql.jdbc.Driver”);</p>
<p>即使不写代码，软件也会通过相关文件进行自动注册。</p>
<h4 id="2-获取数据库连接-1"><a href="#2-获取数据库连接-1" class="headerlink" title="2.获取数据库连接"></a>2.获取数据库连接</h4><p>static Connection getConnection（String  url，String user，String password）</p>
<p>url：指定连接的路径。    </p>
<p>语法：jdbc：mysql：&#x2F;&#x2F;ip地址（域名）：端口号&#x2F;数据库名称</p>
<p>PS：如果连接的是本机mysql服务器，并且端口号是3306，则url可以简写成jdbc：mysql：&#x2F;&#x2F;&#x2F;数据库名称</p>
<p>user：用户名</p>
<p>password ：密码</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="注册驱动的目的-1"><a href="#注册驱动的目的-1" class="headerlink" title="注册驱动的目的"></a>注册驱动的目的</h3><p> 告诉程序应该使用哪一个数据库驱动包。象）</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用与应用场景-2"><a href="#作用与应用场景-2" class="headerlink" title="作用与应用场景"></a>作用与应用场景</h3><h4 id="1-注册驱动-2"><a href="#1-注册驱动-2" class="headerlink" title="1.注册驱动"></a>1.注册驱动</h4><p>写代码：  Class.forName(“com.mysql.jdbc.Driver”);</p>
<p>即使不写代码，软件也会通过相关文件进行自动注册。</p>
<h4 id="2-获取数据库连接-2"><a href="#2-获取数据库连接-2" class="headerlink" title="2.获取数据库连接"></a>2.获取数据库连接</h4><p>static Connection getConnection（String  url，String user，String password）</p>
<p>url：指定连接的路径。    </p>
<p>语法：jdbc：mysql：&#x2F;&#x2F;ip地址（域名）：端口号&#x2F;数据库名称</p>
<p>PS：如果连接的是本机mysql服务器，并且端口号是3306，则url可以简写成jdbc：mysql：&#x2F;&#x2F;&#x2F;数据库名称</p>
<p>user：用户名</p>
<p>password ：密码</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="注册驱动的目的-2"><a href="#注册驱动的目的-2" class="headerlink" title="注册驱动的目的"></a>注册驱动的目的</h3><p> 告诉程序应该使用哪一个数据库驱动包。</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用与应用场景-3"><a href="#作用与应用场景-3" class="headerlink" title="作用与应用场景"></a>作用与应用场景</h3><h4 id="1-注册驱动-3"><a href="#1-注册驱动-3" class="headerlink" title="1.注册驱动"></a>1.注册驱动</h4><p>写代码：  Class.forName(“com.mysql.jdbc.Driver”);</p>
<p>即使不写代码，软件也会通过相关文件进行自动注册。</p>
<h4 id="2-获取数据库连接-3"><a href="#2-获取数据库连接-3" class="headerlink" title="2.获取数据库连接"></a>2.获取数据库连接</h4><p>static Connection getConnection（String  url，String user，String password）</p>
<p>url：指定连接的路径。    </p>
<p>语法：jdbc：mysql：&#x2F;&#x2F;ip地址（域名）：端口号&#x2F;数据库名称</p>
<p>PS：如果连接的是本机mysql服务器，并且端口号是3306，则url可以简写成jdbc：mysql：&#x2F;&#x2F;&#x2F;数据库名称</p>
<p>user：用户名</p>
<p>password ：密码</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="注册驱动的目的-3"><a href="#注册驱动的目的-3" class="headerlink" title="注册驱动的目的"></a>注册驱动的目的</h3><p> 告诉程序应该使用哪一个数据库驱动包。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JDBC对象--PreparedStatement</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JDBC%E5%AF%B9%E8%B1%A1--PreparedStatement/</url>
    <content><![CDATA[<h1 id="PreparedSStatement：执行sql的对象"><a href="#PreparedSStatement：执行sql的对象" class="headerlink" title="PreparedSStatement：执行sql的对象"></a>PreparedSStatement：执行sql的对象</h1><h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>1.导入驱动jar包</p>
<p>2.注册驱动</p>
<p>3.获取数据库连接对象connection</p>
<p>4.定义sql语句</p>
<p>PS：sql语句使用？作为占位符。</p>
<p>5.获取执行sql语句的对象PreparedStatment</p>
<p>6.给PrepareStatement对象中的？占位符赋值</p>
<p>​     方法：setxxx（参数1，参数2）</p>
<p>第一个参数：？的位置，从1开始</p>
<p>第二个参数：？的值</p>
<p>7.不需要传递sql语句，执行sql，接受返回结果</p>
<p>8.处理结果</p>
<p>9.释放资源</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>解决sql注入问题。在拼接sql时，有一些sql的特殊关键字参与字符串的拼接，会造成安全性问题。</p>
<h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>效率比Statement更高</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>预编译的sql：参数使用？作为占位符</p>
<h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h3><p>1.导入驱动jar包</p>
<p>2.注册驱动</p>
<p>3.获取数据库连接对象connection</p>
<p>4.定义sql语句</p>
<p>PS：sql语句使用？作为占位符。</p>
<p>5.获取执行sql语句的对象PreparedStatment</p>
<p>6.给PrepareStatement对象中的？占位符赋值</p>
<p>​     方法：setxxx（参数1，参数2）</p>
<p>第一个参数：？的位置，从1开始</p>
<p>第二个参数：？的值</p>
<p>7.不需要传递sql语句，执行sql，接受返回结果</p>
<p>8.处理结果</p>
<p>9.释放资源</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>解决sql注入问题。在拼接sql时，有一些sql的特殊关键字参与字符串的拼接，会造成安全性问题。</p>
<h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><p>效率比Statement更高</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>预编译的sql：参数使用？作为占位符对象</p>
<h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤"></a>步骤</h3><p>1.导入驱动jar包</p>
<p>2.注册驱动</p>
<p>3.获取数据库连接对象connection</p>
<p>4.定义sql语句</p>
<p>PS：sql语句使用？作为占位符。</p>
<p>5.获取执行sql语句的对象PreparedStatment</p>
<p>6.给PrepareStatement对象中的？占位符赋值</p>
<p>​     方法：setxxx（参数1，参数2）</p>
<p>第一个参数：？的位置，从1开始</p>
<p>第二个参数：？的值</p>
<p>7.不需要传递sql语句，执行sql，接受返回结果</p>
<p>8.处理结果</p>
<p>9.释放资源</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>解决sql注入问题。在拼接sql时，有一些sql的特殊关键字参与字符串的拼接，会造成安全性问题。</p>
<h3 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h3><p>效率比Statement更高</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>预编译的sql：参数使用？作为占位符</p>
<h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="步骤-3"><a href="#步骤-3" class="headerlink" title="步骤"></a>步骤</h3><p>1.导入驱动jar包</p>
<p>2.注册驱动</p>
<p>3.获取数据库连接对象connection</p>
<p>4.定义sql语句</p>
<p>PS：sql语句使用？作为占位符。</p>
<p>5.获取执行sql语句的对象PreparedStatment</p>
<p>6.给PrepareStatement对象中的？占位符赋值</p>
<p>​     方法：setxxx（参数1，参数2）</p>
<p>第一个参数：？的位置，从1开始</p>
<p>第二个参数：？的值</p>
<p>7.不需要传递sql语句，执行sql，接受返回结果</p>
<p>8.处理结果</p>
<p>9.释放资源</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>解决sql注入问题。在拼接sql时，有一些sql的特殊关键字参与字符串的拼接，会造成安全性问题。</p>
<h3 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a>优点</h3><p>效率比Statement更高</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>预编译的sql：参数使用？作为占位符</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JDBC对象--ResultSet</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JDBC%E5%AF%B9%E8%B1%A1--ResultSet/</url>
    <content><![CDATA[<h1 id="ResultSet（结果集对象）"><a href="#ResultSet（结果集对象）" class="headerlink" title="ResultSet（结果集对象）"></a>ResultSet（结果集对象）</h1><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用及应用场景"><a href="#作用及应用场景" class="headerlink" title="作用及应用场景"></a>作用及应用场景</h3><h4 id="1-游标向下移动一行"><a href="#1-游标向下移动一行" class="headerlink" title="1.游标向下移动一行"></a>1.游标向下移动一行</h4><p>next（）</p>
<h4 id="2-获取数据"><a href="#2-获取数据" class="headerlink" title="2.获取数据"></a>2.获取数据</h4><p>getxxx（参数）</p>
<p>xxx代表数据名称。</p>
<p>参数：int 代表列的编号，String 代表列的名称。</p>
<h4 id="3-遍历结果集"><a href="#3-遍历结果集" class="headerlink" title="3.遍历结果集"></a>3.遍历结果集</h4><p>①游标向下移动一行</p>
<p>②循环判断是否有数据                  – 用while（结果集名称.next（））</p>
<p>③获取数据</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>封装查询的结果。</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用及应用场景-1"><a href="#作用及应用场景-1" class="headerlink" title="作用及应用场景"></a>作用及应用场景</h3><h4 id="1-游标向下移动一行-1"><a href="#1-游标向下移动一行-1" class="headerlink" title="1.游标向下移动一行"></a>1.游标向下移动一行</h4><p>next（）</p>
<h4 id="2-获取数据-1"><a href="#2-获取数据-1" class="headerlink" title="2.获取数据"></a>2.获取数据</h4><p>getxxx（参数）</p>
<p>xxx代表数据名称。</p>
<p>参数：int 代表列的编号，String 代表列的名称。</p>
<h4 id="3-遍历结果集-1"><a href="#3-遍历结果集-1" class="headerlink" title="3.遍历结果集"></a>3.遍历结果集</h4><p>①游标向下移动一行</p>
<p>②循环判断是否有数据                  – 用while（结果集名称.next（））</p>
<p>③获取数据</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>封装查询的结果。象）</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用及应用场景-2"><a href="#作用及应用场景-2" class="headerlink" title="作用及应用场景"></a>作用及应用场景</h3><h4 id="1-游标向下移动一行-2"><a href="#1-游标向下移动一行-2" class="headerlink" title="1.游标向下移动一行"></a>1.游标向下移动一行</h4><p>next（）</p>
<h4 id="2-获取数据-2"><a href="#2-获取数据-2" class="headerlink" title="2.获取数据"></a>2.获取数据</h4><p>getxxx（参数）</p>
<p>xxx代表数据名称。</p>
<p>参数：int 代表列的编号，String 代表列的名称。</p>
<h4 id="3-遍历结果集-2"><a href="#3-遍历结果集-2" class="headerlink" title="3.遍历结果集"></a>3.遍历结果集</h4><p>①游标向下移动一行</p>
<p>②循环判断是否有数据                  – 用while（结果集名称.next（））</p>
<p>③获取数据</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>封装查询的结果。</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用及应用场景-3"><a href="#作用及应用场景-3" class="headerlink" title="作用及应用场景"></a>作用及应用场景</h3><h4 id="1-游标向下移动一行-3"><a href="#1-游标向下移动一行-3" class="headerlink" title="1.游标向下移动一行"></a>1.游标向下移动一行</h4><p>next（）</p>
<h4 id="2-获取数据-3"><a href="#2-获取数据-3" class="headerlink" title="2.获取数据"></a>2.获取数据</h4><p>getxxx（参数）</p>
<p>xxx代表数据名称。</p>
<p>参数：int 代表列的编号，String 代表列的名称。</p>
<h4 id="3-遍历结果集-3"><a href="#3-遍历结果集-3" class="headerlink" title="3.遍历结果集"></a>3.遍历结果集</h4><p>①游标向下移动一行</p>
<p>②循环判断是否有数据                  – 用while（结果集名称.next（））</p>
<p>③获取数据</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>封装查询的结果。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JQ-事件绑定</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JQ-%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A/</url>
    <content><![CDATA[<h1 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-标准方式"><a href="#1-标准方式" class="headerlink" title="1.标准方式"></a>1.标准方式</h3><h3 id="2-on-off"><a href="#2-on-off" class="headerlink" title="2.on&amp;off"></a>2.on&amp;off</h3><h3 id="3-事件切换"><a href="#3-事件切换" class="headerlink" title="3.事件切换"></a>3.事件切换</h3><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-标准方式-1"><a href="#1-标准方式-1" class="headerlink" title="1.标准方式"></a>1.标准方式</h3><p>jq对象.事件方法（回调函数）；</p>
<p><img src="/./../TyporaImage/image-20240723171445385.png" alt="image-20240723171445385"></p>
<h3 id="2-on和off绑定事件"><a href="#2-on和off绑定事件" class="headerlink" title="2.on和off绑定事件"></a>2.on和off绑定事件</h3><p>jq对象.on(“事件名称”，回调函数)</p>
<p>jq对象.off(“事件名称”)</p>
<p><img src="/./../TyporaImage/image-20240723171512361.png" alt="image-20240723171512361"></p>
<h3 id="3-事件切换-1"><a href="#3-事件切换-1" class="headerlink" title="3.事件切换"></a>3.事件切换</h3><p>jq对象.toggle(fn1,fn2……)</p>
<p><img src="/./../TyporaImage/image-20240723171629243.png" alt="image-20240723171629243"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-标准方式-2"><a href="#1-标准方式-2" class="headerlink" title="1.标准方式"></a>1.标准方式</h3><h3 id="2-on-off-1"><a href="#2-on-off-1" class="headerlink" title="2.on&amp;off"></a>2.on&amp;off</h3><h3 id="3-事件切换-2"><a href="#3-事件切换-2" class="headerlink" title="3.事件切换"></a>3.事件切换</h3><h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-标准方式-3"><a href="#1-标准方式-3" class="headerlink" title="1.标准方式"></a>1.标准方式</h3><p>jq对象.事件方法（回调函数）；</p>
<p><img src="/./../TyporaImage/image-20240723171445385.png" alt="image-20240723171445385"></p>
<h3 id="2-on和off绑定事件-1"><a href="#2-on和off绑定事件-1" class="headerlink" title="2.on和off绑定事件"></a>2.on和off绑定事件</h3><p>jq对象.on(“事件名称”，回调函数)</p>
<p>jq对象.off(“事件名称”)</p>
<p><img src="/./../TyporaImage/image-20240723171512361.png" alt="image-20240723171512361"></p>
<h3 id="3-事件切换-3"><a href="#3-事件切换-3" class="headerlink" title="3.事件切换"></a>3.事件切换</h3><p>jq对象.toggle(fn1,fn2……)</p>
<p><img src="/./../TyporaImage/image-20240723171629243.png" alt="image-20240723171629243">绑定</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-标准方式-4"><a href="#1-标准方式-4" class="headerlink" title="1.标准方式"></a>1.标准方式</h3><h3 id="2-on-off-2"><a href="#2-on-off-2" class="headerlink" title="2.on&amp;off"></a>2.on&amp;off</h3><h3 id="3-事件切换-4"><a href="#3-事件切换-4" class="headerlink" title="3.事件切换"></a>3.事件切换</h3><h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-标准方式-5"><a href="#1-标准方式-5" class="headerlink" title="1.标准方式"></a>1.标准方式</h3><p>jq对象.事件方法（回调函数）；</p>
<p><img src="/./../TyporaImage/image-20240723171445385.png" alt="image-20240723171445385"></p>
<h3 id="2-on和off绑定事件-2"><a href="#2-on和off绑定事件-2" class="headerlink" title="2.on和off绑定事件"></a>2.on和off绑定事件</h3><p>jq对象.on(“事件名称”，回调函数)</p>
<p>jq对象.off(“事件名称”)</p>
<p><img src="/./../TyporaImage/image-20240723171512361.png" alt="image-20240723171512361"></p>
<h3 id="3-事件切换-5"><a href="#3-事件切换-5" class="headerlink" title="3.事件切换"></a>3.事件切换</h3><p>jq对象.toggle(fn1,fn2……)</p>
<p><img src="/./../TyporaImage/image-20240723171629243.png" alt="image-20240723171629243"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-标准方式-6"><a href="#1-标准方式-6" class="headerlink" title="1.标准方式"></a>1.标准方式</h3><h3 id="2-on-off-3"><a href="#2-on-off-3" class="headerlink" title="2.on&amp;off"></a>2.on&amp;off</h3><h3 id="3-事件切换-6"><a href="#3-事件切换-6" class="headerlink" title="3.事件切换"></a>3.事件切换</h3><h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-标准方式-7"><a href="#1-标准方式-7" class="headerlink" title="1.标准方式"></a>1.标准方式</h3><p>jq对象.事件方法（回调函数）；</p>
<p><img src="/./../TyporaImage/image-20240723171445385.png" alt="image-20240723171445385"></p>
<h3 id="2-on和off绑定事件-3"><a href="#2-on和off绑定事件-3" class="headerlink" title="2.on和off绑定事件"></a>2.on和off绑定事件</h3><p>jq对象.on(“事件名称”，回调函数)</p>
<p>jq对象.off(“事件名称”)</p>
<p><img src="/./../TyporaImage/image-20240723171512361.png" alt="image-20240723171512361"></p>
<h3 id="3-事件切换-7"><a href="#3-事件切换-7" class="headerlink" title="3.事件切换"></a>3.事件切换</h3><p>jq对象.toggle(fn1,fn2……)</p>
<p><img src="/./../TyporaImage/image-20240723171629243.png" alt="image-20240723171629243"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JDBC管理事务</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JDBC%E7%AE%A1%E7%90%86%E4%BA%8B%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="JDBC管理事务"><a href="#JDBC管理事务" class="headerlink" title="JDBC管理事务"></a>JDBC管理事务</h1><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="开启事务"><a href="#开启事务" class="headerlink" title="开启事务"></a>开启事务</h3><p>setAutoCommit（boolean autoCommit）   – 调用这个方法设置参数为false，即开启事务</p>
<h3 id="提交事务"><a href="#提交事务" class="headerlink" title="提交事务"></a>提交事务</h3><p>commit（）  –  当所有sql语句执行玩以后进行提交</p>
<h3 id="回滚事务"><a href="#回滚事务" class="headerlink" title="回滚事务"></a>回滚事务</h3><p>rollback（） – try-catch语句的catch中进行执行</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>确保事务的一致性，一起成功或者失败。</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="开启事务-1"><a href="#开启事务-1" class="headerlink" title="开启事务"></a>开启事务</h3><p>setAutoCommit（boolean autoCommit）   – 调用这个方法设置参数为false，即开启事务</p>
<h3 id="提交事务-1"><a href="#提交事务-1" class="headerlink" title="提交事务"></a>提交事务</h3><p>commit（）  –  当所有sql语句执行玩以后进行提交</p>
<h3 id="回滚事务-1"><a href="#回滚事务-1" class="headerlink" title="回滚事务"></a>回滚事务</h3><p>rollback（） – try-catch语句的catch中进行执行</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>确保事务的一致性，一起成功或者失败。事务</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="开启事务-2"><a href="#开启事务-2" class="headerlink" title="开启事务"></a>开启事务</h3><p>setAutoCommit（boolean autoCommit）   – 调用这个方法设置参数为false，即开启事务</p>
<h3 id="提交事务-2"><a href="#提交事务-2" class="headerlink" title="提交事务"></a>提交事务</h3><p>commit（）  –  当所有sql语句执行玩以后进行提交</p>
<h3 id="回滚事务-2"><a href="#回滚事务-2" class="headerlink" title="回滚事务"></a>回滚事务</h3><p>rollback（） – try-catch语句的catch中进行执行</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>确保事务的一致性，一起成功或者失败。</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="开启事务-3"><a href="#开启事务-3" class="headerlink" title="开启事务"></a>开启事务</h3><p>setAutoCommit（boolean autoCommit）   – 调用这个方法设置参数为false，即开启事务</p>
<h3 id="提交事务-3"><a href="#提交事务-3" class="headerlink" title="提交事务"></a>提交事务</h3><p>commit（）  –  当所有sql语句执行玩以后进行提交</p>
<h3 id="回滚事务-3"><a href="#回滚事务-3" class="headerlink" title="回滚事务"></a>回滚事务</h3><p>rollback（） – try-catch语句的catch中进行执行</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>确保事务的一致性，一起成功或者失败。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JQ_DOM操作</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JQ_DOM%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="DOM操作"><a href="#DOM操作" class="headerlink" title="DOM操作"></a>DOM操作</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-内容操作"><a href="#1-内容操作" class="headerlink" title="1.内容操作"></a>1.内容操作</h3><h3 id="2-属性操作"><a href="#2-属性操作" class="headerlink" title="2.属性操作"></a>2.属性操作</h3><h3 id="3-CRUD操作"><a href="#3-CRUD操作" class="headerlink" title="3.CRUD操作"></a>3.CRUD操作</h3><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h2 id="1-内容操作-1"><a href="#1-内容操作-1" class="headerlink" title="1.内容操作"></a>1.内容操作</h2><p>①html（）:</p>
<p>获取&#x2F;设置元素的标签体内容。</p>
<p>②text（）：</p>
<p>获取&#x2F;设置元素的标签体纯文本内容</p>
<p>③val（）：</p>
<p>获取&#x2F;设置元素的value属性值</p>
<h2 id="2-属性操作-1"><a href="#2-属性操作-1" class="headerlink" title="2.属性操作"></a>2.属性操作</h2><h3 id="Ⅰ、通用属性操作"><a href="#Ⅰ、通用属性操作" class="headerlink" title="Ⅰ、通用属性操作"></a>Ⅰ、通用属性操作</h3><p>①attr（）：访问和设置HTML属性。</p>
<p>②removeAttr（）：删除HTML属性。</p>
<p>③prop（）：访问和设置DOM属性（JavaScript对象的属性）</p>
<p>④removeprop():删除DOM属性（JavaScript对象的属性）</p>
<h3 id="Ⅱ、对class属性操作"><a href="#Ⅱ、对class属性操作" class="headerlink" title="Ⅱ、对class属性操作"></a>Ⅱ、对class属性操作</h3><p>①addClass（）：添加class属性值</p>
<p>②removeClass（）:删除class属性值</p>
<p>③toggleClass（）：切换classs属性值</p>
<h3 id="Ⅲ、CRUD操作"><a href="#Ⅲ、CRUD操作" class="headerlink" title="Ⅲ、CRUD操作"></a>Ⅲ、CRUD操作</h3><p> <img src="/./../TyporaImage/image-20240723093146041.png" alt="image-20240723093146041"></p>
<p>5.after（）：添加元素到元素后面</p>
<p>6.before（）：添加元素到元素前面</p>
<p>7.insertAfter（）</p>
<p>8.insertBefore（）</p>
<p>9.remove（）:移除元素</p>
<p>10.empty（）：清空元素的所有后代元素</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-内容操作-2"><a href="#1-内容操作-2" class="headerlink" title="1.内容操作"></a>1.内容操作</h3><h3 id="2-属性操作-2"><a href="#2-属性操作-2" class="headerlink" title="2.属性操作"></a>2.属性操作</h3><h3 id="3-CRUD操作-1"><a href="#3-CRUD操作-1" class="headerlink" title="3.CRUD操作"></a>3.CRUD操作</h3><h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h2 id="1-内容操作-3"><a href="#1-内容操作-3" class="headerlink" title="1.内容操作"></a>1.内容操作</h2><p>①html（）:</p>
<p>获取&#x2F;设置元素的标签体内容。</p>
<p>②text（）：</p>
<p>获取&#x2F;设置元素的标签体纯文本内容</p>
<p>③val（）：</p>
<p>获取&#x2F;设置元素的value属性值</p>
<h2 id="2-属性操作-3"><a href="#2-属性操作-3" class="headerlink" title="2.属性操作"></a>2.属性操作</h2><h3 id="Ⅰ、通用属性操作-1"><a href="#Ⅰ、通用属性操作-1" class="headerlink" title="Ⅰ、通用属性操作"></a>Ⅰ、通用属性操作</h3><p>①attr（）：访问和设置HTML属性。</p>
<p>②removeAttr（）：删除HTML属性。</p>
<p>③prop（）：访问和设置DOM属性（JavaScript对象的属性）</p>
<p>④removeprop():删除DOM属性（JavaScript对象的属性）</p>
<h3 id="Ⅱ、对class属性操作-1"><a href="#Ⅱ、对class属性操作-1" class="headerlink" title="Ⅱ、对class属性操作"></a>Ⅱ、对class属性操作</h3><p>①addClass（）：添加class属性值</p>
<p>②removeClass（）:删除class属性值</p>
<p>③toggleClass（）：切换classs属性值</p>
<h3 id="Ⅲ、CRUD操作-1"><a href="#Ⅲ、CRUD操作-1" class="headerlink" title="Ⅲ、CRUD操作"></a>Ⅲ、CRUD操作</h3><p> <img src="/./../TyporaImage/image-20240723093146041.png" alt="image-20240723093146041"></p>
<p>5.after（）：添加元素到元素后面</p>
<p>6.before（）：添加元素到元素前面</p>
<p>7.insertAfter（）</p>
<p>8.insertBefore（）</p>
<p>9.remove（）:移除元素</p>
<p>10.empty（）：清空元素的所有后代元素操作</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-内容操作-4"><a href="#1-内容操作-4" class="headerlink" title="1.内容操作"></a>1.内容操作</h3><h3 id="2-属性操作-4"><a href="#2-属性操作-4" class="headerlink" title="2.属性操作"></a>2.属性操作</h3><h3 id="3-CRUD操作-2"><a href="#3-CRUD操作-2" class="headerlink" title="3.CRUD操作"></a>3.CRUD操作</h3><h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h2 id="1-内容操作-5"><a href="#1-内容操作-5" class="headerlink" title="1.内容操作"></a>1.内容操作</h2><p>①html（）:</p>
<p>获取&#x2F;设置元素的标签体内容。</p>
<p>②text（）：</p>
<p>获取&#x2F;设置元素的标签体纯文本内容</p>
<p>③val（）：</p>
<p>获取&#x2F;设置元素的value属性值</p>
<h2 id="2-属性操作-5"><a href="#2-属性操作-5" class="headerlink" title="2.属性操作"></a>2.属性操作</h2><h3 id="Ⅰ、通用属性操作-2"><a href="#Ⅰ、通用属性操作-2" class="headerlink" title="Ⅰ、通用属性操作"></a>Ⅰ、通用属性操作</h3><p>①attr（）：访问和设置HTML属性。</p>
<p>②removeAttr（）：删除HTML属性。</p>
<p>③prop（）：访问和设置DOM属性（JavaScript对象的属性）</p>
<p>④removeprop():删除DOM属性（JavaScript对象的属性）</p>
<h3 id="Ⅱ、对class属性操作-2"><a href="#Ⅱ、对class属性操作-2" class="headerlink" title="Ⅱ、对class属性操作"></a>Ⅱ、对class属性操作</h3><p>①addClass（）：添加class属性值</p>
<p>②removeClass（）:删除class属性值</p>
<p>③toggleClass（）：切换classs属性值</p>
<h3 id="Ⅲ、CRUD操作-2"><a href="#Ⅲ、CRUD操作-2" class="headerlink" title="Ⅲ、CRUD操作"></a>Ⅲ、CRUD操作</h3><p> <img src="/./../TyporaImage/image-20240723093146041.png" alt="image-20240723093146041"></p>
<p>5.after（）：添加元素到元素后面</p>
<p>6.before（）：添加元素到元素前面</p>
<p>7.insertAfter（）</p>
<p>8.insertBefore（）</p>
<p>9.remove（）:移除元素</p>
<p>10.empty（）：清空元素的所有后代元素</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-内容操作-6"><a href="#1-内容操作-6" class="headerlink" title="1.内容操作"></a>1.内容操作</h3><h3 id="2-属性操作-6"><a href="#2-属性操作-6" class="headerlink" title="2.属性操作"></a>2.属性操作</h3><h3 id="3-CRUD操作-3"><a href="#3-CRUD操作-3" class="headerlink" title="3.CRUD操作"></a>3.CRUD操作</h3><h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h2 id="1-内容操作-7"><a href="#1-内容操作-7" class="headerlink" title="1.内容操作"></a>1.内容操作</h2><p>①html（）:</p>
<p>获取&#x2F;设置元素的标签体内容。</p>
<p>②text（）：</p>
<p>获取&#x2F;设置元素的标签体纯文本内容</p>
<p>③val（）：</p>
<p>获取&#x2F;设置元素的value属性值</p>
<h2 id="2-属性操作-7"><a href="#2-属性操作-7" class="headerlink" title="2.属性操作"></a>2.属性操作</h2><h3 id="Ⅰ、通用属性操作-3"><a href="#Ⅰ、通用属性操作-3" class="headerlink" title="Ⅰ、通用属性操作"></a>Ⅰ、通用属性操作</h3><p>①attr（）：访问和设置HTML属性。</p>
<p>②removeAttr（）：删除HTML属性。</p>
<p>③prop（）：访问和设置DOM属性（JavaScript对象的属性）</p>
<p>④removeprop():删除DOM属性（JavaScript对象的属性）</p>
<h3 id="Ⅱ、对class属性操作-3"><a href="#Ⅱ、对class属性操作-3" class="headerlink" title="Ⅱ、对class属性操作"></a>Ⅱ、对class属性操作</h3><p>①addClass（）：添加class属性值</p>
<p>②removeClass（）:删除class属性值</p>
<p>③toggleClass（）：切换classs属性值</p>
<h3 id="Ⅲ、CRUD操作-3"><a href="#Ⅲ、CRUD操作-3" class="headerlink" title="Ⅲ、CRUD操作"></a>Ⅲ、CRUD操作</h3><p> <img src="/./../TyporaImage/image-20240723093146041.png" alt="image-20240723093146041"></p>
<p>5.after（）：添加元素到元素后面</p>
<p>6.before（）：添加元素到元素前面</p>
<p>7.insertAfter（）</p>
<p>8.insertBefore（）</p>
<p>9.remove（）:移除元素</p>
<p>10.empty（）：清空元素的所有后代元素</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JQ-动画</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JQ-%E5%8A%A8%E7%94%BB/</url>
    <content><![CDATA[<h1 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>speed:动画的速度。</p>
<p>​		三个预定义的值，slow、normal、fast。或者表示动画时间长短的毫秒数值，如1000.</p>
<p>easing：用来指定切换效果。  </p>
<p>​              swing动画执行时的效果。 先慢，中间快，最后慢</p>
<p>​             linear：动画执行速度是匀速的。</p>
<p>fn:动画完成时执行的函数，每个元素执行一次。</p>
<h3 id="1-默认显示和隐藏方式"><a href="#1-默认显示和隐藏方式" class="headerlink" title="1.默认显示和隐藏方式"></a>1.默认显示和隐藏方式</h3><p>①show（[speed,easing,fn]）</p>
<p>②hide（[speed,easing,fn]）</p>
<p>③toggle（[speed,easing,fn]）</p>
<h3 id="2-滑动显示和隐藏方式"><a href="#2-滑动显示和隐藏方式" class="headerlink" title="2.滑动显示和隐藏方式"></a>2.滑动显示和隐藏方式</h3><p>①sildeDown([speed,easing,fn])</p>
<p>②slideUp([speed,easing,fn])</p>
<p>③slideToggle([speed,easing,fn])</p>
<h3 id="3-淡入淡出显示和隐藏方式"><a href="#3-淡入淡出显示和隐藏方式" class="headerlink" title="3.淡入淡出显示和隐藏方式"></a>3.淡入淡出显示和隐藏方式</h3><p>①fadeIn([speed,easing,fn])</p>
<p>②fadeOut([speed,easing,fn])</p>
<p>③fadeToggle([speed,easing,fn])</p>
<h3 id="分类-1"><a href="#分类-1" class="headerlink" title="## 分类"></a>## 分类</h3><p>speed:动画的速度。</p>
<p>​		三个预定义的值，slow、normal、fast。或者表示动画时间长短的毫秒数值，如1000.</p>
<p>easing：用来指定切换效果。  </p>
<p>​              swing动画执行时的效果。 先慢，中间快，最后慢</p>
<p>​             linear：动画执行速度是匀速的。</p>
<p>fn:动画完成时执行的函数，每个元素执行一次。</p>
<h3 id="1-默认显示和隐藏方式-1"><a href="#1-默认显示和隐藏方式-1" class="headerlink" title="1.默认显示和隐藏方式"></a>1.默认显示和隐藏方式</h3><p>①show（[speed,easing,fn]）</p>
<p>②hide（[speed,easing,fn]）</p>
<p>③toggle（[speed,easing,fn]）</p>
<h3 id="2-滑动显示和隐藏方式-1"><a href="#2-滑动显示和隐藏方式-1" class="headerlink" title="2.滑动显示和隐藏方式"></a>2.滑动显示和隐藏方式</h3><p>①sildeDown([speed,easing,fn])</p>
<p>②slideUp([speed,easing,fn])</p>
<p>③slideToggle([speed,easing,fn])</p>
<h3 id="3-淡入淡出显示和隐藏方式-1"><a href="#3-淡入淡出显示和隐藏方式-1" class="headerlink" title="3.淡入淡出显示和隐藏方式"></a>3.淡入淡出显示和隐藏方式</h3><p>①fadeIn([speed,easing,fn])</p>
<p>②fadeOut([speed,easing,fn])</p>
<p>③fadeToggle([speed,easing,fn])</p>
<p>###动画</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>speed:动画的速度。</p>
<p>​		三个预定义的值，slow、normal、fast。或者表示动画时间长短的毫秒数值，如1000.</p>
<p>easing：用来指定切换效果。  </p>
<p>​              swing动画执行时的效果。 先慢，中间快，最后慢</p>
<p>​             linear：动画执行速度是匀速的。</p>
<p>fn:动画完成时执行的函数，每个元素执行一次。</p>
<h3 id="1-默认显示和隐藏方式-2"><a href="#1-默认显示和隐藏方式-2" class="headerlink" title="1.默认显示和隐藏方式"></a>1.默认显示和隐藏方式</h3><p>①show（[speed,easing,fn]）</p>
<p>②hide（[speed,easing,fn]）</p>
<p>③toggle（[speed,easing,fn]）</p>
<h3 id="2-滑动显示和隐藏方式-2"><a href="#2-滑动显示和隐藏方式-2" class="headerlink" title="2.滑动显示和隐藏方式"></a>2.滑动显示和隐藏方式</h3><p>①sildeDown([speed,easing,fn])</p>
<p>②slideUp([speed,easing,fn])</p>
<p>③slideToggle([speed,easing,fn])</p>
<h3 id="3-淡入淡出显示和隐藏方式-2"><a href="#3-淡入淡出显示和隐藏方式-2" class="headerlink" title="3.淡入淡出显示和隐藏方式"></a>3.淡入淡出显示和隐藏方式</h3><p>①fadeIn([speed,easing,fn])</p>
<p>②fadeOut([speed,easing,fn])</p>
<p>③fadeToggle([speed,easing,fn])</p>
<h3 id="分类-3"><a href="#分类-3" class="headerlink" title="## 分类"></a>## 分类</h3><p>speed:动画的速度。</p>
<p>​		三个预定义的值，slow、normal、fast。或者表示动画时间长短的毫秒数值，如1000.</p>
<p>easing：用来指定切换效果。  </p>
<p>​              swing动画执行时的效果。 先慢，中间快，最后慢</p>
<p>​             linear：动画执行速度是匀速的。</p>
<p>fn:动画完成时执行的函数，每个元素执行一次。</p>
<h3 id="1-默认显示和隐藏方式-3"><a href="#1-默认显示和隐藏方式-3" class="headerlink" title="1.默认显示和隐藏方式"></a>1.默认显示和隐藏方式</h3><p>①show（[speed,easing,fn]）</p>
<p>②hide（[speed,easing,fn]）</p>
<p>③toggle（[speed,easing,fn]）</p>
<h3 id="2-滑动显示和隐藏方式-3"><a href="#2-滑动显示和隐藏方式-3" class="headerlink" title="2.滑动显示和隐藏方式"></a>2.滑动显示和隐藏方式</h3><p>①sildeDown([speed,easing,fn])</p>
<p>②slideUp([speed,easing,fn])</p>
<p>③slideToggle([speed,easing,fn])</p>
<h3 id="3-淡入淡出显示和隐藏方式-3"><a href="#3-淡入淡出显示和隐藏方式-3" class="headerlink" title="3.淡入淡出显示和隐藏方式"></a>3.淡入淡出显示和隐藏方式</h3><p>①fadeIn([speed,easing,fn])</p>
<p>②fadeOut([speed,easing,fn])</p>
<p>③fadeToggle([speed,easing,fn])</p>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JQ-遍历</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JQ-%E9%81%8D%E5%8E%86/</url>
    <content><![CDATA[<h1 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-js的遍历方式"><a href="#1-js的遍历方式" class="headerlink" title="1.js的遍历方式"></a>1.js的遍历方式</h3><p>for（初始化值；循环结束条件；步长）</p>
<h3 id="2-JQ的遍历方式"><a href="#2-JQ的遍历方式" class="headerlink" title="2.JQ的遍历方式"></a>2.JQ的遍历方式</h3><p>①jq对象.each（callback）</p>
<p>②$.each(object,[callback])</p>
<p>③for….of</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-js的for"><a href="#1-js的for" class="headerlink" title="1.js的for"></a>1.js的for</h3><p><img src="/./../TyporaImage/image-20240723170425390.png" alt="image-20240723170425390"></p>
<h3 id="2-JQ的each"><a href="#2-JQ的each" class="headerlink" title="2.JQ的each"></a>2.JQ的each</h3><p><img src="/./../TyporaImage/image-20240723170559755.png" alt="image-20240723170559755"></p>
<h3 id="3-全局each"><a href="#3-全局each" class="headerlink" title="3.全局each"></a>3.全局each</h3><p><img src="/./../TyporaImage/image-20240723170738779.png" alt="image-20240723170738779"></p>
<h3 id="4-for…-of-格式：for（元素对象：容器对象）"><a href="#4-for…-of-格式：for（元素对象：容器对象）" class="headerlink" title="4.for….of(格式：for（元素对象：容器对象）)"></a>4.for….of(格式：for（元素对象：容器对象）)</h3><p><img src="/./../TyporaImage/image-20240723170804249.png" alt="image-20240723170804249">## 分类</p>
<h3 id="1-js的遍历方式-1"><a href="#1-js的遍历方式-1" class="headerlink" title="1.js的遍历方式"></a>1.js的遍历方式</h3><p>for（初始化值；循环结束条件；步长）</p>
<h3 id="2-JQ的遍历方式-1"><a href="#2-JQ的遍历方式-1" class="headerlink" title="2.JQ的遍历方式"></a>2.JQ的遍历方式</h3><p>①jq对象.each（callback）</p>
<p>②$.each(object,[callback])</p>
<p>③for….of</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-js的for-1"><a href="#1-js的for-1" class="headerlink" title="1.js的for"></a>1.js的for</h3><p><img src="/./../TyporaImage/image-20240723170425390.png" alt="image-20240723170425390"></p>
<h3 id="2-JQ的each-1"><a href="#2-JQ的each-1" class="headerlink" title="2.JQ的each"></a>2.JQ的each</h3><p><img src="/./../TyporaImage/image-20240723170559755.png" alt="image-20240723170559755"></p>
<h3 id="3-全局each-1"><a href="#3-全局each-1" class="headerlink" title="3.全局each"></a>3.全局each</h3><p><img src="/./../TyporaImage/image-20240723170738779.png" alt="image-20240723170738779"></p>
<h3 id="4-for…-of-格式：for（元素对象：容器对象）-1"><a href="#4-for…-of-格式：for（元素对象：容器对象）-1" class="headerlink" title="4.for….of(格式：for（元素对象：容器对象）)"></a>4.for….of(格式：for（元素对象：容器对象）)</h3><p><img src="/./../TyporaImage/image-20240723170804249.png" alt="image-20240723170804249">遍历</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-js的遍历方式-2"><a href="#1-js的遍历方式-2" class="headerlink" title="1.js的遍历方式"></a>1.js的遍历方式</h3><p>for（初始化值；循环结束条件；步长）</p>
<h3 id="2-JQ的遍历方式-2"><a href="#2-JQ的遍历方式-2" class="headerlink" title="2.JQ的遍历方式"></a>2.JQ的遍历方式</h3><p>①jq对象.each（callback）</p>
<p>②$.each(object,[callback])</p>
<p>③for….of</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-js的for-2"><a href="#1-js的for-2" class="headerlink" title="1.js的for"></a>1.js的for</h3><p><img src="/./../TyporaImage/image-20240723170425390.png" alt="image-20240723170425390"></p>
<h3 id="2-JQ的each-2"><a href="#2-JQ的each-2" class="headerlink" title="2.JQ的each"></a>2.JQ的each</h3><p><img src="/./../TyporaImage/image-20240723170559755.png" alt="image-20240723170559755"></p>
<h3 id="3-全局each-2"><a href="#3-全局each-2" class="headerlink" title="3.全局each"></a>3.全局each</h3><p><img src="/./../TyporaImage/image-20240723170738779.png" alt="image-20240723170738779"></p>
<h3 id="4-for…-of-格式：for（元素对象：容器对象）-2"><a href="#4-for…-of-格式：for（元素对象：容器对象）-2" class="headerlink" title="4.for….of(格式：for（元素对象：容器对象）)"></a>4.for….of(格式：for（元素对象：容器对象）)</h3><p><img src="/./../TyporaImage/image-20240723170804249.png" alt="image-20240723170804249">## 分类</p>
<h3 id="1-js的遍历方式-3"><a href="#1-js的遍历方式-3" class="headerlink" title="1.js的遍历方式"></a>1.js的遍历方式</h3><p>for（初始化值；循环结束条件；步长）</p>
<h3 id="2-JQ的遍历方式-3"><a href="#2-JQ的遍历方式-3" class="headerlink" title="2.JQ的遍历方式"></a>2.JQ的遍历方式</h3><p>①jq对象.each（callback）</p>
<p>②$.each(object,[callback])</p>
<p>③for….of</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-js的for-3"><a href="#1-js的for-3" class="headerlink" title="1.js的for"></a>1.js的for</h3><p><img src="/./../TyporaImage/image-20240723170425390.png" alt="image-20240723170425390"></p>
<h3 id="2-JQ的each-3"><a href="#2-JQ的each-3" class="headerlink" title="2.JQ的each"></a>2.JQ的each</h3><p><img src="/./../TyporaImage/image-20240723170559755.png" alt="image-20240723170559755"></p>
<h3 id="3-全局each-3"><a href="#3-全局each-3" class="headerlink" title="3.全局each"></a>3.全局each</h3><p><img src="/./../TyporaImage/image-20240723170738779.png" alt="image-20240723170738779"></p>
<h3 id="4-for…-of-格式：for（元素对象：容器对象）-3"><a href="#4-for…-of-格式：for（元素对象：容器对象）-3" class="headerlink" title="4.for….of(格式：for（元素对象：容器对象）)"></a>4.for….of(格式：for（元素对象：容器对象）)</h3><p><img src="/./../TyporaImage/image-20240723170804249.png" alt="image-20240723170804249"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JQ选择器</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JQ%E9%80%89%E6%8B%A9%E5%99%A8/</url>
    <content><![CDATA[<h1 id="JQ选择器"><a href="#JQ选择器" class="headerlink" title="JQ选择器"></a>JQ选择器</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-基本选择器"><a href="#1-基本选择器" class="headerlink" title="1.基本选择器"></a>1.基本选择器</h3><h3 id="2-层级选择器"><a href="#2-层级选择器" class="headerlink" title="2.层级选择器"></a>2.层级选择器</h3><h3 id="3-属性选择器"><a href="#3-属性选择器" class="headerlink" title="3.属性选择器"></a>3.属性选择器</h3><h3 id="4-过滤选择器"><a href="#4-过滤选择器" class="headerlink" title="4.过滤选择器"></a>4.过滤选择器</h3><h3 id="5-表单过滤选择器"><a href="#5-表单过滤选择器" class="headerlink" title="5.表单过滤选择器"></a>5.表单过滤选择器</h3><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>①选中标签</p>
<p>②设置该标签对应操作及其效果</p>
<h3 id="1-基本选择器-1"><a href="#1-基本选择器-1" class="headerlink" title="1.基本选择器"></a>1.基本选择器</h3><p><img src="/./../TyporaImage/image-20240722164024840.png" alt="image-20240722164024840"></p>
<h3 id="2-层级选择器-1"><a href="#2-层级选择器-1" class="headerlink" title="2.层级选择器"></a>2.层级选择器</h3><h4 id="Ⅰ、后代选择器"><a href="#Ⅰ、后代选择器" class="headerlink" title="Ⅰ、后代选择器"></a>Ⅰ、后代选择器</h4><p>​     $(“A B”)   ，这是选择A元素内部所有的B元素</p>
<h4 id="Ⅱ、子选择器"><a href="#Ⅱ、子选择器" class="headerlink" title="Ⅱ、子选择器"></a>Ⅱ、子选择器</h4><p>   $(“A &gt; B”)   ，这是选择A元素内部所有的B子元素</p>
<h3 id="3-属性选择器-1"><a href="#3-属性选择器-1" class="headerlink" title="3.属性选择器"></a>3.属性选择器</h3><h4 id="Ⅰ、属性名称选择器"><a href="#Ⅰ、属性名称选择器" class="headerlink" title="Ⅰ、属性名称选择器"></a>Ⅰ、属性名称选择器</h4><p>$(“A[属性名]”)   包含指定属性的选择器</p>
<h4 id="Ⅱ、属性选择器"><a href="#Ⅱ、属性选择器" class="headerlink" title="Ⅱ、属性选择器"></a>Ⅱ、属性选择器</h4><p>$（[“A[属性名]&#x3D;‘值’”]  ）     包含指定属性和指定值的选择器</p>
<h4 id="Ⅲ、复合属性选择器"><a href="#Ⅲ、复合属性选择器" class="headerlink" title="Ⅲ、复合属性选择器"></a>Ⅲ、复合属性选择器</h4><p>$（[“A[属性名]&#x3D;‘值’”] []…… ）     包含多个指定属性和指定值的选择器</p>
<h3 id="4-过滤选择器-1"><a href="#4-过滤选择器-1" class="headerlink" title="4.过滤选择器"></a>4.过滤选择器</h3><h4 id="Ⅰ、首元素选择器"><a href="#Ⅰ、首元素选择器" class="headerlink" title="Ⅰ、首元素选择器"></a>Ⅰ、首元素选择器</h4><p>：first   获得选择元素的第一个元素</p>
<h4 id="Ⅱ、尾元素选择器"><a href="#Ⅱ、尾元素选择器" class="headerlink" title="Ⅱ、尾元素选择器"></a>Ⅱ、尾元素选择器</h4><p>：last   获得选择元素的最后一个元素</p>
<h4 id="Ⅲ、非元素选择器"><a href="#Ⅲ、非元素选择器" class="headerlink" title="Ⅲ、非元素选择器"></a>Ⅲ、非元素选择器</h4><p>：not（selecter）  不包括制定内容的元素</p>
<h4 id="Ⅳ、偶数选择器"><a href="#Ⅳ、偶数选择器" class="headerlink" title="Ⅳ、偶数选择器"></a>Ⅳ、偶数选择器</h4><p>:even 偶数从0开始计数</p>
<h4 id="Ⅴ、奇数选择器"><a href="#Ⅴ、奇数选择器" class="headerlink" title="Ⅴ、奇数选择器"></a>Ⅴ、奇数选择器</h4><p>：odd  奇数，从0开始计数</p>
<h4 id="Ⅵ、大于索引选择器"><a href="#Ⅵ、大于索引选择器" class="headerlink" title="Ⅵ、大于索引选择器"></a>Ⅵ、大于索引选择器</h4><p>：gt（index）  大于指定索引元素</p>
<h4 id="Ⅶ、小于索引选择器"><a href="#Ⅶ、小于索引选择器" class="headerlink" title="Ⅶ、小于索引选择器"></a>Ⅶ、小于索引选择器</h4><p>：lt（index） 小于指定索引的元素</p>
<h4 id="Ⅷ、等于索引选择器"><a href="#Ⅷ、等于索引选择器" class="headerlink" title="Ⅷ、等于索引选择器"></a>Ⅷ、等于索引选择器</h4><p>：eq（index）  等于指定索引的元素</p>
<h4 id="Ⅸ、标题选择器"><a href="#Ⅸ、标题选择器" class="headerlink" title="Ⅸ、标题选择器"></a>Ⅸ、标题选择器</h4><p>：header 获得标题元素，固定写法</p>
<h3 id="5-表单过滤选择器-1"><a href="#5-表单过滤选择器-1" class="headerlink" title="5.表单过滤选择器"></a>5.表单过滤选择器</h3><h4 id="Ⅰ、可用元素选择器"><a href="#Ⅰ、可用元素选择器" class="headerlink" title="Ⅰ、可用元素选择器"></a>Ⅰ、可用元素选择器</h4><p>：enabled 获得可用元素</p>
<h4 id="Ⅱ、不可用元素选择器"><a href="#Ⅱ、不可用元素选择器" class="headerlink" title="Ⅱ、不可用元素选择器"></a>Ⅱ、不可用元素选择器</h4><p>：disabled  获得不可用元素</p>
<h4 id="Ⅲ、选中选择器"><a href="#Ⅲ、选中选择器" class="headerlink" title="Ⅲ、选中选择器"></a>Ⅲ、选中选择器</h4><p>①：checked 获得单选框、复选框中的元素</p>
<p>②：selected  获得下拉框中的元素</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-基本选择器-2"><a href="#1-基本选择器-2" class="headerlink" title="1.基本选择器"></a>1.基本选择器</h3><h3 id="2-层级选择器-2"><a href="#2-层级选择器-2" class="headerlink" title="2.层级选择器"></a>2.层级选择器</h3><h3 id="3-属性选择器-2"><a href="#3-属性选择器-2" class="headerlink" title="3.属性选择器"></a>3.属性选择器</h3><h3 id="4-过滤选择器-2"><a href="#4-过滤选择器-2" class="headerlink" title="4.过滤选择器"></a>4.过滤选择器</h3><h3 id="5-表单过滤选择器-2"><a href="#5-表单过滤选择器-2" class="headerlink" title="5.表单过滤选择器"></a>5.表单过滤选择器</h3><h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>①选中标签</p>
<p>②设置该标签对应操作及其效果</p>
<h3 id="1-基本选择器-3"><a href="#1-基本选择器-3" class="headerlink" title="1.基本选择器"></a>1.基本选择器</h3><p><img src="/./../TyporaImage/image-20240722164024840.png" alt="image-20240722164024840"></p>
<h3 id="2-层级选择器-3"><a href="#2-层级选择器-3" class="headerlink" title="2.层级选择器"></a>2.层级选择器</h3><h4 id="Ⅰ、后代选择器-1"><a href="#Ⅰ、后代选择器-1" class="headerlink" title="Ⅰ、后代选择器"></a>Ⅰ、后代选择器</h4><p>​     $(“A B”)   ，这是选择A元素内部所有的B元素</p>
<h4 id="Ⅱ、子选择器-1"><a href="#Ⅱ、子选择器-1" class="headerlink" title="Ⅱ、子选择器"></a>Ⅱ、子选择器</h4><p>   $(“A &gt; B”)   ，这是选择A元素内部所有的B子元素</p>
<h3 id="3-属性选择器-3"><a href="#3-属性选择器-3" class="headerlink" title="3.属性选择器"></a>3.属性选择器</h3><h4 id="Ⅰ、属性名称选择器-1"><a href="#Ⅰ、属性名称选择器-1" class="headerlink" title="Ⅰ、属性名称选择器"></a>Ⅰ、属性名称选择器</h4><p>$(“A[属性名]”)   包含指定属性的选择器</p>
<h4 id="Ⅱ、属性选择器-1"><a href="#Ⅱ、属性选择器-1" class="headerlink" title="Ⅱ、属性选择器"></a>Ⅱ、属性选择器</h4><p>$（[“A[属性名]&#x3D;‘值’”]  ）     包含指定属性和指定值的选择器</p>
<h4 id="Ⅲ、复合属性选择器-1"><a href="#Ⅲ、复合属性选择器-1" class="headerlink" title="Ⅲ、复合属性选择器"></a>Ⅲ、复合属性选择器</h4><p>$（[“A[属性名]&#x3D;‘值’”] []…… ）     包含多个指定属性和指定值的选择器</p>
<h3 id="4-过滤选择器-3"><a href="#4-过滤选择器-3" class="headerlink" title="4.过滤选择器"></a>4.过滤选择器</h3><h4 id="Ⅰ、首元素选择器-1"><a href="#Ⅰ、首元素选择器-1" class="headerlink" title="Ⅰ、首元素选择器"></a>Ⅰ、首元素选择器</h4><p>：first   获得选择元素的第一个元素</p>
<h4 id="Ⅱ、尾元素选择器-1"><a href="#Ⅱ、尾元素选择器-1" class="headerlink" title="Ⅱ、尾元素选择器"></a>Ⅱ、尾元素选择器</h4><p>：last   获得选择元素的最后一个元素</p>
<h4 id="Ⅲ、非元素选择器-1"><a href="#Ⅲ、非元素选择器-1" class="headerlink" title="Ⅲ、非元素选择器"></a>Ⅲ、非元素选择器</h4><p>：not（selecter）  不包括制定内容的元素</p>
<h4 id="Ⅳ、偶数选择器-1"><a href="#Ⅳ、偶数选择器-1" class="headerlink" title="Ⅳ、偶数选择器"></a>Ⅳ、偶数选择器</h4><p>:even 偶数从0开始计数</p>
<h4 id="Ⅴ、奇数选择器-1"><a href="#Ⅴ、奇数选择器-1" class="headerlink" title="Ⅴ、奇数选择器"></a>Ⅴ、奇数选择器</h4><p>：odd  奇数，从0开始计数</p>
<h4 id="Ⅵ、大于索引选择器-1"><a href="#Ⅵ、大于索引选择器-1" class="headerlink" title="Ⅵ、大于索引选择器"></a>Ⅵ、大于索引选择器</h4><p>：gt（index）  大于指定索引元素</p>
<h4 id="Ⅶ、小于索引选择器-1"><a href="#Ⅶ、小于索引选择器-1" class="headerlink" title="Ⅶ、小于索引选择器"></a>Ⅶ、小于索引选择器</h4><p>：lt（index） 小于指定索引的元素</p>
<h4 id="Ⅷ、等于索引选择器-1"><a href="#Ⅷ、等于索引选择器-1" class="headerlink" title="Ⅷ、等于索引选择器"></a>Ⅷ、等于索引选择器</h4><p>：eq（index）  等于指定索引的元素</p>
<h4 id="Ⅸ、标题选择器-1"><a href="#Ⅸ、标题选择器-1" class="headerlink" title="Ⅸ、标题选择器"></a>Ⅸ、标题选择器</h4><p>：header 获得标题元素，固定写法</p>
<h3 id="5-表单过滤选择器-3"><a href="#5-表单过滤选择器-3" class="headerlink" title="5.表单过滤选择器"></a>5.表单过滤选择器</h3><h4 id="Ⅰ、可用元素选择器-1"><a href="#Ⅰ、可用元素选择器-1" class="headerlink" title="Ⅰ、可用元素选择器"></a>Ⅰ、可用元素选择器</h4><p>：enabled 获得可用元素</p>
<h4 id="Ⅱ、不可用元素选择器-1"><a href="#Ⅱ、不可用元素选择器-1" class="headerlink" title="Ⅱ、不可用元素选择器"></a>Ⅱ、不可用元素选择器</h4><p>：disabled  获得不可用元素</p>
<h4 id="Ⅲ、选中选择器-1"><a href="#Ⅲ、选中选择器-1" class="headerlink" title="Ⅲ、选中选择器"></a>Ⅲ、选中选择器</h4><p>①：checked 获得单选框、复选框中的元素</p>
<p>②：selected  获得下拉框中的元素择器</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-基本选择器-4"><a href="#1-基本选择器-4" class="headerlink" title="1.基本选择器"></a>1.基本选择器</h3><h3 id="2-层级选择器-4"><a href="#2-层级选择器-4" class="headerlink" title="2.层级选择器"></a>2.层级选择器</h3><h3 id="3-属性选择器-4"><a href="#3-属性选择器-4" class="headerlink" title="3.属性选择器"></a>3.属性选择器</h3><h3 id="4-过滤选择器-4"><a href="#4-过滤选择器-4" class="headerlink" title="4.过滤选择器"></a>4.过滤选择器</h3><h3 id="5-表单过滤选择器-4"><a href="#5-表单过滤选择器-4" class="headerlink" title="5.表单过滤选择器"></a>5.表单过滤选择器</h3><h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>①选中标签</p>
<p>②设置该标签对应操作及其效果</p>
<h3 id="1-基本选择器-5"><a href="#1-基本选择器-5" class="headerlink" title="1.基本选择器"></a>1.基本选择器</h3><p><img src="/./../TyporaImage/image-20240722164024840.png" alt="image-20240722164024840"></p>
<h3 id="2-层级选择器-5"><a href="#2-层级选择器-5" class="headerlink" title="2.层级选择器"></a>2.层级选择器</h3><h4 id="Ⅰ、后代选择器-2"><a href="#Ⅰ、后代选择器-2" class="headerlink" title="Ⅰ、后代选择器"></a>Ⅰ、后代选择器</h4><p>​     $(“A B”)   ，这是选择A元素内部所有的B元素</p>
<h4 id="Ⅱ、子选择器-2"><a href="#Ⅱ、子选择器-2" class="headerlink" title="Ⅱ、子选择器"></a>Ⅱ、子选择器</h4><p>   $(“A &gt; B”)   ，这是选择A元素内部所有的B子元素</p>
<h3 id="3-属性选择器-5"><a href="#3-属性选择器-5" class="headerlink" title="3.属性选择器"></a>3.属性选择器</h3><h4 id="Ⅰ、属性名称选择器-2"><a href="#Ⅰ、属性名称选择器-2" class="headerlink" title="Ⅰ、属性名称选择器"></a>Ⅰ、属性名称选择器</h4><p>$(“A[属性名]”)   包含指定属性的选择器</p>
<h4 id="Ⅱ、属性选择器-2"><a href="#Ⅱ、属性选择器-2" class="headerlink" title="Ⅱ、属性选择器"></a>Ⅱ、属性选择器</h4><p>$（[“A[属性名]&#x3D;‘值’”]  ）     包含指定属性和指定值的选择器</p>
<h4 id="Ⅲ、复合属性选择器-2"><a href="#Ⅲ、复合属性选择器-2" class="headerlink" title="Ⅲ、复合属性选择器"></a>Ⅲ、复合属性选择器</h4><p>$（[“A[属性名]&#x3D;‘值’”] []…… ）     包含多个指定属性和指定值的选择器</p>
<h3 id="4-过滤选择器-5"><a href="#4-过滤选择器-5" class="headerlink" title="4.过滤选择器"></a>4.过滤选择器</h3><h4 id="Ⅰ、首元素选择器-2"><a href="#Ⅰ、首元素选择器-2" class="headerlink" title="Ⅰ、首元素选择器"></a>Ⅰ、首元素选择器</h4><p>：first   获得选择元素的第一个元素</p>
<h4 id="Ⅱ、尾元素选择器-2"><a href="#Ⅱ、尾元素选择器-2" class="headerlink" title="Ⅱ、尾元素选择器"></a>Ⅱ、尾元素选择器</h4><p>：last   获得选择元素的最后一个元素</p>
<h4 id="Ⅲ、非元素选择器-2"><a href="#Ⅲ、非元素选择器-2" class="headerlink" title="Ⅲ、非元素选择器"></a>Ⅲ、非元素选择器</h4><p>：not（selecter）  不包括制定内容的元素</p>
<h4 id="Ⅳ、偶数选择器-2"><a href="#Ⅳ、偶数选择器-2" class="headerlink" title="Ⅳ、偶数选择器"></a>Ⅳ、偶数选择器</h4><p>:even 偶数从0开始计数</p>
<h4 id="Ⅴ、奇数选择器-2"><a href="#Ⅴ、奇数选择器-2" class="headerlink" title="Ⅴ、奇数选择器"></a>Ⅴ、奇数选择器</h4><p>：odd  奇数，从0开始计数</p>
<h4 id="Ⅵ、大于索引选择器-2"><a href="#Ⅵ、大于索引选择器-2" class="headerlink" title="Ⅵ、大于索引选择器"></a>Ⅵ、大于索引选择器</h4><p>：gt（index）  大于指定索引元素</p>
<h4 id="Ⅶ、小于索引选择器-2"><a href="#Ⅶ、小于索引选择器-2" class="headerlink" title="Ⅶ、小于索引选择器"></a>Ⅶ、小于索引选择器</h4><p>：lt（index） 小于指定索引的元素</p>
<h4 id="Ⅷ、等于索引选择器-2"><a href="#Ⅷ、等于索引选择器-2" class="headerlink" title="Ⅷ、等于索引选择器"></a>Ⅷ、等于索引选择器</h4><p>：eq（index）  等于指定索引的元素</p>
<h4 id="Ⅸ、标题选择器-2"><a href="#Ⅸ、标题选择器-2" class="headerlink" title="Ⅸ、标题选择器"></a>Ⅸ、标题选择器</h4><p>：header 获得标题元素，固定写法</p>
<h3 id="5-表单过滤选择器-5"><a href="#5-表单过滤选择器-5" class="headerlink" title="5.表单过滤选择器"></a>5.表单过滤选择器</h3><h4 id="Ⅰ、可用元素选择器-2"><a href="#Ⅰ、可用元素选择器-2" class="headerlink" title="Ⅰ、可用元素选择器"></a>Ⅰ、可用元素选择器</h4><p>：enabled 获得可用元素</p>
<h4 id="Ⅱ、不可用元素选择器-2"><a href="#Ⅱ、不可用元素选择器-2" class="headerlink" title="Ⅱ、不可用元素选择器"></a>Ⅱ、不可用元素选择器</h4><p>：disabled  获得不可用元素</p>
<h4 id="Ⅲ、选中选择器-2"><a href="#Ⅲ、选中选择器-2" class="headerlink" title="Ⅲ、选中选择器"></a>Ⅲ、选中选择器</h4><p>①：checked 获得单选框、复选框中的元素</p>
<p>②：selected  获得下拉框中的元素</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-基本选择器-6"><a href="#1-基本选择器-6" class="headerlink" title="1.基本选择器"></a>1.基本选择器</h3><h3 id="2-层级选择器-6"><a href="#2-层级选择器-6" class="headerlink" title="2.层级选择器"></a>2.层级选择器</h3><h3 id="3-属性选择器-6"><a href="#3-属性选择器-6" class="headerlink" title="3.属性选择器"></a>3.属性选择器</h3><h3 id="4-过滤选择器-6"><a href="#4-过滤选择器-6" class="headerlink" title="4.过滤选择器"></a>4.过滤选择器</h3><h3 id="5-表单过滤选择器-6"><a href="#5-表单过滤选择器-6" class="headerlink" title="5.表单过滤选择器"></a>5.表单过滤选择器</h3><h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>①选中标签</p>
<p>②设置该标签对应操作及其效果</p>
<h3 id="1-基本选择器-7"><a href="#1-基本选择器-7" class="headerlink" title="1.基本选择器"></a>1.基本选择器</h3><p><img src="/./../TyporaImage/image-20240722164024840.png" alt="image-20240722164024840"></p>
<h3 id="2-层级选择器-7"><a href="#2-层级选择器-7" class="headerlink" title="2.层级选择器"></a>2.层级选择器</h3><h4 id="Ⅰ、后代选择器-3"><a href="#Ⅰ、后代选择器-3" class="headerlink" title="Ⅰ、后代选择器"></a>Ⅰ、后代选择器</h4><p>​     $(“A B”)   ，这是选择A元素内部所有的B元素</p>
<h4 id="Ⅱ、子选择器-3"><a href="#Ⅱ、子选择器-3" class="headerlink" title="Ⅱ、子选择器"></a>Ⅱ、子选择器</h4><p>   $(“A &gt; B”)   ，这是选择A元素内部所有的B子元素</p>
<h3 id="3-属性选择器-7"><a href="#3-属性选择器-7" class="headerlink" title="3.属性选择器"></a>3.属性选择器</h3><h4 id="Ⅰ、属性名称选择器-3"><a href="#Ⅰ、属性名称选择器-3" class="headerlink" title="Ⅰ、属性名称选择器"></a>Ⅰ、属性名称选择器</h4><p>$(“A[属性名]”)   包含指定属性的选择器</p>
<h4 id="Ⅱ、属性选择器-3"><a href="#Ⅱ、属性选择器-3" class="headerlink" title="Ⅱ、属性选择器"></a>Ⅱ、属性选择器</h4><p>$（[“A[属性名]&#x3D;‘值’”]  ）     包含指定属性和指定值的选择器</p>
<h4 id="Ⅲ、复合属性选择器-3"><a href="#Ⅲ、复合属性选择器-3" class="headerlink" title="Ⅲ、复合属性选择器"></a>Ⅲ、复合属性选择器</h4><p>$（[“A[属性名]&#x3D;‘值’”] []…… ）     包含多个指定属性和指定值的选择器</p>
<h3 id="4-过滤选择器-7"><a href="#4-过滤选择器-7" class="headerlink" title="4.过滤选择器"></a>4.过滤选择器</h3><h4 id="Ⅰ、首元素选择器-3"><a href="#Ⅰ、首元素选择器-3" class="headerlink" title="Ⅰ、首元素选择器"></a>Ⅰ、首元素选择器</h4><p>：first   获得选择元素的第一个元素</p>
<h4 id="Ⅱ、尾元素选择器-3"><a href="#Ⅱ、尾元素选择器-3" class="headerlink" title="Ⅱ、尾元素选择器"></a>Ⅱ、尾元素选择器</h4><p>：last   获得选择元素的最后一个元素</p>
<h4 id="Ⅲ、非元素选择器-3"><a href="#Ⅲ、非元素选择器-3" class="headerlink" title="Ⅲ、非元素选择器"></a>Ⅲ、非元素选择器</h4><p>：not（selecter）  不包括制定内容的元素</p>
<h4 id="Ⅳ、偶数选择器-3"><a href="#Ⅳ、偶数选择器-3" class="headerlink" title="Ⅳ、偶数选择器"></a>Ⅳ、偶数选择器</h4><p>:even 偶数从0开始计数</p>
<h4 id="Ⅴ、奇数选择器-3"><a href="#Ⅴ、奇数选择器-3" class="headerlink" title="Ⅴ、奇数选择器"></a>Ⅴ、奇数选择器</h4><p>：odd  奇数，从0开始计数</p>
<h4 id="Ⅵ、大于索引选择器-3"><a href="#Ⅵ、大于索引选择器-3" class="headerlink" title="Ⅵ、大于索引选择器"></a>Ⅵ、大于索引选择器</h4><p>：gt（index）  大于指定索引元素</p>
<h4 id="Ⅶ、小于索引选择器-3"><a href="#Ⅶ、小于索引选择器-3" class="headerlink" title="Ⅶ、小于索引选择器"></a>Ⅶ、小于索引选择器</h4><p>：lt（index） 小于指定索引的元素</p>
<h4 id="Ⅷ、等于索引选择器-3"><a href="#Ⅷ、等于索引选择器-3" class="headerlink" title="Ⅷ、等于索引选择器"></a>Ⅷ、等于索引选择器</h4><p>：eq（index）  等于指定索引的元素</p>
<h4 id="Ⅸ、标题选择器-3"><a href="#Ⅸ、标题选择器-3" class="headerlink" title="Ⅸ、标题选择器"></a>Ⅸ、标题选择器</h4><p>：header 获得标题元素，固定写法</p>
<h3 id="5-表单过滤选择器-7"><a href="#5-表单过滤选择器-7" class="headerlink" title="5.表单过滤选择器"></a>5.表单过滤选择器</h3><h4 id="Ⅰ、可用元素选择器-3"><a href="#Ⅰ、可用元素选择器-3" class="headerlink" title="Ⅰ、可用元素选择器"></a>Ⅰ、可用元素选择器</h4><p>：enabled 获得可用元素</p>
<h4 id="Ⅱ、不可用元素选择器-3"><a href="#Ⅱ、不可用元素选择器-3" class="headerlink" title="Ⅱ、不可用元素选择器"></a>Ⅱ、不可用元素选择器</h4><p>：disabled  获得不可用元素</p>
<h4 id="Ⅲ、选中选择器-3"><a href="#Ⅲ、选中选择器-3" class="headerlink" title="Ⅲ、选中选择器"></a>Ⅲ、选中选择器</h4><p>①：checked 获得单选框、复选框中的元素</p>
<p>②：selected  获得下拉框中的元素</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JQuery</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JQuery/</url>
    <content><![CDATA[<h1 id="JQuery"><a href="#JQuery" class="headerlink" title="JQuery"></a>JQuery</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>jQuery 是一个跨浏览器的 JavaScript 库，简化了 HTML 与 JavaScript 之间的交互。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-核心功能"><a href="#1-核心功能" class="headerlink" title="1.核心功能"></a>1.核心功能</h3><p>DOM 操作、事件处理、动画效果、AJAX 支持。</p>
<h3 id="2-插件系统"><a href="#2-插件系统" class="headerlink" title="2.插件系统"></a>2.插件系统</h3><p>允许开发者创建和使用 jQuery 插件扩展其功能。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>简化 JavaScript 编程，提高开发效率。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>物理描述</p>
<p>通过简洁的选择器和方法封装复杂的 DOM 操作和事件处理逻辑。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-JQ对象和JS对象的区别与转换"><a href="#1-JQ对象和JS对象的区别与转换" class="headerlink" title="1.JQ对象和JS对象的区别与转换"></a>1.JQ对象和JS对象的区别与转换</h3><h4 id="Ⅰ、区别："><a href="#Ⅰ、区别：" class="headerlink" title="Ⅰ、区别："></a>Ⅰ、区别：</h4><p>JQ对象不同操作是通过不断添加实现的，而JS对象是通过不断覆盖实现的。</p>
<p>这两个对象的操作不重复，不可以互用。</p>
<h4 id="Ⅱ、转换："><a href="#Ⅱ、转换：" class="headerlink" title="Ⅱ、转换："></a>Ⅱ、转换：</h4><p>JS–&gt;JQ: $(js对象)</p>
<p>JQ–&gt;JS：①jq对象[索引]   ②jq对象.get（索引）</p>
<h3 id="2-事件绑定"><a href="#2-事件绑定" class="headerlink" title="2.事件绑定"></a>2.事件绑定</h3><p>①获取标签</p>
<p>②添加操作</p>
<p><img src="/./../TyporaImage/image-20240722162835724.png" alt="image-20240722162835724"></p>
<h3 id="3-入口函数（dom文档加载完成之后执行该函数中的代码）"><a href="#3-入口函数（dom文档加载完成之后执行该函数中的代码）" class="headerlink" title="3.入口函数（dom文档加载完成之后执行该函数中的代码）"></a>3.入口函数（dom文档加载完成之后执行该函数中的代码）</h3><p> $(function(){</p>
<p>});</p>
<h3 id="4-样式控制"><a href="#4-样式控制" class="headerlink" title="4.样式控制"></a>4.样式控制</h3><p>①获取标签</p>
<p>②设置css</p>
<p> $(function(){</p>
<p>$(“标签”).css(“属性名”，“属性值”)；</p>
<p>});</p>
<p><img src="/./../TyporaImage/image-20240722163221412.png" alt="image-20240722163221412"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-插件机制：增强JQ的功能"><a href="#1-插件机制：增强JQ的功能" class="headerlink" title="1.插件机制：增强JQ的功能"></a>1.插件机制：增强JQ的功能</h3><p>实现方式：</p>
<p><img src="/./../TyporaImage/image-20240723171812511.png" alt="image-20240723171812511"></p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>jQuery 是一个跨浏览器的 JavaScript 库，简化了 HTML 与 JavaScript 之间的交互。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-核心功能-1"><a href="#1-核心功能-1" class="headerlink" title="1.核心功能"></a>1.核心功能</h3><p>DOM 操作、事件处理、动画效果、AJAX 支持。</p>
<h3 id="2-插件系统-1"><a href="#2-插件系统-1" class="headerlink" title="2.插件系统"></a>2.插件系统</h3><p>允许开发者创建和使用 jQuery 插件扩展其功能。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>简化 JavaScript 编程，提高开发效率。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>物理描述</p>
<p>通过简洁的选择器和方法封装复杂的 DOM 操作和事件处理逻辑。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-JQ对象和JS对象的区别与转换-1"><a href="#1-JQ对象和JS对象的区别与转换-1" class="headerlink" title="1.JQ对象和JS对象的区别与转换"></a>1.JQ对象和JS对象的区别与转换</h3><h4 id="Ⅰ、区别：-1"><a href="#Ⅰ、区别：-1" class="headerlink" title="Ⅰ、区别："></a>Ⅰ、区别：</h4><p>JQ对象不同操作是通过不断添加实现的，而JS对象是通过不断覆盖实现的。</p>
<p>这两个对象的操作不重复，不可以互用。</p>
<h4 id="Ⅱ、转换：-1"><a href="#Ⅱ、转换：-1" class="headerlink" title="Ⅱ、转换："></a>Ⅱ、转换：</h4><p>JS–&gt;JQ: $(js对象)</p>
<p>JQ–&gt;JS：①jq对象[索引]   ②jq对象.get（索引）</p>
<h3 id="2-事件绑定-1"><a href="#2-事件绑定-1" class="headerlink" title="2.事件绑定"></a>2.事件绑定</h3><p>①获取标签</p>
<p>②添加操作</p>
<p><img src="/./../TyporaImage/image-20240722162835724.png" alt="image-20240722162835724"></p>
<h3 id="3-入口函数（dom文档加载完成之后执行该函数中的代码）-1"><a href="#3-入口函数（dom文档加载完成之后执行该函数中的代码）-1" class="headerlink" title="3.入口函数（dom文档加载完成之后执行该函数中的代码）"></a>3.入口函数（dom文档加载完成之后执行该函数中的代码）</h3><p> $(function(){</p>
<p>});</p>
<h3 id="4-样式控制-1"><a href="#4-样式控制-1" class="headerlink" title="4.样式控制"></a>4.样式控制</h3><p>①获取标签</p>
<p>②设置css</p>
<p> $(function(){</p>
<p>$(“标签”).css(“属性名”，“属性值”)；</p>
<p>});</p>
<p><img src="/./../TyporaImage/image-20240722163221412.png" alt="image-20240722163221412"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-插件机制：增强JQ的功能-1"><a href="#1-插件机制：增强JQ的功能-1" class="headerlink" title="1.插件机制：增强JQ的功能"></a>1.插件机制：增强JQ的功能</h3><p>实现方式：</p>
<p><img src="/./../TyporaImage/image-20240723171812511.png" alt="image-20240723171812511">ry</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>jQuery 是一个跨浏览器的 JavaScript 库，简化了 HTML 与 JavaScript 之间的交互。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-核心功能-2"><a href="#1-核心功能-2" class="headerlink" title="1.核心功能"></a>1.核心功能</h3><p>DOM 操作、事件处理、动画效果、AJAX 支持。</p>
<h3 id="2-插件系统-2"><a href="#2-插件系统-2" class="headerlink" title="2.插件系统"></a>2.插件系统</h3><p>允许开发者创建和使用 jQuery 插件扩展其功能。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>简化 JavaScript 编程，提高开发效率。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>物理描述</p>
<p>通过简洁的选择器和方法封装复杂的 DOM 操作和事件处理逻辑。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-JQ对象和JS对象的区别与转换-2"><a href="#1-JQ对象和JS对象的区别与转换-2" class="headerlink" title="1.JQ对象和JS对象的区别与转换"></a>1.JQ对象和JS对象的区别与转换</h3><h4 id="Ⅰ、区别：-2"><a href="#Ⅰ、区别：-2" class="headerlink" title="Ⅰ、区别："></a>Ⅰ、区别：</h4><p>JQ对象不同操作是通过不断添加实现的，而JS对象是通过不断覆盖实现的。</p>
<p>这两个对象的操作不重复，不可以互用。</p>
<h4 id="Ⅱ、转换：-2"><a href="#Ⅱ、转换：-2" class="headerlink" title="Ⅱ、转换："></a>Ⅱ、转换：</h4><p>JS–&gt;JQ: $(js对象)</p>
<p>JQ–&gt;JS：①jq对象[索引]   ②jq对象.get（索引）</p>
<h3 id="2-事件绑定-2"><a href="#2-事件绑定-2" class="headerlink" title="2.事件绑定"></a>2.事件绑定</h3><p>①获取标签</p>
<p>②添加操作</p>
<p><img src="/./../TyporaImage/image-20240722162835724.png" alt="image-20240722162835724"></p>
<h3 id="3-入口函数（dom文档加载完成之后执行该函数中的代码）-2"><a href="#3-入口函数（dom文档加载完成之后执行该函数中的代码）-2" class="headerlink" title="3.入口函数（dom文档加载完成之后执行该函数中的代码）"></a>3.入口函数（dom文档加载完成之后执行该函数中的代码）</h3><p> $(function(){</p>
<p>});</p>
<h3 id="4-样式控制-2"><a href="#4-样式控制-2" class="headerlink" title="4.样式控制"></a>4.样式控制</h3><p>①获取标签</p>
<p>②设置css</p>
<p> $(function(){</p>
<p>$(“标签”).css(“属性名”，“属性值”)；</p>
<p>});</p>
<p><img src="/./../TyporaImage/image-20240722163221412.png" alt="image-20240722163221412"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-插件机制：增强JQ的功能-2"><a href="#1-插件机制：增强JQ的功能-2" class="headerlink" title="1.插件机制：增强JQ的功能"></a>1.插件机制：增强JQ的功能</h3><p>实现方式：</p>
<p><img src="/./../TyporaImage/image-20240723171812511.png" alt="image-20240723171812511"></p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>jQuery 是一个跨浏览器的 JavaScript 库，简化了 HTML 与 JavaScript 之间的交互。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-核心功能-3"><a href="#1-核心功能-3" class="headerlink" title="1.核心功能"></a>1.核心功能</h3><p>DOM 操作、事件处理、动画效果、AJAX 支持。</p>
<h3 id="2-插件系统-3"><a href="#2-插件系统-3" class="headerlink" title="2.插件系统"></a>2.插件系统</h3><p>允许开发者创建和使用 jQuery 插件扩展其功能。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>简化 JavaScript 编程，提高开发效率。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>物理描述</p>
<p>通过简洁的选择器和方法封装复杂的 DOM 操作和事件处理逻辑。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-JQ对象和JS对象的区别与转换-3"><a href="#1-JQ对象和JS对象的区别与转换-3" class="headerlink" title="1.JQ对象和JS对象的区别与转换"></a>1.JQ对象和JS对象的区别与转换</h3><h4 id="Ⅰ、区别：-3"><a href="#Ⅰ、区别：-3" class="headerlink" title="Ⅰ、区别："></a>Ⅰ、区别：</h4><p>JQ对象不同操作是通过不断添加实现的，而JS对象是通过不断覆盖实现的。</p>
<p>这两个对象的操作不重复，不可以互用。</p>
<h4 id="Ⅱ、转换：-3"><a href="#Ⅱ、转换：-3" class="headerlink" title="Ⅱ、转换："></a>Ⅱ、转换：</h4><p>JS–&gt;JQ: $(js对象)</p>
<p>JQ–&gt;JS：①jq对象[索引]   ②jq对象.get（索引）</p>
<h3 id="2-事件绑定-3"><a href="#2-事件绑定-3" class="headerlink" title="2.事件绑定"></a>2.事件绑定</h3><p>①获取标签</p>
<p>②添加操作</p>
<p><img src="/./../TyporaImage/image-20240722162835724.png" alt="image-20240722162835724"></p>
<h3 id="3-入口函数（dom文档加载完成之后执行该函数中的代码）-3"><a href="#3-入口函数（dom文档加载完成之后执行该函数中的代码）-3" class="headerlink" title="3.入口函数（dom文档加载完成之后执行该函数中的代码）"></a>3.入口函数（dom文档加载完成之后执行该函数中的代码）</h3><p> $(function(){</p>
<p>});</p>
<h3 id="4-样式控制-3"><a href="#4-样式控制-3" class="headerlink" title="4.样式控制"></a>4.样式控制</h3><p>①获取标签</p>
<p>②设置css</p>
<p> $(function(){</p>
<p>$(“标签”).css(“属性名”，“属性值”)；</p>
<p>});</p>
<p><img src="/./../TyporaImage/image-20240722163221412.png" alt="image-20240722163221412"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-插件机制：增强JQ的功能-3"><a href="#1-插件机制：增强JQ的功能-3" class="headerlink" title="1.插件机制：增强JQ的功能"></a>1.插件机制：增强JQ的功能</h3><p>实现方式：</p>
<p><img src="/./../TyporaImage/image-20240723171812511.png" alt="image-20240723171812511"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JSON</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JSON/</url>
    <content><![CDATA[<h1 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，易于人类阅读和编写，同时也易于机器解析和生成。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-对象（Object）"><a href="#1-对象（Object）" class="headerlink" title="1.对象（Object）"></a>1.对象（Object）</h3><p>由花括号 {} 包围，包含键值对。键必须是字符串，值可以是字符串、数字、布尔值、数组、对象或 null。</p>
<h3 id="2-数组（Array）"><a href="#2-数组（Array）" class="headerlink" title="2.数组（Array）"></a>2.数组（Array）</h3><p>由方括号 [] 包围，包含一个有序的值列表。每个值可以是字符串、数字、布尔值、数组、对象或 null。</p>
<h3 id="3-值（Value）"><a href="#3-值（Value）" class="headerlink" title="3.值（Value）"></a>3.值（Value）</h3><p>可以是字符串、数字、布尔值、数组、对象或 null。</p>
<h3 id="4-字符串（String）"><a href="#4-字符串（String）" class="headerlink" title="4.字符串（String）"></a>4.字符串（String）</h3><p>由双引号 “” 包围的一系列字符。</p>
<h3 id="5-数字（Number）"><a href="#5-数字（Number）" class="headerlink" title="5.数字（Number）"></a>5.数字（Number）</h3><p>可以是整数或浮点数。</p>
<h3 id="6-布尔值（Boolean）"><a href="#6-布尔值（Boolean）" class="headerlink" title="6.布尔值（Boolean）"></a>6.布尔值（Boolean）</h3><p>true 或 false。</p>
<h3 id="7-null"><a href="#7-null" class="headerlink" title="7.null"></a>7.null</h3><p>表示空值。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-对象"><a href="#1-对象" class="headerlink" title="1.对象"></a>1.对象</h3><p>{“key1”: “value1”, “key2”: value2}</p>
<h3 id="2-数组"><a href="#2-数组" class="headerlink" title="2.数组"></a>2.数组</h3><p>[“value1”, “value2”, value3]</p>
<h3 id="3-嵌套结构"><a href="#3-嵌套结构" class="headerlink" title="3.嵌套结构"></a>3.嵌套结构</h3><p>{“key1”: {“nestedKey1”: “nestedValue1”}, “key2”: [“value1”, “value2”]}</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>简化数据交换和存储，使数据在不同系统和编程语言之间的传输变得更加容易。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>JSON 使用键值对和有序列表来表示数据结构，适用于序列化和反序列化操作。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>Ⅰ、获取数据：</p>
<p><img src="/./../TyporaImage/image-20240724163732853.png" alt="image-20240724163732853"></p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，易于人类阅读和编写，同时也易于机器解析和生成。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-对象（Object）-1"><a href="#1-对象（Object）-1" class="headerlink" title="1.对象（Object）"></a>1.对象（Object）</h3><p>由花括号 {} 包围，包含键值对。键必须是字符串，值可以是字符串、数字、布尔值、数组、对象或 null。</p>
<h3 id="2-数组（Array）-1"><a href="#2-数组（Array）-1" class="headerlink" title="2.数组（Array）"></a>2.数组（Array）</h3><p>由方括号 [] 包围，包含一个有序的值列表。每个值可以是字符串、数字、布尔值、数组、对象或 null。</p>
<h3 id="3-值（Value）-1"><a href="#3-值（Value）-1" class="headerlink" title="3.值（Value）"></a>3.值（Value）</h3><p>可以是字符串、数字、布尔值、数组、对象或 null。</p>
<h3 id="4-字符串（String）-1"><a href="#4-字符串（String）-1" class="headerlink" title="4.字符串（String）"></a>4.字符串（String）</h3><p>由双引号 “” 包围的一系列字符。</p>
<h3 id="5-数字（Number）-1"><a href="#5-数字（Number）-1" class="headerlink" title="5.数字（Number）"></a>5.数字（Number）</h3><p>可以是整数或浮点数。</p>
<h3 id="6-布尔值（Boolean）-1"><a href="#6-布尔值（Boolean）-1" class="headerlink" title="6.布尔值（Boolean）"></a>6.布尔值（Boolean）</h3><p>true 或 false。</p>
<h3 id="7-null-1"><a href="#7-null-1" class="headerlink" title="7.null"></a>7.null</h3><p>表示空值。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-对象-1"><a href="#1-对象-1" class="headerlink" title="1.对象"></a>1.对象</h3><p>{“key1”: “value1”, “key2”: value2}</p>
<h3 id="2-数组-1"><a href="#2-数组-1" class="headerlink" title="2.数组"></a>2.数组</h3><p>[“value1”, “value2”, value3]</p>
<h3 id="3-嵌套结构-1"><a href="#3-嵌套结构-1" class="headerlink" title="3.嵌套结构"></a>3.嵌套结构</h3><p>{“key1”: {“nestedKey1”: “nestedValue1”}, “key2”: [“value1”, “value2”]}</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>简化数据交换和存储，使数据在不同系统和编程语言之间的传输变得更加容易。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>JSON 使用键值对和有序列表来表示数据结构，适用于序列化和反序列化操作。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>Ⅰ、获取数据：</p>
<p><img src="/./../TyporaImage/image-20240724163732853.png" alt="image-20240724163732853">ON</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，易于人类阅读和编写，同时也易于机器解析和生成。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-对象（Object）-2"><a href="#1-对象（Object）-2" class="headerlink" title="1.对象（Object）"></a>1.对象（Object）</h3><p>由花括号 {} 包围，包含键值对。键必须是字符串，值可以是字符串、数字、布尔值、数组、对象或 null。</p>
<h3 id="2-数组（Array）-2"><a href="#2-数组（Array）-2" class="headerlink" title="2.数组（Array）"></a>2.数组（Array）</h3><p>由方括号 [] 包围，包含一个有序的值列表。每个值可以是字符串、数字、布尔值、数组、对象或 null。</p>
<h3 id="3-值（Value）-2"><a href="#3-值（Value）-2" class="headerlink" title="3.值（Value）"></a>3.值（Value）</h3><p>可以是字符串、数字、布尔值、数组、对象或 null。</p>
<h3 id="4-字符串（String）-2"><a href="#4-字符串（String）-2" class="headerlink" title="4.字符串（String）"></a>4.字符串（String）</h3><p>由双引号 “” 包围的一系列字符。</p>
<h3 id="5-数字（Number）-2"><a href="#5-数字（Number）-2" class="headerlink" title="5.数字（Number）"></a>5.数字（Number）</h3><p>可以是整数或浮点数。</p>
<h3 id="6-布尔值（Boolean）-2"><a href="#6-布尔值（Boolean）-2" class="headerlink" title="6.布尔值（Boolean）"></a>6.布尔值（Boolean）</h3><p>true 或 false。</p>
<h3 id="7-null-2"><a href="#7-null-2" class="headerlink" title="7.null"></a>7.null</h3><p>表示空值。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-对象-2"><a href="#1-对象-2" class="headerlink" title="1.对象"></a>1.对象</h3><p>{“key1”: “value1”, “key2”: value2}</p>
<h3 id="2-数组-2"><a href="#2-数组-2" class="headerlink" title="2.数组"></a>2.数组</h3><p>[“value1”, “value2”, value3]</p>
<h3 id="3-嵌套结构-2"><a href="#3-嵌套结构-2" class="headerlink" title="3.嵌套结构"></a>3.嵌套结构</h3><p>{“key1”: {“nestedKey1”: “nestedValue1”}, “key2”: [“value1”, “value2”]}</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>简化数据交换和存储，使数据在不同系统和编程语言之间的传输变得更加容易。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>JSON 使用键值对和有序列表来表示数据结构，适用于序列化和反序列化操作。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>Ⅰ、获取数据：</p>
<p><img src="/./../TyporaImage/image-20240724163732853.png" alt="image-20240724163732853"></p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，易于人类阅读和编写，同时也易于机器解析和生成。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-对象（Object）-3"><a href="#1-对象（Object）-3" class="headerlink" title="1.对象（Object）"></a>1.对象（Object）</h3><p>由花括号 {} 包围，包含键值对。键必须是字符串，值可以是字符串、数字、布尔值、数组、对象或 null。</p>
<h3 id="2-数组（Array）-3"><a href="#2-数组（Array）-3" class="headerlink" title="2.数组（Array）"></a>2.数组（Array）</h3><p>由方括号 [] 包围，包含一个有序的值列表。每个值可以是字符串、数字、布尔值、数组、对象或 null。</p>
<h3 id="3-值（Value）-3"><a href="#3-值（Value）-3" class="headerlink" title="3.值（Value）"></a>3.值（Value）</h3><p>可以是字符串、数字、布尔值、数组、对象或 null。</p>
<h3 id="4-字符串（String）-3"><a href="#4-字符串（String）-3" class="headerlink" title="4.字符串（String）"></a>4.字符串（String）</h3><p>由双引号 “” 包围的一系列字符。</p>
<h3 id="5-数字（Number）-3"><a href="#5-数字（Number）-3" class="headerlink" title="5.数字（Number）"></a>5.数字（Number）</h3><p>可以是整数或浮点数。</p>
<h3 id="6-布尔值（Boolean）-3"><a href="#6-布尔值（Boolean）-3" class="headerlink" title="6.布尔值（Boolean）"></a>6.布尔值（Boolean）</h3><p>true 或 false。</p>
<h3 id="7-null-3"><a href="#7-null-3" class="headerlink" title="7.null"></a>7.null</h3><p>表示空值。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-对象-3"><a href="#1-对象-3" class="headerlink" title="1.对象"></a>1.对象</h3><p>{“key1”: “value1”, “key2”: value2}</p>
<h3 id="2-数组-3"><a href="#2-数组-3" class="headerlink" title="2.数组"></a>2.数组</h3><p>[“value1”, “value2”, value3]</p>
<h3 id="3-嵌套结构-3"><a href="#3-嵌套结构-3" class="headerlink" title="3.嵌套结构"></a>3.嵌套结构</h3><p>{“key1”: {“nestedKey1”: “nestedValue1”}, “key2”: [“value1”, “value2”]}</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>简化数据交换和存储，使数据在不同系统和编程语言之间的传输变得更加容易。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>JSON 使用键值对和有序列表来表示数据结构，适用于序列化和反序列化操作。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>Ⅰ、获取数据：</p>
<p><img src="/./../TyporaImage/image-20240724163732853.png" alt="image-20240724163732853"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JSP_指令</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JSP_%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="JSP指令"><a href="#JSP指令" class="headerlink" title="JSP指令"></a>JSP指令</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-page"><a href="#1-page" class="headerlink" title="1.page"></a>1.page</h3><p>配置JSP页面的</p>
<h3 id="2-include"><a href="#2-include" class="headerlink" title="2.include"></a>2.include</h3><p>导入页面的资源文件</p>
<h3 id="3-taglib"><a href="#3-taglib" class="headerlink" title="3.taglib"></a>3.taglib</h3><p>导入标签资源包</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="Ⅰ-page"><a href="#Ⅰ-page" class="headerlink" title="Ⅰ.page"></a>Ⅰ.page</h3><h4 id="1-contentType："><a href="#1-contentType：" class="headerlink" title="1.contentType："></a>1.contentType：</h4><p>①设置响应体MIME类型以及字符集</p>
<p>②设置当前JSP页面的编码（只能是高级IDE，低级的需要用pageencoding 来设置）</p>
<h4 id="2-import-导包"><a href="#2-import-导包" class="headerlink" title="2.import:导包"></a>2.import:导包</h4><h4 id="3-errorPage"><a href="#3-errorPage" class="headerlink" title="3.errorPage"></a>3.errorPage</h4><p>当前页面发生异常后，会自动跳转到指定的错误处理页面</p>
<h4 id="4-isErrorPage"><a href="#4-isErrorPage" class="headerlink" title="4.isErrorPage"></a>4.isErrorPage</h4><p>表示当前页面是否是错误页面</p>
<p>  默认是false，如果是true，则可以使用内置对象exception</p>
<h3 id="Ⅱ-include"><a href="#Ⅱ-include" class="headerlink" title="Ⅱ.include"></a>Ⅱ.include</h3><p>&lt;%@iclude file &#x3D; “”&gt;</p>
<h3 id="Ⅲ、taglib"><a href="#Ⅲ、taglib" class="headerlink" title="Ⅲ、taglib"></a>Ⅲ、taglib</h3><h4 id="1-导入jar包"><a href="#1-导入jar包" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h4><h4 id="2-导入标签库"><a href="#2-导入标签库" class="headerlink" title="2.导入标签库"></a>2.导入标签库</h4><p>prefix:自定义前缀，就是一个变量名</p>
<h4 id="3-使用标签"><a href="#3-使用标签" class="headerlink" title="3.使用标签"></a>3.使用标签</h4><h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-page-1"><a href="#1-page-1" class="headerlink" title="1.page"></a>1.page</h3><p>配置JSP页面的</p>
<h3 id="2-include-1"><a href="#2-include-1" class="headerlink" title="2.include"></a>2.include</h3><p>导入页面的资源文件</p>
<h3 id="3-taglib-1"><a href="#3-taglib-1" class="headerlink" title="3.taglib"></a>3.taglib</h3><p>导入标签资源包</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="Ⅰ-page-1"><a href="#Ⅰ-page-1" class="headerlink" title="Ⅰ.page"></a>Ⅰ.page</h3><h4 id="1-contentType：-1"><a href="#1-contentType：-1" class="headerlink" title="1.contentType："></a>1.contentType：</h4><p>①设置响应体MIME类型以及字符集</p>
<p>②设置当前JSP页面的编码（只能是高级IDE，低级的需要用pageencoding 来设置）</p>
<h4 id="2-import-导包-1"><a href="#2-import-导包-1" class="headerlink" title="2.import:导包"></a>2.import:导包</h4><h4 id="3-errorPage-1"><a href="#3-errorPage-1" class="headerlink" title="3.errorPage"></a>3.errorPage</h4><p>当前页面发生异常后，会自动跳转到指定的错误处理页面</p>
<h4 id="4-isErrorPage-1"><a href="#4-isErrorPage-1" class="headerlink" title="4.isErrorPage"></a>4.isErrorPage</h4><p>表示当前页面是否是错误页面</p>
<p>  默认是false，如果是true，则可以使用内置对象exception</p>
<h3 id="Ⅱ-include-1"><a href="#Ⅱ-include-1" class="headerlink" title="Ⅱ.include"></a>Ⅱ.include</h3><p>&lt;%@iclude file &#x3D; “”&gt;</p>
<h3 id="Ⅲ、taglib-1"><a href="#Ⅲ、taglib-1" class="headerlink" title="Ⅲ、taglib"></a>Ⅲ、taglib</h3><h4 id="1-导入jar包-1"><a href="#1-导入jar包-1" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h4><h4 id="2-导入标签库-1"><a href="#2-导入标签库-1" class="headerlink" title="2.导入标签库"></a>2.导入标签库</h4><p>prefix:自定义前缀，就是一个变量名</p>
<h4 id="3-使用标签指令"><a href="#3-使用标签指令" class="headerlink" title="3.使用标签指令"></a>3.使用标签指令</h4><h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-page-2"><a href="#1-page-2" class="headerlink" title="1.page"></a>1.page</h3><p>配置JSP页面的</p>
<h3 id="2-include-2"><a href="#2-include-2" class="headerlink" title="2.include"></a>2.include</h3><p>导入页面的资源文件</p>
<h3 id="3-taglib-2"><a href="#3-taglib-2" class="headerlink" title="3.taglib"></a>3.taglib</h3><p>导入标签资源包</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="Ⅰ-page-2"><a href="#Ⅰ-page-2" class="headerlink" title="Ⅰ.page"></a>Ⅰ.page</h3><h4 id="1-contentType：-2"><a href="#1-contentType：-2" class="headerlink" title="1.contentType："></a>1.contentType：</h4><p>①设置响应体MIME类型以及字符集</p>
<p>②设置当前JSP页面的编码（只能是高级IDE，低级的需要用pageencoding 来设置）</p>
<h4 id="2-import-导包-2"><a href="#2-import-导包-2" class="headerlink" title="2.import:导包"></a>2.import:导包</h4><h4 id="3-errorPage-2"><a href="#3-errorPage-2" class="headerlink" title="3.errorPage"></a>3.errorPage</h4><p>当前页面发生异常后，会自动跳转到指定的错误处理页面</p>
<h4 id="4-isErrorPage-2"><a href="#4-isErrorPage-2" class="headerlink" title="4.isErrorPage"></a>4.isErrorPage</h4><p>表示当前页面是否是错误页面</p>
<p>  默认是false，如果是true，则可以使用内置对象exception</p>
<h3 id="Ⅱ-include-2"><a href="#Ⅱ-include-2" class="headerlink" title="Ⅱ.include"></a>Ⅱ.include</h3><p>&lt;%@iclude file &#x3D; “”&gt;</p>
<h3 id="Ⅲ、taglib-2"><a href="#Ⅲ、taglib-2" class="headerlink" title="Ⅲ、taglib"></a>Ⅲ、taglib</h3><h4 id="1-导入jar包-2"><a href="#1-导入jar包-2" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h4><h4 id="2-导入标签库-2"><a href="#2-导入标签库-2" class="headerlink" title="2.导入标签库"></a>2.导入标签库</h4><p>prefix:自定义前缀，就是一个变量名</p>
<h4 id="3-使用标签-1"><a href="#3-使用标签-1" class="headerlink" title="3.使用标签"></a>3.使用标签</h4><h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-page-3"><a href="#1-page-3" class="headerlink" title="1.page"></a>1.page</h3><p>配置JSP页面的</p>
<h3 id="2-include-3"><a href="#2-include-3" class="headerlink" title="2.include"></a>2.include</h3><p>导入页面的资源文件</p>
<h3 id="3-taglib-3"><a href="#3-taglib-3" class="headerlink" title="3.taglib"></a>3.taglib</h3><p>导入标签资源包</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="Ⅰ-page-3"><a href="#Ⅰ-page-3" class="headerlink" title="Ⅰ.page"></a>Ⅰ.page</h3><h4 id="1-contentType：-3"><a href="#1-contentType：-3" class="headerlink" title="1.contentType："></a>1.contentType：</h4><p>①设置响应体MIME类型以及字符集</p>
<p>②设置当前JSP页面的编码（只能是高级IDE，低级的需要用pageencoding 来设置）</p>
<h4 id="2-import-导包-3"><a href="#2-import-导包-3" class="headerlink" title="2.import:导包"></a>2.import:导包</h4><h4 id="3-errorPage-3"><a href="#3-errorPage-3" class="headerlink" title="3.errorPage"></a>3.errorPage</h4><p>当前页面发生异常后，会自动跳转到指定的错误处理页面</p>
<h4 id="4-isErrorPage-3"><a href="#4-isErrorPage-3" class="headerlink" title="4.isErrorPage"></a>4.isErrorPage</h4><p>表示当前页面是否是错误页面</p>
<p>  默认是false，如果是true，则可以使用内置对象exception</p>
<h3 id="Ⅱ-include-3"><a href="#Ⅱ-include-3" class="headerlink" title="Ⅱ.include"></a>Ⅱ.include</h3><p>&lt;%@iclude file &#x3D; “”&gt;</p>
<h3 id="Ⅲ、taglib-3"><a href="#Ⅲ、taglib-3" class="headerlink" title="Ⅲ、taglib"></a>Ⅲ、taglib</h3><h4 id="1-导入jar包-3"><a href="#1-导入jar包-3" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h4><h4 id="2-导入标签库-3"><a href="#2-导入标签库-3" class="headerlink" title="2.导入标签库"></a>2.导入标签库</h4><p>prefix:自定义前缀，就是一个变量名</p>
<h4 id="3-使用标签-2"><a href="#3-使用标签-2" class="headerlink" title="3.使用标签"></a>3.使用标签</h4>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JSOUP—xml解析器</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JSOUP%E2%80%94xml%E8%A7%A3%E6%9E%90%E5%99%A8/</url>
    <content><![CDATA[<h1 id="JSOUP"><a href="#JSOUP" class="headerlink" title="JSOUP"></a>JSOUP</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Jsoup 是一个用 Java 语言编写的开源 HTML 解析库。它提供了一套非常方便的 API，用于从 URL、文件或字符串中提取和操作数据。Jsoup 实现了 WHATWG HTML5 规范，并能够将 HTML 解析为与现代浏览器相同的 DOM 结构。</p>
<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.Jsoup</p>
<p>工具类，可以解析html或xml文档，返回Document对象</p>
<p>2.Document</p>
<p>文档对象。代表内存中的DOM树</p>
<p>3.ELements</p>
<p>元素ELement对象的集合</p>
<p>4.Element</p>
<p>元素对象</p>
<p>5.Node</p>
<p>节点对象</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.导入jar包</p>
<p>2.获取Document对象</p>
<p>3.获取对应标签的Element对象</p>
<p>4.获取数据</p>
<p>示例：</p>
<p><img src="/../TyporaImage/image-20240523100914512.png" alt="image-20240523100914512"></p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Jsoup 是一个用 Java 语言编写的开源 HTML 解析库。它提供了一套非常方便的 API，用于从 URL、文件或字符串中提取和操作数据。Jsoup 实现了 WHATWG HTML5 规范，并能够将 HTML 解析为与现代浏览器相同的 DOM 结构。</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.Jsoup</p>
<p>工具类，可以解析html或xml文档，返回Document对象</p>
<p>2.Document</p>
<p>文档对象。代表内存中的DOM树</p>
<p>3.ELements</p>
<p>元素ELement对象的集合</p>
<p>4.Element</p>
<p>元素对象</p>
<p>5.Node</p>
<p>节点对象</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.导入jar包</p>
<p>2.获取Document对象</p>
<p>3.获取对应标签的Element对象</p>
<p>4.获取数据</p>
<p>示例：</p>
<p><img src="/../TyporaImage/image-20240523100914512.png" alt="image-20240523100914512">UP</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>Jsoup 是一个用 Java 语言编写的开源 HTML 解析库。它提供了一套非常方便的 API，用于从 URL、文件或字符串中提取和操作数据。Jsoup 实现了 WHATWG HTML5 规范，并能够将 HTML 解析为与现代浏览器相同的 DOM 结构。</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.Jsoup</p>
<p>工具类，可以解析html或xml文档，返回Document对象</p>
<p>2.Document</p>
<p>文档对象。代表内存中的DOM树</p>
<p>3.ELements</p>
<p>元素ELement对象的集合</p>
<p>4.Element</p>
<p>元素对象</p>
<p>5.Node</p>
<p>节点对象</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.导入jar包</p>
<p>2.获取Document对象</p>
<p>3.获取对应标签的Element对象</p>
<p>4.获取数据</p>
<p>示例：</p>
<p><img src="/../TyporaImage/image-20240523100914512.png" alt="image-20240523100914512"></p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>Jsoup 是一个用 Java 语言编写的开源 HTML 解析库。它提供了一套非常方便的 API，用于从 URL、文件或字符串中提取和操作数据。Jsoup 实现了 WHATWG HTML5 规范，并能够将 HTML 解析为与现代浏览器相同的 DOM 结构。</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.Jsoup</p>
<p>工具类，可以解析html或xml文档，返回Document对象</p>
<p>2.Document</p>
<p>文档对象。代表内存中的DOM树</p>
<p>3.ELements</p>
<p>元素ELement对象的集合</p>
<p>4.Element</p>
<p>元素对象</p>
<p>5.Node</p>
<p>节点对象</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.导入jar包</p>
<p>2.获取Document对象</p>
<p>3.获取对应标签的Element对象</p>
<p>4.获取数据</p>
<p>示例：</p>
<p><img src="/../TyporaImage/image-20240523100914512.png" alt="image-20240523100914512"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JSP_注释</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JSP_%E6%B3%A8%E9%87%8A/</url>
    <content><![CDATA[<h1 id="JSP注释"><a href="#JSP注释" class="headerlink" title="JSP注释"></a>JSP注释</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-html注释"><a href="#1-html注释" class="headerlink" title="1.html注释"></a>1.html注释</h3><p>只能注释html片段</p>
<!-- -->

<h3 id="2-JSP注释"><a href="#2-JSP注释" class="headerlink" title="2.JSP注释"></a>2.JSP注释</h3><p>可以注释所有</p>
<p>&lt;%– –%&gt;## 使用方法</p>
<h3 id="1-html注释-1"><a href="#1-html注释-1" class="headerlink" title="1.html注释"></a>1.html注释</h3><p>只能注释html片段</p>
<!-- -->

<h3 id="2-JSP注释-1"><a href="#2-JSP注释-1" class="headerlink" title="2.JSP注释"></a>2.JSP注释</h3><p>可以注释所有</p>
<p>&lt;%– –%&gt;注释</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-html注释-2"><a href="#1-html注释-2" class="headerlink" title="1.html注释"></a>1.html注释</h3><p>只能注释html片段</p>
<!-- -->

<h3 id="2-JSP注释-2"><a href="#2-JSP注释-2" class="headerlink" title="2.JSP注释"></a>2.JSP注释</h3><p>可以注释所有</p>
<p>&lt;%– –%&gt;## 使用方法</p>
<h3 id="1-html注释-3"><a href="#1-html注释-3" class="headerlink" title="1.html注释"></a>1.html注释</h3><p>只能注释html片段</p>
<!-- -->

<h3 id="2-JSP注释-3"><a href="#2-JSP注释-3" class="headerlink" title="2.JSP注释"></a>2.JSP注释</h3><p>可以注释所有</p>
<p>&lt;%– –%&gt;</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JSP</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JSP/</url>
    <content><![CDATA[<h1 id="JSP（JavaServer-Pages）"><a href="#JSP（JavaServer-Pages）" class="headerlink" title="JSP（JavaServer Pages）"></a>JSP（JavaServer Pages）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>JSP是一种基于Java的服务器端技术，用于创建动态网页。它将Java代码嵌入到HTML页面中，允许开发者生成动态内容。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-脚本"><a href="#1-脚本" class="headerlink" title="1.脚本"></a>1.脚本</h3><p>jsp定义java代码的方式</p>
<p><img src="/./../TyporaImage/image-20240709152557985.png" alt="image-20240709152557985"></p>
<h3 id="2-指令"><a href="#2-指令" class="headerlink" title="2.指令"></a>2.指令</h3><p>用于配置JSp页面，导入资源文件</p>
<p>格式：</p>
<p>&lt;%@ 指令名称 属性名&#x3D;属性值  %&gt;</p>
<h3 id="3-注释"><a href="#3-注释" class="headerlink" title="3.注释"></a>3.注释</h3><h3 id="4-内置对象"><a href="#4-内置对象" class="headerlink" title="4.内置对象"></a>4.内置对象</h3><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a><strong>目的</strong></h2><p>简化动态网页的开发，通过嵌入Java代码在HTML中生成动态内容。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>Jsp本质上就是一个servlet</p>
<p><img src="/./../TyporaImage/image-20240709152356408.png" alt="image-20240709152356408"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.脚本（Script）是一种编程语言，用于编写小型程序或自动化任务，通常在解释器环境中执行，而不是编译成机器代码。## 定义</p>
<p>JSP是一种基于Java的服务器端技术，用于创建动态网页。它将Java代码嵌入到HTML页面中，允许开发者生成动态内容。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-脚本-1"><a href="#1-脚本-1" class="headerlink" title="1.脚本"></a>1.脚本</h3><p>jsp定义java代码的方式</p>
<p><img src="/./../TyporaImage/image-20240709152557985.png" alt="image-20240709152557985"></p>
<h3 id="2-指令-1"><a href="#2-指令-1" class="headerlink" title="2.指令"></a>2.指令</h3><p>用于配置JSp页面，导入资源文件</p>
<p>格式：</p>
<p>&lt;%@ 指令名称 属性名&#x3D;属性值  %&gt;</p>
<h3 id="3-注释-1"><a href="#3-注释-1" class="headerlink" title="3.注释"></a>3.注释</h3><h3 id="4-内置对象-1"><a href="#4-内置对象-1" class="headerlink" title="4.内置对象"></a>4.内置对象</h3><h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a><strong>目的</strong></h2><p>简化动态网页的开发，通过嵌入Java代码在HTML中生成动态内容。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>Jsp本质上就是一个servlet</p>
<p><img src="/./../TyporaImage/image-20240709152356408.png" alt="image-20240709152356408"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.脚本（Script）是一种编程语言，用于编写小型程序或自动化任务，通常在解释器环境中执行，而不是编译成机器代码。s）</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>JSP是一种基于Java的服务器端技术，用于创建动态网页。它将Java代码嵌入到HTML页面中，允许开发者生成动态内容。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-脚本-2"><a href="#1-脚本-2" class="headerlink" title="1.脚本"></a>1.脚本</h3><p>jsp定义java代码的方式</p>
<p><img src="/./../TyporaImage/image-20240709152557985.png" alt="image-20240709152557985"></p>
<h3 id="2-指令-2"><a href="#2-指令-2" class="headerlink" title="2.指令"></a>2.指令</h3><p>用于配置JSp页面，导入资源文件</p>
<p>格式：</p>
<p>&lt;%@ 指令名称 属性名&#x3D;属性值  %&gt;</p>
<h3 id="3-注释-2"><a href="#3-注释-2" class="headerlink" title="3.注释"></a>3.注释</h3><h3 id="4-内置对象-2"><a href="#4-内置对象-2" class="headerlink" title="4.内置对象"></a>4.内置对象</h3><h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a><strong>目的</strong></h2><p>简化动态网页的开发，通过嵌入Java代码在HTML中生成动态内容。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>Jsp本质上就是一个servlet</p>
<p><img src="/./../TyporaImage/image-20240709152356408.png" alt="image-20240709152356408"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.脚本（Script）是一种编程语言，用于编写小型程序或自动化任务，通常在解释器环境中执行，而不是编译成机器代码。## 定义</p>
<p>JSP是一种基于Java的服务器端技术，用于创建动态网页。它将Java代码嵌入到HTML页面中，允许开发者生成动态内容。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-脚本-3"><a href="#1-脚本-3" class="headerlink" title="1.脚本"></a>1.脚本</h3><p>jsp定义java代码的方式</p>
<p><img src="/./../TyporaImage/image-20240709152557985.png" alt="image-20240709152557985"></p>
<h3 id="2-指令-3"><a href="#2-指令-3" class="headerlink" title="2.指令"></a>2.指令</h3><p>用于配置JSp页面，导入资源文件</p>
<p>格式：</p>
<p>&lt;%@ 指令名称 属性名&#x3D;属性值  %&gt;</p>
<h3 id="3-注释-3"><a href="#3-注释-3" class="headerlink" title="3.注释"></a>3.注释</h3><h3 id="4-内置对象-3"><a href="#4-内置对象-3" class="headerlink" title="4.内置对象"></a>4.内置对象</h3><h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a><strong>目的</strong></h2><p>简化动态网页的开发，通过嵌入Java代码在HTML中生成动态内容。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>Jsp本质上就是一个servlet</p>
<p><img src="/./../TyporaImage/image-20240709152356408.png" alt="image-20240709152356408"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.脚本（Script）是一种编程语言，用于编写小型程序或自动化任务，通常在解释器环境中执行，而不是编译成机器代码。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JSTL常用标签</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JSTL%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="JSTL常用标签"><a href="#JSTL常用标签" class="headerlink" title="JSTL常用标签"></a>JSTL常用标签</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-if"><a href="#1-if" class="headerlink" title="1.if"></a>1.if</h3><h3 id="2-else"><a href="#2-else" class="headerlink" title="2.else"></a>2.else</h3><h3 id="3-for"><a href="#3-for" class="headerlink" title="3.for"></a>3.for</h3><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>①导入JSTL相关jar包</p>
<p>②引入标签库：taglib指令： &lt;%@ taglib %&gt;</p>
<p>③使用标签</p>
<h3 id="1-if标签"><a href="#1-if标签" class="headerlink" title="1.if标签"></a>1.if标签</h3><p>if标签没有else，只能一直写if标签</p>
<p>&lt;c:if test&#x3D;”boolean表达式”&gt;</p>
<p>需要输出的数据</p>
<p></c:if></p>
<h3 id="2-choose标签"><a href="#2-choose标签" class="headerlink" title="2.choose标签"></a>2.choose标签</h3><p>choose标签取出数字，when标签作判断，otherwise默认情况</p>
<p><img src="/./../TyporaImage/image-20240710164412240.png" alt="image-20240710164412240"></p>
<h3 id="3-foreach标签"><a href="#3-foreach标签" class="headerlink" title="3.foreach标签"></a>3.foreach标签</h3><p><img src="/./../TyporaImage/image-20240710164603423.png" alt="image-20240710164603423">## 分类</p>
<h3 id="1-if-1"><a href="#1-if-1" class="headerlink" title="1.if"></a>1.if</h3><h3 id="2-else-1"><a href="#2-else-1" class="headerlink" title="2.else"></a>2.else</h3><h3 id="3-for-1"><a href="#3-for-1" class="headerlink" title="3.for"></a>3.for</h3><h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>①导入JSTL相关jar包</p>
<p>②引入标签库：taglib指令： &lt;%@ taglib %&gt;</p>
<p>③使用标签</p>
<h3 id="1-if标签-1"><a href="#1-if标签-1" class="headerlink" title="1.if标签"></a>1.if标签</h3><p>if标签没有else，只能一直写if标签</p>
<p>&lt;c:if test&#x3D;”boolean表达式”&gt;</p>
<p>需要输出的数据</p>
<p></c:if></p>
<h3 id="2-choose标签-1"><a href="#2-choose标签-1" class="headerlink" title="2.choose标签"></a>2.choose标签</h3><p>choose标签取出数字，when标签作判断，otherwise默认情况</p>
<p><img src="/./../TyporaImage/image-20240710164412240.png" alt="image-20240710164412240"></p>
<h3 id="3-foreach标签-1"><a href="#3-foreach标签-1" class="headerlink" title="3.foreach标签"></a>3.foreach标签</h3><p><img src="/./../TyporaImage/image-20240710164603423.png" alt="image-20240710164603423">标签</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-if-2"><a href="#1-if-2" class="headerlink" title="1.if"></a>1.if</h3><h3 id="2-else-2"><a href="#2-else-2" class="headerlink" title="2.else"></a>2.else</h3><h3 id="3-for-2"><a href="#3-for-2" class="headerlink" title="3.for"></a>3.for</h3><h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>①导入JSTL相关jar包</p>
<p>②引入标签库：taglib指令： &lt;%@ taglib %&gt;</p>
<p>③使用标签</p>
<h3 id="1-if标签-2"><a href="#1-if标签-2" class="headerlink" title="1.if标签"></a>1.if标签</h3><p>if标签没有else，只能一直写if标签</p>
<p>&lt;c:if test&#x3D;”boolean表达式”&gt;</p>
<p>需要输出的数据</p>
<p></c:if></p>
<h3 id="2-choose标签-2"><a href="#2-choose标签-2" class="headerlink" title="2.choose标签"></a>2.choose标签</h3><p>choose标签取出数字，when标签作判断，otherwise默认情况</p>
<p><img src="/./../TyporaImage/image-20240710164412240.png" alt="image-20240710164412240"></p>
<h3 id="3-foreach标签-2"><a href="#3-foreach标签-2" class="headerlink" title="3.foreach标签"></a>3.foreach标签</h3><p><img src="/./../TyporaImage/image-20240710164603423.png" alt="image-20240710164603423">## 分类</p>
<h3 id="1-if-3"><a href="#1-if-3" class="headerlink" title="1.if"></a>1.if</h3><h3 id="2-else-3"><a href="#2-else-3" class="headerlink" title="2.else"></a>2.else</h3><h3 id="3-for-3"><a href="#3-for-3" class="headerlink" title="3.for"></a>3.for</h3><h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>①导入JSTL相关jar包</p>
<p>②引入标签库：taglib指令： &lt;%@ taglib %&gt;</p>
<p>③使用标签</p>
<h3 id="1-if标签-3"><a href="#1-if标签-3" class="headerlink" title="1.if标签"></a>1.if标签</h3><p>if标签没有else，只能一直写if标签</p>
<p>&lt;c:if test&#x3D;”boolean表达式”&gt;</p>
<p>需要输出的数据</p>
<p></c:if></p>
<h3 id="2-choose标签-3"><a href="#2-choose标签-3" class="headerlink" title="2.choose标签"></a>2.choose标签</h3><p>choose标签取出数字，when标签作判断，otherwise默认情况</p>
<p><img src="/./../TyporaImage/image-20240710164412240.png" alt="image-20240710164412240"></p>
<h3 id="3-foreach标签-3"><a href="#3-foreach标签-3" class="headerlink" title="3.foreach标签"></a>3.foreach标签</h3><p><img src="/./../TyporaImage/image-20240710164603423.png" alt="image-20240710164603423"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JSP内置对象</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JSP%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="JSP内置对象"><a href="#JSP内置对象" class="headerlink" title="JSP内置对象"></a>JSP内置对象</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>不需要人为创建，直接可以用的对象</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.pageContent</p>
<p>2.request</p>
<p>3.session</p>
<p>4.application</p>
<p>5.response</p>
<p>6.page</p>
<p>7.out</p>
<p>8.config</p>
<p>9.exception</p>
<p><img src="/./../TyporaImage/image-20240709154835596.png" alt="image-20240709154835596">## 定义</p>
<p>不需要人为创建，直接可以用的对象</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.pageContent</p>
<p>2.request</p>
<p>3.session</p>
<p>4.application</p>
<p>5.response</p>
<p>6.page</p>
<p>7.out</p>
<p>8.config</p>
<p>9.exception</p>
<p><img src="/./../TyporaImage/image-20240709154835596.png" alt="image-20240709154835596">对象</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>不需要人为创建，直接可以用的对象</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.pageContent</p>
<p>2.request</p>
<p>3.session</p>
<p>4.application</p>
<p>5.response</p>
<p>6.page</p>
<p>7.out</p>
<p>8.config</p>
<p>9.exception</p>
<p><img src="/./../TyporaImage/image-20240709154835596.png" alt="image-20240709154835596">## 定义</p>
<p>不需要人为创建，直接可以用的对象</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.pageContent</p>
<p>2.request</p>
<p>3.session</p>
<p>4.application</p>
<p>5.response</p>
<p>6.page</p>
<p>7.out</p>
<p>8.config</p>
<p>9.exception</p>
<p><img src="/./../TyporaImage/image-20240709154835596.png" alt="image-20240709154835596"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JSTL</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JSTL/</url>
    <content><![CDATA[<h1 id="JSTL"><a href="#JSTL" class="headerlink" title="JSTL"></a>JSTL</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>JSTL（JavaServer Pages Standard Tag Library）是Java EE的一部分，它提供了一组标准的标签库，用于在JSP页面中执行常见的任务，如条件判断、循环、操作XML文档、格式化数据和国际化等。JSTL旨在减少JSP页面中Java代码的使用，提高代码的可读性和可维护性。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-核心标签库（Core-Tags）"><a href="#1-核心标签库（Core-Tags）" class="headerlink" title="1.核心标签库（Core Tags）"></a>1.核心标签库（Core Tags）</h3><p>处理条件、循环、变量支持等基本操作。</p>
<h3 id="2-格式化标签库（Formatting-Tags）"><a href="#2-格式化标签库（Formatting-Tags）" class="headerlink" title="2.格式化标签库（Formatting Tags）"></a>2.格式化标签库（Formatting Tags）</h3><p>处理字符串格式化、数字和日期格式化、本地化等。</p>
<h3 id="3-SQL标签库（SQL-Tags）"><a href="#3-SQL标签库（SQL-Tags）" class="headerlink" title="3.SQL标签库（SQL Tags）"></a>3.SQL标签库（SQL Tags）</h3><p>执行SQL查询和更新操作。</p>
<h3 id="4-XML标签库（XML-Tags）"><a href="#4-XML标签库（XML-Tags）" class="headerlink" title="4.XML标签库（XML Tags）"></a>4.XML标签库（XML Tags）</h3><p>处理XML数据。</p>
<h3 id="5-函数标签库（Functions-Tags）"><a href="#5-函数标签库（Functions-Tags）" class="headerlink" title="5.函数标签库（Functions Tags）"></a>5.函数标签库（Functions Tags）</h3><p>提供字符串操作的函数。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>JSTL标签库通过特定的标签和属性来执行操作，这些标签通常以&lt;c:tagname&gt;、<a href="fmt:tagname">fmt:tagname</a>、<a href="sql:tagname">sql:tagname</a>、&lt;x:tagname&gt;、<a href="fn:tagname">fn:tagname</a>等形式出现。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>JSTL的主要目的是简化JSP页面开发，减少Java代码的使用，使页面逻辑更清晰，易于维护。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="物理描述"><a href="#物理描述" class="headerlink" title="物理描述"></a>物理描述</h3><p>JSTL标签在JSP页面中通过特定的语法表示，JSP编译器将这些标签转换为相应的Java代码，最终生成Servlet类。</p>
<h3 id="数学描述"><a href="#数学描述" class="headerlink" title="数学描述"></a>数学描述</h3><p>通过语法树解析JSTL标签，并生成相应的Servlet代码。## 定义</p>
<p>JSTL（JavaServer Pages Standard Tag Library）是Java EE的一部分，它提供了一组标准的标签库，用于在JSP页面中执行常见的任务，如条件判断、循环、操作XML文档、格式化数据和国际化等。JSTL旨在减少JSP页面中Java代码的使用，提高代码的可读性和可维护性。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-核心标签库（Core-Tags）-1"><a href="#1-核心标签库（Core-Tags）-1" class="headerlink" title="1.核心标签库（Core Tags）"></a>1.核心标签库（Core Tags）</h3><p>处理条件、循环、变量支持等基本操作。</p>
<h3 id="2-格式化标签库（Formatting-Tags）-1"><a href="#2-格式化标签库（Formatting-Tags）-1" class="headerlink" title="2.格式化标签库（Formatting Tags）"></a>2.格式化标签库（Formatting Tags）</h3><p>处理字符串格式化、数字和日期格式化、本地化等。</p>
<h3 id="3-SQL标签库（SQL-Tags）-1"><a href="#3-SQL标签库（SQL-Tags）-1" class="headerlink" title="3.SQL标签库（SQL Tags）"></a>3.SQL标签库（SQL Tags）</h3><p>执行SQL查询和更新操作。</p>
<h3 id="4-XML标签库（XML-Tags）-1"><a href="#4-XML标签库（XML-Tags）-1" class="headerlink" title="4.XML标签库（XML Tags）"></a>4.XML标签库（XML Tags）</h3><p>处理XML数据。</p>
<h3 id="5-函数标签库（Functions-Tags）-1"><a href="#5-函数标签库（Functions-Tags）-1" class="headerlink" title="5.函数标签库（Functions Tags）"></a>5.函数标签库（Functions Tags）</h3><p>提供字符串操作的函数。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>JSTL标签库通过特定的标签和属性来执行操作，这些标签通常以&lt;c:tagname&gt;、<a href="fmt:tagname">fmt:tagname</a>、<a href="sql:tagname">sql:tagname</a>、&lt;x:tagname&gt;、<a href="fn:tagname">fn:tagname</a>等形式出现。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>JSTL的主要目的是简化JSP页面开发，减少Java代码的使用，使页面逻辑更清晰，易于维护。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="物理描述-1"><a href="#物理描述-1" class="headerlink" title="物理描述"></a>物理描述</h3><p>JSTL标签在JSP页面中通过特定的语法表示，JSP编译器将这些标签转换为相应的Java代码，最终生成Servlet类。</p>
<h3 id="数学描述-1"><a href="#数学描述-1" class="headerlink" title="数学描述"></a>数学描述</h3><p>通过语法树解析JSTL标签，并生成相应的Servlet代码。TL</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>JSTL（JavaServer Pages Standard Tag Library）是Java EE的一部分，它提供了一组标准的标签库，用于在JSP页面中执行常见的任务，如条件判断、循环、操作XML文档、格式化数据和国际化等。JSTL旨在减少JSP页面中Java代码的使用，提高代码的可读性和可维护性。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-核心标签库（Core-Tags）-2"><a href="#1-核心标签库（Core-Tags）-2" class="headerlink" title="1.核心标签库（Core Tags）"></a>1.核心标签库（Core Tags）</h3><p>处理条件、循环、变量支持等基本操作。</p>
<h3 id="2-格式化标签库（Formatting-Tags）-2"><a href="#2-格式化标签库（Formatting-Tags）-2" class="headerlink" title="2.格式化标签库（Formatting Tags）"></a>2.格式化标签库（Formatting Tags）</h3><p>处理字符串格式化、数字和日期格式化、本地化等。</p>
<h3 id="3-SQL标签库（SQL-Tags）-2"><a href="#3-SQL标签库（SQL-Tags）-2" class="headerlink" title="3.SQL标签库（SQL Tags）"></a>3.SQL标签库（SQL Tags）</h3><p>执行SQL查询和更新操作。</p>
<h3 id="4-XML标签库（XML-Tags）-2"><a href="#4-XML标签库（XML-Tags）-2" class="headerlink" title="4.XML标签库（XML Tags）"></a>4.XML标签库（XML Tags）</h3><p>处理XML数据。</p>
<h3 id="5-函数标签库（Functions-Tags）-2"><a href="#5-函数标签库（Functions-Tags）-2" class="headerlink" title="5.函数标签库（Functions Tags）"></a>5.函数标签库（Functions Tags）</h3><p>提供字符串操作的函数。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>JSTL标签库通过特定的标签和属性来执行操作，这些标签通常以&lt;c:tagname&gt;、<a href="fmt:tagname">fmt:tagname</a>、<a href="sql:tagname">sql:tagname</a>、&lt;x:tagname&gt;、<a href="fn:tagname">fn:tagname</a>等形式出现。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>JSTL的主要目的是简化JSP页面开发，减少Java代码的使用，使页面逻辑更清晰，易于维护。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="物理描述-2"><a href="#物理描述-2" class="headerlink" title="物理描述"></a>物理描述</h3><p>JSTL标签在JSP页面中通过特定的语法表示，JSP编译器将这些标签转换为相应的Java代码，最终生成Servlet类。</p>
<h3 id="数学描述-2"><a href="#数学描述-2" class="headerlink" title="数学描述"></a>数学描述</h3><p>通过语法树解析JSTL标签，并生成相应的Servlet代码。## 定义</p>
<p>JSTL（JavaServer Pages Standard Tag Library）是Java EE的一部分，它提供了一组标准的标签库，用于在JSP页面中执行常见的任务，如条件判断、循环、操作XML文档、格式化数据和国际化等。JSTL旨在减少JSP页面中Java代码的使用，提高代码的可读性和可维护性。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-核心标签库（Core-Tags）-3"><a href="#1-核心标签库（Core-Tags）-3" class="headerlink" title="1.核心标签库（Core Tags）"></a>1.核心标签库（Core Tags）</h3><p>处理条件、循环、变量支持等基本操作。</p>
<h3 id="2-格式化标签库（Formatting-Tags）-3"><a href="#2-格式化标签库（Formatting-Tags）-3" class="headerlink" title="2.格式化标签库（Formatting Tags）"></a>2.格式化标签库（Formatting Tags）</h3><p>处理字符串格式化、数字和日期格式化、本地化等。</p>
<h3 id="3-SQL标签库（SQL-Tags）-3"><a href="#3-SQL标签库（SQL-Tags）-3" class="headerlink" title="3.SQL标签库（SQL Tags）"></a>3.SQL标签库（SQL Tags）</h3><p>执行SQL查询和更新操作。</p>
<h3 id="4-XML标签库（XML-Tags）-3"><a href="#4-XML标签库（XML-Tags）-3" class="headerlink" title="4.XML标签库（XML Tags）"></a>4.XML标签库（XML Tags）</h3><p>处理XML数据。</p>
<h3 id="5-函数标签库（Functions-Tags）-3"><a href="#5-函数标签库（Functions-Tags）-3" class="headerlink" title="5.函数标签库（Functions Tags）"></a>5.函数标签库（Functions Tags）</h3><p>提供字符串操作的函数。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>JSTL标签库通过特定的标签和属性来执行操作，这些标签通常以&lt;c:tagname&gt;、<a href="fmt:tagname">fmt:tagname</a>、<a href="sql:tagname">sql:tagname</a>、&lt;x:tagname&gt;、<a href="fn:tagname">fn:tagname</a>等形式出现。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>JSTL的主要目的是简化JSP页面开发，减少Java代码的使用，使页面逻辑更清晰，易于维护。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="物理描述-3"><a href="#物理描述-3" class="headerlink" title="物理描述"></a>物理描述</h3><p>JSTL标签在JSP页面中通过特定的语法表示，JSP编译器将这些标签转换为相应的Java代码，最终生成Servlet类。</p>
<h3 id="数学描述-3"><a href="#数学描述-3" class="headerlink" title="数学描述"></a>数学描述</h3><p>通过语法树解析JSTL标签，并生成相应的Servlet代码。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JS插件_BootStrap</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JS%E6%8F%92%E4%BB%B6_BootStrap/</url>
    <content><![CDATA[<h1 id="JS插件"><a href="#JS插件" class="headerlink" title="JS插件"></a>JS插件</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>轮播图</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>轮播图</p>
<p>复制并修改代码即可。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>轮播图</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>轮播图</p>
<p>复制并修改代码即可。插件</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>轮播图</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>轮播图</p>
<p>复制并修改代码即可。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>轮播图</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>轮播图</p>
<p>复制并修改代码即可。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JavaScript</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JavaScript/</url>
    <content><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>一个客户端脚本语言。</p>
<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.内部JS</p>
<p>2.外部JS</p>
<h3 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h3><img src="../TyporaImage/image-20240514214624711.png" alt="image-20240514214624711" style="zoom: 150%;" />





<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-内部js"><a href="#1-内部js" class="headerlink" title="1.内部js"></a>1.内部js</h4><p><img src="/../TyporaImage/image-20240514214900819.png" alt="image-20240514214900819"></p>
<h4 id="2-外部js"><a href="#2-外部js" class="headerlink" title="2.外部js"></a>2.外部js</h4><p><img src="/../TyporaImage/image-20240514214909668.png" alt="image-20240514214909668"></p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>可以用来控制html元素，让页面的元素有一些动态效果，来增强用户和HTML页面交互的过程，增强用户体验。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.JavaScript运行在客户端浏览器中，每一个浏览器都有JavaScript的解析引擎。</p>
<p>2.脚本语言：不需要编译，浏览器直接进行解析、执行的语言。</p>
<p>3.<script>可以定义在html中的任何位置，但是定义的位置会影响他们的执行顺序。</p>
<p>4.<script>可以定义多个。</p>
<p>5.语句以;结尾，如果一行只有一条语句，则可以不写。</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>一个客户端脚本语言。</p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.内部JS</p>
<p>2.外部JS</p>
<h3 id="来源-1"><a href="#来源-1" class="headerlink" title="来源"></a>来源</h3><img src="../TyporaImage/image-20240514214624711.png" alt="image-20240514214624711" style="zoom: 150%;" />





<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-内部js-1"><a href="#1-内部js-1" class="headerlink" title="1.内部js"></a>1.内部js</h4><p><img src="/../TyporaImage/image-20240514214900819.png" alt="image-20240514214900819"></p>
<h4 id="2-外部js-1"><a href="#2-外部js-1" class="headerlink" title="2.外部js"></a>2.外部js</h4><p><img src="/../TyporaImage/image-20240514214909668.png" alt="image-20240514214909668"></p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>可以用来控制html元素，让页面的元素有一些动态效果，来增强用户和HTML页面交互的过程，增强用户体验。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.JavaScript运行在客户端浏览器中，每一个浏览器都有JavaScript的解析引擎。</p>
<p>2.脚本语言：不需要编译，浏览器直接进行解析、执行的语言。</p>
<p>3.<script>可以定义在html中的任何位置，但是定义的位置会影响他们的执行顺序。</p>
<p>4.<script>可以定义多个。</p>
<p>5.语句以;结尾，如果一行只有一条语句，则可以不写。pt</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>一个客户端脚本语言。</p>
<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.内部JS</p>
<p>2.外部JS</p>
<h3 id="来源-2"><a href="#来源-2" class="headerlink" title="来源"></a>来源</h3><img src="../TyporaImage/image-20240514214624711.png" alt="image-20240514214624711" style="zoom: 150%;" />





<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-内部js-2"><a href="#1-内部js-2" class="headerlink" title="1.内部js"></a>1.内部js</h4><p><img src="/../TyporaImage/image-20240514214900819.png" alt="image-20240514214900819"></p>
<h4 id="2-外部js-2"><a href="#2-外部js-2" class="headerlink" title="2.外部js"></a>2.外部js</h4><p><img src="/../TyporaImage/image-20240514214909668.png" alt="image-20240514214909668"></p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>可以用来控制html元素，让页面的元素有一些动态效果，来增强用户和HTML页面交互的过程，增强用户体验。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.JavaScript运行在客户端浏览器中，每一个浏览器都有JavaScript的解析引擎。</p>
<p>2.脚本语言：不需要编译，浏览器直接进行解析、执行的语言。</p>
<p>3.<script>可以定义在html中的任何位置，但是定义的位置会影响他们的执行顺序。</p>
<p>4.<script>可以定义多个。</p>
<p>5.语句以;结尾，如果一行只有一条语句，则可以不写。</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>一个客户端脚本语言。</p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.内部JS</p>
<p>2.外部JS</p>
<h3 id="来源-3"><a href="#来源-3" class="headerlink" title="来源"></a>来源</h3><img src="../TyporaImage/image-20240514214624711.png" alt="image-20240514214624711" style="zoom: 150%;" />





<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-内部js-3"><a href="#1-内部js-3" class="headerlink" title="1.内部js"></a>1.内部js</h4><p><img src="/../TyporaImage/image-20240514214900819.png" alt="image-20240514214900819"></p>
<h4 id="2-外部js-3"><a href="#2-外部js-3" class="headerlink" title="2.外部js"></a>2.外部js</h4><p><img src="/../TyporaImage/image-20240514214909668.png" alt="image-20240514214909668"></p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>可以用来控制html元素，让页面的元素有一些动态效果，来增强用户和HTML页面交互的过程，增强用户体验。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.JavaScript运行在客户端浏览器中，每一个浏览器都有JavaScript的解析引擎。</p>
<p>2.脚本语言：不需要编译，浏览器直接进行解析、执行的语言。</p>
<p>3.<script>可以定义在html中的任何位置，但是定义的位置会影响他们的执行顺序。</p>
<p>4.<script>可以定义多个。</p>
<p>5.语句以;结尾，如果一行只有一条语句，则可以不写。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JavaScript_数据类型.</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JavaScript_%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B./</url>
    <content><![CDATA[<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><p><img src="/../TyporaImage/image-20240514220318515.png" alt="image-20240514220318515">## 是什么</p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><p><img src="/../TyporaImage/image-20240514220318515.png" alt="image-20240514220318515">类型</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><p><img src="/../TyporaImage/image-20240514220318515.png" alt="image-20240514220318515">## 是什么</p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><p><img src="/../TyporaImage/image-20240514220318515.png" alt="image-20240514220318515"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>JavaWeb介绍</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JavaWeb%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1 id="什么是javaweb"><a href="#什么是javaweb" class="headerlink" title="什么是javaweb"></a>什么是javaweb</h1><p>使用java语言开发互联网项目</p>
<h2 id="课程介绍："><a href="#课程介绍：" class="headerlink" title="课程介绍："></a>课程介绍：</h2><p>数据库：5天</p>
<p>网页前端：5天</p>
<p>web核心技术：15天</p>
<p>旅游管理系统：5天</p>
<p>使用java语言开发互联网项目</p>
<h2 id="课程介绍：-1"><a href="#课程介绍：-1" class="headerlink" title="课程介绍："></a>课程介绍：</h2><p>数据库：5天</p>
<p>网页前端：5天</p>
<p>web核心技术：15天</p>
<p>旅游管理系统：5天eb</p>
<p>使用java语言开发互联网项目</p>
<h2 id="课程介绍：-2"><a href="#课程介绍：-2" class="headerlink" title="课程介绍："></a>课程介绍：</h2><p>数据库：5天</p>
<p>网页前端：5天</p>
<p>web核心技术：15天</p>
<p>旅游管理系统：5天</p>
<p>使用java语言开发互联网项目</p>
<h2 id="课程介绍：-3"><a href="#课程介绍：-3" class="headerlink" title="课程介绍："></a>课程介绍：</h2><p>数据库：5天</p>
<p>网页前端：5天</p>
<p>web核心技术：15天</p>
<p>旅游管理系统：5天</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Jsoup对象</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Jsoup%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240523101236667.png" alt="image-20240523101236667"></p>
<p><img src="/../TyporaImage/image-20240523101236667.png" alt="image-20240523101236667">用方法</p>
<p><img src="/../TyporaImage/image-20240523101236667.png" alt="image-20240523101236667"></p>
<p><img src="/../TyporaImage/image-20240523101236667.png" alt="image-20240523101236667"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Java对象与Json对象的转化</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Java%E5%AF%B9%E8%B1%A1%E4%B8%8EJson%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%BD%AC%E5%8C%96/</url>
    <content><![CDATA[<h1 id="java对象与json的转换"><a href="#java对象与json的转换" class="headerlink" title="java对象与json的转换"></a>java对象与json的转换</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>①提前导入jar包</p>
<p>②创建jackson核心对象</p>
<p>③用相关的方法进行操作</p>
<h3 id="Ⅰ、java对象转为json"><a href="#Ⅰ、java对象转为json" class="headerlink" title="Ⅰ、java对象转为json"></a>Ⅰ、java对象转为json</h3><h4 id="1-一般转换方法"><a href="#1-一般转换方法" class="headerlink" title="1.一般转换方法"></a>1.一般转换方法</h4><p><img src="/./../TyporaImage/image-20240724165237157.png" alt="image-20240724165237157"></p>
<p><img src="/./../TyporaImage/image-20240724165329514.png" alt="image-20240724165329514"></p>
<h4 id="2-注解"><a href="#2-注解" class="headerlink" title="2.注解"></a>2.注解</h4><p><img src="/./../TyporaImage/image-20240724165541626.png" alt="image-20240724165541626"></p>
<h4 id=""><a href="#" class="headerlink" title=""></a></h4><h3 id="Ⅱ、json转为java对象"><a href="#Ⅱ、json转为java对象" class="headerlink" title="Ⅱ、json转为java对象"></a>Ⅱ、json转为java对象</h3><p><img src="/./../TyporaImage/image-20240724170014589.png" alt="image-20240724170014589">## 使用方法</p>
<p>①提前导入jar包</p>
<p>②创建jackson核心对象</p>
<p>③用相关的方法进行操作</p>
<h3 id="Ⅰ、java对象转为json-1"><a href="#Ⅰ、java对象转为json-1" class="headerlink" title="Ⅰ、java对象转为json"></a>Ⅰ、java对象转为json</h3><h4 id="1-一般转换方法-1"><a href="#1-一般转换方法-1" class="headerlink" title="1.一般转换方法"></a>1.一般转换方法</h4><p><img src="/./../TyporaImage/image-20240724165237157.png" alt="image-20240724165237157"></p>
<p><img src="/./../TyporaImage/image-20240724165329514.png" alt="image-20240724165329514"></p>
<h4 id="2-注解-1"><a href="#2-注解-1" class="headerlink" title="2.注解"></a>2.注解</h4><p><img src="/./../TyporaImage/image-20240724165541626.png" alt="image-20240724165541626"></p>
<h4 id="-1"><a href="#-1" class="headerlink" title=""></a></h4><h3 id="Ⅱ、json转为java对象-1"><a href="#Ⅱ、json转为java对象-1" class="headerlink" title="Ⅱ、json转为java对象"></a>Ⅱ、json转为java对象</h3><p><img src="/./../TyporaImage/image-20240724170014589.png" alt="image-20240724170014589">转换</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>①提前导入jar包</p>
<p>②创建jackson核心对象</p>
<p>③用相关的方法进行操作</p>
<h3 id="Ⅰ、java对象转为json-2"><a href="#Ⅰ、java对象转为json-2" class="headerlink" title="Ⅰ、java对象转为json"></a>Ⅰ、java对象转为json</h3><h4 id="1-一般转换方法-2"><a href="#1-一般转换方法-2" class="headerlink" title="1.一般转换方法"></a>1.一般转换方法</h4><p><img src="/./../TyporaImage/image-20240724165237157.png" alt="image-20240724165237157"></p>
<p><img src="/./../TyporaImage/image-20240724165329514.png" alt="image-20240724165329514"></p>
<h4 id="2-注解-2"><a href="#2-注解-2" class="headerlink" title="2.注解"></a>2.注解</h4><p><img src="/./../TyporaImage/image-20240724165541626.png" alt="image-20240724165541626"></p>
<h4 id="-2"><a href="#-2" class="headerlink" title=""></a></h4><h3 id="Ⅱ、json转为java对象-2"><a href="#Ⅱ、json转为java对象-2" class="headerlink" title="Ⅱ、json转为java对象"></a>Ⅱ、json转为java对象</h3><p><img src="/./../TyporaImage/image-20240724170014589.png" alt="image-20240724170014589">## 使用方法</p>
<p>①提前导入jar包</p>
<p>②创建jackson核心对象</p>
<p>③用相关的方法进行操作</p>
<h3 id="Ⅰ、java对象转为json-3"><a href="#Ⅰ、java对象转为json-3" class="headerlink" title="Ⅰ、java对象转为json"></a>Ⅰ、java对象转为json</h3><h4 id="1-一般转换方法-3"><a href="#1-一般转换方法-3" class="headerlink" title="1.一般转换方法"></a>1.一般转换方法</h4><p><img src="/./../TyporaImage/image-20240724165237157.png" alt="image-20240724165237157"></p>
<p><img src="/./../TyporaImage/image-20240724165329514.png" alt="image-20240724165329514"></p>
<h4 id="2-注解-3"><a href="#2-注解-3" class="headerlink" title="2.注解"></a>2.注解</h4><p><img src="/./../TyporaImage/image-20240724165541626.png" alt="image-20240724165541626"></p>
<h4 id="-3"><a href="#-3" class="headerlink" title=""></a></h4><h3 id="Ⅱ、json转为java对象-3"><a href="#Ⅱ、json转为java对象-3" class="headerlink" title="Ⅱ、json转为java对象"></a>Ⅱ、json转为java对象</h3><p><img src="/./../TyporaImage/image-20240724170014589.png" alt="image-20240724170014589"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Junit单元测试</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Junit%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h1 id="Junit单元测试"><a href="#Junit单元测试" class="headerlink" title="Junit单元测试"></a>Junit单元测试</h1><h2 id="测试分类"><a href="#测试分类" class="headerlink" title="测试分类"></a>测试分类</h2><p>​	1、黑盒测试</p>
<p>​	2、白盒测试</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>​	1、首先定义一个测试包，然后在包里定义测试类。</p>
<p>​	2.在测试类中调用应该测试的类。</p>
<p>​	3.加上@Test，就可以使用了。</p>
<h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><p>​	还有@Before和@After这两个注解。</p>
<p>​	@Before在方法运行之前被调用，而 @After则是在方法结束以后进行执行。## 测试分类</p>
<p>​	1、黑盒测试</p>
<p>​	2、白盒测试</p>
<h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><p>​	1、首先定义一个测试包，然后在包里定义测试类。</p>
<p>​	2.在测试类中调用应该测试的类。</p>
<p>​	3.加上@Test，就可以使用了。</p>
<h2 id="PS-1"><a href="#PS-1" class="headerlink" title="PS"></a>PS</h2><p>​	还有@Before和@After这两个注解。</p>
<p>​	@Before在方法运行之前被调用，而 @After则是在方法结束以后进行执行。测试</p>
<h2 id="测试分类-1"><a href="#测试分类-1" class="headerlink" title="测试分类"></a>测试分类</h2><p>​	1、黑盒测试</p>
<p>​	2、白盒测试</p>
<h2 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h2><p>​	1、首先定义一个测试包，然后在包里定义测试类。</p>
<p>​	2.在测试类中调用应该测试的类。</p>
<p>​	3.加上@Test，就可以使用了。</p>
<h2 id="PS-2"><a href="#PS-2" class="headerlink" title="PS"></a>PS</h2><p>​	还有@Before和@After这两个注解。</p>
<p>​	@Before在方法运行之前被调用，而 @After则是在方法结束以后进行执行。## 测试分类</p>
<p>​	1、黑盒测试</p>
<p>​	2、白盒测试</p>
<h2 id="使用-3"><a href="#使用-3" class="headerlink" title="使用"></a>使用</h2><p>​	1、首先定义一个测试包，然后在包里定义测试类。</p>
<p>​	2.在测试类中调用应该测试的类。</p>
<p>​	3.加上@Test，就可以使用了。</p>
<h2 id="PS-3"><a href="#PS-3" class="headerlink" title="PS"></a>PS</h2><p>​	还有@Before和@After这两个注解。</p>
<p>​	@Before在方法运行之前被调用，而 @After则是在方法结束以后进行执行。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Linux域名映射</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Linux%E5%9F%9F%E5%90%8D%E6%98%A0%E5%B0%84/</url>
    <content><![CDATA[<h1 id="域名映射"><a href="#域名映射" class="headerlink" title="域名映射"></a>域名映射</h1><h2 id="域名映射-1"><a href="#域名映射-1" class="headerlink" title="域名映射"></a>域名映射</h2><p><img src="/./../TyporaImage/image-20240730211728973.png" alt="image-20240730211728973"></p>
<p>直接vim修改这个文件就行</p>
<p>自己配置一下这个ip地址和对应的域名即可</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="网络服务管理"><a href="#网络服务管理" class="headerlink" title="网络服务管理"></a>网络服务管理</h3><p><img src="/./../TyporaImage/image-20240730211841889.png" alt="image-20240730211841889">## 域名映射</p>
<p><img src="/./../TyporaImage/image-20240730211728973.png" alt="image-20240730211728973"></p>
<p>直接vim修改这个文件就行</p>
<p>自己配置一下这个ip地址和对应的域名即可</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="网络服务管理-1"><a href="#网络服务管理-1" class="headerlink" title="网络服务管理"></a>网络服务管理</h3><p><img src="/./../TyporaImage/image-20240730211841889.png" alt="image-20240730211841889">映射</p>
<h2 id="域名映射-2"><a href="#域名映射-2" class="headerlink" title="域名映射"></a>域名映射</h2><p><img src="/./../TyporaImage/image-20240730211728973.png" alt="image-20240730211728973"></p>
<p>直接vim修改这个文件就行</p>
<p>自己配置一下这个ip地址和对应的域名即可</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="网络服务管理-2"><a href="#网络服务管理-2" class="headerlink" title="网络服务管理"></a>网络服务管理</h3><p><img src="/./../TyporaImage/image-20240730211841889.png" alt="image-20240730211841889">## 域名映射</p>
<p><img src="/./../TyporaImage/image-20240730211728973.png" alt="image-20240730211728973"></p>
<p>直接vim修改这个文件就行</p>
<p>自己配置一下这个ip地址和对应的域名即可</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="网络服务管理-3"><a href="#网络服务管理-3" class="headerlink" title="网络服务管理"></a>网络服务管理</h3><p><img src="/./../TyporaImage/image-20240730211841889.png" alt="image-20240730211841889"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Linux修改IP</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Linux%E4%BF%AE%E6%94%B9IP/</url>
    <content><![CDATA[<h1 id="修改IP"><a href="#修改IP" class="headerlink" title="修改IP"></a>修改IP</h1><p><img src="/./../TyporaImage/image-20240730211602010.png" alt="image-20240730211602010"><img src="/./../TyporaImage/image-20240730211602010.png" alt="image-20240730211602010">IP</p>
<p><img src="/./../TyporaImage/image-20240730211602010.png" alt="image-20240730211602010"><img src="/./../TyporaImage/image-20240730211602010.png" alt="image-20240730211602010"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Linux常用命令</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h1><h2 id="Ⅰ-目录相关"><a href="#Ⅰ-目录相关" class="headerlink" title="Ⅰ.目录相关"></a>Ⅰ.目录相关</h2><h3 id="1-创建"><a href="#1-创建" class="headerlink" title="1.创建"></a>1.创建</h3><p>①mkdir </p>
<p>②mkdir -p           </p>
<p>创建多级目录</p>
<h3 id="2-删除"><a href="#2-删除" class="headerlink" title="2.删除"></a>2.删除</h3><p>①rmdir</p>
<h3 id="3-切换"><a href="#3-切换" class="headerlink" title="3.切换"></a>3.切换</h3><p>①cd   路径</p>
<p>②cd .. 返回上一级目录</p>
<p>③cd - 返回上一次目录</p>
<h3 id="4-查看当前路径"><a href="#4-查看当前路径" class="headerlink" title="4.查看当前路径"></a>4.查看当前路径</h3><p>pwd</p>
<h2 id="Ⅱ-文件相关"><a href="#Ⅱ-文件相关" class="headerlink" title="Ⅱ.文件相关"></a>Ⅱ.文件相关</h2><h3 id="1-查看文件列表"><a href="#1-查看文件列表" class="headerlink" title="1.查看文件列表"></a>1.查看文件列表</h3><p>①ls</p>
<p>②ls  -l  或者ll</p>
<h3 id="2-查看"><a href="#2-查看" class="headerlink" title="2.查看"></a>2.查看</h3><p>①.cat </p>
<p>②more</p>
<p>③less</p>
<p>④tail -数字   </p>
<p>查看最后的一定行数</p>
<p>tail -f</p>
<p>动态查看</p>
<h3 id="3-删除"><a href="#3-删除" class="headerlink" title="3.删除"></a>3.删除</h3><p>①rm</p>
<p>rm -r</p>
<p>递归删除</p>
<p>rm -f </p>
<p>强制删除</p>
<h3 id="4-复制"><a href="#4-复制" class="headerlink" title="4.复制"></a>4.复制</h3><p>①cp 原文件  目的目录</p>
<h3 id="5-剪切"><a href="#5-剪切" class="headerlink" title="5.剪切"></a>5.剪切</h3><p>①mv 原文件  目的目录</p>
<h3 id="6-查找文件和查找文件内容"><a href="#6-查找文件和查找文件内容" class="headerlink" title="6.查找文件和查找文件内容"></a>6.查找文件和查找文件内容</h3><p>查找文件：</p>
<p><img src="/./../TyporaImage/image-20240730210229179.png" alt="image-20240730210229179"></p>
<p>查找文件内容：</p>
<p><img src="/./../TyporaImage/image-20240730210255618.png" alt="image-20240730210255618"></p>
<h3 id="7-创建"><a href="#7-创建" class="headerlink" title="7.创建"></a>7.创建</h3><p>touch</p>
<h3 id="8-编辑文件"><a href="#8-编辑文件" class="headerlink" title="8.编辑文件"></a>8.编辑文件</h3><p>①vi</p>
<p>②vim</p>
<p><img src="/./../TyporaImage/image-20240730210642336.png" alt="image-20240730210642336"></p>
<h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><h3 id="1-tar命令"><a href="#1-tar命令" class="headerlink" title="1.tar命令"></a>1.tar命令</h3><p><img src="/./../TyporaImage/image-20240730210054453.png" alt="image-20240730210054453"></p>
<h3 id="2-清屏"><a href="#2-清屏" class="headerlink" title="2.清屏"></a>2.清屏</h3><p>clear</p>
<h3 id="3-重定向输出"><a href="#3-重定向输出" class="headerlink" title="3.重定向输出"></a>3.重定向输出</h3><p><img src="/./../TyporaImage/image-20240730210923043.png" alt="image-20240730210923043"></p>
<h3 id="4-系统管理命令"><a href="#4-系统管理命令" class="headerlink" title="4.系统管理命令"></a>4.系统管理命令</h3><p><img src="/./../TyporaImage/image-20240730210942357.png" alt="image-20240730210942357"></p>
<h3 id="5-管道命令"><a href="#5-管道命令" class="headerlink" title="5.管道命令"></a>5.管道命令</h3><p><img src="/./../TyporaImage/image-20240730211017761.png" alt="image-20240730211017761"></p>
<h2 id="Ⅰ-目录相关-1"><a href="#Ⅰ-目录相关-1" class="headerlink" title="Ⅰ.目录相关"></a>Ⅰ.目录相关</h2><h3 id="1-创建-1"><a href="#1-创建-1" class="headerlink" title="1.创建"></a>1.创建</h3><p>①mkdir </p>
<p>②mkdir -p           </p>
<p>创建多级目录</p>
<h3 id="2-删除-1"><a href="#2-删除-1" class="headerlink" title="2.删除"></a>2.删除</h3><p>①rmdir</p>
<h3 id="3-切换-1"><a href="#3-切换-1" class="headerlink" title="3.切换"></a>3.切换</h3><p>①cd   路径</p>
<p>②cd .. 返回上一级目录</p>
<p>③cd - 返回上一次目录</p>
<h3 id="4-查看当前路径-1"><a href="#4-查看当前路径-1" class="headerlink" title="4.查看当前路径"></a>4.查看当前路径</h3><p>pwd</p>
<h2 id="Ⅱ-文件相关-1"><a href="#Ⅱ-文件相关-1" class="headerlink" title="Ⅱ.文件相关"></a>Ⅱ.文件相关</h2><h3 id="1-查看文件列表-1"><a href="#1-查看文件列表-1" class="headerlink" title="1.查看文件列表"></a>1.查看文件列表</h3><p>①ls</p>
<p>②ls  -l  或者ll</p>
<h3 id="2-查看-1"><a href="#2-查看-1" class="headerlink" title="2.查看"></a>2.查看</h3><p>①.cat </p>
<p>②more</p>
<p>③less</p>
<p>④tail -数字   </p>
<p>查看最后的一定行数</p>
<p>tail -f</p>
<p>动态查看</p>
<h3 id="3-删除-1"><a href="#3-删除-1" class="headerlink" title="3.删除"></a>3.删除</h3><p>①rm</p>
<p>rm -r</p>
<p>递归删除</p>
<p>rm -f </p>
<p>强制删除</p>
<h3 id="4-复制-1"><a href="#4-复制-1" class="headerlink" title="4.复制"></a>4.复制</h3><p>①cp 原文件  目的目录</p>
<h3 id="5-剪切-1"><a href="#5-剪切-1" class="headerlink" title="5.剪切"></a>5.剪切</h3><p>①mv 原文件  目的目录</p>
<h3 id="6-查找文件和查找文件内容-1"><a href="#6-查找文件和查找文件内容-1" class="headerlink" title="6.查找文件和查找文件内容"></a>6.查找文件和查找文件内容</h3><p>查找文件：</p>
<p><img src="/./../TyporaImage/image-20240730210229179.png" alt="image-20240730210229179"></p>
<p>查找文件内容：</p>
<p><img src="/./../TyporaImage/image-20240730210255618.png" alt="image-20240730210255618"></p>
<h3 id="7-创建-1"><a href="#7-创建-1" class="headerlink" title="7.创建"></a>7.创建</h3><p>touch</p>
<h3 id="8-编辑文件-1"><a href="#8-编辑文件-1" class="headerlink" title="8.编辑文件"></a>8.编辑文件</h3><p>①vi</p>
<p>②vim</p>
<p><img src="/./../TyporaImage/image-20240730210642336.png" alt="image-20240730210642336"></p>
<h2 id="其他命令-1"><a href="#其他命令-1" class="headerlink" title="其他命令"></a>其他命令</h2><h3 id="1-tar命令-1"><a href="#1-tar命令-1" class="headerlink" title="1.tar命令"></a>1.tar命令</h3><p><img src="/./../TyporaImage/image-20240730210054453.png" alt="image-20240730210054453"></p>
<h3 id="2-清屏-1"><a href="#2-清屏-1" class="headerlink" title="2.清屏"></a>2.清屏</h3><p>clear</p>
<h3 id="3-重定向输出-1"><a href="#3-重定向输出-1" class="headerlink" title="3.重定向输出"></a>3.重定向输出</h3><p><img src="/./../TyporaImage/image-20240730210923043.png" alt="image-20240730210923043"></p>
<h3 id="4-系统管理命令-1"><a href="#4-系统管理命令-1" class="headerlink" title="4.系统管理命令"></a>4.系统管理命令</h3><p><img src="/./../TyporaImage/image-20240730210942357.png" alt="image-20240730210942357"></p>
<h3 id="5-管道命令-1"><a href="#5-管道命令-1" class="headerlink" title="5.管道命令"></a>5.管道命令</h3><p><img src="/./../TyporaImage/image-20240730211017761.png" alt="image-20240730211017761">命令</p>
<h2 id="Ⅰ-目录相关-2"><a href="#Ⅰ-目录相关-2" class="headerlink" title="Ⅰ.目录相关"></a>Ⅰ.目录相关</h2><h3 id="1-创建-2"><a href="#1-创建-2" class="headerlink" title="1.创建"></a>1.创建</h3><p>①mkdir </p>
<p>②mkdir -p           </p>
<p>创建多级目录</p>
<h3 id="2-删除-2"><a href="#2-删除-2" class="headerlink" title="2.删除"></a>2.删除</h3><p>①rmdir</p>
<h3 id="3-切换-2"><a href="#3-切换-2" class="headerlink" title="3.切换"></a>3.切换</h3><p>①cd   路径</p>
<p>②cd .. 返回上一级目录</p>
<p>③cd - 返回上一次目录</p>
<h3 id="4-查看当前路径-2"><a href="#4-查看当前路径-2" class="headerlink" title="4.查看当前路径"></a>4.查看当前路径</h3><p>pwd</p>
<h2 id="Ⅱ-文件相关-2"><a href="#Ⅱ-文件相关-2" class="headerlink" title="Ⅱ.文件相关"></a>Ⅱ.文件相关</h2><h3 id="1-查看文件列表-2"><a href="#1-查看文件列表-2" class="headerlink" title="1.查看文件列表"></a>1.查看文件列表</h3><p>①ls</p>
<p>②ls  -l  或者ll</p>
<h3 id="2-查看-2"><a href="#2-查看-2" class="headerlink" title="2.查看"></a>2.查看</h3><p>①.cat </p>
<p>②more</p>
<p>③less</p>
<p>④tail -数字   </p>
<p>查看最后的一定行数</p>
<p>tail -f</p>
<p>动态查看</p>
<h3 id="3-删除-2"><a href="#3-删除-2" class="headerlink" title="3.删除"></a>3.删除</h3><p>①rm</p>
<p>rm -r</p>
<p>递归删除</p>
<p>rm -f </p>
<p>强制删除</p>
<h3 id="4-复制-2"><a href="#4-复制-2" class="headerlink" title="4.复制"></a>4.复制</h3><p>①cp 原文件  目的目录</p>
<h3 id="5-剪切-2"><a href="#5-剪切-2" class="headerlink" title="5.剪切"></a>5.剪切</h3><p>①mv 原文件  目的目录</p>
<h3 id="6-查找文件和查找文件内容-2"><a href="#6-查找文件和查找文件内容-2" class="headerlink" title="6.查找文件和查找文件内容"></a>6.查找文件和查找文件内容</h3><p>查找文件：</p>
<p><img src="/./../TyporaImage/image-20240730210229179.png" alt="image-20240730210229179"></p>
<p>查找文件内容：</p>
<p><img src="/./../TyporaImage/image-20240730210255618.png" alt="image-20240730210255618"></p>
<h3 id="7-创建-2"><a href="#7-创建-2" class="headerlink" title="7.创建"></a>7.创建</h3><p>touch</p>
<h3 id="8-编辑文件-2"><a href="#8-编辑文件-2" class="headerlink" title="8.编辑文件"></a>8.编辑文件</h3><p>①vi</p>
<p>②vim</p>
<p><img src="/./../TyporaImage/image-20240730210642336.png" alt="image-20240730210642336"></p>
<h2 id="其他命令-2"><a href="#其他命令-2" class="headerlink" title="其他命令"></a>其他命令</h2><h3 id="1-tar命令-2"><a href="#1-tar命令-2" class="headerlink" title="1.tar命令"></a>1.tar命令</h3><p><img src="/./../TyporaImage/image-20240730210054453.png" alt="image-20240730210054453"></p>
<h3 id="2-清屏-2"><a href="#2-清屏-2" class="headerlink" title="2.清屏"></a>2.清屏</h3><p>clear</p>
<h3 id="3-重定向输出-2"><a href="#3-重定向输出-2" class="headerlink" title="3.重定向输出"></a>3.重定向输出</h3><p><img src="/./../TyporaImage/image-20240730210923043.png" alt="image-20240730210923043"></p>
<h3 id="4-系统管理命令-2"><a href="#4-系统管理命令-2" class="headerlink" title="4.系统管理命令"></a>4.系统管理命令</h3><p><img src="/./../TyporaImage/image-20240730210942357.png" alt="image-20240730210942357"></p>
<h3 id="5-管道命令-2"><a href="#5-管道命令-2" class="headerlink" title="5.管道命令"></a>5.管道命令</h3><p><img src="/./../TyporaImage/image-20240730211017761.png" alt="image-20240730211017761"></p>
<h2 id="Ⅰ-目录相关-3"><a href="#Ⅰ-目录相关-3" class="headerlink" title="Ⅰ.目录相关"></a>Ⅰ.目录相关</h2><h3 id="1-创建-3"><a href="#1-创建-3" class="headerlink" title="1.创建"></a>1.创建</h3><p>①mkdir </p>
<p>②mkdir -p           </p>
<p>创建多级目录</p>
<h3 id="2-删除-3"><a href="#2-删除-3" class="headerlink" title="2.删除"></a>2.删除</h3><p>①rmdir</p>
<h3 id="3-切换-3"><a href="#3-切换-3" class="headerlink" title="3.切换"></a>3.切换</h3><p>①cd   路径</p>
<p>②cd .. 返回上一级目录</p>
<p>③cd - 返回上一次目录</p>
<h3 id="4-查看当前路径-3"><a href="#4-查看当前路径-3" class="headerlink" title="4.查看当前路径"></a>4.查看当前路径</h3><p>pwd</p>
<h2 id="Ⅱ-文件相关-3"><a href="#Ⅱ-文件相关-3" class="headerlink" title="Ⅱ.文件相关"></a>Ⅱ.文件相关</h2><h3 id="1-查看文件列表-3"><a href="#1-查看文件列表-3" class="headerlink" title="1.查看文件列表"></a>1.查看文件列表</h3><p>①ls</p>
<p>②ls  -l  或者ll</p>
<h3 id="2-查看-3"><a href="#2-查看-3" class="headerlink" title="2.查看"></a>2.查看</h3><p>①.cat </p>
<p>②more</p>
<p>③less</p>
<p>④tail -数字   </p>
<p>查看最后的一定行数</p>
<p>tail -f</p>
<p>动态查看</p>
<h3 id="3-删除-3"><a href="#3-删除-3" class="headerlink" title="3.删除"></a>3.删除</h3><p>①rm</p>
<p>rm -r</p>
<p>递归删除</p>
<p>rm -f </p>
<p>强制删除</p>
<h3 id="4-复制-3"><a href="#4-复制-3" class="headerlink" title="4.复制"></a>4.复制</h3><p>①cp 原文件  目的目录</p>
<h3 id="5-剪切-3"><a href="#5-剪切-3" class="headerlink" title="5.剪切"></a>5.剪切</h3><p>①mv 原文件  目的目录</p>
<h3 id="6-查找文件和查找文件内容-3"><a href="#6-查找文件和查找文件内容-3" class="headerlink" title="6.查找文件和查找文件内容"></a>6.查找文件和查找文件内容</h3><p>查找文件：</p>
<p><img src="/./../TyporaImage/image-20240730210229179.png" alt="image-20240730210229179"></p>
<p>查找文件内容：</p>
<p><img src="/./../TyporaImage/image-20240730210255618.png" alt="image-20240730210255618"></p>
<h3 id="7-创建-3"><a href="#7-创建-3" class="headerlink" title="7.创建"></a>7.创建</h3><p>touch</p>
<h3 id="8-编辑文件-3"><a href="#8-编辑文件-3" class="headerlink" title="8.编辑文件"></a>8.编辑文件</h3><p>①vi</p>
<p>②vim</p>
<p><img src="/./../TyporaImage/image-20240730210642336.png" alt="image-20240730210642336"></p>
<h2 id="其他命令-3"><a href="#其他命令-3" class="headerlink" title="其他命令"></a>其他命令</h2><h3 id="1-tar命令-3"><a href="#1-tar命令-3" class="headerlink" title="1.tar命令"></a>1.tar命令</h3><p><img src="/./../TyporaImage/image-20240730210054453.png" alt="image-20240730210054453"></p>
<h3 id="2-清屏-3"><a href="#2-清屏-3" class="headerlink" title="2.清屏"></a>2.清屏</h3><p>clear</p>
<h3 id="3-重定向输出-3"><a href="#3-重定向输出-3" class="headerlink" title="3.重定向输出"></a>3.重定向输出</h3><p><img src="/./../TyporaImage/image-20240730210923043.png" alt="image-20240730210923043"></p>
<h3 id="4-系统管理命令-3"><a href="#4-系统管理命令-3" class="headerlink" title="4.系统管理命令"></a>4.系统管理命令</h3><p><img src="/./../TyporaImage/image-20240730210942357.png" alt="image-20240730210942357"></p>
<h3 id="5-管道命令-3"><a href="#5-管道命令-3" class="headerlink" title="5.管道命令"></a>5.管道命令</h3><p><img src="/./../TyporaImage/image-20240730211017761.png" alt="image-20240730211017761"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Linux权限</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Linux%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<h1 id="Linux权限"><a href="#Linux权限" class="headerlink" title="Linux权限"></a>Linux权限</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Linux 权限系统用于控制用户对文件和目录的访问和操作权限。通过设置不同的权限，系统能够确保资源的安全和管理的有效性。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="用户类别"><a href="#用户类别" class="headerlink" title="用户类别"></a>用户类别</h3><p>1.所有者（Owner&#x2F;User）</p>
<p>创建文件或目录的用户。</p>
<p>2.用户组（Group）</p>
<p>与文件或目录关联的用户组。</p>
<p>3.其他用户（Others）</p>
<p>除了所有者和用户组外的所有其他用户。</p>
<h3 id="权限类型"><a href="#权限类型" class="headerlink" title="权限类型"></a>权限类型</h3><p>1.读权限（Read, r）</p>
<p>允许查看文件内容或列出目录内容。</p>
<p>2.写权限（Write, w）</p>
<p>允许修改文件内容或在目录中创建、删除文件。</p>
<p>3.执行权限（Execute, x）</p>
<p>允许执行文件或访问目录。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>权限通过一个十字符的字符串表示，例如 -rwxr-xr–：<br>第一个字符表示文件类型。<br>接下来的九个字符分为三组，每组三个字符，分别表示所有者、用户组和其他用户的权限。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-普通文件："><a href="#1-普通文件：" class="headerlink" title="1.普通文件：-"></a>1.普通文件：-</h3><h3 id="2-目录：d"><a href="#2-目录：d" class="headerlink" title="2.目录：d"></a>2.目录：d</h3><h3 id="3-符号链接：l"><a href="#3-符号链接：l" class="headerlink" title="3.符号链接：l"></a>3.符号链接：l</h3><h3 id="4-特殊权限"><a href="#4-特殊权限" class="headerlink" title="4.特殊权限"></a>4.特殊权限</h3><p>Setuid 位：使执行文件的用户获得文件所有者的权限。<br>Setgid 位：对文件：使执行文件的用户获得文件所属组的权限。对目录：新创建的文件和目录继承目录的组。<br>Sticky 位：使得只有文件的所有者或 root 能删除文件。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>确保系统资源的安全，防止未授权的访问和修改。<br>允许文件和目录的访问控制，以满足不同用户和组的需求。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>文件和目录权限通过设置特定的标志来控制对资源的访问。## 定义</p>
<p>Linux 权限系统用于控制用户对文件和目录的访问和操作权限。通过设置不同的权限，系统能够确保资源的安全和管理的有效性。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="用户类别-1"><a href="#用户类别-1" class="headerlink" title="用户类别"></a>用户类别</h3><p>1.所有者（Owner&#x2F;User）</p>
<p>创建文件或目录的用户。</p>
<p>2.用户组（Group）</p>
<p>与文件或目录关联的用户组。</p>
<p>3.其他用户（Others）</p>
<p>除了所有者和用户组外的所有其他用户。</p>
<h3 id="权限类型-1"><a href="#权限类型-1" class="headerlink" title="权限类型"></a>权限类型</h3><p>1.读权限（Read, r）</p>
<p>允许查看文件内容或列出目录内容。</p>
<p>2.写权限（Write, w）</p>
<p>允许修改文件内容或在目录中创建、删除文件。</p>
<p>3.执行权限（Execute, x）</p>
<p>允许执行文件或访问目录。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>权限通过一个十字符的字符串表示，例如 -rwxr-xr–：<br>第一个字符表示文件类型。<br>接下来的九个字符分为三组，每组三个字符，分别表示所有者、用户组和其他用户的权限。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-普通文件：-1"><a href="#1-普通文件：-1" class="headerlink" title="1.普通文件：-"></a>1.普通文件：-</h3><h3 id="2-目录：d-1"><a href="#2-目录：d-1" class="headerlink" title="2.目录：d"></a>2.目录：d</h3><h3 id="3-符号链接：l-1"><a href="#3-符号链接：l-1" class="headerlink" title="3.符号链接：l"></a>3.符号链接：l</h3><h3 id="4-特殊权限-1"><a href="#4-特殊权限-1" class="headerlink" title="4.特殊权限"></a>4.特殊权限</h3><p>Setuid 位：使执行文件的用户获得文件所有者的权限。<br>Setgid 位：对文件：使执行文件的用户获得文件所属组的权限。对目录：新创建的文件和目录继承目录的组。<br>Sticky 位：使得只有文件的所有者或 root 能删除文件。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>确保系统资源的安全，防止未授权的访问和修改。<br>允许文件和目录的访问控制，以满足不同用户和组的需求。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>文件和目录权限通过设置特定的标志来控制对资源的访问。权限</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Linux 权限系统用于控制用户对文件和目录的访问和操作权限。通过设置不同的权限，系统能够确保资源的安全和管理的有效性。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="用户类别-2"><a href="#用户类别-2" class="headerlink" title="用户类别"></a>用户类别</h3><p>1.所有者（Owner&#x2F;User）</p>
<p>创建文件或目录的用户。</p>
<p>2.用户组（Group）</p>
<p>与文件或目录关联的用户组。</p>
<p>3.其他用户（Others）</p>
<p>除了所有者和用户组外的所有其他用户。</p>
<h3 id="权限类型-2"><a href="#权限类型-2" class="headerlink" title="权限类型"></a>权限类型</h3><p>1.读权限（Read, r）</p>
<p>允许查看文件内容或列出目录内容。</p>
<p>2.写权限（Write, w）</p>
<p>允许修改文件内容或在目录中创建、删除文件。</p>
<p>3.执行权限（Execute, x）</p>
<p>允许执行文件或访问目录。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>权限通过一个十字符的字符串表示，例如 -rwxr-xr–：<br>第一个字符表示文件类型。<br>接下来的九个字符分为三组，每组三个字符，分别表示所有者、用户组和其他用户的权限。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-普通文件：-2"><a href="#1-普通文件：-2" class="headerlink" title="1.普通文件：-"></a>1.普通文件：-</h3><h3 id="2-目录：d-2"><a href="#2-目录：d-2" class="headerlink" title="2.目录：d"></a>2.目录：d</h3><h3 id="3-符号链接：l-2"><a href="#3-符号链接：l-2" class="headerlink" title="3.符号链接：l"></a>3.符号链接：l</h3><h3 id="4-特殊权限-2"><a href="#4-特殊权限-2" class="headerlink" title="4.特殊权限"></a>4.特殊权限</h3><p>Setuid 位：使执行文件的用户获得文件所有者的权限。<br>Setgid 位：对文件：使执行文件的用户获得文件所属组的权限。对目录：新创建的文件和目录继承目录的组。<br>Sticky 位：使得只有文件的所有者或 root 能删除文件。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>确保系统资源的安全，防止未授权的访问和修改。<br>允许文件和目录的访问控制，以满足不同用户和组的需求。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>文件和目录权限通过设置特定的标志来控制对资源的访问。## 定义</p>
<p>Linux 权限系统用于控制用户对文件和目录的访问和操作权限。通过设置不同的权限，系统能够确保资源的安全和管理的有效性。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="用户类别-3"><a href="#用户类别-3" class="headerlink" title="用户类别"></a>用户类别</h3><p>1.所有者（Owner&#x2F;User）</p>
<p>创建文件或目录的用户。</p>
<p>2.用户组（Group）</p>
<p>与文件或目录关联的用户组。</p>
<p>3.其他用户（Others）</p>
<p>除了所有者和用户组外的所有其他用户。</p>
<h3 id="权限类型-3"><a href="#权限类型-3" class="headerlink" title="权限类型"></a>权限类型</h3><p>1.读权限（Read, r）</p>
<p>允许查看文件内容或列出目录内容。</p>
<p>2.写权限（Write, w）</p>
<p>允许修改文件内容或在目录中创建、删除文件。</p>
<p>3.执行权限（Execute, x）</p>
<p>允许执行文件或访问目录。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>权限通过一个十字符的字符串表示，例如 -rwxr-xr–：<br>第一个字符表示文件类型。<br>接下来的九个字符分为三组，每组三个字符，分别表示所有者、用户组和其他用户的权限。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-普通文件：-3"><a href="#1-普通文件：-3" class="headerlink" title="1.普通文件：-"></a>1.普通文件：-</h3><h3 id="2-目录：d-3"><a href="#2-目录：d-3" class="headerlink" title="2.目录：d"></a>2.目录：d</h3><h3 id="3-符号链接：l-3"><a href="#3-符号链接：l-3" class="headerlink" title="3.符号链接：l"></a>3.符号链接：l</h3><h3 id="4-特殊权限-3"><a href="#4-特殊权限-3" class="headerlink" title="4.特殊权限"></a>4.特殊权限</h3><p>Setuid 位：使执行文件的用户获得文件所有者的权限。<br>Setgid 位：对文件：使执行文件的用户获得文件所属组的权限。对目录：新创建的文件和目录继承目录的组。<br>Sticky 位：使得只有文件的所有者或 root 能删除文件。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>确保系统资源的安全，防止未授权的访问和修改。<br>允许文件和目录的访问控制，以满足不同用户和组的需求。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>文件和目录权限通过设置特定的标志来控制对资源的访问。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Linux概念</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Linux%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h1 id="Linux概念"><a href="#Linux概念" class="headerlink" title="Linux概念"></a>Linux概念</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Linux是一个开源的、类Unix操作系统内核，由Linus Torvalds于1991年首次发布。它是目前广泛使用的操作系统之一，被应用于服务器、桌面、移动设备等多个领域。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-内核（Kernel）"><a href="#1-内核（Kernel）" class="headerlink" title="1.内核（Kernel）"></a>1.内核（Kernel）</h3><p>操作系统的核心部分，管理硬件资源和系统进程。</p>
<h3 id="2-系统库（System-Libraries）"><a href="#2-系统库（System-Libraries）" class="headerlink" title="2.系统库（System Libraries）"></a>2.系统库（System Libraries）</h3><p>提供应用程序与内核之间的接口。</p>
<h3 id="3-系统工具（System-Tools）"><a href="#3-系统工具（System-Tools）" class="headerlink" title="3.系统工具（System Tools）"></a>3.系统工具（System Tools）</h3><p>用于管理和配置系统的工具和实用程序。</p>
<h3 id="4-应用软件（Application-Software）"><a href="#4-应用软件（Application-Software）" class="headerlink" title="4.应用软件（Application Software）"></a>4.应用软件（Application Software）</h3><p>运行在Linux操作系统上的各种应用程序。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单片内核"><a href="#1-单片内核" class="headerlink" title="1.单片内核"></a>1.单片内核</h3><p>Linux内核是一个单片内核，所有的核心功能都在内核空间运行。</p>
<h3 id="2-模块化架构"><a href="#2-模块化架构" class="headerlink" title="2.模块化架构"></a>2.模块化架构</h3><p>内核功能可以通过加载和卸载模块进行扩展。</p>
<h3 id="3-用户空间与内核空间"><a href="#3-用户空间与内核空间" class="headerlink" title="3.用户空间与内核空间"></a>3.用户空间与内核空间</h3><p>操作系统将内核空间和用户空间分开，确保系统的安全和稳定。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>按用途划分服务器版、桌面版、嵌入式版等不同版本。</p>
<h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>提供一个稳定、高效、安全的操作系统平台，支持各种应用和开发需求。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>Linux内核管理硬件资源（如CPU、内存、存储设备等）和系统进程，通过系统调用接口与用户空间应用程序交互。</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Linux是一个开源的、类Unix操作系统内核，由Linus Torvalds于1991年首次发布。它是目前广泛使用的操作系统之一，被应用于服务器、桌面、移动设备等多个领域。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-内核（Kernel）-1"><a href="#1-内核（Kernel）-1" class="headerlink" title="1.内核（Kernel）"></a>1.内核（Kernel）</h3><p>操作系统的核心部分，管理硬件资源和系统进程。</p>
<h3 id="2-系统库（System-Libraries）-1"><a href="#2-系统库（System-Libraries）-1" class="headerlink" title="2.系统库（System Libraries）"></a>2.系统库（System Libraries）</h3><p>提供应用程序与内核之间的接口。</p>
<h3 id="3-系统工具（System-Tools）-1"><a href="#3-系统工具（System-Tools）-1" class="headerlink" title="3.系统工具（System Tools）"></a>3.系统工具（System Tools）</h3><p>用于管理和配置系统的工具和实用程序。</p>
<h3 id="4-应用软件（Application-Software）-1"><a href="#4-应用软件（Application-Software）-1" class="headerlink" title="4.应用软件（Application Software）"></a>4.应用软件（Application Software）</h3><p>运行在Linux操作系统上的各种应用程序。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单片内核-1"><a href="#1-单片内核-1" class="headerlink" title="1.单片内核"></a>1.单片内核</h3><p>Linux内核是一个单片内核，所有的核心功能都在内核空间运行。</p>
<h3 id="2-模块化架构-1"><a href="#2-模块化架构-1" class="headerlink" title="2.模块化架构"></a>2.模块化架构</h3><p>内核功能可以通过加载和卸载模块进行扩展。</p>
<h3 id="3-用户空间与内核空间-1"><a href="#3-用户空间与内核空间-1" class="headerlink" title="3.用户空间与内核空间"></a>3.用户空间与内核空间</h3><p>操作系统将内核空间和用户空间分开，确保系统的安全和稳定。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>按用途划分服务器版、桌面版、嵌入式版等不同版本。</p>
<h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>提供一个稳定、高效、安全的操作系统平台，支持各种应用和开发需求。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>Linux内核管理硬件资源（如CPU、内存、存储设备等）和系统进程，通过系统调用接口与用户空间应用程序交互。概念</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>Linux是一个开源的、类Unix操作系统内核，由Linus Torvalds于1991年首次发布。它是目前广泛使用的操作系统之一，被应用于服务器、桌面、移动设备等多个领域。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-内核（Kernel）-2"><a href="#1-内核（Kernel）-2" class="headerlink" title="1.内核（Kernel）"></a>1.内核（Kernel）</h3><p>操作系统的核心部分，管理硬件资源和系统进程。</p>
<h3 id="2-系统库（System-Libraries）-2"><a href="#2-系统库（System-Libraries）-2" class="headerlink" title="2.系统库（System Libraries）"></a>2.系统库（System Libraries）</h3><p>提供应用程序与内核之间的接口。</p>
<h3 id="3-系统工具（System-Tools）-2"><a href="#3-系统工具（System-Tools）-2" class="headerlink" title="3.系统工具（System Tools）"></a>3.系统工具（System Tools）</h3><p>用于管理和配置系统的工具和实用程序。</p>
<h3 id="4-应用软件（Application-Software）-2"><a href="#4-应用软件（Application-Software）-2" class="headerlink" title="4.应用软件（Application Software）"></a>4.应用软件（Application Software）</h3><p>运行在Linux操作系统上的各种应用程序。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单片内核-2"><a href="#1-单片内核-2" class="headerlink" title="1.单片内核"></a>1.单片内核</h3><p>Linux内核是一个单片内核，所有的核心功能都在内核空间运行。</p>
<h3 id="2-模块化架构-2"><a href="#2-模块化架构-2" class="headerlink" title="2.模块化架构"></a>2.模块化架构</h3><p>内核功能可以通过加载和卸载模块进行扩展。</p>
<h3 id="3-用户空间与内核空间-2"><a href="#3-用户空间与内核空间-2" class="headerlink" title="3.用户空间与内核空间"></a>3.用户空间与内核空间</h3><p>操作系统将内核空间和用户空间分开，确保系统的安全和稳定。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>按用途划分服务器版、桌面版、嵌入式版等不同版本。</p>
<h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>提供一个稳定、高效、安全的操作系统平台，支持各种应用和开发需求。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>Linux内核管理硬件资源（如CPU、内存、存储设备等）和系统进程，通过系统调用接口与用户空间应用程序交互。</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>Linux是一个开源的、类Unix操作系统内核，由Linus Torvalds于1991年首次发布。它是目前广泛使用的操作系统之一，被应用于服务器、桌面、移动设备等多个领域。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-内核（Kernel）-3"><a href="#1-内核（Kernel）-3" class="headerlink" title="1.内核（Kernel）"></a>1.内核（Kernel）</h3><p>操作系统的核心部分，管理硬件资源和系统进程。</p>
<h3 id="2-系统库（System-Libraries）-3"><a href="#2-系统库（System-Libraries）-3" class="headerlink" title="2.系统库（System Libraries）"></a>2.系统库（System Libraries）</h3><p>提供应用程序与内核之间的接口。</p>
<h3 id="3-系统工具（System-Tools）-3"><a href="#3-系统工具（System-Tools）-3" class="headerlink" title="3.系统工具（System Tools）"></a>3.系统工具（System Tools）</h3><p>用于管理和配置系统的工具和实用程序。</p>
<h3 id="4-应用软件（Application-Software）-3"><a href="#4-应用软件（Application-Software）-3" class="headerlink" title="4.应用软件（Application Software）"></a>4.应用软件（Application Software）</h3><p>运行在Linux操作系统上的各种应用程序。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单片内核-3"><a href="#1-单片内核-3" class="headerlink" title="1.单片内核"></a>1.单片内核</h3><p>Linux内核是一个单片内核，所有的核心功能都在内核空间运行。</p>
<h3 id="2-模块化架构-3"><a href="#2-模块化架构-3" class="headerlink" title="2.模块化架构"></a>2.模块化架构</h3><p>内核功能可以通过加载和卸载模块进行扩展。</p>
<h3 id="3-用户空间与内核空间-3"><a href="#3-用户空间与内核空间-3" class="headerlink" title="3.用户空间与内核空间"></a>3.用户空间与内核空间</h3><p>操作系统将内核空间和用户空间分开，确保系统的安全和稳定。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>按用途划分服务器版、桌面版、嵌入式版等不同版本。</p>
<h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>提供一个稳定、高效、安全的操作系统平台，支持各种应用和开发需求。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>Linux内核管理硬件资源（如CPU、内存、存储设备等）和系统进程，通过系统调用接口与用户空间应用程序交互。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Linux目录结构</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Linux%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="Linux目录结构"><a href="#Linux目录结构" class="headerlink" title="Linux目录结构"></a>Linux目录结构</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Linux的目录结构是一种层次化的文件组织系统，旨在有效管理和访问文件和目录。它通常以树状结构呈现，根目录（&#x2F;）位于树的顶端，其下的各个目录和文件按一定的规则和用途进行组织。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.根目录（&#x2F;）：Linux文件系统的起点，所有文件和目录都从这里开始。<br>2.&#x2F;bin：存放基本的用户命令二进制文件。<br>3.&#x2F;boot：存放启动加载器和内核文件。<br>4.&#x2F;dev：存放设备文件。<br>5.&#x2F;etc：存放系统配置文件。<br>6.&#x2F;home：存放用户的主目录。<br>7.&#x2F;lib：存放系统和应用程序使用的共享库。<br>8.&#x2F;media：挂载可移动媒体的目录。<br>9.&#x2F;mnt：临时挂载文件系统的目录。<br>10.&#x2F;opt：存放额外的应用软件包。<br>11.&#x2F;proc：存放内核和进程信息的虚拟文件系统。<br>12.&#x2F;root：超级用户（root）的主目录。<br>13.&#x2F;sbin：存放系统管理命令二进制文件。<br>14.&#x2F;srv：存放服务相关的数据。<br>15.&#x2F;tmp：存放临时文件。<br>16.&#x2F;usr：存放用户程序和文件。<br>     &#x2F;usr&#x2F;bin：存放用户使用的二进制文件。<br>     &#x2F;usr&#x2F;lib：存放用户使用的库文件。<br>     &#x2F;usr&#x2F;local：存放本地安装的应用程序。<br>17.&#x2F;var：存放可变数据文件。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>Linux的目录结构可以表示为一棵树，其中每个节点代表一个目录或文件：</p>
<p><img src="/./../TyporaImage/image-20240729205946062.png" alt="image-20240729205946062"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="按照用途和权限划分"><a href="#按照用途和权限划分" class="headerlink" title="按照用途和权限划分"></a>按照用途和权限划分</h3><h4 id="1-系统目录（-bin-sbin-lib等）"><a href="#1-系统目录（-bin-sbin-lib等）" class="headerlink" title="1.系统目录（&#x2F;bin, &#x2F;sbin, &#x2F;lib等）"></a>1.系统目录（&#x2F;bin, &#x2F;sbin, &#x2F;lib等）</h4><p>存放系统所需的基本文件。</p>
<h4 id="2-用户目录（-home-usr等）"><a href="#2-用户目录（-home-usr等）" class="headerlink" title="2.用户目录（&#x2F;home, &#x2F;usr等）"></a>2.用户目录（&#x2F;home, &#x2F;usr等）</h4><p>存放用户数据和应用程序。</p>
<h4 id="3-临时目录（-tmp）"><a href="#3-临时目录（-tmp）" class="headerlink" title="3.临时目录（&#x2F;tmp）"></a>3.临时目录（&#x2F;tmp）</h4><p>存放临时文件。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>Linux目录结构的目的是为了提供一种标准化的文件组织方式，使得系统文件、用户文件和应用程序文件能够有效地组织和管理。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>Linux目录结构的基本原理是采用分层次的文件组织方式，将系统文件、用户文件和应用程序文件分别存放在不同的目录中，以便于管理和访问。</p>
<p>在硬盘上，Linux的目录结构对应于一系列的目录和文件，每个目录和文件都有一个唯一的路径。根目录（&#x2F;）是所有路径的起点，其他目录和文件通过树状结构连接在一起。## 定义</p>
<p>Linux的目录结构是一种层次化的文件组织系统，旨在有效管理和访问文件和目录。它通常以树状结构呈现，根目录（&#x2F;）位于树的顶端，其下的各个目录和文件按一定的规则和用途进行组织。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.根目录（&#x2F;）：Linux文件系统的起点，所有文件和目录都从这里开始。<br>2.&#x2F;bin：存放基本的用户命令二进制文件。<br>3.&#x2F;boot：存放启动加载器和内核文件。<br>4.&#x2F;dev：存放设备文件。<br>5.&#x2F;etc：存放系统配置文件。<br>6.&#x2F;home：存放用户的主目录。<br>7.&#x2F;lib：存放系统和应用程序使用的共享库。<br>8.&#x2F;media：挂载可移动媒体的目录。<br>9.&#x2F;mnt：临时挂载文件系统的目录。<br>10.&#x2F;opt：存放额外的应用软件包。<br>11.&#x2F;proc：存放内核和进程信息的虚拟文件系统。<br>12.&#x2F;root：超级用户（root）的主目录。<br>13.&#x2F;sbin：存放系统管理命令二进制文件。<br>14.&#x2F;srv：存放服务相关的数据。<br>15.&#x2F;tmp：存放临时文件。<br>16.&#x2F;usr：存放用户程序和文件。<br>     &#x2F;usr&#x2F;bin：存放用户使用的二进制文件。<br>     &#x2F;usr&#x2F;lib：存放用户使用的库文件。<br>     &#x2F;usr&#x2F;local：存放本地安装的应用程序。<br>17.&#x2F;var：存放可变数据文件。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>Linux的目录结构可以表示为一棵树，其中每个节点代表一个目录或文件：</p>
<p><img src="/./../TyporaImage/image-20240729205946062.png" alt="image-20240729205946062"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="按照用途和权限划分-1"><a href="#按照用途和权限划分-1" class="headerlink" title="按照用途和权限划分"></a>按照用途和权限划分</h3><h4 id="1-系统目录（-bin-sbin-lib等）-1"><a href="#1-系统目录（-bin-sbin-lib等）-1" class="headerlink" title="1.系统目录（&#x2F;bin, &#x2F;sbin, &#x2F;lib等）"></a>1.系统目录（&#x2F;bin, &#x2F;sbin, &#x2F;lib等）</h4><p>存放系统所需的基本文件。</p>
<h4 id="2-用户目录（-home-usr等）-1"><a href="#2-用户目录（-home-usr等）-1" class="headerlink" title="2.用户目录（&#x2F;home, &#x2F;usr等）"></a>2.用户目录（&#x2F;home, &#x2F;usr等）</h4><p>存放用户数据和应用程序。</p>
<h4 id="3-临时目录（-tmp）-1"><a href="#3-临时目录（-tmp）-1" class="headerlink" title="3.临时目录（&#x2F;tmp）"></a>3.临时目录（&#x2F;tmp）</h4><p>存放临时文件。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>Linux目录结构的目的是为了提供一种标准化的文件组织方式，使得系统文件、用户文件和应用程序文件能够有效地组织和管理。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>Linux目录结构的基本原理是采用分层次的文件组织方式，将系统文件、用户文件和应用程序文件分别存放在不同的目录中，以便于管理和访问。</p>
<p>在硬盘上，Linux的目录结构对应于一系列的目录和文件，每个目录和文件都有一个唯一的路径。根目录（&#x2F;）是所有路径的起点，其他目录和文件通过树状结构连接在一起。结构</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Linux的目录结构是一种层次化的文件组织系统，旨在有效管理和访问文件和目录。它通常以树状结构呈现，根目录（&#x2F;）位于树的顶端，其下的各个目录和文件按一定的规则和用途进行组织。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.根目录（&#x2F;）：Linux文件系统的起点，所有文件和目录都从这里开始。<br>2.&#x2F;bin：存放基本的用户命令二进制文件。<br>3.&#x2F;boot：存放启动加载器和内核文件。<br>4.&#x2F;dev：存放设备文件。<br>5.&#x2F;etc：存放系统配置文件。<br>6.&#x2F;home：存放用户的主目录。<br>7.&#x2F;lib：存放系统和应用程序使用的共享库。<br>8.&#x2F;media：挂载可移动媒体的目录。<br>9.&#x2F;mnt：临时挂载文件系统的目录。<br>10.&#x2F;opt：存放额外的应用软件包。<br>11.&#x2F;proc：存放内核和进程信息的虚拟文件系统。<br>12.&#x2F;root：超级用户（root）的主目录。<br>13.&#x2F;sbin：存放系统管理命令二进制文件。<br>14.&#x2F;srv：存放服务相关的数据。<br>15.&#x2F;tmp：存放临时文件。<br>16.&#x2F;usr：存放用户程序和文件。<br>     &#x2F;usr&#x2F;bin：存放用户使用的二进制文件。<br>     &#x2F;usr&#x2F;lib：存放用户使用的库文件。<br>     &#x2F;usr&#x2F;local：存放本地安装的应用程序。<br>17.&#x2F;var：存放可变数据文件。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>Linux的目录结构可以表示为一棵树，其中每个节点代表一个目录或文件：</p>
<p><img src="/./../TyporaImage/image-20240729205946062.png" alt="image-20240729205946062"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="按照用途和权限划分-2"><a href="#按照用途和权限划分-2" class="headerlink" title="按照用途和权限划分"></a>按照用途和权限划分</h3><h4 id="1-系统目录（-bin-sbin-lib等）-2"><a href="#1-系统目录（-bin-sbin-lib等）-2" class="headerlink" title="1.系统目录（&#x2F;bin, &#x2F;sbin, &#x2F;lib等）"></a>1.系统目录（&#x2F;bin, &#x2F;sbin, &#x2F;lib等）</h4><p>存放系统所需的基本文件。</p>
<h4 id="2-用户目录（-home-usr等）-2"><a href="#2-用户目录（-home-usr等）-2" class="headerlink" title="2.用户目录（&#x2F;home, &#x2F;usr等）"></a>2.用户目录（&#x2F;home, &#x2F;usr等）</h4><p>存放用户数据和应用程序。</p>
<h4 id="3-临时目录（-tmp）-2"><a href="#3-临时目录（-tmp）-2" class="headerlink" title="3.临时目录（&#x2F;tmp）"></a>3.临时目录（&#x2F;tmp）</h4><p>存放临时文件。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>Linux目录结构的目的是为了提供一种标准化的文件组织方式，使得系统文件、用户文件和应用程序文件能够有效地组织和管理。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>Linux目录结构的基本原理是采用分层次的文件组织方式，将系统文件、用户文件和应用程序文件分别存放在不同的目录中，以便于管理和访问。</p>
<p>在硬盘上，Linux的目录结构对应于一系列的目录和文件，每个目录和文件都有一个唯一的路径。根目录（&#x2F;）是所有路径的起点，其他目录和文件通过树状结构连接在一起。## 定义</p>
<p>Linux的目录结构是一种层次化的文件组织系统，旨在有效管理和访问文件和目录。它通常以树状结构呈现，根目录（&#x2F;）位于树的顶端，其下的各个目录和文件按一定的规则和用途进行组织。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.根目录（&#x2F;）：Linux文件系统的起点，所有文件和目录都从这里开始。<br>2.&#x2F;bin：存放基本的用户命令二进制文件。<br>3.&#x2F;boot：存放启动加载器和内核文件。<br>4.&#x2F;dev：存放设备文件。<br>5.&#x2F;etc：存放系统配置文件。<br>6.&#x2F;home：存放用户的主目录。<br>7.&#x2F;lib：存放系统和应用程序使用的共享库。<br>8.&#x2F;media：挂载可移动媒体的目录。<br>9.&#x2F;mnt：临时挂载文件系统的目录。<br>10.&#x2F;opt：存放额外的应用软件包。<br>11.&#x2F;proc：存放内核和进程信息的虚拟文件系统。<br>12.&#x2F;root：超级用户（root）的主目录。<br>13.&#x2F;sbin：存放系统管理命令二进制文件。<br>14.&#x2F;srv：存放服务相关的数据。<br>15.&#x2F;tmp：存放临时文件。<br>16.&#x2F;usr：存放用户程序和文件。<br>     &#x2F;usr&#x2F;bin：存放用户使用的二进制文件。<br>     &#x2F;usr&#x2F;lib：存放用户使用的库文件。<br>     &#x2F;usr&#x2F;local：存放本地安装的应用程序。<br>17.&#x2F;var：存放可变数据文件。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>Linux的目录结构可以表示为一棵树，其中每个节点代表一个目录或文件：</p>
<p><img src="/./../TyporaImage/image-20240729205946062.png" alt="image-20240729205946062"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="按照用途和权限划分-3"><a href="#按照用途和权限划分-3" class="headerlink" title="按照用途和权限划分"></a>按照用途和权限划分</h3><h4 id="1-系统目录（-bin-sbin-lib等）-3"><a href="#1-系统目录（-bin-sbin-lib等）-3" class="headerlink" title="1.系统目录（&#x2F;bin, &#x2F;sbin, &#x2F;lib等）"></a>1.系统目录（&#x2F;bin, &#x2F;sbin, &#x2F;lib等）</h4><p>存放系统所需的基本文件。</p>
<h4 id="2-用户目录（-home-usr等）-3"><a href="#2-用户目录（-home-usr等）-3" class="headerlink" title="2.用户目录（&#x2F;home, &#x2F;usr等）"></a>2.用户目录（&#x2F;home, &#x2F;usr等）</h4><p>存放用户数据和应用程序。</p>
<h4 id="3-临时目录（-tmp）-3"><a href="#3-临时目录（-tmp）-3" class="headerlink" title="3.临时目录（&#x2F;tmp）"></a>3.临时目录（&#x2F;tmp）</h4><p>存放临时文件。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>Linux目录结构的目的是为了提供一种标准化的文件组织方式，使得系统文件、用户文件和应用程序文件能够有效地组织和管理。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>Linux目录结构的基本原理是采用分层次的文件组织方式，将系统文件、用户文件和应用程序文件分别存放在不同的目录中，以便于管理和访问。</p>
<p>在硬盘上，Linux的目录结构对应于一系列的目录和文件，每个目录和文件都有一个唯一的路径。根目录（&#x2F;）是所有路径的起点，其他目录和文件通过树状结构连接在一起。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Location对象</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Location%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="Location地址对象"><a href="#Location地址对象" class="headerlink" title="Location地址对象"></a>Location地址对象</h1><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p>href</p>
<p>可以设置或者返回完整的URL</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><h4 id="1-对象不需要创建，可以直接使用。"><a href="#1-对象不需要创建，可以直接使用。" class="headerlink" title="1.对象不需要创建，可以直接使用。"></a>1.对象不需要创建，可以直接使用。</h4><p>location.方法名（）；</p>
<h4 id="2-引用可以省略。"><a href="#2-引用可以省略。" class="headerlink" title="2.引用可以省略。"></a>2.引用可以省略。</h4><p>方法名（）；</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>步骤：</p>
<h4 id="1-获取按钮"><a href="#1-获取按钮" class="headerlink" title="1.获取按钮"></a>1.获取按钮</h4><p>document.getElementById();</p>
<h4 id="2-绑定单击事件"><a href="#2-绑定单击事件" class="headerlink" title="2.绑定单击事件"></a>2.绑定单击事件</h4><p>onclick</p>
<h4 id="3-刷新页面"><a href="#3-刷新页面" class="headerlink" title="3.刷新页面"></a>3.刷新页面</h4><p>location.reload();</p>
<h2 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h2><p>href</p>
<p>可以设置或者返回完整的URL</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><h4 id="1-对象不需要创建，可以直接使用。-1"><a href="#1-对象不需要创建，可以直接使用。-1" class="headerlink" title="1.对象不需要创建，可以直接使用。"></a>1.对象不需要创建，可以直接使用。</h4><p>location.方法名（）；</p>
<h4 id="2-引用可以省略。-1"><a href="#2-引用可以省略。-1" class="headerlink" title="2.引用可以省略。"></a>2.引用可以省略。</h4><p>方法名（）；</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>步骤：</p>
<h4 id="1-获取按钮-1"><a href="#1-获取按钮-1" class="headerlink" title="1.获取按钮"></a>1.获取按钮</h4><p>document.getElementById();</p>
<h4 id="2-绑定单击事件-1"><a href="#2-绑定单击事件-1" class="headerlink" title="2.绑定单击事件"></a>2.绑定单击事件</h4><p>onclick</p>
<h4 id="3-刷新页面-1"><a href="#3-刷新页面-1" class="headerlink" title="3.刷新页面"></a>3.刷新页面</h4><p>location.reload();对象</p>
<h2 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h2><p>href</p>
<p>可以设置或者返回完整的URL</p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><h4 id="1-对象不需要创建，可以直接使用。-2"><a href="#1-对象不需要创建，可以直接使用。-2" class="headerlink" title="1.对象不需要创建，可以直接使用。"></a>1.对象不需要创建，可以直接使用。</h4><p>location.方法名（）；</p>
<h4 id="2-引用可以省略。-2"><a href="#2-引用可以省略。-2" class="headerlink" title="2.引用可以省略。"></a>2.引用可以省略。</h4><p>方法名（）；</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>步骤：</p>
<h4 id="1-获取按钮-2"><a href="#1-获取按钮-2" class="headerlink" title="1.获取按钮"></a>1.获取按钮</h4><p>document.getElementById();</p>
<h4 id="2-绑定单击事件-2"><a href="#2-绑定单击事件-2" class="headerlink" title="2.绑定单击事件"></a>2.绑定单击事件</h4><p>onclick</p>
<h4 id="3-刷新页面-2"><a href="#3-刷新页面-2" class="headerlink" title="3.刷新页面"></a>3.刷新页面</h4><p>location.reload();</p>
<h2 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h2><p>href</p>
<p>可以设置或者返回完整的URL</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><h4 id="1-对象不需要创建，可以直接使用。-3"><a href="#1-对象不需要创建，可以直接使用。-3" class="headerlink" title="1.对象不需要创建，可以直接使用。"></a>1.对象不需要创建，可以直接使用。</h4><p>location.方法名（）；</p>
<h4 id="2-引用可以省略。-3"><a href="#2-引用可以省略。-3" class="headerlink" title="2.引用可以省略。"></a>2.引用可以省略。</h4><p>方法名（）；</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>步骤：</p>
<h4 id="1-获取按钮-3"><a href="#1-获取按钮-3" class="headerlink" title="1.获取按钮"></a>1.获取按钮</h4><p>document.getElementById();</p>
<h4 id="2-绑定单击事件-3"><a href="#2-绑定单击事件-3" class="headerlink" title="2.绑定单击事件"></a>2.绑定单击事件</h4><p>onclick</p>
<h4 id="3-刷新页面-3"><a href="#3-刷新页面-3" class="headerlink" title="3.刷新页面"></a>3.刷新页面</h4><p>location.reload();</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>MVC</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/MVC/</url>
    <content><![CDATA[<h1 id="MVC（Model-View-Controller）"><a href="#MVC（Model-View-Controller）" class="headerlink" title="MVC（Model-View-Controller）"></a>MVC（Model-View-Controller）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>MVC（Model-View-Controller）是一种软件架构模式，将应用程序分为三个主要组件：模型（Model）、视图（View）和控制器（Controller），以实现分离关注点，提高代码的可维护性和可扩展性。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-模型（Model）"><a href="#1-模型（Model）" class="headerlink" title="1.模型（Model）"></a>1.模型（Model）</h3><p>负责处理应用程序的数据逻辑。它与数据库交互，执行业务规则和数据操作。</p>
<h3 id="2-视图（View）"><a href="#2-视图（View）" class="headerlink" title="2.视图（View）"></a>2.视图（View）</h3><p>负责呈现数据。它从模型获取数据，并将其显示给用户，通常是HTML、JSP等。</p>
<h3 id="3-控制器（Controller）"><a href="#3-控制器（Controller）" class="headerlink" title="3.控制器（Controller）"></a>3.控制器（Controller）</h3><p>负责处理用户输入。它从视图接收输入，调用模型处理数据，并将结果返回给视图。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>MVC模式将应用程序分为模型、视图和控制器三个部分，分别处理数据逻辑、用户界面和用户输入，从而实现分离关注点。</p>
<p><img src="/./../TyporaImage/image-20240709171328097.png" alt="image-20240709171328097"></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过分离关注点，使代码更易于维护和扩展，提高开发效率。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.软件架构</p>
<p>软件架构是指软件系统的高层结构和整体设计，包括系统各个部分的组织、相互关系及其协作方式。它描述了软件系统的各个组件以及组件之间的交互方式。## 定义</p>
<p>MVC（Model-View-Controller）是一种软件架构模式，将应用程序分为三个主要组件：模型（Model）、视图（View）和控制器（Controller），以实现分离关注点，提高代码的可维护性和可扩展性。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-模型（Model）-1"><a href="#1-模型（Model）-1" class="headerlink" title="1.模型（Model）"></a>1.模型（Model）</h3><p>负责处理应用程序的数据逻辑。它与数据库交互，执行业务规则和数据操作。</p>
<h3 id="2-视图（View）-1"><a href="#2-视图（View）-1" class="headerlink" title="2.视图（View）"></a>2.视图（View）</h3><p>负责呈现数据。它从模型获取数据，并将其显示给用户，通常是HTML、JSP等。</p>
<h3 id="3-控制器（Controller）-1"><a href="#3-控制器（Controller）-1" class="headerlink" title="3.控制器（Controller）"></a>3.控制器（Controller）</h3><p>负责处理用户输入。它从视图接收输入，调用模型处理数据，并将结果返回给视图。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>MVC模式将应用程序分为模型、视图和控制器三个部分，分别处理数据逻辑、用户界面和用户输入，从而实现分离关注点。</p>
<p><img src="/./../TyporaImage/image-20240709171328097.png" alt="image-20240709171328097"></p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>通过分离关注点，使代码更易于维护和扩展，提高开发效率。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.软件架构</p>
<p>软件架构是指软件系统的高层结构和整体设计，包括系统各个部分的组织、相互关系及其协作方式。它描述了软件系统的各个组件以及组件之间的交互方式。r）</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>MVC（Model-View-Controller）是一种软件架构模式，将应用程序分为三个主要组件：模型（Model）、视图（View）和控制器（Controller），以实现分离关注点，提高代码的可维护性和可扩展性。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-模型（Model）-2"><a href="#1-模型（Model）-2" class="headerlink" title="1.模型（Model）"></a>1.模型（Model）</h3><p>负责处理应用程序的数据逻辑。它与数据库交互，执行业务规则和数据操作。</p>
<h3 id="2-视图（View）-2"><a href="#2-视图（View）-2" class="headerlink" title="2.视图（View）"></a>2.视图（View）</h3><p>负责呈现数据。它从模型获取数据，并将其显示给用户，通常是HTML、JSP等。</p>
<h3 id="3-控制器（Controller）-2"><a href="#3-控制器（Controller）-2" class="headerlink" title="3.控制器（Controller）"></a>3.控制器（Controller）</h3><p>负责处理用户输入。它从视图接收输入，调用模型处理数据，并将结果返回给视图。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>MVC模式将应用程序分为模型、视图和控制器三个部分，分别处理数据逻辑、用户界面和用户输入，从而实现分离关注点。</p>
<p><img src="/./../TyporaImage/image-20240709171328097.png" alt="image-20240709171328097"></p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>通过分离关注点，使代码更易于维护和扩展，提高开发效率。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.软件架构</p>
<p>软件架构是指软件系统的高层结构和整体设计，包括系统各个部分的组织、相互关系及其协作方式。它描述了软件系统的各个组件以及组件之间的交互方式。## 定义</p>
<p>MVC（Model-View-Controller）是一种软件架构模式，将应用程序分为三个主要组件：模型（Model）、视图（View）和控制器（Controller），以实现分离关注点，提高代码的可维护性和可扩展性。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-模型（Model）-3"><a href="#1-模型（Model）-3" class="headerlink" title="1.模型（Model）"></a>1.模型（Model）</h3><p>负责处理应用程序的数据逻辑。它与数据库交互，执行业务规则和数据操作。</p>
<h3 id="2-视图（View）-3"><a href="#2-视图（View）-3" class="headerlink" title="2.视图（View）"></a>2.视图（View）</h3><p>负责呈现数据。它从模型获取数据，并将其显示给用户，通常是HTML、JSP等。</p>
<h3 id="3-控制器（Controller）-3"><a href="#3-控制器（Controller）-3" class="headerlink" title="3.控制器（Controller）"></a>3.控制器（Controller）</h3><p>负责处理用户输入。它从视图接收输入，调用模型处理数据，并将结果返回给视图。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>MVC模式将应用程序分为模型、视图和控制器三个部分，分别处理数据逻辑、用户界面和用户输入，从而实现分离关注点。</p>
<p><img src="/./../TyporaImage/image-20240709171328097.png" alt="image-20240709171328097"></p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>通过分离关注点，使代码更易于维护和扩展，提高开发效率。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.软件架构</p>
<p>软件架构是指软件系统的高层结构和整体设计，包括系统各个部分的组织、相互关系及其协作方式。它描述了软件系统的各个组件以及组件之间的交互方式。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Listener</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Listener/</url>
    <content><![CDATA[<h1 id="Listener"><a href="#Listener" class="headerlink" title="Listener"></a>Listener</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>监听器（Listener）是一个用于监视特定事件并对其做出响应的组件。在计算机科学中，监听器通常用于用户界面编程、服务器端编程以及事件驱动编程中，通过监听特定事件（如点击、键盘输入、网络请求等）来触发相应的处理逻辑。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-事件源"><a href="#1-事件源" class="headerlink" title="1.事件源"></a>1.事件源</h3><p>触发事件的对象，如按钮、文本框、网络连接等。</p>
<h3 id="2-事件类型"><a href="#2-事件类型" class="headerlink" title="2.事件类型"></a>2.事件类型</h3><p>需要监听的具体事件，如鼠标点击、键盘按键、连接建立等。</p>
<h3 id="3-事件处理器"><a href="#3-事件处理器" class="headerlink" title="3.事件处理器"></a>3.事件处理器</h3><p>处理监听到的事件的代码逻辑，一般为一个函数或方法。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>将事件、事件源、监听器绑定在一起。当事件源触发特定事件时，监听器会被通知，并执行相应的处理逻辑。</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>监听器（Listener）是一个用于监视特定事件并对其做出响应的组件。在计算机科学中，监听器通常用于用户界面编程、服务器端编程以及事件驱动编程中，通过监听特定事件（如点击、键盘输入、网络请求等）来触发相应的处理逻辑。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-事件源-1"><a href="#1-事件源-1" class="headerlink" title="1.事件源"></a>1.事件源</h3><p>触发事件的对象，如按钮、文本框、网络连接等。</p>
<h3 id="2-事件类型-1"><a href="#2-事件类型-1" class="headerlink" title="2.事件类型"></a>2.事件类型</h3><p>需要监听的具体事件，如鼠标点击、键盘按键、连接建立等。</p>
<h3 id="3-事件处理器-1"><a href="#3-事件处理器-1" class="headerlink" title="3.事件处理器"></a>3.事件处理器</h3><p>处理监听到的事件的代码逻辑，一般为一个函数或方法。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>将事件、事件源、监听器绑定在一起。当事件源触发特定事件时，监听器会被通知，并执行相应的处理逻辑。er</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>监听器（Listener）是一个用于监视特定事件并对其做出响应的组件。在计算机科学中，监听器通常用于用户界面编程、服务器端编程以及事件驱动编程中，通过监听特定事件（如点击、键盘输入、网络请求等）来触发相应的处理逻辑。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-事件源-2"><a href="#1-事件源-2" class="headerlink" title="1.事件源"></a>1.事件源</h3><p>触发事件的对象，如按钮、文本框、网络连接等。</p>
<h3 id="2-事件类型-2"><a href="#2-事件类型-2" class="headerlink" title="2.事件类型"></a>2.事件类型</h3><p>需要监听的具体事件，如鼠标点击、键盘按键、连接建立等。</p>
<h3 id="3-事件处理器-2"><a href="#3-事件处理器-2" class="headerlink" title="3.事件处理器"></a>3.事件处理器</h3><p>处理监听到的事件的代码逻辑，一般为一个函数或方法。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>将事件、事件源、监听器绑定在一起。当事件源触发特定事件时，监听器会被通知，并执行相应的处理逻辑。</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>监听器（Listener）是一个用于监视特定事件并对其做出响应的组件。在计算机科学中，监听器通常用于用户界面编程、服务器端编程以及事件驱动编程中，通过监听特定事件（如点击、键盘输入、网络请求等）来触发相应的处理逻辑。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-事件源-3"><a href="#1-事件源-3" class="headerlink" title="1.事件源"></a>1.事件源</h3><p>触发事件的对象，如按钮、文本框、网络连接等。</p>
<h3 id="2-事件类型-3"><a href="#2-事件类型-3" class="headerlink" title="2.事件类型"></a>2.事件类型</h3><p>需要监听的具体事件，如鼠标点击、键盘按键、连接建立等。</p>
<h3 id="3-事件处理器-3"><a href="#3-事件处理器-3" class="headerlink" title="3.事件处理器"></a>3.事件处理器</h3><p>处理监听到的事件的代码逻辑，一般为一个函数或方法。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>将事件、事件源、监听器绑定在一起。当事件源触发特定事件时，监听器会被通知，并执行相应的处理逻辑。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Math对象</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Math%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h1><p>属性</p>
<p>PI</p>
<p>特点</p>
<p>Math对象不用创建，直接使用。</p>
<p>使用方法</p>
<p>Math.方法名（）；</p>
<p><img src="/../TyporaImage/image-20240515211041376.png" alt="image-20240515211041376"></p>
<p>属性</p>
<p>PI</p>
<p>特点</p>
<p>Math对象不用创建，直接使用。</p>
<p>使用方法</p>
<p>Math.方法名（）；</p>
<p><img src="/../TyporaImage/image-20240515211041376.png" alt="image-20240515211041376">th</p>
<p>属性</p>
<p>PI</p>
<p>特点</p>
<p>Math对象不用创建，直接使用。</p>
<p>使用方法</p>
<p>Math.方法名（）；</p>
<p><img src="/../TyporaImage/image-20240515211041376.png" alt="image-20240515211041376"></p>
<p>属性</p>
<p>PI</p>
<p>特点</p>
<p>Math对象不用创建，直接使用。</p>
<p>使用方法</p>
<p>Math.方法名（）；</p>
<p><img src="/../TyporaImage/image-20240515211041376.png" alt="image-20240515211041376"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Maven—scope依赖配置范围</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Maven%E2%80%94scope%E4%BE%9D%E8%B5%96%E9%85%8D%E7%BD%AE%E8%8C%83%E5%9B%B4/</url>
    <content><![CDATA[<h1 id="依赖配置范围"><a href="#依赖配置范围" class="headerlink" title="依赖配置范围"></a>依赖配置范围</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Maven中的scope（依赖配置范围）用于定义依赖在项目中的使用范围和生命周期。不同的scope决定了依赖在编译、测试、运行等阶段的可见性和使用情况。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-compile"><a href="#1-compile" class="headerlink" title="1.compile"></a>1.compile</h3><p>编译范围，默认范围，适用于编译、测试和运行阶段。</p>
<h3 id="2-provided"><a href="#2-provided" class="headerlink" title="2.provided"></a>2.provided</h3><p>提供范围，依赖在编译和测试阶段可用，但在运行时由运行环境提供。</p>
<h3 id="3-runtime"><a href="#3-runtime" class="headerlink" title="3.runtime"></a>3.runtime</h3><p>运行时范围，依赖在运行和测试阶段可用，但在编译时不可用。</p>
<h3 id="4-test"><a href="#4-test" class="headerlink" title="4.test"></a>4.test</h3><p>测试范围，依赖仅在测试编译和测试运行阶段可用。</p>
<h3 id="5-system"><a href="#5-system" class="headerlink" title="5.system"></a>5.system</h3><p>系统范围，类似于provided，但依赖需要显式提供系统路径。</p>
<h3 id="6-import"><a href="#6-import" class="headerlink" title="6.import"></a>6.import</h3><p>导入范围，用于依赖管理中的<dependencyManagement>，从一个BOM（Bill of Materials）导入依赖。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>依赖的scope通常在POM文件中的<dependency>标签内定义，例如：<br><dependency><br>    <groupId>org.example</groupId><br>    <artifactId>example-artifact</artifactId><br>    <version>1.0.0</version><br>    <scope>test</scope><br></dependency></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="按使用场景划分"><a href="#按使用场景划分" class="headerlink" title="按使用场景划分"></a>按使用场景划分</h3><p>1.编译</p>
<p>2.测试</p>
<p>3.运行</p>
<p>4.系统</p>
<p>5.导入## 定义</p>
<p>Maven中的scope（依赖配置范围）用于定义依赖在项目中的使用范围和生命周期。不同的scope决定了依赖在编译、测试、运行等阶段的可见性和使用情况。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-compile-1"><a href="#1-compile-1" class="headerlink" title="1.compile"></a>1.compile</h3><p>编译范围，默认范围，适用于编译、测试和运行阶段。</p>
<h3 id="2-provided-1"><a href="#2-provided-1" class="headerlink" title="2.provided"></a>2.provided</h3><p>提供范围，依赖在编译和测试阶段可用，但在运行时由运行环境提供。</p>
<h3 id="3-runtime-1"><a href="#3-runtime-1" class="headerlink" title="3.runtime"></a>3.runtime</h3><p>运行时范围，依赖在运行和测试阶段可用，但在编译时不可用。</p>
<h3 id="4-test-1"><a href="#4-test-1" class="headerlink" title="4.test"></a>4.test</h3><p>测试范围，依赖仅在测试编译和测试运行阶段可用。</p>
<h3 id="5-system-1"><a href="#5-system-1" class="headerlink" title="5.system"></a>5.system</h3><p>系统范围，类似于provided，但依赖需要显式提供系统路径。</p>
<h3 id="6-import-1"><a href="#6-import-1" class="headerlink" title="6.import"></a>6.import</h3><p>导入范围，用于依赖管理中的<dependencyManagement>，从一个BOM（Bill of Materials）导入依赖。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>依赖的scope通常在POM文件中的<dependency>标签内定义，例如：<br><dependency><br>    <groupId>org.example</groupId><br>    <artifactId>example-artifact</artifactId><br>    <version>1.0.0</version><br>    <scope>test</scope><br></dependency></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="按使用场景划分-1"><a href="#按使用场景划分-1" class="headerlink" title="按使用场景划分"></a>按使用场景划分</h3><p>1.编译</p>
<p>2.测试</p>
<p>3.运行</p>
<p>4.系统</p>
<p>5.导入范围</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Maven中的scope（依赖配置范围）用于定义依赖在项目中的使用范围和生命周期。不同的scope决定了依赖在编译、测试、运行等阶段的可见性和使用情况。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-compile-2"><a href="#1-compile-2" class="headerlink" title="1.compile"></a>1.compile</h3><p>编译范围，默认范围，适用于编译、测试和运行阶段。</p>
<h3 id="2-provided-2"><a href="#2-provided-2" class="headerlink" title="2.provided"></a>2.provided</h3><p>提供范围，依赖在编译和测试阶段可用，但在运行时由运行环境提供。</p>
<h3 id="3-runtime-2"><a href="#3-runtime-2" class="headerlink" title="3.runtime"></a>3.runtime</h3><p>运行时范围，依赖在运行和测试阶段可用，但在编译时不可用。</p>
<h3 id="4-test-2"><a href="#4-test-2" class="headerlink" title="4.test"></a>4.test</h3><p>测试范围，依赖仅在测试编译和测试运行阶段可用。</p>
<h3 id="5-system-2"><a href="#5-system-2" class="headerlink" title="5.system"></a>5.system</h3><p>系统范围，类似于provided，但依赖需要显式提供系统路径。</p>
<h3 id="6-import-2"><a href="#6-import-2" class="headerlink" title="6.import"></a>6.import</h3><p>导入范围，用于依赖管理中的<dependencyManagement>，从一个BOM（Bill of Materials）导入依赖。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>依赖的scope通常在POM文件中的<dependency>标签内定义，例如：<br><dependency><br>    <groupId>org.example</groupId><br>    <artifactId>example-artifact</artifactId><br>    <version>1.0.0</version><br>    <scope>test</scope><br></dependency></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="按使用场景划分-2"><a href="#按使用场景划分-2" class="headerlink" title="按使用场景划分"></a>按使用场景划分</h3><p>1.编译</p>
<p>2.测试</p>
<p>3.运行</p>
<p>4.系统</p>
<p>5.导入## 定义</p>
<p>Maven中的scope（依赖配置范围）用于定义依赖在项目中的使用范围和生命周期。不同的scope决定了依赖在编译、测试、运行等阶段的可见性和使用情况。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-compile-3"><a href="#1-compile-3" class="headerlink" title="1.compile"></a>1.compile</h3><p>编译范围，默认范围，适用于编译、测试和运行阶段。</p>
<h3 id="2-provided-3"><a href="#2-provided-3" class="headerlink" title="2.provided"></a>2.provided</h3><p>提供范围，依赖在编译和测试阶段可用，但在运行时由运行环境提供。</p>
<h3 id="3-runtime-3"><a href="#3-runtime-3" class="headerlink" title="3.runtime"></a>3.runtime</h3><p>运行时范围，依赖在运行和测试阶段可用，但在编译时不可用。</p>
<h3 id="4-test-3"><a href="#4-test-3" class="headerlink" title="4.test"></a>4.test</h3><p>测试范围，依赖仅在测试编译和测试运行阶段可用。</p>
<h3 id="5-system-3"><a href="#5-system-3" class="headerlink" title="5.system"></a>5.system</h3><p>系统范围，类似于provided，但依赖需要显式提供系统路径。</p>
<h3 id="6-import-3"><a href="#6-import-3" class="headerlink" title="6.import"></a>6.import</h3><p>导入范围，用于依赖管理中的<dependencyManagement>，从一个BOM（Bill of Materials）导入依赖。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>依赖的scope通常在POM文件中的<dependency>标签内定义，例如：<br><dependency><br>    <groupId>org.example</groupId><br>    <artifactId>example-artifact</artifactId><br>    <version>1.0.0</version><br>    <scope>test</scope><br></dependency></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="按使用场景划分-3"><a href="#按使用场景划分-3" class="headerlink" title="按使用场景划分"></a>按使用场景划分</h3><p>1.编译</p>
<p>2.测试</p>
<p>3.运行</p>
<p>4.系统</p>
<p>5.导入</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Maven仓库</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Maven%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<h1 id="Maven仓库"><a href="#Maven仓库" class="headerlink" title="Maven仓库"></a>Maven仓库</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Maven仓库是一个用于存储项目构建过程中所需的依赖包、插件和生成的构件（如JAR包、WAR包等）的存储库。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-本地仓库"><a href="#1-本地仓库" class="headerlink" title="1.本地仓库"></a>1.本地仓库</h3><p>存储在开发者机器上的仓库，默认位置为用户主目录下的.m2&#x2F;repository文件夹。</p>
<h3 id="2-中央仓库"><a href="#2-中央仓库" class="headerlink" title="2.中央仓库"></a>2.中央仓库</h3><p>Maven官方提供的公共仓库，默认情况下Maven会从这里下载依赖。</p>
<h3 id="3-远程仓库"><a href="#3-远程仓库" class="headerlink" title="3.远程仓库"></a>3.远程仓库</h3><p>用户或组织自己搭建的仓库，用于存储和共享内部的构件。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/./../TyporaImage/image-20240729160133644.png" alt="image-20240729160133644"></p>
<h3 id="仓库路径结构"><a href="#仓库路径结构" class="headerlink" title="仓库路径结构"></a>仓库路径结构</h3><p>通常由分组ID（groupId）、工件ID（artifactId）和版本号（version）组成的层级目录结构。例如：&#x2F;com&#x2F;example&#x2F;project&#x2F;1.0.0&#x2F;project-1.0.0.jar。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-公共仓库"><a href="#1-公共仓库" class="headerlink" title="1.公共仓库"></a>1.公共仓库</h3><p>如Maven中央仓库、JCenter、Sonatype等。</p>
<h3 id="2-私有仓库"><a href="#2-私有仓库" class="headerlink" title="2.私有仓库"></a>2.私有仓库</h3><p>企业或团队内部搭建的仓库，如Nexus、Artifactory等。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>管理和存储项目依赖和构建输出，确保构建过程的稳定性和可重复性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>Maven通过POM文件（Project Object Model）描述项目的依赖关系，然后从配置的仓库中获取这些依赖。仓库按层级目录存储构件，每个构件通过其分组ID、工件ID和版本号唯一标识。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-设置本地仓库路径"><a href="#1-设置本地仓库路径" class="headerlink" title="1.设置本地仓库路径"></a>1.设置本地仓库路径</h3><p>在settings文件里面设置</p>
<p><img src="/./../TyporaImage/image-20240729160454077.png" alt="image-20240729160454077"></p>
<h3 id="2-配置远程仓库（私服）"><a href="#2-配置远程仓库（私服）" class="headerlink" title="2.配置远程仓库（私服）"></a>2.配置远程仓库（私服）</h3><p>比如配置阿里云的私服地址</p>
<p>在<mirror> 标签中配置</p>
<p><img src="/./../TyporaImage/image-20240729160625693.png" alt="image-20240729160625693"></p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Maven仓库是一个用于存储项目构建过程中所需的依赖包、插件和生成的构件（如JAR包、WAR包等）的存储库。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-本地仓库-1"><a href="#1-本地仓库-1" class="headerlink" title="1.本地仓库"></a>1.本地仓库</h3><p>存储在开发者机器上的仓库，默认位置为用户主目录下的.m2&#x2F;repository文件夹。</p>
<h3 id="2-中央仓库-1"><a href="#2-中央仓库-1" class="headerlink" title="2.中央仓库"></a>2.中央仓库</h3><p>Maven官方提供的公共仓库，默认情况下Maven会从这里下载依赖。</p>
<h3 id="3-远程仓库-1"><a href="#3-远程仓库-1" class="headerlink" title="3.远程仓库"></a>3.远程仓库</h3><p>用户或组织自己搭建的仓库，用于存储和共享内部的构件。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/./../TyporaImage/image-20240729160133644.png" alt="image-20240729160133644"></p>
<h3 id="仓库路径结构-1"><a href="#仓库路径结构-1" class="headerlink" title="仓库路径结构"></a>仓库路径结构</h3><p>通常由分组ID（groupId）、工件ID（artifactId）和版本号（version）组成的层级目录结构。例如：&#x2F;com&#x2F;example&#x2F;project&#x2F;1.0.0&#x2F;project-1.0.0.jar。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-公共仓库-1"><a href="#1-公共仓库-1" class="headerlink" title="1.公共仓库"></a>1.公共仓库</h3><p>如Maven中央仓库、JCenter、Sonatype等。</p>
<h3 id="2-私有仓库-1"><a href="#2-私有仓库-1" class="headerlink" title="2.私有仓库"></a>2.私有仓库</h3><p>企业或团队内部搭建的仓库，如Nexus、Artifactory等。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>管理和存储项目依赖和构建输出，确保构建过程的稳定性和可重复性。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>Maven通过POM文件（Project Object Model）描述项目的依赖关系，然后从配置的仓库中获取这些依赖。仓库按层级目录存储构件，每个构件通过其分组ID、工件ID和版本号唯一标识。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-设置本地仓库路径-1"><a href="#1-设置本地仓库路径-1" class="headerlink" title="1.设置本地仓库路径"></a>1.设置本地仓库路径</h3><p>在settings文件里面设置</p>
<p><img src="/./../TyporaImage/image-20240729160454077.png" alt="image-20240729160454077"></p>
<h3 id="2-配置远程仓库（私服）-1"><a href="#2-配置远程仓库（私服）-1" class="headerlink" title="2.配置远程仓库（私服）"></a>2.配置远程仓库（私服）</h3><p>比如配置阿里云的私服地址</p>
<p>在<mirror> 标签中配置</p>
<p><img src="/./../TyporaImage/image-20240729160625693.png" alt="image-20240729160625693">仓库</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>Maven仓库是一个用于存储项目构建过程中所需的依赖包、插件和生成的构件（如JAR包、WAR包等）的存储库。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-本地仓库-2"><a href="#1-本地仓库-2" class="headerlink" title="1.本地仓库"></a>1.本地仓库</h3><p>存储在开发者机器上的仓库，默认位置为用户主目录下的.m2&#x2F;repository文件夹。</p>
<h3 id="2-中央仓库-2"><a href="#2-中央仓库-2" class="headerlink" title="2.中央仓库"></a>2.中央仓库</h3><p>Maven官方提供的公共仓库，默认情况下Maven会从这里下载依赖。</p>
<h3 id="3-远程仓库-2"><a href="#3-远程仓库-2" class="headerlink" title="3.远程仓库"></a>3.远程仓库</h3><p>用户或组织自己搭建的仓库，用于存储和共享内部的构件。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/./../TyporaImage/image-20240729160133644.png" alt="image-20240729160133644"></p>
<h3 id="仓库路径结构-2"><a href="#仓库路径结构-2" class="headerlink" title="仓库路径结构"></a>仓库路径结构</h3><p>通常由分组ID（groupId）、工件ID（artifactId）和版本号（version）组成的层级目录结构。例如：&#x2F;com&#x2F;example&#x2F;project&#x2F;1.0.0&#x2F;project-1.0.0.jar。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-公共仓库-2"><a href="#1-公共仓库-2" class="headerlink" title="1.公共仓库"></a>1.公共仓库</h3><p>如Maven中央仓库、JCenter、Sonatype等。</p>
<h3 id="2-私有仓库-2"><a href="#2-私有仓库-2" class="headerlink" title="2.私有仓库"></a>2.私有仓库</h3><p>企业或团队内部搭建的仓库，如Nexus、Artifactory等。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>管理和存储项目依赖和构建输出，确保构建过程的稳定性和可重复性。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>Maven通过POM文件（Project Object Model）描述项目的依赖关系，然后从配置的仓库中获取这些依赖。仓库按层级目录存储构件，每个构件通过其分组ID、工件ID和版本号唯一标识。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-设置本地仓库路径-2"><a href="#1-设置本地仓库路径-2" class="headerlink" title="1.设置本地仓库路径"></a>1.设置本地仓库路径</h3><p>在settings文件里面设置</p>
<p><img src="/./../TyporaImage/image-20240729160454077.png" alt="image-20240729160454077"></p>
<h3 id="2-配置远程仓库（私服）-2"><a href="#2-配置远程仓库（私服）-2" class="headerlink" title="2.配置远程仓库（私服）"></a>2.配置远程仓库（私服）</h3><p>比如配置阿里云的私服地址</p>
<p>在<mirror> 标签中配置</p>
<p><img src="/./../TyporaImage/image-20240729160625693.png" alt="image-20240729160625693"></p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>Maven仓库是一个用于存储项目构建过程中所需的依赖包、插件和生成的构件（如JAR包、WAR包等）的存储库。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-本地仓库-3"><a href="#1-本地仓库-3" class="headerlink" title="1.本地仓库"></a>1.本地仓库</h3><p>存储在开发者机器上的仓库，默认位置为用户主目录下的.m2&#x2F;repository文件夹。</p>
<h3 id="2-中央仓库-3"><a href="#2-中央仓库-3" class="headerlink" title="2.中央仓库"></a>2.中央仓库</h3><p>Maven官方提供的公共仓库，默认情况下Maven会从这里下载依赖。</p>
<h3 id="3-远程仓库-3"><a href="#3-远程仓库-3" class="headerlink" title="3.远程仓库"></a>3.远程仓库</h3><p>用户或组织自己搭建的仓库，用于存储和共享内部的构件。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/./../TyporaImage/image-20240729160133644.png" alt="image-20240729160133644"></p>
<h3 id="仓库路径结构-3"><a href="#仓库路径结构-3" class="headerlink" title="仓库路径结构"></a>仓库路径结构</h3><p>通常由分组ID（groupId）、工件ID（artifactId）和版本号（version）组成的层级目录结构。例如：&#x2F;com&#x2F;example&#x2F;project&#x2F;1.0.0&#x2F;project-1.0.0.jar。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-公共仓库-3"><a href="#1-公共仓库-3" class="headerlink" title="1.公共仓库"></a>1.公共仓库</h3><p>如Maven中央仓库、JCenter、Sonatype等。</p>
<h3 id="2-私有仓库-3"><a href="#2-私有仓库-3" class="headerlink" title="2.私有仓库"></a>2.私有仓库</h3><p>企业或团队内部搭建的仓库，如Nexus、Artifactory等。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>管理和存储项目依赖和构建输出，确保构建过程的稳定性和可重复性。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>Maven通过POM文件（Project Object Model）描述项目的依赖关系，然后从配置的仓库中获取这些依赖。仓库按层级目录存储构件，每个构件通过其分组ID、工件ID和版本号唯一标识。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-设置本地仓库路径-3"><a href="#1-设置本地仓库路径-3" class="headerlink" title="1.设置本地仓库路径"></a>1.设置本地仓库路径</h3><p>在settings文件里面设置</p>
<p><img src="/./../TyporaImage/image-20240729160454077.png" alt="image-20240729160454077"></p>
<h3 id="2-配置远程仓库（私服）-3"><a href="#2-配置远程仓库（私服）-3" class="headerlink" title="2.配置远程仓库（私服）"></a>2.配置远程仓库（私服）</h3><p>比如配置阿里云的私服地址</p>
<p>在<mirror> 标签中配置</p>
<p><img src="/./../TyporaImage/image-20240729160625693.png" alt="image-20240729160625693"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Maven</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Maven/</url>
    <content><![CDATA[<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Maven是一个基于项目对象模型（POM, Project Object Model）的构建管理工具，能够管理项目的构建、依赖管理和项目生命周期。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-POM文件"><a href="#1-POM文件" class="headerlink" title="1.POM文件"></a>1.POM文件</h3><p>项目对象模型文件（pom.xml），描述项目的基本信息、依赖、构建配置等。</p>
<h3 id="2-仓库"><a href="#2-仓库" class="headerlink" title="2.仓库"></a>2.仓库</h3><p>存储项目依赖的中央仓库和本地仓库。</p>
<h3 id="3-插件"><a href="#3-插件" class="headerlink" title="3.插件"></a>3.插件</h3><p>扩展Maven功能的插件，用于编译、测试、打包、部署等。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-POM文件-1"><a href="#1-POM文件-1" class="headerlink" title="1.POM文件"></a>1.POM文件</h3><p>定义项目依赖、插件、构建配置等。</p>
<h3 id="2-仓库结构"><a href="#2-仓库结构" class="headerlink" title="2.仓库结构"></a>2.仓库结构</h3><p>分为本地仓库和远程仓库。</p>
<h3 id="3-项目目录结构"><a href="#3-项目目录结构" class="headerlink" title="3.项目目录结构"></a>3.项目目录结构</h3><p>Maven推荐的标准目录结构，如src&#x2F;main&#x2F;java、src&#x2F;test&#x2F;java等。</p>
<p><img src="/./../TyporaImage/image-20240729160737113.png" alt="image-20240729160737113"></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>提供一种标准化、自动化的项目构建和管理方式，简化项目的依赖管理和构建过程。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过POM文件定义项目的依赖和构建配置，Maven根据这些定义自动下载依赖、执行构建任务。## 定义</p>
<p>Maven是一个基于项目对象模型（POM, Project Object Model）的构建管理工具，能够管理项目的构建、依赖管理和项目生命周期。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-POM文件-2"><a href="#1-POM文件-2" class="headerlink" title="1.POM文件"></a>1.POM文件</h3><p>项目对象模型文件（pom.xml），描述项目的基本信息、依赖、构建配置等。</p>
<h3 id="2-仓库-1"><a href="#2-仓库-1" class="headerlink" title="2.仓库"></a>2.仓库</h3><p>存储项目依赖的中央仓库和本地仓库。</p>
<h3 id="3-插件-1"><a href="#3-插件-1" class="headerlink" title="3.插件"></a>3.插件</h3><p>扩展Maven功能的插件，用于编译、测试、打包、部署等。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-POM文件-3"><a href="#1-POM文件-3" class="headerlink" title="1.POM文件"></a>1.POM文件</h3><p>定义项目依赖、插件、构建配置等。</p>
<h3 id="2-仓库结构-1"><a href="#2-仓库结构-1" class="headerlink" title="2.仓库结构"></a>2.仓库结构</h3><p>分为本地仓库和远程仓库。</p>
<h3 id="3-项目目录结构-1"><a href="#3-项目目录结构-1" class="headerlink" title="3.项目目录结构"></a>3.项目目录结构</h3><p>Maven推荐的标准目录结构，如src&#x2F;main&#x2F;java、src&#x2F;test&#x2F;java等。</p>
<p><img src="/./../TyporaImage/image-20240729160737113.png" alt="image-20240729160737113"></p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>提供一种标准化、自动化的项目构建和管理方式，简化项目的依赖管理和构建过程。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过POM文件定义项目的依赖和构建配置，Maven根据这些定义自动下载依赖、执行构建任务。en</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Maven是一个基于项目对象模型（POM, Project Object Model）的构建管理工具，能够管理项目的构建、依赖管理和项目生命周期。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-POM文件-4"><a href="#1-POM文件-4" class="headerlink" title="1.POM文件"></a>1.POM文件</h3><p>项目对象模型文件（pom.xml），描述项目的基本信息、依赖、构建配置等。</p>
<h3 id="2-仓库-2"><a href="#2-仓库-2" class="headerlink" title="2.仓库"></a>2.仓库</h3><p>存储项目依赖的中央仓库和本地仓库。</p>
<h3 id="3-插件-2"><a href="#3-插件-2" class="headerlink" title="3.插件"></a>3.插件</h3><p>扩展Maven功能的插件，用于编译、测试、打包、部署等。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-POM文件-5"><a href="#1-POM文件-5" class="headerlink" title="1.POM文件"></a>1.POM文件</h3><p>定义项目依赖、插件、构建配置等。</p>
<h3 id="2-仓库结构-2"><a href="#2-仓库结构-2" class="headerlink" title="2.仓库结构"></a>2.仓库结构</h3><p>分为本地仓库和远程仓库。</p>
<h3 id="3-项目目录结构-2"><a href="#3-项目目录结构-2" class="headerlink" title="3.项目目录结构"></a>3.项目目录结构</h3><p>Maven推荐的标准目录结构，如src&#x2F;main&#x2F;java、src&#x2F;test&#x2F;java等。</p>
<p><img src="/./../TyporaImage/image-20240729160737113.png" alt="image-20240729160737113"></p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>提供一种标准化、自动化的项目构建和管理方式，简化项目的依赖管理和构建过程。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过POM文件定义项目的依赖和构建配置，Maven根据这些定义自动下载依赖、执行构建任务。## 定义</p>
<p>Maven是一个基于项目对象模型（POM, Project Object Model）的构建管理工具，能够管理项目的构建、依赖管理和项目生命周期。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-POM文件-6"><a href="#1-POM文件-6" class="headerlink" title="1.POM文件"></a>1.POM文件</h3><p>项目对象模型文件（pom.xml），描述项目的基本信息、依赖、构建配置等。</p>
<h3 id="2-仓库-3"><a href="#2-仓库-3" class="headerlink" title="2.仓库"></a>2.仓库</h3><p>存储项目依赖的中央仓库和本地仓库。</p>
<h3 id="3-插件-3"><a href="#3-插件-3" class="headerlink" title="3.插件"></a>3.插件</h3><p>扩展Maven功能的插件，用于编译、测试、打包、部署等。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-POM文件-7"><a href="#1-POM文件-7" class="headerlink" title="1.POM文件"></a>1.POM文件</h3><p>定义项目依赖、插件、构建配置等。</p>
<h3 id="2-仓库结构-3"><a href="#2-仓库结构-3" class="headerlink" title="2.仓库结构"></a>2.仓库结构</h3><p>分为本地仓库和远程仓库。</p>
<h3 id="3-项目目录结构-3"><a href="#3-项目目录结构-3" class="headerlink" title="3.项目目录结构"></a>3.项目目录结构</h3><p>Maven推荐的标准目录结构，如src&#x2F;main&#x2F;java、src&#x2F;test&#x2F;java等。</p>
<p><img src="/./../TyporaImage/image-20240729160737113.png" alt="image-20240729160737113"></p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>提供一种标准化、自动化的项目构建和管理方式，简化项目的依赖管理和构建过程。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过POM文件定义项目的依赖和构建配置，Maven根据这些定义自动下载依赖、执行构建任务。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Maven坐标</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Maven%E5%9D%90%E6%A0%87/</url>
    <content><![CDATA[<h1 id="坐标"><a href="#坐标" class="headerlink" title="坐标"></a>坐标</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Maven坐标是用于唯一标识和定位项目构件（如JAR包、WAR包等）的标识符。通过Maven坐标，开发者可以精确地指定项目的依赖项。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-groupId"><a href="#1-groupId" class="headerlink" title="1.groupId"></a>1.groupId</h3><p>分组ID，通常对应于项目所在的组织或公司。</p>
<h3 id="2-artifactId"><a href="#2-artifactId" class="headerlink" title="2.artifactId"></a>2.artifactId</h3><p>工件ID，表示项目或模块的名称。</p>
<h3 id="3-version"><a href="#3-version" class="headerlink" title="3.version"></a>3.version</h3><p>版本号，表示该构件的版本。</p>
<h3 id="4-packaging（可选）"><a href="#4-packaging（可选）" class="headerlink" title="4.packaging（可选）"></a>4.packaging（可选）</h3><p>打包类型，表示构件的打包形式，如JAR、WAR、POM等。</p>
<h3 id="5-classifier（可选）"><a href="#5-classifier（可选）" class="headerlink" title="5.classifier（可选）"></a>5.classifier（可选）</h3><p>分类器，用于标识构件的变体，如源码、二进制文件等。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>一个典型的Maven坐标如下所示：</p>
<dependency>
    <groupId>com.example</groupId>
    <artifactId>example-project</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>
    <classifier>sources</classifier>
</dependency>

<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="按用途划分"><a href="#按用途划分" class="headerlink" title="按用途划分"></a>按用途划分</h3><p>1.依赖坐标</p>
<p>2.插件坐标## 定义</p>
<p>Maven坐标是用于唯一标识和定位项目构件（如JAR包、WAR包等）的标识符。通过Maven坐标，开发者可以精确地指定项目的依赖项。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-groupId-1"><a href="#1-groupId-1" class="headerlink" title="1.groupId"></a>1.groupId</h3><p>分组ID，通常对应于项目所在的组织或公司。</p>
<h3 id="2-artifactId-1"><a href="#2-artifactId-1" class="headerlink" title="2.artifactId"></a>2.artifactId</h3><p>工件ID，表示项目或模块的名称。</p>
<h3 id="3-version-1"><a href="#3-version-1" class="headerlink" title="3.version"></a>3.version</h3><p>版本号，表示该构件的版本。</p>
<h3 id="4-packaging（可选）-1"><a href="#4-packaging（可选）-1" class="headerlink" title="4.packaging（可选）"></a>4.packaging（可选）</h3><p>打包类型，表示构件的打包形式，如JAR、WAR、POM等。</p>
<h3 id="5-classifier（可选）-1"><a href="#5-classifier（可选）-1" class="headerlink" title="5.classifier（可选）"></a>5.classifier（可选）</h3><p>分类器，用于标识构件的变体，如源码、二进制文件等。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>一个典型的Maven坐标如下所示：</p>
<dependency>
    <groupId>com.example</groupId>
    <artifactId>example-project</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>
    <classifier>sources</classifier>
</dependency>

<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="按用途划分-1"><a href="#按用途划分-1" class="headerlink" title="按用途划分"></a>按用途划分</h3><p>1.依赖坐标</p>
<p>2.插件坐标坐标</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Maven坐标是用于唯一标识和定位项目构件（如JAR包、WAR包等）的标识符。通过Maven坐标，开发者可以精确地指定项目的依赖项。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-groupId-2"><a href="#1-groupId-2" class="headerlink" title="1.groupId"></a>1.groupId</h3><p>分组ID，通常对应于项目所在的组织或公司。</p>
<h3 id="2-artifactId-2"><a href="#2-artifactId-2" class="headerlink" title="2.artifactId"></a>2.artifactId</h3><p>工件ID，表示项目或模块的名称。</p>
<h3 id="3-version-2"><a href="#3-version-2" class="headerlink" title="3.version"></a>3.version</h3><p>版本号，表示该构件的版本。</p>
<h3 id="4-packaging（可选）-2"><a href="#4-packaging（可选）-2" class="headerlink" title="4.packaging（可选）"></a>4.packaging（可选）</h3><p>打包类型，表示构件的打包形式，如JAR、WAR、POM等。</p>
<h3 id="5-classifier（可选）-2"><a href="#5-classifier（可选）-2" class="headerlink" title="5.classifier（可选）"></a>5.classifier（可选）</h3><p>分类器，用于标识构件的变体，如源码、二进制文件等。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>一个典型的Maven坐标如下所示：</p>
<dependency>
    <groupId>com.example</groupId>
    <artifactId>example-project</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>
    <classifier>sources</classifier>
</dependency>

<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="按用途划分-2"><a href="#按用途划分-2" class="headerlink" title="按用途划分"></a>按用途划分</h3><p>1.依赖坐标</p>
<p>2.插件坐标## 定义</p>
<p>Maven坐标是用于唯一标识和定位项目构件（如JAR包、WAR包等）的标识符。通过Maven坐标，开发者可以精确地指定项目的依赖项。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-groupId-3"><a href="#1-groupId-3" class="headerlink" title="1.groupId"></a>1.groupId</h3><p>分组ID，通常对应于项目所在的组织或公司。</p>
<h3 id="2-artifactId-3"><a href="#2-artifactId-3" class="headerlink" title="2.artifactId"></a>2.artifactId</h3><p>工件ID，表示项目或模块的名称。</p>
<h3 id="3-version-3"><a href="#3-version-3" class="headerlink" title="3.version"></a>3.version</h3><p>版本号，表示该构件的版本。</p>
<h3 id="4-packaging（可选）-3"><a href="#4-packaging（可选）-3" class="headerlink" title="4.packaging（可选）"></a>4.packaging（可选）</h3><p>打包类型，表示构件的打包形式，如JAR、WAR、POM等。</p>
<h3 id="5-classifier（可选）-3"><a href="#5-classifier（可选）-3" class="headerlink" title="5.classifier（可选）"></a>5.classifier（可选）</h3><p>分类器，用于标识构件的变体，如源码、二进制文件等。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>一个典型的Maven坐标如下所示：</p>
<dependency>
    <groupId>com.example</groupId>
    <artifactId>example-project</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>
    <classifier>sources</classifier>
</dependency>

<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="按用途划分-3"><a href="#按用途划分-3" class="headerlink" title="按用途划分"></a>按用途划分</h3><p>1.依赖坐标</p>
<p>2.插件坐标</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Maven常用命令</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Maven%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="Maven常用命令"><a href="#Maven常用命令" class="headerlink" title="Maven常用命令"></a>Maven常用命令</h1><h2 id="1-compile"><a href="#1-compile" class="headerlink" title="1.compile"></a>1.compile</h2><p>编译</p>
<h2 id="2-test"><a href="#2-test" class="headerlink" title="2.test"></a>2.test</h2><p>测试</p>
<h2 id="3-clean"><a href="#3-clean" class="headerlink" title="3.clean"></a>3.clean</h2><p>清理</p>
<h2 id="4-package"><a href="#4-package" class="headerlink" title="4.package"></a>4.package</h2><p>打包</p>
<h2 id="5-install"><a href="#5-install" class="headerlink" title="5.install"></a>5.install</h2><p>安装</p>
<h2 id="1-compile-1"><a href="#1-compile-1" class="headerlink" title="## 1.compile"></a>## 1.compile</h2><p>编译</p>
<h2 id="2-test-1"><a href="#2-test-1" class="headerlink" title="2.test"></a>2.test</h2><p>测试</p>
<h2 id="3-clean-1"><a href="#3-clean-1" class="headerlink" title="3.clean"></a>3.clean</h2><p>清理</p>
<h2 id="4-package-1"><a href="#4-package-1" class="headerlink" title="4.package"></a>4.package</h2><p>打包</p>
<h2 id="5-install-1"><a href="#5-install-1" class="headerlink" title="5.install"></a>5.install</h2><p>安装</p>
<p>##命令</p>
<h2 id="1-compile-2"><a href="#1-compile-2" class="headerlink" title="1.compile"></a>1.compile</h2><p>编译</p>
<h2 id="2-test-2"><a href="#2-test-2" class="headerlink" title="2.test"></a>2.test</h2><p>测试</p>
<h2 id="3-clean-2"><a href="#3-clean-2" class="headerlink" title="3.clean"></a>3.clean</h2><p>清理</p>
<h2 id="4-package-2"><a href="#4-package-2" class="headerlink" title="4.package"></a>4.package</h2><p>打包</p>
<h2 id="5-install-2"><a href="#5-install-2" class="headerlink" title="5.install"></a>5.install</h2><p>安装</p>
<h2 id="1-compile-3"><a href="#1-compile-3" class="headerlink" title="## 1.compile"></a>## 1.compile</h2><p>编译</p>
<h2 id="2-test-3"><a href="#2-test-3" class="headerlink" title="2.test"></a>2.test</h2><p>测试</p>
<h2 id="3-clean-3"><a href="#3-clean-3" class="headerlink" title="3.clean"></a>3.clean</h2><p>清理</p>
<h2 id="4-package-3"><a href="#4-package-3" class="headerlink" title="4.package"></a>4.package</h2><p>打包</p>
<h2 id="5-install-3"><a href="#5-install-3" class="headerlink" title="5.install"></a>5.install</h2><p>安装</p>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Maven生命周期</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Maven%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
    <content><![CDATA[<h1 id="maven生命周期"><a href="#maven生命周期" class="headerlink" title="maven生命周期"></a>maven生命周期</h1><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><img src="./../TyporaImage/image-20240729161418432.png" alt="image-20240729161418432"  />

<p>同一套生命周期中，执行后面的操作，会自动执行前面的所有操作</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><img src="./../TyporaImage/image-20240729161418432.png" alt="image-20240729161418432"  />

<p>同一套生命周期中，执行后面的操作，会自动执行前面的所有操作周期</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><img src="./../TyporaImage/image-20240729161418432.png" alt="image-20240729161418432"  />

<p>同一套生命周期中，执行后面的操作，会自动执行前面的所有操作</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><img src="./../TyporaImage/image-20240729161418432.png" alt="image-20240729161418432"  />

<p>同一套生命周期中，执行后面的操作，会自动执行前面的所有操作</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL入门</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/MySQL%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="MySQL入门"><a href="#MySQL入门" class="headerlink" title="MySQL入门"></a>MySQL入门</h1><h2 id="卸载："><a href="#卸载：" class="headerlink" title="卸载："></a>卸载：</h2><p>1.卸载mysql软件</p>
<p>2.卸载C盘中的软件数据，否则下次无法安装成功。</p>
<h2 id="服务启动："><a href="#服务启动：" class="headerlink" title="服务启动："></a>服务启动：</h2><p>一：手动打开 服务项目，开启MYSQL服务</p>
<p>二：通过cmd命令，net start mysql</p>
<h2 id="服务关闭："><a href="#服务关闭：" class="headerlink" title="服务关闭："></a>服务关闭：</h2><p>一：手动关闭服务项目，开启MYSQL服务</p>
<p>二：通过cmd命令，net stop mysql</p>
<h2 id="登录："><a href="#登录：" class="headerlink" title="登录："></a>登录：</h2><p>mysql -uroot  -proot</p>
<h2 id="退出："><a href="#退出：" class="headerlink" title="退出："></a>退出：</h2><p>exit、quit## 卸载：</p>
<p>1.卸载mysql软件</p>
<p>2.卸载C盘中的软件数据，否则下次无法安装成功。</p>
<h2 id="服务启动：-1"><a href="#服务启动：-1" class="headerlink" title="服务启动："></a>服务启动：</h2><p>一：手动打开 服务项目，开启MYSQL服务</p>
<p>二：通过cmd命令，net start mysql</p>
<h2 id="服务关闭：-1"><a href="#服务关闭：-1" class="headerlink" title="服务关闭："></a>服务关闭：</h2><p>一：手动关闭服务项目，开启MYSQL服务</p>
<p>二：通过cmd命令，net stop mysql</p>
<h2 id="登录：-1"><a href="#登录：-1" class="headerlink" title="登录："></a>登录：</h2><p>mysql -uroot  -proot</p>
<h2 id="退出：-1"><a href="#退出：-1" class="headerlink" title="退出："></a>退出：</h2><p>exit、quit入门</p>
<h2 id="卸载：-1"><a href="#卸载：-1" class="headerlink" title="卸载："></a>卸载：</h2><p>1.卸载mysql软件</p>
<p>2.卸载C盘中的软件数据，否则下次无法安装成功。</p>
<h2 id="服务启动：-2"><a href="#服务启动：-2" class="headerlink" title="服务启动："></a>服务启动：</h2><p>一：手动打开 服务项目，开启MYSQL服务</p>
<p>二：通过cmd命令，net start mysql</p>
<h2 id="服务关闭：-2"><a href="#服务关闭：-2" class="headerlink" title="服务关闭："></a>服务关闭：</h2><p>一：手动关闭服务项目，开启MYSQL服务</p>
<p>二：通过cmd命令，net stop mysql</p>
<h2 id="登录：-2"><a href="#登录：-2" class="headerlink" title="登录："></a>登录：</h2><p>mysql -uroot  -proot</p>
<h2 id="退出：-2"><a href="#退出：-2" class="headerlink" title="退出："></a>退出：</h2><p>exit、quit## 卸载：</p>
<p>1.卸载mysql软件</p>
<p>2.卸载C盘中的软件数据，否则下次无法安装成功。</p>
<h2 id="服务启动：-3"><a href="#服务启动：-3" class="headerlink" title="服务启动："></a>服务启动：</h2><p>一：手动打开 服务项目，开启MYSQL服务</p>
<p>二：通过cmd命令，net start mysql</p>
<h2 id="服务关闭：-3"><a href="#服务关闭：-3" class="headerlink" title="服务关闭："></a>服务关闭：</h2><p>一：手动关闭服务项目，开启MYSQL服务</p>
<p>二：通过cmd命令，net stop mysql</p>
<h2 id="登录：-3"><a href="#登录：-3" class="headerlink" title="登录："></a>登录：</h2><p>mysql -uroot  -proot</p>
<h2 id="退出：-3"><a href="#退出：-3" class="headerlink" title="退出："></a>退出：</h2><p>exit、quit</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Node对象-jsoup</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Node%E5%AF%B9%E8%B1%A1-jsoup/</url>
    <content><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>是Document对象和Element对象的父类。是Document对象和Element对象的父类。定义</p>
<p>是Document对象和Element对象的父类。是Document对象和Element对象的父类。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>RegExp对象</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/RegExp%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="RegExp对象"><a href="#RegExp对象" class="headerlink" title="RegExp对象"></a>RegExp对象</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>正则表达式对象，用来定义字符串的组成规则。</p>
<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240515211323812.png" alt="image-20240515211323812"></p>
<p><img src="/../TyporaImage/image-20240515211516855.png" alt="image-20240515211516855"></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240515211402470.png" alt="image-20240515211402470"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>如果用第一种创建方式，则需要用两个&#x2F;，因为有可能涉及到转义字符。</p>
<p>例如：</p>
<p><img src="/../TyporaImage/image-20240515211710874.png" alt="image-20240515211710874">## 定义</p>
<p>正则表达式对象，用来定义字符串的组成规则。</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240515211323812.png" alt="image-20240515211323812"></p>
<p><img src="/../TyporaImage/image-20240515211516855.png" alt="image-20240515211516855"></p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240515211402470.png" alt="image-20240515211402470"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>如果用第一种创建方式，则需要用两个&#x2F;，因为有可能涉及到转义字符。</p>
<p>例如：</p>
<p><img src="/../TyporaImage/image-20240515211710874.png" alt="image-20240515211710874">对象</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>正则表达式对象，用来定义字符串的组成规则。</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240515211323812.png" alt="image-20240515211323812"></p>
<p><img src="/../TyporaImage/image-20240515211516855.png" alt="image-20240515211516855"></p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240515211402470.png" alt="image-20240515211402470"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>如果用第一种创建方式，则需要用两个&#x2F;，因为有可能涉及到转义字符。</p>
<p>例如：</p>
<p><img src="/../TyporaImage/image-20240515211710874.png" alt="image-20240515211710874">## 定义</p>
<p>正则表达式对象，用来定义字符串的组成规则。</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240515211323812.png" alt="image-20240515211323812"></p>
<p><img src="/../TyporaImage/image-20240515211516855.png" alt="image-20240515211516855"></p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240515211402470.png" alt="image-20240515211402470"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>如果用第一种创建方式，则需要用两个&#x2F;，因为有可能涉及到转义字符。</p>
<p>例如：</p>
<p><img src="/../TyporaImage/image-20240515211710874.png" alt="image-20240515211710874"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Node对象</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Node%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="Node节点对象"><a href="#Node节点对象" class="headerlink" title="Node节点对象"></a>Node节点对象</h1><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p>parentNode</p>
<p>返回节点的父节点</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>所有的对象，都可以被认为是一个Node节点对象。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240516214522681.png" alt="image-20240516214522681">## 属性</p>
<p>parentNode</p>
<p>返回节点的父节点</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p>所有的对象，都可以被认为是一个Node节点对象。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240516214522681.png" alt="image-20240516214522681">对象</p>
<h2 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h2><p>parentNode</p>
<p>返回节点的父节点</p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p>所有的对象，都可以被认为是一个Node节点对象。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240516214522681.png" alt="image-20240516214522681">## 属性</p>
<p>parentNode</p>
<p>返回节点的父节点</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p>所有的对象，都可以被认为是一个Node节点对象。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240516214522681.png" alt="image-20240516214522681"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Request</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Request/</url>
    <content><![CDATA[<h1 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>在计算机科学和后端开发中，<code>request</code>（请求）是指客户端（如浏览器、应用程序等）向服务器发出的数据请求。这个请求通常是为了获取信息、执行操作或与服务器进行交互。</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><h3 id="一、获取请求消息数据"><a href="#一、获取请求消息数据" class="headerlink" title="一、获取请求消息数据"></a>一、获取请求消息数据</h3><h4 id="1-获取请求行数据"><a href="#1-获取请求行数据" class="headerlink" title="1.获取请求行数据"></a>1.获取请求行数据</h4><p>①获取请求方式：Get</p>
<p>String getmethod()</p>
<p>②<strong>获取虚拟目录：</strong></p>
<p>String getContextPath()</p>
<p>③获取Servlet路径：</p>
<p>String getServletPath（）</p>
<p>④获取请求参数：</p>
<p>String getQueryString()</p>
<p><strong>String getRequestURI()</strong></p>
<p>StringBuffer getRequestURL() </p>
<p>⑤获取版本及协议：</p>
<p>String getProtocol（）</p>
<p>⑥获取客户机的IP地址：</p>
<p>String getReMoteAddr（）</p>
<h4 id="2、获取请求头数据"><a href="#2、获取请求头数据" class="headerlink" title="2、获取请求头数据"></a>2、获取请求头数据</h4><p>①String getHeader（String name） ：</p>
<p>通过请求头的名字，获取请求头的数值</p>
<p>②getHeaderNames():</p>
<p>获取所有请求头名称</p>
<h4 id="3、获取请求体数据"><a href="#3、获取请求体数据" class="headerlink" title="3、获取请求体数据"></a>3、获取请求体数据</h4><p>只有Post方式才有请求体</p>
<p>步骤：</p>
<p>1.获取流对象</p>
<p>BuffferedReader  getReader（）：获取字符流，只能操作字符数据</p>
<p>ServletInputStream getInputStream（）：获取字节输入流，可以操作所有的数据类型。</p>
<p>2.从流对象中获取数据</p>
<h3 id="二-其他功能"><a href="#二-其他功能" class="headerlink" title="二.其他功能"></a>二.其他功能</h3><h4 id="1-获取请求参数（通用方式）"><a href="#1-获取请求参数（通用方式）" class="headerlink" title="1.获取请求参数（通用方式）"></a>1.获取请求参数（通用方式）</h4><p>①.获取所有参数的名称</p>
<p>getParameterNames():</p>
<p>②.根据参数名称获取参数值</p>
<p>getParaMeter（String name ）：</p>
<p>③根据参数名称获取参数值的数组</p>
<p>String[] getParaMeterValues(String name )：</p>
<p>④获取所有参数的Map集合</p>
<p>Map&lt;String，String[]&gt; getParameterMap（）：</p>
<h4 id="2-请求转发：一种在服务器内部的资源跳转"><a href="#2-请求转发：一种在服务器内部的资源跳转" class="headerlink" title="2.请求转发：一种在服务器内部的资源跳转"></a>2.请求转发：一种在服务器内部的资源跳转</h4><p>步骤：</p>
<p>①.通过request对象，获取请求转发器对象RequestDispatcher getRequestDispatcher(String path)</p>
<p>②.使用请求转发器对象进行转发。</p>
<p>forward（ServletRequest request，ServletResponse response）</p>
<p>特点：</p>
<p>1.浏览器地址栏路径不会改变</p>
<p>2.只能转发到当前服务器内部资源中。</p>
<h4 id="3-共享数据"><a href="#3-共享数据" class="headerlink" title="3.共享数据"></a>3.共享数据</h4><p>1.域对象：一个有作用域的的对象，可以在对象范围内共享数据</p>
<p>2.request域：</p>
<p>代表一次请求的范围，一般用于请求转发的多个资源中共享数据</p>
<p> setAttribute（String name，Object obj）：存储数据</p>
<p>getAttribute（String name ）：通过键值获取值</p>
<p>removeAttribute（String name ）：通过键移除键值对</p>
<h4 id="4-获取ServletContext"><a href="#4-获取ServletContext" class="headerlink" title="4.获取ServletContext"></a>4.获取ServletContext</h4><p>getServletContext（）</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240705111257282.png" alt="image-20240705111257282"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-继承体系"><a href="#1-继承体系" class="headerlink" title="1.继承体系"></a>1.继承体系</h3><p><img src="/../TyporaImage/image-20240705111413415.png" alt="image-20240705111413415"></p>
<h3 id="2-获取请求参数中文乱码的问题"><a href="#2-获取请求参数中文乱码的问题" class="headerlink" title="2.获取请求参数中文乱码的问题"></a>2.获取请求参数中文乱码的问题</h3><p>get方式不会出现乱码问题</p>
<p>post方式中，需要设置流的字符集。根据页面上的字符集设置</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>在计算机科学和后端开发中，<code>request</code>（请求）是指客户端（如浏览器、应用程序等）向服务器发出的数据请求。这个请求通常是为了获取信息、执行操作或与服务器进行交互。</p>
<h2 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h2><h3 id="一、获取请求消息数据-1"><a href="#一、获取请求消息数据-1" class="headerlink" title="一、获取请求消息数据"></a>一、获取请求消息数据</h3><h4 id="1-获取请求行数据-1"><a href="#1-获取请求行数据-1" class="headerlink" title="1.获取请求行数据"></a>1.获取请求行数据</h4><p>①获取请求方式：Get</p>
<p>String getmethod()</p>
<p>②<strong>获取虚拟目录：</strong></p>
<p>String getContextPath()</p>
<p>③获取Servlet路径：</p>
<p>String getServletPath（）</p>
<p>④获取请求参数：</p>
<p>String getQueryString()</p>
<p><strong>String getRequestURI()</strong></p>
<p>StringBuffer getRequestURL() </p>
<p>⑤获取版本及协议：</p>
<p>String getProtocol（）</p>
<p>⑥获取客户机的IP地址：</p>
<p>String getReMoteAddr（）</p>
<h4 id="2、获取请求头数据-1"><a href="#2、获取请求头数据-1" class="headerlink" title="2、获取请求头数据"></a>2、获取请求头数据</h4><p>①String getHeader（String name） ：</p>
<p>通过请求头的名字，获取请求头的数值</p>
<p>②getHeaderNames():</p>
<p>获取所有请求头名称</p>
<h4 id="3、获取请求体数据-1"><a href="#3、获取请求体数据-1" class="headerlink" title="3、获取请求体数据"></a>3、获取请求体数据</h4><p>只有Post方式才有请求体</p>
<p>步骤：</p>
<p>1.获取流对象</p>
<p>BuffferedReader  getReader（）：获取字符流，只能操作字符数据</p>
<p>ServletInputStream getInputStream（）：获取字节输入流，可以操作所有的数据类型。</p>
<p>2.从流对象中获取数据</p>
<h3 id="二-其他功能-1"><a href="#二-其他功能-1" class="headerlink" title="二.其他功能"></a>二.其他功能</h3><h4 id="1-获取请求参数（通用方式）-1"><a href="#1-获取请求参数（通用方式）-1" class="headerlink" title="1.获取请求参数（通用方式）"></a>1.获取请求参数（通用方式）</h4><p>①.获取所有参数的名称</p>
<p>getParameterNames():</p>
<p>②.根据参数名称获取参数值</p>
<p>getParaMeter（String name ）：</p>
<p>③根据参数名称获取参数值的数组</p>
<p>String[] getParaMeterValues(String name )：</p>
<p>④获取所有参数的Map集合</p>
<p>Map&lt;String，String[]&gt; getParameterMap（）：</p>
<h4 id="2-请求转发：一种在服务器内部的资源跳转-1"><a href="#2-请求转发：一种在服务器内部的资源跳转-1" class="headerlink" title="2.请求转发：一种在服务器内部的资源跳转"></a>2.请求转发：一种在服务器内部的资源跳转</h4><p>步骤：</p>
<p>①.通过request对象，获取请求转发器对象RequestDispatcher getRequestDispatcher(String path)</p>
<p>②.使用请求转发器对象进行转发。</p>
<p>forward（ServletRequest request，ServletResponse response）</p>
<p>特点：</p>
<p>1.浏览器地址栏路径不会改变</p>
<p>2.只能转发到当前服务器内部资源中。</p>
<h4 id="3-共享数据-1"><a href="#3-共享数据-1" class="headerlink" title="3.共享数据"></a>3.共享数据</h4><p>1.域对象：一个有作用域的的对象，可以在对象范围内共享数据</p>
<p>2.request域：</p>
<p>代表一次请求的范围，一般用于请求转发的多个资源中共享数据</p>
<p> setAttribute（String name，Object obj）：存储数据</p>
<p>getAttribute（String name ）：通过键值获取值</p>
<p>removeAttribute（String name ）：通过键移除键值对</p>
<h4 id="4-获取ServletContext-1"><a href="#4-获取ServletContext-1" class="headerlink" title="4.获取ServletContext"></a>4.获取ServletContext</h4><p>getServletContext（）</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240705111257282.png" alt="image-20240705111257282"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-继承体系-1"><a href="#1-继承体系-1" class="headerlink" title="1.继承体系"></a>1.继承体系</h3><p><img src="/../TyporaImage/image-20240705111413415.png" alt="image-20240705111413415"></p>
<h3 id="2-获取请求参数中文乱码的问题-1"><a href="#2-获取请求参数中文乱码的问题-1" class="headerlink" title="2.获取请求参数中文乱码的问题"></a>2.获取请求参数中文乱码的问题</h3><p>get方式不会出现乱码问题</p>
<p>post方式中，需要设置流的字符集。根据页面上的字符集设置st</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>在计算机科学和后端开发中，<code>request</code>（请求）是指客户端（如浏览器、应用程序等）向服务器发出的数据请求。这个请求通常是为了获取信息、执行操作或与服务器进行交互。</p>
<h2 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h2><h3 id="一、获取请求消息数据-2"><a href="#一、获取请求消息数据-2" class="headerlink" title="一、获取请求消息数据"></a>一、获取请求消息数据</h3><h4 id="1-获取请求行数据-2"><a href="#1-获取请求行数据-2" class="headerlink" title="1.获取请求行数据"></a>1.获取请求行数据</h4><p>①获取请求方式：Get</p>
<p>String getmethod()</p>
<p>②<strong>获取虚拟目录：</strong></p>
<p>String getContextPath()</p>
<p>③获取Servlet路径：</p>
<p>String getServletPath（）</p>
<p>④获取请求参数：</p>
<p>String getQueryString()</p>
<p><strong>String getRequestURI()</strong></p>
<p>StringBuffer getRequestURL() </p>
<p>⑤获取版本及协议：</p>
<p>String getProtocol（）</p>
<p>⑥获取客户机的IP地址：</p>
<p>String getReMoteAddr（）</p>
<h4 id="2、获取请求头数据-2"><a href="#2、获取请求头数据-2" class="headerlink" title="2、获取请求头数据"></a>2、获取请求头数据</h4><p>①String getHeader（String name） ：</p>
<p>通过请求头的名字，获取请求头的数值</p>
<p>②getHeaderNames():</p>
<p>获取所有请求头名称</p>
<h4 id="3、获取请求体数据-2"><a href="#3、获取请求体数据-2" class="headerlink" title="3、获取请求体数据"></a>3、获取请求体数据</h4><p>只有Post方式才有请求体</p>
<p>步骤：</p>
<p>1.获取流对象</p>
<p>BuffferedReader  getReader（）：获取字符流，只能操作字符数据</p>
<p>ServletInputStream getInputStream（）：获取字节输入流，可以操作所有的数据类型。</p>
<p>2.从流对象中获取数据</p>
<h3 id="二-其他功能-2"><a href="#二-其他功能-2" class="headerlink" title="二.其他功能"></a>二.其他功能</h3><h4 id="1-获取请求参数（通用方式）-2"><a href="#1-获取请求参数（通用方式）-2" class="headerlink" title="1.获取请求参数（通用方式）"></a>1.获取请求参数（通用方式）</h4><p>①.获取所有参数的名称</p>
<p>getParameterNames():</p>
<p>②.根据参数名称获取参数值</p>
<p>getParaMeter（String name ）：</p>
<p>③根据参数名称获取参数值的数组</p>
<p>String[] getParaMeterValues(String name )：</p>
<p>④获取所有参数的Map集合</p>
<p>Map&lt;String，String[]&gt; getParameterMap（）：</p>
<h4 id="2-请求转发：一种在服务器内部的资源跳转-2"><a href="#2-请求转发：一种在服务器内部的资源跳转-2" class="headerlink" title="2.请求转发：一种在服务器内部的资源跳转"></a>2.请求转发：一种在服务器内部的资源跳转</h4><p>步骤：</p>
<p>①.通过request对象，获取请求转发器对象RequestDispatcher getRequestDispatcher(String path)</p>
<p>②.使用请求转发器对象进行转发。</p>
<p>forward（ServletRequest request，ServletResponse response）</p>
<p>特点：</p>
<p>1.浏览器地址栏路径不会改变</p>
<p>2.只能转发到当前服务器内部资源中。</p>
<h4 id="3-共享数据-2"><a href="#3-共享数据-2" class="headerlink" title="3.共享数据"></a>3.共享数据</h4><p>1.域对象：一个有作用域的的对象，可以在对象范围内共享数据</p>
<p>2.request域：</p>
<p>代表一次请求的范围，一般用于请求转发的多个资源中共享数据</p>
<p> setAttribute（String name，Object obj）：存储数据</p>
<p>getAttribute（String name ）：通过键值获取值</p>
<p>removeAttribute（String name ）：通过键移除键值对</p>
<h4 id="4-获取ServletContext-2"><a href="#4-获取ServletContext-2" class="headerlink" title="4.获取ServletContext"></a>4.获取ServletContext</h4><p>getServletContext（）</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240705111257282.png" alt="image-20240705111257282"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-继承体系-2"><a href="#1-继承体系-2" class="headerlink" title="1.继承体系"></a>1.继承体系</h3><p><img src="/../TyporaImage/image-20240705111413415.png" alt="image-20240705111413415"></p>
<h3 id="2-获取请求参数中文乱码的问题-2"><a href="#2-获取请求参数中文乱码的问题-2" class="headerlink" title="2.获取请求参数中文乱码的问题"></a>2.获取请求参数中文乱码的问题</h3><p>get方式不会出现乱码问题</p>
<p>post方式中，需要设置流的字符集。根据页面上的字符集设置</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>在计算机科学和后端开发中，<code>request</code>（请求）是指客户端（如浏览器、应用程序等）向服务器发出的数据请求。这个请求通常是为了获取信息、执行操作或与服务器进行交互。</p>
<h2 id="功能-3"><a href="#功能-3" class="headerlink" title="功能"></a>功能</h2><h3 id="一、获取请求消息数据-3"><a href="#一、获取请求消息数据-3" class="headerlink" title="一、获取请求消息数据"></a>一、获取请求消息数据</h3><h4 id="1-获取请求行数据-3"><a href="#1-获取请求行数据-3" class="headerlink" title="1.获取请求行数据"></a>1.获取请求行数据</h4><p>①获取请求方式：Get</p>
<p>String getmethod()</p>
<p>②<strong>获取虚拟目录：</strong></p>
<p>String getContextPath()</p>
<p>③获取Servlet路径：</p>
<p>String getServletPath（）</p>
<p>④获取请求参数：</p>
<p>String getQueryString()</p>
<p><strong>String getRequestURI()</strong></p>
<p>StringBuffer getRequestURL() </p>
<p>⑤获取版本及协议：</p>
<p>String getProtocol（）</p>
<p>⑥获取客户机的IP地址：</p>
<p>String getReMoteAddr（）</p>
<h4 id="2、获取请求头数据-3"><a href="#2、获取请求头数据-3" class="headerlink" title="2、获取请求头数据"></a>2、获取请求头数据</h4><p>①String getHeader（String name） ：</p>
<p>通过请求头的名字，获取请求头的数值</p>
<p>②getHeaderNames():</p>
<p>获取所有请求头名称</p>
<h4 id="3、获取请求体数据-3"><a href="#3、获取请求体数据-3" class="headerlink" title="3、获取请求体数据"></a>3、获取请求体数据</h4><p>只有Post方式才有请求体</p>
<p>步骤：</p>
<p>1.获取流对象</p>
<p>BuffferedReader  getReader（）：获取字符流，只能操作字符数据</p>
<p>ServletInputStream getInputStream（）：获取字节输入流，可以操作所有的数据类型。</p>
<p>2.从流对象中获取数据</p>
<h3 id="二-其他功能-3"><a href="#二-其他功能-3" class="headerlink" title="二.其他功能"></a>二.其他功能</h3><h4 id="1-获取请求参数（通用方式）-3"><a href="#1-获取请求参数（通用方式）-3" class="headerlink" title="1.获取请求参数（通用方式）"></a>1.获取请求参数（通用方式）</h4><p>①.获取所有参数的名称</p>
<p>getParameterNames():</p>
<p>②.根据参数名称获取参数值</p>
<p>getParaMeter（String name ）：</p>
<p>③根据参数名称获取参数值的数组</p>
<p>String[] getParaMeterValues(String name )：</p>
<p>④获取所有参数的Map集合</p>
<p>Map&lt;String，String[]&gt; getParameterMap（）：</p>
<h4 id="2-请求转发：一种在服务器内部的资源跳转-3"><a href="#2-请求转发：一种在服务器内部的资源跳转-3" class="headerlink" title="2.请求转发：一种在服务器内部的资源跳转"></a>2.请求转发：一种在服务器内部的资源跳转</h4><p>步骤：</p>
<p>①.通过request对象，获取请求转发器对象RequestDispatcher getRequestDispatcher(String path)</p>
<p>②.使用请求转发器对象进行转发。</p>
<p>forward（ServletRequest request，ServletResponse response）</p>
<p>特点：</p>
<p>1.浏览器地址栏路径不会改变</p>
<p>2.只能转发到当前服务器内部资源中。</p>
<h4 id="3-共享数据-3"><a href="#3-共享数据-3" class="headerlink" title="3.共享数据"></a>3.共享数据</h4><p>1.域对象：一个有作用域的的对象，可以在对象范围内共享数据</p>
<p>2.request域：</p>
<p>代表一次请求的范围，一般用于请求转发的多个资源中共享数据</p>
<p> setAttribute（String name，Object obj）：存储数据</p>
<p>getAttribute（String name ）：通过键值获取值</p>
<p>removeAttribute（String name ）：通过键移除键值对</p>
<h4 id="4-获取ServletContext-3"><a href="#4-获取ServletContext-3" class="headerlink" title="4.获取ServletContext"></a>4.获取ServletContext</h4><p>getServletContext（）</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240705111257282.png" alt="image-20240705111257282"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-继承体系-3"><a href="#1-继承体系-3" class="headerlink" title="1.继承体系"></a>1.继承体系</h3><p><img src="/../TyporaImage/image-20240705111413415.png" alt="image-20240705111413415"></p>
<h3 id="2-获取请求参数中文乱码的问题-3"><a href="#2-获取请求参数中文乱码的问题-3" class="headerlink" title="2.获取请求参数中文乱码的问题"></a>2.获取请求参数中文乱码的问题</h3><p>get方式不会出现乱码问题</p>
<p>post方式中，需要设置流的字符集。根据页面上的字符集设置</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Response_路径</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Response_%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<h1 id="response路径"><a href="#response路径" class="headerlink" title="response路径"></a>response路径</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-相对路径"><a href="#1-相对路径" class="headerlink" title="1.相对路径"></a>1.相对路径</h3><p>通过相对路径不可以确定唯一的资源</p>
<h3 id="2-绝对路径"><a href="#2-绝对路径" class="headerlink" title="2.绝对路径"></a>2.绝对路径</h3><p>通过绝对路径可以确定唯一的资源</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><h3 id="1-相对路径-1"><a href="#1-相对路径-1" class="headerlink" title="1.相对路径"></a>1.相对路径</h3><p>找到当前资源与目标资源的相对位置</p>
<p>以.&#x2F;开头</p>
<p>.&#x2F;当前目录</p>
<p>..&#x2F;后退一级目录</p>
<h3 id="2-绝对路径-1"><a href="#2-绝对路径-1" class="headerlink" title="2.绝对路径"></a>2.绝对路径</h3><p>以&#x2F;开头</p>
<p>客户端使用：</p>
<p>需要加虚拟目录</p>
<p>服务器使用：</p>
<p>不需要加虚拟目录</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-相对路径-2"><a href="#1-相对路径-2" class="headerlink" title="1.相对路径"></a>1.相对路径</h3><p>通过相对路径不可以确定唯一的资源</p>
<h3 id="2-绝对路径-2"><a href="#2-绝对路径-2" class="headerlink" title="2.绝对路径"></a>2.绝对路径</h3><p>通过绝对路径可以确定唯一的资源</p>
<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><h3 id="1-相对路径-3"><a href="#1-相对路径-3" class="headerlink" title="1.相对路径"></a>1.相对路径</h3><p>找到当前资源与目标资源的相对位置</p>
<p>以.&#x2F;开头</p>
<p>.&#x2F;当前目录</p>
<p>..&#x2F;后退一级目录</p>
<h3 id="2-绝对路径-3"><a href="#2-绝对路径-3" class="headerlink" title="2.绝对路径"></a>2.绝对路径</h3><p>以&#x2F;开头</p>
<p>客户端使用：</p>
<p>需要加虚拟目录</p>
<p>服务器使用：</p>
<p>不需要加虚拟目录e路径</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-相对路径-4"><a href="#1-相对路径-4" class="headerlink" title="1.相对路径"></a>1.相对路径</h3><p>通过相对路径不可以确定唯一的资源</p>
<h3 id="2-绝对路径-4"><a href="#2-绝对路径-4" class="headerlink" title="2.绝对路径"></a>2.绝对路径</h3><p>通过绝对路径可以确定唯一的资源</p>
<h2 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h2><h3 id="1-相对路径-5"><a href="#1-相对路径-5" class="headerlink" title="1.相对路径"></a>1.相对路径</h3><p>找到当前资源与目标资源的相对位置</p>
<p>以.&#x2F;开头</p>
<p>.&#x2F;当前目录</p>
<p>..&#x2F;后退一级目录</p>
<h3 id="2-绝对路径-5"><a href="#2-绝对路径-5" class="headerlink" title="2.绝对路径"></a>2.绝对路径</h3><p>以&#x2F;开头</p>
<p>客户端使用：</p>
<p>需要加虚拟目录</p>
<p>服务器使用：</p>
<p>不需要加虚拟目录</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-相对路径-6"><a href="#1-相对路径-6" class="headerlink" title="1.相对路径"></a>1.相对路径</h3><p>通过相对路径不可以确定唯一的资源</p>
<h3 id="2-绝对路径-6"><a href="#2-绝对路径-6" class="headerlink" title="2.绝对路径"></a>2.绝对路径</h3><p>通过绝对路径可以确定唯一的资源</p>
<h2 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h2><h3 id="1-相对路径-7"><a href="#1-相对路径-7" class="headerlink" title="1.相对路径"></a>1.相对路径</h3><p>找到当前资源与目标资源的相对位置</p>
<p>以.&#x2F;开头</p>
<p>.&#x2F;当前目录</p>
<p>..&#x2F;后退一级目录</p>
<h3 id="2-绝对路径-7"><a href="#2-绝对路径-7" class="headerlink" title="2.绝对路径"></a>2.绝对路径</h3><p>以&#x2F;开头</p>
<p>客户端使用：</p>
<p>需要加虚拟目录</p>
<p>服务器使用：</p>
<p>不需要加虚拟目录</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Response_输出数据</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Response_%E8%BE%93%E5%87%BA%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="输出数据"><a href="#输出数据" class="headerlink" title="输出数据"></a>输出数据</h1><h2 id="输出字符数据"><a href="#输出字符数据" class="headerlink" title="输出字符数据"></a>输出字符数据</h2><p>获取流对象前设置流的默认编码</p>
<p>setCahracterEncoding（）</p>
<p>告诉浏览器，服务器发送的消息体中数据的编码</p>
<p>setHeader（）</p>
<p>1.获取字符输出流</p>
<p>getWriter（）</p>
<p>2.输出数据</p>
<h2 id="输出字节数据"><a href="#输出字节数据" class="headerlink" title="输出字节数据"></a>输出字节数据</h2><p>高速浏览器，服务器发送消息体中的数据格式编码</p>
<p>setContentType（）</p>
<p>1.获取字节输出流</p>
<p>getOutputStream（）</p>
<p>2.输出数据</p>
<h2 id="输出字符数据-1"><a href="#输出字符数据-1" class="headerlink" title="输出字符数据"></a>输出字符数据</h2><p>获取流对象前设置流的默认编码</p>
<p>setCahracterEncoding（）</p>
<p>告诉浏览器，服务器发送的消息体中数据的编码</p>
<p>setHeader（）</p>
<p>1.获取字符输出流</p>
<p>getWriter（）</p>
<p>2.输出数据</p>
<h2 id="输出字节数据-1"><a href="#输出字节数据-1" class="headerlink" title="输出字节数据"></a>输出字节数据</h2><p>高速浏览器，服务器发送消息体中的数据格式编码</p>
<p>setContentType（）</p>
<p>1.获取字节输出流</p>
<p>getOutputStream（）</p>
<p>2.输出数据数据</p>
<h2 id="输出字符数据-2"><a href="#输出字符数据-2" class="headerlink" title="输出字符数据"></a>输出字符数据</h2><p>获取流对象前设置流的默认编码</p>
<p>setCahracterEncoding（）</p>
<p>告诉浏览器，服务器发送的消息体中数据的编码</p>
<p>setHeader（）</p>
<p>1.获取字符输出流</p>
<p>getWriter（）</p>
<p>2.输出数据</p>
<h2 id="输出字节数据-2"><a href="#输出字节数据-2" class="headerlink" title="输出字节数据"></a>输出字节数据</h2><p>高速浏览器，服务器发送消息体中的数据格式编码</p>
<p>setContentType（）</p>
<p>1.获取字节输出流</p>
<p>getOutputStream（）</p>
<p>2.输出数据</p>
<h2 id="输出字符数据-3"><a href="#输出字符数据-3" class="headerlink" title="输出字符数据"></a>输出字符数据</h2><p>获取流对象前设置流的默认编码</p>
<p>setCahracterEncoding（）</p>
<p>告诉浏览器，服务器发送的消息体中数据的编码</p>
<p>setHeader（）</p>
<p>1.获取字符输出流</p>
<p>getWriter（）</p>
<p>2.输出数据</p>
<h2 id="输出字节数据-3"><a href="#输出字节数据-3" class="headerlink" title="输出字节数据"></a>输出字节数据</h2><p>高速浏览器，服务器发送消息体中的数据格式编码</p>
<p>setContentType（）</p>
<p>1.获取字节输出流</p>
<p>getOutputStream（）</p>
<p>2.输出数据</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Response_重定向</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Response_%E9%87%8D%E5%AE%9A%E5%90%91/</url>
    <content><![CDATA[<h1 id="Response重定向"><a href="#Response重定向" class="headerlink" title="Response重定向"></a>Response重定向</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-设置状态码"><a href="#1-设置状态码" class="headerlink" title="1.设置状态码"></a>1.设置状态码</h3><p>setStatus（）</p>
<h3 id="2-设置响应头location"><a href="#2-设置响应头location" class="headerlink" title="2.设置响应头location"></a>2.设置响应头location</h3><p>setHeader</p>
<h3 id="3-重定向"><a href="#3-重定向" class="headerlink" title="3.重定向"></a>3.重定向</h3><p>sendRedirect（）</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>1.地址栏发生改变</p>
<p>2.重定向可以访问其他站点</p>
<p>3.重定向是两次请求</p>
<h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/./../TyporaImage/image-20240708144239537.png" alt="image-20240708144239537"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>Ⅰ、转发的特点</p>
<p>1.转发地址栏路径不变</p>
<p>2.转发只能访问当前服务器下的资源</p>
<p>3.转发是一次请求</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-设置状态码-1"><a href="#1-设置状态码-1" class="headerlink" title="1.设置状态码"></a>1.设置状态码</h3><p>setStatus（）</p>
<h3 id="2-设置响应头location-1"><a href="#2-设置响应头location-1" class="headerlink" title="2.设置响应头location"></a>2.设置响应头location</h3><p>setHeader</p>
<h3 id="3-重定向-1"><a href="#3-重定向-1" class="headerlink" title="3.重定向"></a>3.重定向</h3><p>sendRedirect（）</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p>1.地址栏发生改变</p>
<p>2.重定向可以访问其他站点</p>
<p>3.重定向是两次请求</p>
<h3 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/./../TyporaImage/image-20240708144239537.png" alt="image-20240708144239537"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>Ⅰ、转发的特点</p>
<p>1.转发地址栏路径不变</p>
<p>2.转发只能访问当前服务器下的资源</p>
<p>3.转发是一次请求定向</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-设置状态码-2"><a href="#1-设置状态码-2" class="headerlink" title="1.设置状态码"></a>1.设置状态码</h3><p>setStatus（）</p>
<h3 id="2-设置响应头location-2"><a href="#2-设置响应头location-2" class="headerlink" title="2.设置响应头location"></a>2.设置响应头location</h3><p>setHeader</p>
<h3 id="3-重定向-2"><a href="#3-重定向-2" class="headerlink" title="3.重定向"></a>3.重定向</h3><p>sendRedirect（）</p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p>1.地址栏发生改变</p>
<p>2.重定向可以访问其他站点</p>
<p>3.重定向是两次请求</p>
<h3 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/./../TyporaImage/image-20240708144239537.png" alt="image-20240708144239537"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>Ⅰ、转发的特点</p>
<p>1.转发地址栏路径不变</p>
<p>2.转发只能访问当前服务器下的资源</p>
<p>3.转发是一次请求</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-设置状态码-3"><a href="#1-设置状态码-3" class="headerlink" title="1.设置状态码"></a>1.设置状态码</h3><p>setStatus（）</p>
<h3 id="2-设置响应头location-3"><a href="#2-设置响应头location-3" class="headerlink" title="2.设置响应头location"></a>2.设置响应头location</h3><p>setHeader</p>
<h3 id="3-重定向-3"><a href="#3-重定向-3" class="headerlink" title="3.重定向"></a>3.重定向</h3><p>sendRedirect（）</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p>1.地址栏发生改变</p>
<p>2.重定向可以访问其他站点</p>
<p>3.重定向是两次请求</p>
<h3 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/./../TyporaImage/image-20240708144239537.png" alt="image-20240708144239537"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>Ⅰ、转发的特点</p>
<p>1.转发地址栏路径不变</p>
<p>2.转发只能访问当前服务器下的资源</p>
<p>3.转发是一次请求</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Response_验证码分析</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Response_%E9%AA%8C%E8%AF%81%E7%A0%81%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="验证码分析"><a href="#验证码分析" class="headerlink" title="验证码分析"></a>验证码分析</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.创建对象</p>
<p>2.美化图片</p>
<p>3.将图片输出到页面</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>防止恶意表单注册</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.创建对象</p>
<p>2.美化图片</p>
<p>3.将图片输出到页面</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>防止恶意表单注册分析</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.创建对象</p>
<p>2.美化图片</p>
<p>3.将图片输出到页面</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>防止恶意表单注册</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.创建对象</p>
<p>2.美化图片</p>
<p>3.将图片输出到页面</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>防止恶意表单注册</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>SQL</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/SQL/</url>
    <content><![CDATA[<h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><h2 id="是什么："><a href="#是什么：" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>是结构化查询语言，是定义了操作所有关系型数据库的规则。</p>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>DDL：</p>
<p>数据定义语言。用来定于数据库对象：数据库，表。</p>
<p>DML：</p>
<p>数据操作语言。用来对数据库中的数据进行增加、删除、修改。</p>
<p>DQL：</p>
<p>数据查询语言。用来对数据库中的数据进行查询。</p>
<p>DCL（了解）：</p>
<p>数据控制语言。用来定义数据库的访问权限和安全级别，以及创建用户。关键字：GRANT，REVOKE。</p>
<h3 id="特-点"><a href="#特-点" class="headerlink" title="特 点"></a>特 点</h3><p>1.可以单行或者多行书写，但是结尾需要分号结束。</p>
<p>2.可以使用空格和缩进增强语句的可读性，</p>
<p>3.MySQL中的SQL语句不区分大小写。关键字建议用大写。</p>
<p>4单行注释</p>
<p>–  注释内容或者#注释内容，注意–后面有一个空格。</p>
<p>5多行注释</p>
<p>&#x2F;*  注释内容 *&#x2F;</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h3><p>每一个关键字单独一行，下一行写关键字后面的语句。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>整数类型、小数类型、日期类型、字符串、BLOB、CLOB、二进制。</p>
<p>常用数据类型：</p>
<p>int、double、date、datetime、timestamp、varchar、</p>
<h2 id="是什么：-1"><a href="#是什么：-1" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>是结构化查询语言，是定义了操作所有关系型数据库的规则。</p>
<h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><p>DDL：</p>
<p>数据定义语言。用来定于数据库对象：数据库，表。</p>
<p>DML：</p>
<p>数据操作语言。用来对数据库中的数据进行增加、删除、修改。</p>
<p>DQL：</p>
<p>数据查询语言。用来对数据库中的数据进行查询。</p>
<p>DCL（了解）：</p>
<p>数据控制语言。用来定义数据库的访问权限和安全级别，以及创建用户。关键字：GRANT，REVOKE。</p>
<h3 id="特-点-1"><a href="#特-点-1" class="headerlink" title="特 点"></a>特 点</h3><p>1.可以单行或者多行书写，但是结尾需要分号结束。</p>
<p>2.可以使用空格和缩进增强语句的可读性，</p>
<p>3.MySQL中的SQL语句不区分大小写。关键字建议用大写。</p>
<p>4单行注释</p>
<p>–  注释内容或者#注释内容，注意–后面有一个空格。</p>
<p>5多行注释</p>
<p>&#x2F;*  注释内容 *&#x2F;</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="最佳实践-1"><a href="#最佳实践-1" class="headerlink" title="最佳实践"></a>最佳实践</h3><p>每一个关键字单独一行，下一行写关键字后面的语句。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="数据类型-1"><a href="#数据类型-1" class="headerlink" title="数据类型"></a>数据类型</h3><p>整数类型、小数类型、日期类型、字符串、BLOB、CLOB、二进制。</p>
<p>常用数据类型：</p>
<p>int、double、date、datetime、timestamp、varchar、QL</p>
<h2 id="是什么：-2"><a href="#是什么：-2" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>是结构化查询语言，是定义了操作所有关系型数据库的规则。</p>
<h3 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h3><p>DDL：</p>
<p>数据定义语言。用来定于数据库对象：数据库，表。</p>
<p>DML：</p>
<p>数据操作语言。用来对数据库中的数据进行增加、删除、修改。</p>
<p>DQL：</p>
<p>数据查询语言。用来对数据库中的数据进行查询。</p>
<p>DCL（了解）：</p>
<p>数据控制语言。用来定义数据库的访问权限和安全级别，以及创建用户。关键字：GRANT，REVOKE。</p>
<h3 id="特-点-2"><a href="#特-点-2" class="headerlink" title="特 点"></a>特 点</h3><p>1.可以单行或者多行书写，但是结尾需要分号结束。</p>
<p>2.可以使用空格和缩进增强语句的可读性，</p>
<p>3.MySQL中的SQL语句不区分大小写。关键字建议用大写。</p>
<p>4单行注释</p>
<p>–  注释内容或者#注释内容，注意–后面有一个空格。</p>
<p>5多行注释</p>
<p>&#x2F;*  注释内容 *&#x2F;</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="最佳实践-2"><a href="#最佳实践-2" class="headerlink" title="最佳实践"></a>最佳实践</h3><p>每一个关键字单独一行，下一行写关键字后面的语句。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="数据类型-2"><a href="#数据类型-2" class="headerlink" title="数据类型"></a>数据类型</h3><p>整数类型、小数类型、日期类型、字符串、BLOB、CLOB、二进制。</p>
<p>常用数据类型：</p>
<p>int、double、date、datetime、timestamp、varchar、</p>
<h2 id="是什么：-3"><a href="#是什么：-3" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>是结构化查询语言，是定义了操作所有关系型数据库的规则。</p>
<h3 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h3><p>DDL：</p>
<p>数据定义语言。用来定于数据库对象：数据库，表。</p>
<p>DML：</p>
<p>数据操作语言。用来对数据库中的数据进行增加、删除、修改。</p>
<p>DQL：</p>
<p>数据查询语言。用来对数据库中的数据进行查询。</p>
<p>DCL（了解）：</p>
<p>数据控制语言。用来定义数据库的访问权限和安全级别，以及创建用户。关键字：GRANT，REVOKE。</p>
<h3 id="特-点-3"><a href="#特-点-3" class="headerlink" title="特 点"></a>特 点</h3><p>1.可以单行或者多行书写，但是结尾需要分号结束。</p>
<p>2.可以使用空格和缩进增强语句的可读性，</p>
<p>3.MySQL中的SQL语句不区分大小写。关键字建议用大写。</p>
<p>4单行注释</p>
<p>–  注释内容或者#注释内容，注意–后面有一个空格。</p>
<p>5多行注释</p>
<p>&#x2F;*  注释内容 *&#x2F;</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="最佳实践-3"><a href="#最佳实践-3" class="headerlink" title="最佳实践"></a>最佳实践</h3><p>每一个关键字单独一行，下一行写关键字后面的语句。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="数据类型-3"><a href="#数据类型-3" class="headerlink" title="数据类型"></a>数据类型</h3><p>整数类型、小数类型、日期类型、字符串、BLOB、CLOB、二进制。</p>
<p>常用数据类型：</p>
<p>int、double、date、datetime、timestamp、varchar、</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Servlet</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Servlet/</url>
    <content><![CDATA[<h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>server和applet，即运行在服务器端的小程序。本质上是一个接口，定义了java类被浏览器访问到（tomcat识别）的规则。</p>
<h3 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240527210742990.png" alt="image-20240527210742990"></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.创建JavaEE项目</p>
<p>2.定义一个类</p>
<p>3.实现接口中的抽象方法</p>
<p>4.配置Servlet</p>
<p><img src="/../TyporaImage/image-20240527204814260.png" alt="image-20240527204814260"></p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p>1.当服务器接收到客户端浏览器的请求后，会解析请求URL路径， 获取访问Servlet的资源路径</p>
<p>2.查找web.xml文件，是否有对应的<url-pattern>标签体内容</p>
<p>3.如果有，则找到对应的<servlet-class>全类名</p>
<p>4.tomcat会将字节码文件加载进内存，并且创建其对象</p>
<p>5.调用其方法</p>
<p><img src="/../TyporaImage/image-20240527205319838.png" alt="image-20240527205319838"></p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>server和applet，即运行在服务器端的小程序。本质上是一个接口，定义了java类被浏览器访问到（tomcat识别）的规则。</p>
<h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240527210742990.png" alt="image-20240527210742990"></p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.创建JavaEE项目</p>
<p>2.定义一个类</p>
<p>3.实现接口中的抽象方法</p>
<p>4.配置Servlet</p>
<p><img src="/../TyporaImage/image-20240527204814260.png" alt="image-20240527204814260"></p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h3><p>1.当服务器接收到客户端浏览器的请求后，会解析请求URL路径， 获取访问Servlet的资源路径</p>
<p>2.查找web.xml文件，是否有对应的<url-pattern>标签体内容</p>
<p>3.如果有，则找到对应的<servlet-class>全类名</p>
<p>4.tomcat会将字节码文件加载进内存，并且创建其对象</p>
<p>5.调用其方法</p>
<p><img src="/../TyporaImage/image-20240527205319838.png" alt="image-20240527205319838">et</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>server和applet，即运行在服务器端的小程序。本质上是一个接口，定义了java类被浏览器访问到（tomcat识别）的规则。</p>
<h3 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240527210742990.png" alt="image-20240527210742990"></p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.创建JavaEE项目</p>
<p>2.定义一个类</p>
<p>3.实现接口中的抽象方法</p>
<p>4.配置Servlet</p>
<p><img src="/../TyporaImage/image-20240527204814260.png" alt="image-20240527204814260"></p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h3><p>1.当服务器接收到客户端浏览器的请求后，会解析请求URL路径， 获取访问Servlet的资源路径</p>
<p>2.查找web.xml文件，是否有对应的<url-pattern>标签体内容</p>
<p>3.如果有，则找到对应的<servlet-class>全类名</p>
<p>4.tomcat会将字节码文件加载进内存，并且创建其对象</p>
<p>5.调用其方法</p>
<p><img src="/../TyporaImage/image-20240527205319838.png" alt="image-20240527205319838"></p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>server和applet，即运行在服务器端的小程序。本质上是一个接口，定义了java类被浏览器访问到（tomcat识别）的规则。</p>
<h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240527210742990.png" alt="image-20240527210742990"></p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.创建JavaEE项目</p>
<p>2.定义一个类</p>
<p>3.实现接口中的抽象方法</p>
<p>4.配置Servlet</p>
<p><img src="/../TyporaImage/image-20240527204814260.png" alt="image-20240527204814260"></p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h3><p>1.当服务器接收到客户端浏览器的请求后，会解析请求URL路径， 获取访问Servlet的资源路径</p>
<p>2.查找web.xml文件，是否有对应的<url-pattern>标签体内容</p>
<p>3.如果有，则找到对应的<servlet-class>全类名</p>
<p>4.tomcat会将字节码文件加载进内存，并且创建其对象</p>
<p>5.调用其方法</p>
<p><img src="/../TyporaImage/image-20240527205319838.png" alt="image-20240527205319838"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Servlet3.0注解配置</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Servlet3.0%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="Servlet3-0注解配置"><a href="#Servlet3-0注解配置" class="headerlink" title="Servlet3.0注解配置"></a>Servlet3.0注解配置</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.创建javaEE项目，选择Servlet3.0以上的版本，可以不用创建web.xml</p>
<p>2.定义一个类，实现Servlet接口</p>
<p>3.覆写方法</p>
<p>4.在类的上面使用@WebServlet注解，并进行配置。</p>
<p>​    使用：@WebServlet（“资源路径”）</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>简化xml文件配置。可以快速配置Servlet，是xml文件的替代。## 使用方法</p>
<p>1.创建javaEE项目，选择Servlet3.0以上的版本，可以不用创建web.xml</p>
<p>2.定义一个类，实现Servlet接口</p>
<p>3.覆写方法</p>
<p>4.在类的上面使用@WebServlet注解，并进行配置。</p>
<p>​    使用：@WebServlet（“资源路径”）</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>简化xml文件配置。可以快速配置Servlet，是xml文件的替代。配置</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.创建javaEE项目，选择Servlet3.0以上的版本，可以不用创建web.xml</p>
<p>2.定义一个类，实现Servlet接口</p>
<p>3.覆写方法</p>
<p>4.在类的上面使用@WebServlet注解，并进行配置。</p>
<p>​    使用：@WebServlet（“资源路径”）</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>简化xml文件配置。可以快速配置Servlet，是xml文件的替代。## 使用方法</p>
<p>1.创建javaEE项目，选择Servlet3.0以上的版本，可以不用创建web.xml</p>
<p>2.定义一个类，实现Servlet接口</p>
<p>3.覆写方法</p>
<p>4.在类的上面使用@WebServlet注解，并进行配置。</p>
<p>​    使用：@WebServlet（“资源路径”）</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>简化xml文件配置。可以快速配置Servlet，是xml文件的替代。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>ServletContext</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/ServletContext/</url>
    <content><![CDATA[<h1 id="ServletContext"><a href="#ServletContext" class="headerlink" title="ServletContext"></a>ServletContext</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>它代表了一个Web应用程序的上下文。在Servlet容器（如Apache Tomcat）中，每个Web应用程序都有一个唯一的ServletContext对象，该对象在应用程序启动时被创建，在应用程序停止时被销毁。</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>1.获取MIME类型</p>
<p>2.共享数据（域对象）</p>
<p>3.获取文件的真实路径（服务器路径）</p>
<h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><h4 id="Ⅰ、获取ServletContext对象"><a href="#Ⅰ、获取ServletContext对象" class="headerlink" title="Ⅰ、获取ServletContext对象"></a>Ⅰ、获取ServletContext对象</h4><p>1.通过request对象获取</p>
<p>2.通过HttpServlet获取</p>
<h4 id="Ⅱ、获取MIME类型"><a href="#Ⅱ、获取MIME类型" class="headerlink" title="Ⅱ、获取MIME类型"></a>Ⅱ、获取MIME类型</h4><p>MIME：在互联网通信中的一种文件类型</p>
<p>格式：  大类型&#x2F;小类型</p>
<p>getMimeType（）</p>
<h4 id="Ⅲ、域对象"><a href="#Ⅲ、域对象" class="headerlink" title="Ⅲ、域对象"></a>Ⅲ、域对象</h4><p>范围：所有用户的数据</p>
<p>1.setAttribute（）</p>
<p>2.getAttribute（）</p>
<p>3.removeAttribute（）</p>
<h4 id="Ⅳ、获取文件的真实路径"><a href="#Ⅳ、获取文件的真实路径" class="headerlink" title="Ⅳ、获取文件的真实路径"></a>Ⅳ、获取文件的真实路径</h4><p>以web目录为起点进行资源路径编写</p>
<p>1.web目录下的资源访问</p>
<p>2.webinfo下的访问</p>
<p>3.src目录下的访问</p>
<p>这个目录以后会被放在webinfo目录下的classes目录。## 定义</p>
<p>它代表了一个Web应用程序的上下文。在Servlet容器（如Apache Tomcat）中，每个Web应用程序都有一个唯一的ServletContext对象，该对象在应用程序启动时被创建，在应用程序停止时被销毁。</p>
<h2 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h2><p>1.获取MIME类型</p>
<p>2.共享数据（域对象）</p>
<p>3.获取文件的真实路径（服务器路径）</p>
<h2 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h2><h4 id="Ⅰ、获取ServletContext对象-1"><a href="#Ⅰ、获取ServletContext对象-1" class="headerlink" title="Ⅰ、获取ServletContext对象"></a>Ⅰ、获取ServletContext对象</h4><p>1.通过request对象获取</p>
<p>2.通过HttpServlet获取</p>
<h4 id="Ⅱ、获取MIME类型-1"><a href="#Ⅱ、获取MIME类型-1" class="headerlink" title="Ⅱ、获取MIME类型"></a>Ⅱ、获取MIME类型</h4><p>MIME：在互联网通信中的一种文件类型</p>
<p>格式：  大类型&#x2F;小类型</p>
<p>getMimeType（）</p>
<h4 id="Ⅲ、域对象-1"><a href="#Ⅲ、域对象-1" class="headerlink" title="Ⅲ、域对象"></a>Ⅲ、域对象</h4><p>范围：所有用户的数据</p>
<p>1.setAttribute（）</p>
<p>2.getAttribute（）</p>
<p>3.removeAttribute（）</p>
<h4 id="Ⅳ、获取文件的真实路径-1"><a href="#Ⅳ、获取文件的真实路径-1" class="headerlink" title="Ⅳ、获取文件的真实路径"></a>Ⅳ、获取文件的真实路径</h4><p>以web目录为起点进行资源路径编写</p>
<p>1.web目录下的资源访问</p>
<p>2.webinfo下的访问</p>
<p>3.src目录下的访问</p>
<p>这个目录以后会被放在webinfo目录下的classes目录。ext</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>它代表了一个Web应用程序的上下文。在Servlet容器（如Apache Tomcat）中，每个Web应用程序都有一个唯一的ServletContext对象，该对象在应用程序启动时被创建，在应用程序停止时被销毁。</p>
<h2 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h2><p>1.获取MIME类型</p>
<p>2.共享数据（域对象）</p>
<p>3.获取文件的真实路径（服务器路径）</p>
<h2 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h2><h4 id="Ⅰ、获取ServletContext对象-2"><a href="#Ⅰ、获取ServletContext对象-2" class="headerlink" title="Ⅰ、获取ServletContext对象"></a>Ⅰ、获取ServletContext对象</h4><p>1.通过request对象获取</p>
<p>2.通过HttpServlet获取</p>
<h4 id="Ⅱ、获取MIME类型-2"><a href="#Ⅱ、获取MIME类型-2" class="headerlink" title="Ⅱ、获取MIME类型"></a>Ⅱ、获取MIME类型</h4><p>MIME：在互联网通信中的一种文件类型</p>
<p>格式：  大类型&#x2F;小类型</p>
<p>getMimeType（）</p>
<h4 id="Ⅲ、域对象-2"><a href="#Ⅲ、域对象-2" class="headerlink" title="Ⅲ、域对象"></a>Ⅲ、域对象</h4><p>范围：所有用户的数据</p>
<p>1.setAttribute（）</p>
<p>2.getAttribute（）</p>
<p>3.removeAttribute（）</p>
<h4 id="Ⅳ、获取文件的真实路径-2"><a href="#Ⅳ、获取文件的真实路径-2" class="headerlink" title="Ⅳ、获取文件的真实路径"></a>Ⅳ、获取文件的真实路径</h4><p>以web目录为起点进行资源路径编写</p>
<p>1.web目录下的资源访问</p>
<p>2.webinfo下的访问</p>
<p>3.src目录下的访问</p>
<p>这个目录以后会被放在webinfo目录下的classes目录。## 定义</p>
<p>它代表了一个Web应用程序的上下文。在Servlet容器（如Apache Tomcat）中，每个Web应用程序都有一个唯一的ServletContext对象，该对象在应用程序启动时被创建，在应用程序停止时被销毁。</p>
<h2 id="功能-3"><a href="#功能-3" class="headerlink" title="功能"></a>功能</h2><p>1.获取MIME类型</p>
<p>2.共享数据（域对象）</p>
<p>3.获取文件的真实路径（服务器路径）</p>
<h2 id="使用方式-3"><a href="#使用方式-3" class="headerlink" title="使用方式"></a>使用方式</h2><h4 id="Ⅰ、获取ServletContext对象-3"><a href="#Ⅰ、获取ServletContext对象-3" class="headerlink" title="Ⅰ、获取ServletContext对象"></a>Ⅰ、获取ServletContext对象</h4><p>1.通过request对象获取</p>
<p>2.通过HttpServlet获取</p>
<h4 id="Ⅱ、获取MIME类型-3"><a href="#Ⅱ、获取MIME类型-3" class="headerlink" title="Ⅱ、获取MIME类型"></a>Ⅱ、获取MIME类型</h4><p>MIME：在互联网通信中的一种文件类型</p>
<p>格式：  大类型&#x2F;小类型</p>
<p>getMimeType（）</p>
<h4 id="Ⅲ、域对象-3"><a href="#Ⅲ、域对象-3" class="headerlink" title="Ⅲ、域对象"></a>Ⅲ、域对象</h4><p>范围：所有用户的数据</p>
<p>1.setAttribute（）</p>
<p>2.getAttribute（）</p>
<p>3.removeAttribute（）</p>
<h4 id="Ⅳ、获取文件的真实路径-3"><a href="#Ⅳ、获取文件的真实路径-3" class="headerlink" title="Ⅳ、获取文件的真实路径"></a>Ⅳ、获取文件的真实路径</h4><p>以web目录为起点进行资源路径编写</p>
<p>1.web目录下的资源访问</p>
<p>2.webinfo下的访问</p>
<p>3.src目录下的访问</p>
<p>这个目录以后会被放在webinfo目录下的classes目录。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Servlet_urlpattern配置</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Servlet_urlpattern%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="urlpattern配置"><a href="#urlpattern配置" class="headerlink" title="urlpattern配置"></a>urlpattern配置</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240527210934460.png" alt="image-20240527210934460">## 使用方法</p>
<p><img src="/../TyporaImage/image-20240527210934460.png" alt="image-20240527210934460">配置</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240527210934460.png" alt="image-20240527210934460">## 使用方法</p>
<p><img src="/../TyporaImage/image-20240527210934460.png" alt="image-20240527210934460"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Servlet生命周期方法</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Servlet%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="生命周期方法"><a href="#生命周期方法" class="headerlink" title="生命周期方法"></a>生命周期方法</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>生命周期方法是对象或组件在其生命周期中特定时刻自动调用的方法，用于初始化、执行主要功能和清理资源。</p>
<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240527205657554.png" alt="image-20240527205657554"></p>
<p><img src="/../TyporaImage/image-20240527205739266.png" alt="image-20240527205739266">## 定义</p>
<p>生命周期方法是对象或组件在其生命周期中特定时刻自动调用的方法，用于初始化、执行主要功能和清理资源。</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240527205657554.png" alt="image-20240527205657554"></p>
<p><img src="/../TyporaImage/image-20240527205739266.png" alt="image-20240527205739266">方法</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>生命周期方法是对象或组件在其生命周期中特定时刻自动调用的方法，用于初始化、执行主要功能和清理资源。</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240527205657554.png" alt="image-20240527205657554"></p>
<p><img src="/../TyporaImage/image-20240527205739266.png" alt="image-20240527205739266">## 定义</p>
<p>生命周期方法是对象或组件在其生命周期中特定时刻自动调用的方法，用于初始化、执行主要功能和清理资源。</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240527205657554.png" alt="image-20240527205657554"></p>
<p><img src="/../TyporaImage/image-20240527205739266.png" alt="image-20240527205739266"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Tomcat</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Tomcat/</url>
    <content><![CDATA[<h1 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240523220322751.png" alt="image-20240523220322751"></p>
<h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="1-启动"><a href="#1-启动" class="headerlink" title="1.启动"></a>1.启动</h3><p>bin目录下，双击运行startup.bat 文件</p>
<h3 id="2-访问"><a href="#2-访问" class="headerlink" title="2.访问"></a>2.访问</h3><p>浏览器输入：<a href="http://localhost：8080">http://localhost：8080</a>       – 回车访问自己</p>
<p>http:&#x2F;&#x2F;别人的ip：8080                     – 访问别人</p>
<h3 id="3-关闭"><a href="#3-关闭" class="headerlink" title="3.关闭"></a>3.关闭</h3><p>①正常关闭</p>
<p>双击运行bin目录下的shutdown.bat文件或者按control+c键</p>
<p>②强制关闭</p>
<p>点击启动窗口的×关闭按钮。</p>
<h3 id="4-部署"><a href="#4-部署" class="headerlink" title="4.部署"></a>4.部署</h3><p>①直接将项目放到webapps目录下即可。</p>
<p>简化部署</p>
<p>将项目打包成war包，再将war包放到webapps目录下。  – war包会自动解压</p>
<p>②配置configue&#x2F;Server.xml文件</p>
<p><img src="/../TyporaImage/image-20240523220007492.png" alt="image-20240523220007492"></p>
<p>③在configure&#x2F;Catalina&#x2F;localhost创建任意名称的xml文件。在文件中编写。</p>
<p><img src="/../TyporaImage/image-20240523220024209.png" alt="image-20240523220024209"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><h4 id="1-黑窗口一闪而过"><a href="#1-黑窗口一闪而过" class="headerlink" title="1.黑窗口一闪而过"></a>1.黑窗口一闪而过</h4><p>原因:</p>
<p>没有正确配置JAVA_HOME环境变量</p>
<p>解决方案：</p>
<p>正确配置JAVA_HOME环境变量</p>
<h4 id="2-启动报错"><a href="#2-启动报错" class="headerlink" title="2.启动报错"></a>2.启动报错</h4><p>原因：</p>
<p>端口冲突</p>
<p>解决方案：</p>
<p>1.找到占用的端口号，并且找到对应的进程，杀死该进程（暴力方案）</p>
<p><img src="/../TyporaImage/image-20240523215030981.png" alt="image-20240523215030981"></p>
<p>2.修改自身的端口号（温柔方案）</p>
<p><img src="/../TyporaImage/image-20240523215042600.png" alt="image-20240523215042600"></p>
<h3 id="动态java项目的目录结构"><a href="#动态java项目的目录结构" class="headerlink" title="动态java项目的目录结构"></a>动态java项目的目录结构</h3><p><img src="/../TyporaImage/image-20240523220455090.png" alt="image-20240523220455090">## 分类和组成</p>
<p><img src="/../TyporaImage/image-20240523220322751.png" alt="image-20240523220322751"></p>
<h2 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="1-启动-1"><a href="#1-启动-1" class="headerlink" title="1.启动"></a>1.启动</h3><p>bin目录下，双击运行startup.bat 文件</p>
<h3 id="2-访问-1"><a href="#2-访问-1" class="headerlink" title="2.访问"></a>2.访问</h3><p>浏览器输入：<a href="http://localhost：8080">http://localhost：8080</a>       – 回车访问自己</p>
<p>http:&#x2F;&#x2F;别人的ip：8080                     – 访问别人</p>
<h3 id="3-关闭-1"><a href="#3-关闭-1" class="headerlink" title="3.关闭"></a>3.关闭</h3><p>①正常关闭</p>
<p>双击运行bin目录下的shutdown.bat文件或者按control+c键</p>
<p>②强制关闭</p>
<p>点击启动窗口的×关闭按钮。</p>
<h3 id="4-部署-1"><a href="#4-部署-1" class="headerlink" title="4.部署"></a>4.部署</h3><p>①直接将项目放到webapps目录下即可。</p>
<p>简化部署</p>
<p>将项目打包成war包，再将war包放到webapps目录下。  – war包会自动解压</p>
<p>②配置configue&#x2F;Server.xml文件</p>
<p><img src="/../TyporaImage/image-20240523220007492.png" alt="image-20240523220007492"></p>
<p>③在configure&#x2F;Catalina&#x2F;localhost创建任意名称的xml文件。在文件中编写。</p>
<p><img src="/../TyporaImage/image-20240523220024209.png" alt="image-20240523220024209"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="可能遇到的问题-1"><a href="#可能遇到的问题-1" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><h4 id="1-黑窗口一闪而过-1"><a href="#1-黑窗口一闪而过-1" class="headerlink" title="1.黑窗口一闪而过"></a>1.黑窗口一闪而过</h4><p>原因:</p>
<p>没有正确配置JAVA_HOME环境变量</p>
<p>解决方案：</p>
<p>正确配置JAVA_HOME环境变量</p>
<h4 id="2-启动报错-1"><a href="#2-启动报错-1" class="headerlink" title="2.启动报错"></a>2.启动报错</h4><p>原因：</p>
<p>端口冲突</p>
<p>解决方案：</p>
<p>1.找到占用的端口号，并且找到对应的进程，杀死该进程（暴力方案）</p>
<p><img src="/../TyporaImage/image-20240523215030981.png" alt="image-20240523215030981"></p>
<p>2.修改自身的端口号（温柔方案）</p>
<p><img src="/../TyporaImage/image-20240523215042600.png" alt="image-20240523215042600"></p>
<h3 id="动态java项目的目录结构-1"><a href="#动态java项目的目录结构-1" class="headerlink" title="动态java项目的目录结构"></a>动态java项目的目录结构</h3><p><img src="/../TyporaImage/image-20240523220455090.png" alt="image-20240523220455090">at</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240523220322751.png" alt="image-20240523220322751"></p>
<h2 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="1-启动-2"><a href="#1-启动-2" class="headerlink" title="1.启动"></a>1.启动</h3><p>bin目录下，双击运行startup.bat 文件</p>
<h3 id="2-访问-2"><a href="#2-访问-2" class="headerlink" title="2.访问"></a>2.访问</h3><p>浏览器输入：<a href="http://localhost：8080">http://localhost：8080</a>       – 回车访问自己</p>
<p>http:&#x2F;&#x2F;别人的ip：8080                     – 访问别人</p>
<h3 id="3-关闭-2"><a href="#3-关闭-2" class="headerlink" title="3.关闭"></a>3.关闭</h3><p>①正常关闭</p>
<p>双击运行bin目录下的shutdown.bat文件或者按control+c键</p>
<p>②强制关闭</p>
<p>点击启动窗口的×关闭按钮。</p>
<h3 id="4-部署-2"><a href="#4-部署-2" class="headerlink" title="4.部署"></a>4.部署</h3><p>①直接将项目放到webapps目录下即可。</p>
<p>简化部署</p>
<p>将项目打包成war包，再将war包放到webapps目录下。  – war包会自动解压</p>
<p>②配置configue&#x2F;Server.xml文件</p>
<p><img src="/../TyporaImage/image-20240523220007492.png" alt="image-20240523220007492"></p>
<p>③在configure&#x2F;Catalina&#x2F;localhost创建任意名称的xml文件。在文件中编写。</p>
<p><img src="/../TyporaImage/image-20240523220024209.png" alt="image-20240523220024209"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="可能遇到的问题-2"><a href="#可能遇到的问题-2" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><h4 id="1-黑窗口一闪而过-2"><a href="#1-黑窗口一闪而过-2" class="headerlink" title="1.黑窗口一闪而过"></a>1.黑窗口一闪而过</h4><p>原因:</p>
<p>没有正确配置JAVA_HOME环境变量</p>
<p>解决方案：</p>
<p>正确配置JAVA_HOME环境变量</p>
<h4 id="2-启动报错-2"><a href="#2-启动报错-2" class="headerlink" title="2.启动报错"></a>2.启动报错</h4><p>原因：</p>
<p>端口冲突</p>
<p>解决方案：</p>
<p>1.找到占用的端口号，并且找到对应的进程，杀死该进程（暴力方案）</p>
<p><img src="/../TyporaImage/image-20240523215030981.png" alt="image-20240523215030981"></p>
<p>2.修改自身的端口号（温柔方案）</p>
<p><img src="/../TyporaImage/image-20240523215042600.png" alt="image-20240523215042600"></p>
<h3 id="动态java项目的目录结构-2"><a href="#动态java项目的目录结构-2" class="headerlink" title="动态java项目的目录结构"></a>动态java项目的目录结构</h3><p><img src="/../TyporaImage/image-20240523220455090.png" alt="image-20240523220455090">## 分类和组成</p>
<p><img src="/../TyporaImage/image-20240523220322751.png" alt="image-20240523220322751"></p>
<h2 id="使用方式-3"><a href="#使用方式-3" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="1-启动-3"><a href="#1-启动-3" class="headerlink" title="1.启动"></a>1.启动</h3><p>bin目录下，双击运行startup.bat 文件</p>
<h3 id="2-访问-3"><a href="#2-访问-3" class="headerlink" title="2.访问"></a>2.访问</h3><p>浏览器输入：<a href="http://localhost：8080">http://localhost：8080</a>       – 回车访问自己</p>
<p>http:&#x2F;&#x2F;别人的ip：8080                     – 访问别人</p>
<h3 id="3-关闭-3"><a href="#3-关闭-3" class="headerlink" title="3.关闭"></a>3.关闭</h3><p>①正常关闭</p>
<p>双击运行bin目录下的shutdown.bat文件或者按control+c键</p>
<p>②强制关闭</p>
<p>点击启动窗口的×关闭按钮。</p>
<h3 id="4-部署-3"><a href="#4-部署-3" class="headerlink" title="4.部署"></a>4.部署</h3><p>①直接将项目放到webapps目录下即可。</p>
<p>简化部署</p>
<p>将项目打包成war包，再将war包放到webapps目录下。  – war包会自动解压</p>
<p>②配置configue&#x2F;Server.xml文件</p>
<p><img src="/../TyporaImage/image-20240523220007492.png" alt="image-20240523220007492"></p>
<p>③在configure&#x2F;Catalina&#x2F;localhost创建任意名称的xml文件。在文件中编写。</p>
<p><img src="/../TyporaImage/image-20240523220024209.png" alt="image-20240523220024209"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="可能遇到的问题-3"><a href="#可能遇到的问题-3" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><h4 id="1-黑窗口一闪而过-3"><a href="#1-黑窗口一闪而过-3" class="headerlink" title="1.黑窗口一闪而过"></a>1.黑窗口一闪而过</h4><p>原因:</p>
<p>没有正确配置JAVA_HOME环境变量</p>
<p>解决方案：</p>
<p>正确配置JAVA_HOME环境变量</p>
<h4 id="2-启动报错-3"><a href="#2-启动报错-3" class="headerlink" title="2.启动报错"></a>2.启动报错</h4><p>原因：</p>
<p>端口冲突</p>
<p>解决方案：</p>
<p>1.找到占用的端口号，并且找到对应的进程，杀死该进程（暴力方案）</p>
<p><img src="/../TyporaImage/image-20240523215030981.png" alt="image-20240523215030981"></p>
<p>2.修改自身的端口号（温柔方案）</p>
<p><img src="/../TyporaImage/image-20240523215042600.png" alt="image-20240523215042600"></p>
<h3 id="动态java项目的目录结构-3"><a href="#动态java项目的目录结构-3" class="headerlink" title="动态java项目的目录结构"></a>动态java项目的目录结构</h3><p><img src="/../TyporaImage/image-20240523220455090.png" alt="image-20240523220455090"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Tomcat与idea相关配置</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Tomcat%E4%B8%8Eidea%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="tomcat与idea相关配置"><a href="#tomcat与idea相关配置" class="headerlink" title="tomcat与idea相关配置"></a>tomcat与idea相关配置</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240527210620379.png" alt="image-20240527210620379"></p>
<p>​                </p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240527210620379.png" alt="image-20240527210620379"></p>
<p>​配置</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240527210620379.png" alt="image-20240527210620379"></p>
<p>​                </p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240527210620379.png" alt="image-20240527210620379"></p>
<p>​</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>VM</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/VM/</url>
    <content><![CDATA[<h1 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>虚拟机（Virtual Machine，VM）是一种通过软件模拟计算机硬件环境的技术，使多个操作系统可以在同一台物理机器上运行，彼此隔离，互不影响。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-主机操作系统（Host-OS）"><a href="#1-主机操作系统（Host-OS）" class="headerlink" title="1.主机操作系统（Host OS）"></a>1.主机操作系统（Host OS）</h3><p>运行虚拟机管理程序的物理计算机上的操作系统。</p>
<h3 id="2-虚拟机管理程序（Hypervisor）"><a href="#2-虚拟机管理程序（Hypervisor）" class="headerlink" title="2.虚拟机管理程序（Hypervisor）"></a>2.虚拟机管理程序（Hypervisor）</h3><p>用于创建和管理虚拟机的系统软件。</p>
<h3 id="3-客机操作系统（Guest-OS）"><a href="#3-客机操作系统（Guest-OS）" class="headerlink" title="3.客机操作系统（Guest OS）"></a>3.客机操作系统（Guest OS）</h3><p>运行在虚拟机中的操作系统。</p>
<h3 id="4-虚拟硬件"><a href="#4-虚拟硬件" class="headerlink" title="4.虚拟硬件"></a>4.虚拟硬件</h3><p>通过软件模拟的计算机硬件，包括CPU、内存、存储、网络等。</p>
<h2 id="结构形式："><a href="#结构形式：" class="headerlink" title="结构形式："></a>结构形式：</h2><h3 id="1-类型1虚拟机管理程序（裸机型，Hypervisor-Type-1）"><a href="#1-类型1虚拟机管理程序（裸机型，Hypervisor-Type-1）" class="headerlink" title="1.类型1虚拟机管理程序（裸机型，Hypervisor Type 1）"></a>1.类型1虚拟机管理程序（裸机型，Hypervisor Type 1）</h3><p>直接运行在物理硬件上，管理虚拟机。例如：VMware ESXi、Microsoft Hyper-V。</p>
<h3 id="2-类型2虚拟机管理程序（托管型，Hypervisor-Type-2）"><a href="#2-类型2虚拟机管理程序（托管型，Hypervisor-Type-2）" class="headerlink" title="2.类型2虚拟机管理程序（托管型，Hypervisor Type 2）"></a>2.类型2虚拟机管理程序（托管型，Hypervisor Type 2）</h3><p>运行在主机操作系统之上，通过主机操作系统管理虚拟机。例如：VMware Workstation、Oracle VirtualBox。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-系统虚拟机"><a href="#1-系统虚拟机" class="headerlink" title="1.系统虚拟机"></a>1.系统虚拟机</h3><p>提供完整的系统环境，可以运行完整的操作系统。</p>
<h3 id="2-进程虚拟机"><a href="#2-进程虚拟机" class="headerlink" title="2.进程虚拟机"></a>2.进程虚拟机</h3><p>为单个进程提供运行环境，如Java虚拟机（JVM）。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过虚拟化技术，提高硬件资源利用率，简化系统管理和维护，提供灵活的计算环境。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>虚拟机管理程序通过截取和模拟硬件指令，实现对物理硬件资源的虚拟化管理，将其分配给不同的虚拟机使用。## 定义</p>
<p>虚拟机（Virtual Machine，VM）是一种通过软件模拟计算机硬件环境的技术，使多个操作系统可以在同一台物理机器上运行，彼此隔离，互不影响。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-主机操作系统（Host-OS）-1"><a href="#1-主机操作系统（Host-OS）-1" class="headerlink" title="1.主机操作系统（Host OS）"></a>1.主机操作系统（Host OS）</h3><p>运行虚拟机管理程序的物理计算机上的操作系统。</p>
<h3 id="2-虚拟机管理程序（Hypervisor）-1"><a href="#2-虚拟机管理程序（Hypervisor）-1" class="headerlink" title="2.虚拟机管理程序（Hypervisor）"></a>2.虚拟机管理程序（Hypervisor）</h3><p>用于创建和管理虚拟机的系统软件。</p>
<h3 id="3-客机操作系统（Guest-OS）-1"><a href="#3-客机操作系统（Guest-OS）-1" class="headerlink" title="3.客机操作系统（Guest OS）"></a>3.客机操作系统（Guest OS）</h3><p>运行在虚拟机中的操作系统。</p>
<h3 id="4-虚拟硬件-1"><a href="#4-虚拟硬件-1" class="headerlink" title="4.虚拟硬件"></a>4.虚拟硬件</h3><p>通过软件模拟的计算机硬件，包括CPU、内存、存储、网络等。</p>
<h2 id="结构形式：-1"><a href="#结构形式：-1" class="headerlink" title="结构形式："></a>结构形式：</h2><h3 id="1-类型1虚拟机管理程序（裸机型，Hypervisor-Type-1）-1"><a href="#1-类型1虚拟机管理程序（裸机型，Hypervisor-Type-1）-1" class="headerlink" title="1.类型1虚拟机管理程序（裸机型，Hypervisor Type 1）"></a>1.类型1虚拟机管理程序（裸机型，Hypervisor Type 1）</h3><p>直接运行在物理硬件上，管理虚拟机。例如：VMware ESXi、Microsoft Hyper-V。</p>
<h3 id="2-类型2虚拟机管理程序（托管型，Hypervisor-Type-2）-1"><a href="#2-类型2虚拟机管理程序（托管型，Hypervisor-Type-2）-1" class="headerlink" title="2.类型2虚拟机管理程序（托管型，Hypervisor Type 2）"></a>2.类型2虚拟机管理程序（托管型，Hypervisor Type 2）</h3><p>运行在主机操作系统之上，通过主机操作系统管理虚拟机。例如：VMware Workstation、Oracle VirtualBox。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-系统虚拟机-1"><a href="#1-系统虚拟机-1" class="headerlink" title="1.系统虚拟机"></a>1.系统虚拟机</h3><p>提供完整的系统环境，可以运行完整的操作系统。</p>
<h3 id="2-进程虚拟机-1"><a href="#2-进程虚拟机-1" class="headerlink" title="2.进程虚拟机"></a>2.进程虚拟机</h3><p>为单个进程提供运行环境，如Java虚拟机（JVM）。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>通过虚拟化技术，提高硬件资源利用率，简化系统管理和维护，提供灵活的计算环境。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>虚拟机管理程序通过截取和模拟硬件指令，实现对物理硬件资源的虚拟化管理，将其分配给不同的虚拟机使用。拟机</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>虚拟机（Virtual Machine，VM）是一种通过软件模拟计算机硬件环境的技术，使多个操作系统可以在同一台物理机器上运行，彼此隔离，互不影响。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-主机操作系统（Host-OS）-2"><a href="#1-主机操作系统（Host-OS）-2" class="headerlink" title="1.主机操作系统（Host OS）"></a>1.主机操作系统（Host OS）</h3><p>运行虚拟机管理程序的物理计算机上的操作系统。</p>
<h3 id="2-虚拟机管理程序（Hypervisor）-2"><a href="#2-虚拟机管理程序（Hypervisor）-2" class="headerlink" title="2.虚拟机管理程序（Hypervisor）"></a>2.虚拟机管理程序（Hypervisor）</h3><p>用于创建和管理虚拟机的系统软件。</p>
<h3 id="3-客机操作系统（Guest-OS）-2"><a href="#3-客机操作系统（Guest-OS）-2" class="headerlink" title="3.客机操作系统（Guest OS）"></a>3.客机操作系统（Guest OS）</h3><p>运行在虚拟机中的操作系统。</p>
<h3 id="4-虚拟硬件-2"><a href="#4-虚拟硬件-2" class="headerlink" title="4.虚拟硬件"></a>4.虚拟硬件</h3><p>通过软件模拟的计算机硬件，包括CPU、内存、存储、网络等。</p>
<h2 id="结构形式：-2"><a href="#结构形式：-2" class="headerlink" title="结构形式："></a>结构形式：</h2><h3 id="1-类型1虚拟机管理程序（裸机型，Hypervisor-Type-1）-2"><a href="#1-类型1虚拟机管理程序（裸机型，Hypervisor-Type-1）-2" class="headerlink" title="1.类型1虚拟机管理程序（裸机型，Hypervisor Type 1）"></a>1.类型1虚拟机管理程序（裸机型，Hypervisor Type 1）</h3><p>直接运行在物理硬件上，管理虚拟机。例如：VMware ESXi、Microsoft Hyper-V。</p>
<h3 id="2-类型2虚拟机管理程序（托管型，Hypervisor-Type-2）-2"><a href="#2-类型2虚拟机管理程序（托管型，Hypervisor-Type-2）-2" class="headerlink" title="2.类型2虚拟机管理程序（托管型，Hypervisor Type 2）"></a>2.类型2虚拟机管理程序（托管型，Hypervisor Type 2）</h3><p>运行在主机操作系统之上，通过主机操作系统管理虚拟机。例如：VMware Workstation、Oracle VirtualBox。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-系统虚拟机-2"><a href="#1-系统虚拟机-2" class="headerlink" title="1.系统虚拟机"></a>1.系统虚拟机</h3><p>提供完整的系统环境，可以运行完整的操作系统。</p>
<h3 id="2-进程虚拟机-2"><a href="#2-进程虚拟机-2" class="headerlink" title="2.进程虚拟机"></a>2.进程虚拟机</h3><p>为单个进程提供运行环境，如Java虚拟机（JVM）。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>通过虚拟化技术，提高硬件资源利用率，简化系统管理和维护，提供灵活的计算环境。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>虚拟机管理程序通过截取和模拟硬件指令，实现对物理硬件资源的虚拟化管理，将其分配给不同的虚拟机使用。## 定义</p>
<p>虚拟机（Virtual Machine，VM）是一种通过软件模拟计算机硬件环境的技术，使多个操作系统可以在同一台物理机器上运行，彼此隔离，互不影响。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-主机操作系统（Host-OS）-3"><a href="#1-主机操作系统（Host-OS）-3" class="headerlink" title="1.主机操作系统（Host OS）"></a>1.主机操作系统（Host OS）</h3><p>运行虚拟机管理程序的物理计算机上的操作系统。</p>
<h3 id="2-虚拟机管理程序（Hypervisor）-3"><a href="#2-虚拟机管理程序（Hypervisor）-3" class="headerlink" title="2.虚拟机管理程序（Hypervisor）"></a>2.虚拟机管理程序（Hypervisor）</h3><p>用于创建和管理虚拟机的系统软件。</p>
<h3 id="3-客机操作系统（Guest-OS）-3"><a href="#3-客机操作系统（Guest-OS）-3" class="headerlink" title="3.客机操作系统（Guest OS）"></a>3.客机操作系统（Guest OS）</h3><p>运行在虚拟机中的操作系统。</p>
<h3 id="4-虚拟硬件-3"><a href="#4-虚拟硬件-3" class="headerlink" title="4.虚拟硬件"></a>4.虚拟硬件</h3><p>通过软件模拟的计算机硬件，包括CPU、内存、存储、网络等。</p>
<h2 id="结构形式：-3"><a href="#结构形式：-3" class="headerlink" title="结构形式："></a>结构形式：</h2><h3 id="1-类型1虚拟机管理程序（裸机型，Hypervisor-Type-1）-3"><a href="#1-类型1虚拟机管理程序（裸机型，Hypervisor-Type-1）-3" class="headerlink" title="1.类型1虚拟机管理程序（裸机型，Hypervisor Type 1）"></a>1.类型1虚拟机管理程序（裸机型，Hypervisor Type 1）</h3><p>直接运行在物理硬件上，管理虚拟机。例如：VMware ESXi、Microsoft Hyper-V。</p>
<h3 id="2-类型2虚拟机管理程序（托管型，Hypervisor-Type-2）-3"><a href="#2-类型2虚拟机管理程序（托管型，Hypervisor-Type-2）-3" class="headerlink" title="2.类型2虚拟机管理程序（托管型，Hypervisor Type 2）"></a>2.类型2虚拟机管理程序（托管型，Hypervisor Type 2）</h3><p>运行在主机操作系统之上，通过主机操作系统管理虚拟机。例如：VMware Workstation、Oracle VirtualBox。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-系统虚拟机-3"><a href="#1-系统虚拟机-3" class="headerlink" title="1.系统虚拟机"></a>1.系统虚拟机</h3><p>提供完整的系统环境，可以运行完整的操作系统。</p>
<h3 id="2-进程虚拟机-3"><a href="#2-进程虚拟机-3" class="headerlink" title="2.进程虚拟机"></a>2.进程虚拟机</h3><p>为单个进程提供运行环境，如Java虚拟机（JVM）。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>通过虚拟化技术，提高硬件资源利用率，简化系统管理和维护，提供灵活的计算环境。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>虚拟机管理程序通过截取和模拟硬件指令，实现对物理硬件资源的虚拟化管理，将其分配给不同的虚拟机使用。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Web服务器软件</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="Web服务器软件"><a href="#Web服务器软件" class="headerlink" title="Web服务器软件"></a>Web服务器软件</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>在web服务器软件中可以部署web项目，用户可以通过浏览器来访问这些项目。接收用户请求，处理请求，响应请求。</p>
<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240523213838881.png" alt="image-20240523213838881"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.服务器</p>
<p>安装了服务软件的计算机</p>
<p>2.服务器软件</p>
<p>接收用户请求，处理请求，响应请求</p>
<p>3.JavaEE：</p>
<p>java语言在企业级开发中使用的技术规范的总和，一共规定了13项大的规范</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>在web服务器软件中可以部署web项目，用户可以通过浏览器来访问这些项目。接收用户请求，处理请求，响应请求。</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240523213838881.png" alt="image-20240523213838881"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.服务器</p>
<p>安装了服务软件的计算机</p>
<p>2.服务器软件</p>
<p>接收用户请求，处理请求，响应请求</p>
<p>3.JavaEE：</p>
<p>java语言在企业级开发中使用的技术规范的总和，一共规定了13项大的规范软件</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>在web服务器软件中可以部署web项目，用户可以通过浏览器来访问这些项目。接收用户请求，处理请求，响应请求。</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240523213838881.png" alt="image-20240523213838881"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.服务器</p>
<p>安装了服务软件的计算机</p>
<p>2.服务器软件</p>
<p>接收用户请求，处理请求，响应请求</p>
<p>3.JavaEE：</p>
<p>java语言在企业级开发中使用的技术规范的总和，一共规定了13项大的规范</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>在web服务器软件中可以部署web项目，用户可以通过浏览器来访问这些项目。接收用户请求，处理请求，响应请求。</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240523213838881.png" alt="image-20240523213838881"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.服务器</p>
<p>安装了服务软件的计算机</p>
<p>2.服务器软件</p>
<p>接收用户请求，处理请求，响应请求</p>
<p>3.JavaEE：</p>
<p>java语言在企业级开发中使用的技术规范的总和，一共规定了13项大的规范</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Web概念概述</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Web%E6%A6%82%E5%BF%B5%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="Web概念"><a href="#Web概念" class="headerlink" title="Web概念"></a>Web概念</h1><h2 id="javaWeb"><a href="#javaWeb" class="headerlink" title="javaWeb"></a>javaWeb</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>使用java语言开发基于互联网的项目</p>
<h2 id="软件架构"><a href="#软件架构" class="headerlink" title="软件架构"></a>软件架构</h2><h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-C-S：Client-Server-客户端-服务器端"><a href="#1-C-S：Client-Server-客户端-服务器端" class="headerlink" title="1.C&#x2F;S：Client&#x2F;Server 客户端&#x2F;服务器端"></a>1.C&#x2F;S：Client&#x2F;Server 客户端&#x2F;服务器端</h4><p>优点</p>
<p>①用户体验好</p>
<p>缺点</p>
<p>①开发、安装，部署、维护麻烦</p>
<h4 id="2-B-S：Browser-Server"><a href="#2-B-S：Browser-Server" class="headerlink" title="2.B&#x2F;S：Browser&#x2F;Server"></a>2.B&#x2F;S：Browser&#x2F;Server</h4><p>优点</p>
<p>①开发、安装，部署、维护简单</p>
<p>缺点</p>
<p>①如果应用程序过大，用户体验会很差</p>
<p>②对硬件的要求高</p>
<h2 id="资源分类"><a href="#资源分类" class="headerlink" title="资源分类"></a>资源分类</h2><h3 id="静态资源"><a href="#静态资源" class="headerlink" title="静态资源"></a>静态资源</h3><p><img src="/../TyporaImage/image-20240509195555336.png" alt="image-20240509195555336"></p>
<p><img src="/../TyporaImage/image-20240509195637823.png" alt="image-20240509195637823"></p>
<h3 id="动态资源"><a href="#动态资源" class="headerlink" title="动态资源"></a>动态资源</h3><p><img src="/../TyporaImage/image-20240509195625622.png" alt="image-20240509195625622"></p>
<h2 id="javaWeb-1"><a href="#javaWeb-1" class="headerlink" title="javaWeb"></a>javaWeb</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>使用java语言开发基于互联网的项目</p>
<h2 id="软件架构-1"><a href="#软件架构-1" class="headerlink" title="软件架构"></a>软件架构</h2><h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-C-S：Client-Server-客户端-服务器端-1"><a href="#1-C-S：Client-Server-客户端-服务器端-1" class="headerlink" title="1.C&#x2F;S：Client&#x2F;Server 客户端&#x2F;服务器端"></a>1.C&#x2F;S：Client&#x2F;Server 客户端&#x2F;服务器端</h4><p>优点</p>
<p>①用户体验好</p>
<p>缺点</p>
<p>①开发、安装，部署、维护麻烦</p>
<h4 id="2-B-S：Browser-Server-1"><a href="#2-B-S：Browser-Server-1" class="headerlink" title="2.B&#x2F;S：Browser&#x2F;Server"></a>2.B&#x2F;S：Browser&#x2F;Server</h4><p>优点</p>
<p>①开发、安装，部署、维护简单</p>
<p>缺点</p>
<p>①如果应用程序过大，用户体验会很差</p>
<p>②对硬件的要求高</p>
<h2 id="资源分类-1"><a href="#资源分类-1" class="headerlink" title="资源分类"></a>资源分类</h2><h3 id="静态资源-1"><a href="#静态资源-1" class="headerlink" title="静态资源"></a>静态资源</h3><p><img src="/../TyporaImage/image-20240509195555336.png" alt="image-20240509195555336"></p>
<p><img src="/../TyporaImage/image-20240509195637823.png" alt="image-20240509195637823"></p>
<h3 id="动态资源-1"><a href="#动态资源-1" class="headerlink" title="动态资源"></a>动态资源</h3><p><img src="/../TyporaImage/image-20240509195625622.png" alt="image-20240509195625622">概念</p>
<h2 id="javaWeb-2"><a href="#javaWeb-2" class="headerlink" title="javaWeb"></a>javaWeb</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>使用java语言开发基于互联网的项目</p>
<h2 id="软件架构-2"><a href="#软件架构-2" class="headerlink" title="软件架构"></a>软件架构</h2><h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-C-S：Client-Server-客户端-服务器端-2"><a href="#1-C-S：Client-Server-客户端-服务器端-2" class="headerlink" title="1.C&#x2F;S：Client&#x2F;Server 客户端&#x2F;服务器端"></a>1.C&#x2F;S：Client&#x2F;Server 客户端&#x2F;服务器端</h4><p>优点</p>
<p>①用户体验好</p>
<p>缺点</p>
<p>①开发、安装，部署、维护麻烦</p>
<h4 id="2-B-S：Browser-Server-2"><a href="#2-B-S：Browser-Server-2" class="headerlink" title="2.B&#x2F;S：Browser&#x2F;Server"></a>2.B&#x2F;S：Browser&#x2F;Server</h4><p>优点</p>
<p>①开发、安装，部署、维护简单</p>
<p>缺点</p>
<p>①如果应用程序过大，用户体验会很差</p>
<p>②对硬件的要求高</p>
<h2 id="资源分类-2"><a href="#资源分类-2" class="headerlink" title="资源分类"></a>资源分类</h2><h3 id="静态资源-2"><a href="#静态资源-2" class="headerlink" title="静态资源"></a>静态资源</h3><p><img src="/../TyporaImage/image-20240509195555336.png" alt="image-20240509195555336"></p>
<p><img src="/../TyporaImage/image-20240509195637823.png" alt="image-20240509195637823"></p>
<h3 id="动态资源-2"><a href="#动态资源-2" class="headerlink" title="动态资源"></a>动态资源</h3><p><img src="/../TyporaImage/image-20240509195625622.png" alt="image-20240509195625622"></p>
<h2 id="javaWeb-3"><a href="#javaWeb-3" class="headerlink" title="javaWeb"></a>javaWeb</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>使用java语言开发基于互联网的项目</p>
<h2 id="软件架构-3"><a href="#软件架构-3" class="headerlink" title="软件架构"></a>软件架构</h2><h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-C-S：Client-Server-客户端-服务器端-3"><a href="#1-C-S：Client-Server-客户端-服务器端-3" class="headerlink" title="1.C&#x2F;S：Client&#x2F;Server 客户端&#x2F;服务器端"></a>1.C&#x2F;S：Client&#x2F;Server 客户端&#x2F;服务器端</h4><p>优点</p>
<p>①用户体验好</p>
<p>缺点</p>
<p>①开发、安装，部署、维护麻烦</p>
<h4 id="2-B-S：Browser-Server-3"><a href="#2-B-S：Browser-Server-3" class="headerlink" title="2.B&#x2F;S：Browser&#x2F;Server"></a>2.B&#x2F;S：Browser&#x2F;Server</h4><p>优点</p>
<p>①开发、安装，部署、维护简单</p>
<p>缺点</p>
<p>①如果应用程序过大，用户体验会很差</p>
<p>②对硬件的要求高</p>
<h2 id="资源分类-3"><a href="#资源分类-3" class="headerlink" title="资源分类"></a>资源分类</h2><h3 id="静态资源-3"><a href="#静态资源-3" class="headerlink" title="静态资源"></a>静态资源</h3><p><img src="/../TyporaImage/image-20240509195555336.png" alt="image-20240509195555336"></p>
<p><img src="/../TyporaImage/image-20240509195637823.png" alt="image-20240509195637823"></p>
<h3 id="动态资源-3"><a href="#动态资源-3" class="headerlink" title="动态资源"></a>动态资源</h3><p><img src="/../TyporaImage/image-20240509195625622.png" alt="image-20240509195625622"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>XML</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/XML/</url>
    <content><![CDATA[<h1 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>Extensible Markup Language ，可扩展标记语言</p>
<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-文档声明"><a href="#1-文档声明" class="headerlink" title="1.文档声明"></a>1.文档声明</h4><p>​         <img src="/../TyporaImage/image-20240522214031550.png" alt="image-20240522214031550"></p>
<h4 id="2-标签"><a href="#2-标签" class="headerlink" title="2.标签"></a>2.标签</h4><p><img src="/../TyporaImage/image-20240522214229321.png" alt="image-20240522214229321"></p>
<h4 id="3-属性"><a href="#3-属性" class="headerlink" title="3.属性"></a>3.属性</h4><p><img src="/../TyporaImage/image-20240522214242058.png" alt="image-20240522214242058"></p>
<h4 id="4-指令"><a href="#4-指令" class="headerlink" title="4.指令"></a>4.指令</h4><p><img src="/../TyporaImage/image-20240522214219458.png" alt="image-20240522214219458"></p>
<h4 id="5-文本"><a href="#5-文本" class="headerlink" title="5.文本"></a>5.文本</h4><p><img src="/../TyporaImage/image-20240522214306990.png" alt="image-20240522214306990"></p>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1.xml标签都是自定义的，html标签是预定义</p>
<p>2.xml语法严格，html语法松散</p>
<p>3.xml是存储数据，html是展示数据</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>1.配置文件</p>
<p>2.在网络中传输</p>
<p>使用方法</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.使用的注意事项:</p>
<p>​        ①xml文档的后缀是.xml</p>
<pre><code>     ②xml第一行必须定义为文档声明
</code></pre>
<p>​		③xml文档有且只有一个根标签</p>
<p>​       ④属性值必须用单引号或者双引号引起来</p>
<p>​		⑤xml标签名称区分大小写</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>Extensible Markup Language ，可扩展标记语言</p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-文档声明-1"><a href="#1-文档声明-1" class="headerlink" title="1.文档声明"></a>1.文档声明</h4><p>​         <img src="/../TyporaImage/image-20240522214031550.png" alt="image-20240522214031550"></p>
<h4 id="2-标签-1"><a href="#2-标签-1" class="headerlink" title="2.标签"></a>2.标签</h4><p><img src="/../TyporaImage/image-20240522214229321.png" alt="image-20240522214229321"></p>
<h4 id="3-属性-1"><a href="#3-属性-1" class="headerlink" title="3.属性"></a>3.属性</h4><p><img src="/../TyporaImage/image-20240522214242058.png" alt="image-20240522214242058"></p>
<h4 id="4-指令-1"><a href="#4-指令-1" class="headerlink" title="4.指令"></a>4.指令</h4><p><img src="/../TyporaImage/image-20240522214219458.png" alt="image-20240522214219458"></p>
<h4 id="5-文本-1"><a href="#5-文本-1" class="headerlink" title="5.文本"></a>5.文本</h4><p><img src="/../TyporaImage/image-20240522214306990.png" alt="image-20240522214306990"></p>
<h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p>1.xml标签都是自定义的，html标签是预定义</p>
<p>2.xml语法严格，html语法松散</p>
<p>3.xml是存储数据，html是展示数据</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h3><p>1.配置文件</p>
<p>2.在网络中传输</p>
<p>使用方法</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.使用的注意事项:</p>
<p>​        ①xml文档的后缀是.xml</p>
<pre><code>     ②xml第一行必须定义为文档声明
</code></pre>
<p>​		③xml文档有且只有一个根标签</p>
<p>​       ④属性值必须用单引号或者双引号引起来</p>
<p>​		⑤xml标签名称区分大小写ML</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>Extensible Markup Language ，可扩展标记语言</p>
<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-文档声明-2"><a href="#1-文档声明-2" class="headerlink" title="1.文档声明"></a>1.文档声明</h4><p>​         <img src="/../TyporaImage/image-20240522214031550.png" alt="image-20240522214031550"></p>
<h4 id="2-标签-2"><a href="#2-标签-2" class="headerlink" title="2.标签"></a>2.标签</h4><p><img src="/../TyporaImage/image-20240522214229321.png" alt="image-20240522214229321"></p>
<h4 id="3-属性-2"><a href="#3-属性-2" class="headerlink" title="3.属性"></a>3.属性</h4><p><img src="/../TyporaImage/image-20240522214242058.png" alt="image-20240522214242058"></p>
<h4 id="4-指令-2"><a href="#4-指令-2" class="headerlink" title="4.指令"></a>4.指令</h4><p><img src="/../TyporaImage/image-20240522214219458.png" alt="image-20240522214219458"></p>
<h4 id="5-文本-2"><a href="#5-文本-2" class="headerlink" title="5.文本"></a>5.文本</h4><p><img src="/../TyporaImage/image-20240522214306990.png" alt="image-20240522214306990"></p>
<h3 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h3><p>1.xml标签都是自定义的，html标签是预定义</p>
<p>2.xml语法严格，html语法松散</p>
<p>3.xml是存储数据，html是展示数据</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h3><p>1.配置文件</p>
<p>2.在网络中传输</p>
<p>使用方法</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.使用的注意事项:</p>
<p>​        ①xml文档的后缀是.xml</p>
<pre><code>     ②xml第一行必须定义为文档声明
</code></pre>
<p>​		③xml文档有且只有一个根标签</p>
<p>​       ④属性值必须用单引号或者双引号引起来</p>
<p>​		⑤xml标签名称区分大小写</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>Extensible Markup Language ，可扩展标记语言</p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-文档声明-3"><a href="#1-文档声明-3" class="headerlink" title="1.文档声明"></a>1.文档声明</h4><p>​         <img src="/../TyporaImage/image-20240522214031550.png" alt="image-20240522214031550"></p>
<h4 id="2-标签-3"><a href="#2-标签-3" class="headerlink" title="2.标签"></a>2.标签</h4><p><img src="/../TyporaImage/image-20240522214229321.png" alt="image-20240522214229321"></p>
<h4 id="3-属性-3"><a href="#3-属性-3" class="headerlink" title="3.属性"></a>3.属性</h4><p><img src="/../TyporaImage/image-20240522214242058.png" alt="image-20240522214242058"></p>
<h4 id="4-指令-3"><a href="#4-指令-3" class="headerlink" title="4.指令"></a>4.指令</h4><p><img src="/../TyporaImage/image-20240522214219458.png" alt="image-20240522214219458"></p>
<h4 id="5-文本-3"><a href="#5-文本-3" class="headerlink" title="5.文本"></a>5.文本</h4><p><img src="/../TyporaImage/image-20240522214306990.png" alt="image-20240522214306990"></p>
<h3 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h3><p>1.xml标签都是自定义的，html标签是预定义</p>
<p>2.xml语法严格，html语法松散</p>
<p>3.xml是存储数据，html是展示数据</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用-3"><a href="#作用-3" class="headerlink" title="作用"></a>作用</h3><p>1.配置文件</p>
<p>2.在网络中传输</p>
<p>使用方法</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.使用的注意事项:</p>
<p>​        ①xml文档的后缀是.xml</p>
<pre><code>     ②xml第一行必须定义为文档声明
</code></pre>
<p>​		③xml文档有且只有一个根标签</p>
<p>​       ④属性值必须用单引号或者双引号引起来</p>
<p>​		⑤xml标签名称区分大小写</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Window对象</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Window%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="Window对象"><a href="#Window对象" class="headerlink" title="Window对象"></a>Window对象</h1><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p>1.navigator</p>
<p>2.location</p>
<p>3.history</p>
<p>4.screen</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>1.window对象不需要创建，可以直接使用。       </p>
<p>window.方法名（）；</p>
<p>2.window引用可以省略。</p>
<p>方法名（）；</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h4 id="1-弹出"><a href="#1-弹出" class="headerlink" title="1.弹出"></a>1.弹出</h4><p><img src="/../TyporaImage/image-20240516094140463.png" alt="image-20240516094140463"></p>
<h4 id="2-打开关闭"><a href="#2-打开关闭" class="headerlink" title="2.打开关闭"></a>2.打开关闭</h4><p><img src="/../TyporaImage/image-20240516094222870.png" alt="image-20240516094222870"></p>
<h4 id="3-定时器"><a href="#3-定时器" class="headerlink" title="3.定时器"></a>3.定时器</h4><p><img src="/../TyporaImage/image-20240516094239551.png" alt="image-20240516094239551">## 属性</p>
<p>1.navigator</p>
<p>2.location</p>
<p>3.history</p>
<p>4.screen</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p>1.window对象不需要创建，可以直接使用。       </p>
<p>window.方法名（）；</p>
<p>2.window引用可以省略。</p>
<p>方法名（）；</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h4 id="1-弹出-1"><a href="#1-弹出-1" class="headerlink" title="1.弹出"></a>1.弹出</h4><p><img src="/../TyporaImage/image-20240516094140463.png" alt="image-20240516094140463"></p>
<h4 id="2-打开关闭-1"><a href="#2-打开关闭-1" class="headerlink" title="2.打开关闭"></a>2.打开关闭</h4><p><img src="/../TyporaImage/image-20240516094222870.png" alt="image-20240516094222870"></p>
<h4 id="3-定时器-1"><a href="#3-定时器-1" class="headerlink" title="3.定时器"></a>3.定时器</h4><p><img src="/../TyporaImage/image-20240516094239551.png" alt="image-20240516094239551">对象</p>
<h2 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h2><p>1.navigator</p>
<p>2.location</p>
<p>3.history</p>
<p>4.screen</p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p>1.window对象不需要创建，可以直接使用。       </p>
<p>window.方法名（）；</p>
<p>2.window引用可以省略。</p>
<p>方法名（）；</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h4 id="1-弹出-2"><a href="#1-弹出-2" class="headerlink" title="1.弹出"></a>1.弹出</h4><p><img src="/../TyporaImage/image-20240516094140463.png" alt="image-20240516094140463"></p>
<h4 id="2-打开关闭-2"><a href="#2-打开关闭-2" class="headerlink" title="2.打开关闭"></a>2.打开关闭</h4><p><img src="/../TyporaImage/image-20240516094222870.png" alt="image-20240516094222870"></p>
<h4 id="3-定时器-2"><a href="#3-定时器-2" class="headerlink" title="3.定时器"></a>3.定时器</h4><p><img src="/../TyporaImage/image-20240516094239551.png" alt="image-20240516094239551">## 属性</p>
<p>1.navigator</p>
<p>2.location</p>
<p>3.history</p>
<p>4.screen</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p>1.window对象不需要创建，可以直接使用。       </p>
<p>window.方法名（）；</p>
<p>2.window引用可以省略。</p>
<p>方法名（）；</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h4 id="1-弹出-3"><a href="#1-弹出-3" class="headerlink" title="1.弹出"></a>1.弹出</h4><p><img src="/../TyporaImage/image-20240516094140463.png" alt="image-20240516094140463"></p>
<h4 id="2-打开关闭-3"><a href="#2-打开关闭-3" class="headerlink" title="2.打开关闭"></a>2.打开关闭</h4><p><img src="/../TyporaImage/image-20240516094222870.png" alt="image-20240516094222870"></p>
<h4 id="3-定时器-3"><a href="#3-定时器-3" class="headerlink" title="3.定时器"></a>3.定时器</h4><p><img src="/../TyporaImage/image-20240516094239551.png" alt="image-20240516094239551"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>div和span标签</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/div%E5%92%8Cspan%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="标签和"><a href="#标签和" class="headerlink" title="标签和"></a>标签<div>和<span></h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>没有任何结构性作用，只是提高了程序的可读性的标签。</p>
<p>标签<div>占满一整行，是块级元素。</p>
<p>标签<span>文本信息在一行展示，是内联标签。</p>
<h2 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h2><p>为了配合更好地进行样式的控制</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>没有任何结构性作用，只是提高了程序的可读性的标签。</p>
<p>标签<div>占满一整行，是块级元素。</p>
<p>标签<span>文本信息在一行展示，是内联标签。</p>
<h2 id="目的：-1"><a href="#目的：-1" class="headerlink" title="目的："></a>目的：</h2><p>为了配合更好地进行样式的控制n&gt;</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>没有任何结构性作用，只是提高了程序的可读性的标签。</p>
<p>标签<div>占满一整行，是块级元素。</p>
<p>标签<span>文本信息在一行展示，是内联标签。</p>
<h2 id="目的：-2"><a href="#目的：-2" class="headerlink" title="目的："></a>目的：</h2><p>为了配合更好地进行样式的控制</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>没有任何结构性作用，只是提高了程序的可读性的标签。</p>
<p>标签<div>占满一整行，是块级元素。</p>
<p>标签<span>文本信息在一行展示，是内联标签。</p>
<h2 id="目的：-3"><a href="#目的：-3" class="headerlink" title="目的："></a>目的：</h2><p>为了配合更好地进行样式的控制</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>Xpath查询-jsoup</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/Xpath%E6%9F%A5%E8%AF%A2-jsoup/</url>
    <content><![CDATA[<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240523101908657.png" alt="image-20240523101908657"><img src="/../TyporaImage/image-20240523101908657.png" alt="image-20240523101908657">用方法</p>
<p><img src="/../TyporaImage/image-20240523101908657.png" alt="image-20240523101908657"><img src="/../TyporaImage/image-20240523101908657.png" alt="image-20240523101908657"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>jedis连接池</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/jedis%E8%BF%9E%E6%8E%A5%E6%B1%A0/</url>
    <content><![CDATA[<h1 id="jedis连接池"><a href="#jedis连接池" class="headerlink" title="jedis连接池"></a>jedis连接池</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Jedis连接池是一个管理和复用Jedis连接的机制，用于高效管理与Redis服务器之间的多个连接，避免频繁创建和销毁连接带来的开销。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过管理和复用连接，减少频繁创建和销毁连接的开销，提高系统的性能和稳定性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>物理描述：连接池在初始化时创建一定数量的连接，并在运行过程中动态调整连接数，根据需要借用和归还连接。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-基本使用步骤"><a href="#1-基本使用步骤" class="headerlink" title="1.基本使用步骤"></a>1.基本使用步骤</h3><p>①创建配置对象</p>
<p>②创建jedis连接池对象</p>
<p>③获取连接</p>
<p>④使用</p>
<p>⑤归还到连接池</p>
<p><img src="/./../TyporaImage/image-20240725210527887.png" alt="image-20240725210527887"></p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Jedis连接池是一个管理和复用Jedis连接的机制，用于高效管理与Redis服务器之间的多个连接，避免频繁创建和销毁连接带来的开销。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>通过管理和复用连接，减少频繁创建和销毁连接的开销，提高系统的性能和稳定性。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>物理描述：连接池在初始化时创建一定数量的连接，并在运行过程中动态调整连接数，根据需要借用和归还连接。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-基本使用步骤-1"><a href="#1-基本使用步骤-1" class="headerlink" title="1.基本使用步骤"></a>1.基本使用步骤</h3><p>①创建配置对象</p>
<p>②创建jedis连接池对象</p>
<p>③获取连接</p>
<p>④使用</p>
<p>⑤归还到连接池</p>
<p><img src="/./../TyporaImage/image-20240725210527887.png" alt="image-20240725210527887">接池</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>Jedis连接池是一个管理和复用Jedis连接的机制，用于高效管理与Redis服务器之间的多个连接，避免频繁创建和销毁连接带来的开销。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>通过管理和复用连接，减少频繁创建和销毁连接的开销，提高系统的性能和稳定性。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>物理描述：连接池在初始化时创建一定数量的连接，并在运行过程中动态调整连接数，根据需要借用和归还连接。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-基本使用步骤-2"><a href="#1-基本使用步骤-2" class="headerlink" title="1.基本使用步骤"></a>1.基本使用步骤</h3><p>①创建配置对象</p>
<p>②创建jedis连接池对象</p>
<p>③获取连接</p>
<p>④使用</p>
<p>⑤归还到连接池</p>
<p><img src="/./../TyporaImage/image-20240725210527887.png" alt="image-20240725210527887"></p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>Jedis连接池是一个管理和复用Jedis连接的机制，用于高效管理与Redis服务器之间的多个连接，避免频繁创建和销毁连接带来的开销。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>通过管理和复用连接，减少频繁创建和销毁连接的开销，提高系统的性能和稳定性。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>物理描述：连接池在初始化时创建一定数量的连接，并在运行过程中动态调整连接数，根据需要借用和归还连接。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-基本使用步骤-3"><a href="#1-基本使用步骤-3" class="headerlink" title="1.基本使用步骤"></a>1.基本使用步骤</h3><p>①创建配置对象</p>
<p>②创建jedis连接池对象</p>
<p>③获取连接</p>
<p>④使用</p>
<p>⑤归还到连接池</p>
<p><img src="/./../TyporaImage/image-20240725210527887.png" alt="image-20240725210527887"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>redis-命令操作</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/redis-%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="redis命令操作"><a href="#redis命令操作" class="headerlink" title="redis命令操作"></a>redis命令操作</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.存储</p>
<p>2.获取</p>
<p>3.删除</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-字符串类型"><a href="#1-字符串类型" class="headerlink" title="1.字符串类型"></a>1.字符串类型</h3><p><img src="/./../TyporaImage/image-20240724205733871.png" alt="image-20240724205733871"></p>
<h3 id="2-哈希类型"><a href="#2-哈希类型" class="headerlink" title="2.哈希类型"></a>2.哈希类型</h3><p><img src="/./../TyporaImage/image-20240724205742486.png" alt="image-20240724205742486"></p>
<h3 id="3-列表类型"><a href="#3-列表类型" class="headerlink" title="3.列表类型"></a>3.列表类型</h3><p><img src="/./../TyporaImage/image-20240724210204897.png" alt="image-20240724210204897"></p>
<h3 id="4-集合类型set：不允许重复元素"><a href="#4-集合类型set：不允许重复元素" class="headerlink" title="4.集合类型set：不允许重复元素"></a>4.集合类型set：不允许重复元素</h3><p><img src="/./../TyporaImage/image-20240724210922806.png" alt="image-20240724210922806"></p>
<h3 id="5-有序集合sorted-set"><a href="#5-有序集合sorted-set" class="headerlink" title="5.有序集合sorted set"></a>5.有序集合sorted set</h3><p><img src="/./../TyporaImage/image-20240724211147140.png" alt="image-20240724211147140"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-通用命令"><a href="#1-通用命令" class="headerlink" title="1.通用命令"></a>1.通用命令</h3><p><img src="/./../TyporaImage/image-20240724211531203.png" alt="image-20240724211531203">## 分类</p>
<p>1.存储</p>
<p>2.获取</p>
<p>3.删除</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-字符串类型-1"><a href="#1-字符串类型-1" class="headerlink" title="1.字符串类型"></a>1.字符串类型</h3><p><img src="/./../TyporaImage/image-20240724205733871.png" alt="image-20240724205733871"></p>
<h3 id="2-哈希类型-1"><a href="#2-哈希类型-1" class="headerlink" title="2.哈希类型"></a>2.哈希类型</h3><p><img src="/./../TyporaImage/image-20240724205742486.png" alt="image-20240724205742486"></p>
<h3 id="3-列表类型-1"><a href="#3-列表类型-1" class="headerlink" title="3.列表类型"></a>3.列表类型</h3><p><img src="/./../TyporaImage/image-20240724210204897.png" alt="image-20240724210204897"></p>
<h3 id="4-集合类型set：不允许重复元素-1"><a href="#4-集合类型set：不允许重复元素-1" class="headerlink" title="4.集合类型set：不允许重复元素"></a>4.集合类型set：不允许重复元素</h3><p><img src="/./../TyporaImage/image-20240724210922806.png" alt="image-20240724210922806"></p>
<h3 id="5-有序集合sorted-set-1"><a href="#5-有序集合sorted-set-1" class="headerlink" title="5.有序集合sorted set"></a>5.有序集合sorted set</h3><p><img src="/./../TyporaImage/image-20240724211147140.png" alt="image-20240724211147140"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-通用命令-1"><a href="#1-通用命令-1" class="headerlink" title="1.通用命令"></a>1.通用命令</h3><p><img src="/./../TyporaImage/image-20240724211531203.png" alt="image-20240724211531203">操作</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.存储</p>
<p>2.获取</p>
<p>3.删除</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-字符串类型-2"><a href="#1-字符串类型-2" class="headerlink" title="1.字符串类型"></a>1.字符串类型</h3><p><img src="/./../TyporaImage/image-20240724205733871.png" alt="image-20240724205733871"></p>
<h3 id="2-哈希类型-2"><a href="#2-哈希类型-2" class="headerlink" title="2.哈希类型"></a>2.哈希类型</h3><p><img src="/./../TyporaImage/image-20240724205742486.png" alt="image-20240724205742486"></p>
<h3 id="3-列表类型-2"><a href="#3-列表类型-2" class="headerlink" title="3.列表类型"></a>3.列表类型</h3><p><img src="/./../TyporaImage/image-20240724210204897.png" alt="image-20240724210204897"></p>
<h3 id="4-集合类型set：不允许重复元素-2"><a href="#4-集合类型set：不允许重复元素-2" class="headerlink" title="4.集合类型set：不允许重复元素"></a>4.集合类型set：不允许重复元素</h3><p><img src="/./../TyporaImage/image-20240724210922806.png" alt="image-20240724210922806"></p>
<h3 id="5-有序集合sorted-set-2"><a href="#5-有序集合sorted-set-2" class="headerlink" title="5.有序集合sorted set"></a>5.有序集合sorted set</h3><p><img src="/./../TyporaImage/image-20240724211147140.png" alt="image-20240724211147140"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-通用命令-2"><a href="#1-通用命令-2" class="headerlink" title="1.通用命令"></a>1.通用命令</h3><p><img src="/./../TyporaImage/image-20240724211531203.png" alt="image-20240724211531203">## 分类</p>
<p>1.存储</p>
<p>2.获取</p>
<p>3.删除</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-字符串类型-3"><a href="#1-字符串类型-3" class="headerlink" title="1.字符串类型"></a>1.字符串类型</h3><p><img src="/./../TyporaImage/image-20240724205733871.png" alt="image-20240724205733871"></p>
<h3 id="2-哈希类型-3"><a href="#2-哈希类型-3" class="headerlink" title="2.哈希类型"></a>2.哈希类型</h3><p><img src="/./../TyporaImage/image-20240724205742486.png" alt="image-20240724205742486"></p>
<h3 id="3-列表类型-3"><a href="#3-列表类型-3" class="headerlink" title="3.列表类型"></a>3.列表类型</h3><p><img src="/./../TyporaImage/image-20240724210204897.png" alt="image-20240724210204897"></p>
<h3 id="4-集合类型set：不允许重复元素-3"><a href="#4-集合类型set：不允许重复元素-3" class="headerlink" title="4.集合类型set：不允许重复元素"></a>4.集合类型set：不允许重复元素</h3><p><img src="/./../TyporaImage/image-20240724210922806.png" alt="image-20240724210922806"></p>
<h3 id="5-有序集合sorted-set-3"><a href="#5-有序集合sorted-set-3" class="headerlink" title="5.有序集合sorted set"></a>5.有序集合sorted set</h3><p><img src="/./../TyporaImage/image-20240724211147140.png" alt="image-20240724211147140"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-通用命令-3"><a href="#1-通用命令-3" class="headerlink" title="1.通用命令"></a>1.通用命令</h3><p><img src="/./../TyporaImage/image-20240724211531203.png" alt="image-20240724211531203"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>redis-持久化</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/redis-%E6%8C%81%E4%B9%85%E5%8C%96/</url>
    <content><![CDATA[<h1 id="redis持久化"><a href="#redis持久化" class="headerlink" title="redis持久化"></a>redis持久化</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-RDB（Redis-DataBase）"><a href="#1-RDB（Redis-DataBase）" class="headerlink" title="1.RDB（Redis DataBase）"></a>1.RDB（Redis DataBase）</h3><p>RDB是Redis的一种持久化机制，它会将数据集的快照在某个时间点保存到磁盘上。</p>
<p>这是默认的方式，不需要进行配置。</p>
<h3 id="2-AOF（Append-Only-File）"><a href="#2-AOF（Append-Only-File）" class="headerlink" title="2.AOF（Append-Only File）"></a>2.AOF（Append-Only File）</h3><p>AOF是Redis的另一种持久化机制，它通过记录每一个写操作到日志文件中实现持久化。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-RDB："><a href="#1-RDB：" class="headerlink" title="1.RDB："></a>1.RDB：</h3><p>①编辑redis.windows.conf文件</p>
<p>例如，save  900  1    代表900s中，至少有1个key发生改变。那么就持久化存储</p>
<p>②重新启动redis服务器，并指定配置文件名称</p>
<p><img src="/./../TyporaImage/image-20240725205256740.png" alt="image-20240725205256740"></p>
<h3 id="2-AOF"><a href="#2-AOF" class="headerlink" title="2.AOF"></a>2.AOF</h3><p>①编辑redis.windows.conf文件</p>
<p>appendonly no （关闭AOF） –&gt;appendly yes （开启AOF）</p>
<p><img src="/./../TyporaImage/image-20240725205023310.png" alt="image-20240725205023310"></p>
<p>②</p>
<p><img src="/./../TyporaImage/image-20240725205301631.png" alt="image-20240725205301631"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-RDB（Redis-DataBase）-1"><a href="#1-RDB（Redis-DataBase）-1" class="headerlink" title="1.RDB（Redis DataBase）"></a>1.RDB（Redis DataBase）</h3><p>RDB是Redis的一种持久化机制，它会将数据集的快照在某个时间点保存到磁盘上。</p>
<p>这是默认的方式，不需要进行配置。</p>
<h3 id="2-AOF（Append-Only-File）-1"><a href="#2-AOF（Append-Only-File）-1" class="headerlink" title="2.AOF（Append-Only File）"></a>2.AOF（Append-Only File）</h3><p>AOF是Redis的另一种持久化机制，它通过记录每一个写操作到日志文件中实现持久化。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-RDB：-1"><a href="#1-RDB：-1" class="headerlink" title="1.RDB："></a>1.RDB：</h3><p>①编辑redis.windows.conf文件</p>
<p>例如，save  900  1    代表900s中，至少有1个key发生改变。那么就持久化存储</p>
<p>②重新启动redis服务器，并指定配置文件名称</p>
<p><img src="/./../TyporaImage/image-20240725205256740.png" alt="image-20240725205256740"></p>
<h3 id="2-AOF-1"><a href="#2-AOF-1" class="headerlink" title="2.AOF"></a>2.AOF</h3><p>①编辑redis.windows.conf文件</p>
<p>appendonly no （关闭AOF） –&gt;appendly yes （开启AOF）</p>
<p><img src="/./../TyporaImage/image-20240725205023310.png" alt="image-20240725205023310"></p>
<p>②</p>
<p><img src="/./../TyporaImage/image-20240725205301631.png" alt="image-20240725205301631">久化</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-RDB（Redis-DataBase）-2"><a href="#1-RDB（Redis-DataBase）-2" class="headerlink" title="1.RDB（Redis DataBase）"></a>1.RDB（Redis DataBase）</h3><p>RDB是Redis的一种持久化机制，它会将数据集的快照在某个时间点保存到磁盘上。</p>
<p>这是默认的方式，不需要进行配置。</p>
<h3 id="2-AOF（Append-Only-File）-2"><a href="#2-AOF（Append-Only-File）-2" class="headerlink" title="2.AOF（Append-Only File）"></a>2.AOF（Append-Only File）</h3><p>AOF是Redis的另一种持久化机制，它通过记录每一个写操作到日志文件中实现持久化。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-RDB：-2"><a href="#1-RDB：-2" class="headerlink" title="1.RDB："></a>1.RDB：</h3><p>①编辑redis.windows.conf文件</p>
<p>例如，save  900  1    代表900s中，至少有1个key发生改变。那么就持久化存储</p>
<p>②重新启动redis服务器，并指定配置文件名称</p>
<p><img src="/./../TyporaImage/image-20240725205256740.png" alt="image-20240725205256740"></p>
<h3 id="2-AOF-2"><a href="#2-AOF-2" class="headerlink" title="2.AOF"></a>2.AOF</h3><p>①编辑redis.windows.conf文件</p>
<p>appendonly no （关闭AOF） –&gt;appendly yes （开启AOF）</p>
<p><img src="/./../TyporaImage/image-20240725205023310.png" alt="image-20240725205023310"></p>
<p>②</p>
<p><img src="/./../TyporaImage/image-20240725205301631.png" alt="image-20240725205301631"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-RDB（Redis-DataBase）-3"><a href="#1-RDB（Redis-DataBase）-3" class="headerlink" title="1.RDB（Redis DataBase）"></a>1.RDB（Redis DataBase）</h3><p>RDB是Redis的一种持久化机制，它会将数据集的快照在某个时间点保存到磁盘上。</p>
<p>这是默认的方式，不需要进行配置。</p>
<h3 id="2-AOF（Append-Only-File）-3"><a href="#2-AOF（Append-Only-File）-3" class="headerlink" title="2.AOF（Append-Only File）"></a>2.AOF（Append-Only File）</h3><p>AOF是Redis的另一种持久化机制，它通过记录每一个写操作到日志文件中实现持久化。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-RDB：-3"><a href="#1-RDB：-3" class="headerlink" title="1.RDB："></a>1.RDB：</h3><p>①编辑redis.windows.conf文件</p>
<p>例如，save  900  1    代表900s中，至少有1个key发生改变。那么就持久化存储</p>
<p>②重新启动redis服务器，并指定配置文件名称</p>
<p><img src="/./../TyporaImage/image-20240725205256740.png" alt="image-20240725205256740"></p>
<h3 id="2-AOF-3"><a href="#2-AOF-3" class="headerlink" title="2.AOF"></a>2.AOF</h3><p>①编辑redis.windows.conf文件</p>
<p>appendonly no （关闭AOF） –&gt;appendly yes （开启AOF）</p>
<p><img src="/./../TyporaImage/image-20240725205023310.png" alt="image-20240725205023310"></p>
<p>②</p>
<p><img src="/./../TyporaImage/image-20240725205301631.png" alt="image-20240725205301631"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>redis-操作各种数据结构</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/redis-%E6%93%8D%E4%BD%9C%E5%90%84%E7%A7%8D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="redis-操作各种数据结构"><a href="#redis-操作各种数据结构" class="headerlink" title="redis-操作各种数据结构"></a>redis-操作各种数据结构</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.String</p>
<p>2.hash</p>
<p>3.list</p>
<p>4.set</p>
<p>5.sortedset</p>
<p><img src="/./../TyporaImage/image-20240725210022942.png" alt="image-20240725210022942"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.String</p>
<p>2.hash</p>
<p>3.list</p>
<p>4.set</p>
<p>5.sortedset</p>
<p><img src="/./../TyporaImage/image-20240725210022942.png" alt="image-20240725210022942">结构</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.String</p>
<p>2.hash</p>
<p>3.list</p>
<p>4.set</p>
<p>5.sortedset</p>
<p><img src="/./../TyporaImage/image-20240725210022942.png" alt="image-20240725210022942"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.String</p>
<p>2.hash</p>
<p>3.list</p>
<p>4.set</p>
<p>5.sortedset</p>
<p><img src="/./../TyporaImage/image-20240725210022942.png" alt="image-20240725210022942"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>redis</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/redis/</url>
    <content><![CDATA[<h1 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Redis（Remote Dictionary Server）是一种开源的、基于内存的数据结构存储系统。它可以用作数据库、缓存和消息代理，支持多种数据结构，如字符串、哈希、列表、集合、有序集合、位图和HyperLogLog等。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-内存存储引擎"><a href="#1-内存存储引擎" class="headerlink" title="1.内存存储引擎"></a>1.内存存储引擎</h3><p>Redis主要基于内存操作，虽然也支持持久化存储。</p>
<h3 id="2-数据结构"><a href="#2-数据结构" class="headerlink" title="2.数据结构"></a>2.数据结构</h3><p>支持字符串、列表、集合、有序集合、哈希、位图、HyperLogLog等。</p>
<h3 id="3-持久化机制"><a href="#3-持久化机制" class="headerlink" title="3.持久化机制"></a>3.持久化机制</h3><p>包括RDB（Redis Database）快照和AOF（Append Only File）日志。</p>
<h3 id="4-发布-订阅"><a href="#4-发布-订阅" class="headerlink" title="4.发布&#x2F;订阅"></a>4.发布&#x2F;订阅</h3><p>消息通信机制。</p>
<h3 id="5-主从复制"><a href="#5-主从复制" class="headerlink" title="5.主从复制"></a>5.主从复制</h3><p>数据备份和高可用机制。</p>
<h3 id="6-Lua脚本"><a href="#6-Lua脚本" class="headerlink" title="6.Lua脚本"></a>6.Lua脚本</h3><p>内置脚本支持，允许原子化地执行脚本。</p>
<h3 id="7-集群模式"><a href="#7-集群模式" class="headerlink" title="7.集群模式"></a>7.集群模式</h3><p>分布式数据管理和负载均衡。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>1.提供快速的数据读写操作，提升应用性能。</p>
<p>2.通过缓存减少数据库负载，提高系统响应速度。</p>
<p>3.实现高效的消息通信和任务队列处理。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>Redis基于内存操作，利用数据结构优化存储和检索效率。持久化机制通过周期性地将内存数据保存到磁盘，或者记录每次写操作。</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Redis（Remote Dictionary Server）是一种开源的、基于内存的数据结构存储系统。它可以用作数据库、缓存和消息代理，支持多种数据结构，如字符串、哈希、列表、集合、有序集合、位图和HyperLogLog等。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-内存存储引擎-1"><a href="#1-内存存储引擎-1" class="headerlink" title="1.内存存储引擎"></a>1.内存存储引擎</h3><p>Redis主要基于内存操作，虽然也支持持久化存储。</p>
<h3 id="2-数据结构-1"><a href="#2-数据结构-1" class="headerlink" title="2.数据结构"></a>2.数据结构</h3><p>支持字符串、列表、集合、有序集合、哈希、位图、HyperLogLog等。</p>
<h3 id="3-持久化机制-1"><a href="#3-持久化机制-1" class="headerlink" title="3.持久化机制"></a>3.持久化机制</h3><p>包括RDB（Redis Database）快照和AOF（Append Only File）日志。</p>
<h3 id="4-发布-订阅-1"><a href="#4-发布-订阅-1" class="headerlink" title="4.发布&#x2F;订阅"></a>4.发布&#x2F;订阅</h3><p>消息通信机制。</p>
<h3 id="5-主从复制-1"><a href="#5-主从复制-1" class="headerlink" title="5.主从复制"></a>5.主从复制</h3><p>数据备份和高可用机制。</p>
<h3 id="6-Lua脚本-1"><a href="#6-Lua脚本-1" class="headerlink" title="6.Lua脚本"></a>6.Lua脚本</h3><p>内置脚本支持，允许原子化地执行脚本。</p>
<h3 id="7-集群模式-1"><a href="#7-集群模式-1" class="headerlink" title="7.集群模式"></a>7.集群模式</h3><p>分布式数据管理和负载均衡。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>1.提供快速的数据读写操作，提升应用性能。</p>
<p>2.通过缓存减少数据库负载，提高系统响应速度。</p>
<p>3.实现高效的消息通信和任务队列处理。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>Redis基于内存操作，利用数据结构优化存储和检索效率。持久化机制通过周期性地将内存数据保存到磁盘，或者记录每次写操作。is</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>Redis（Remote Dictionary Server）是一种开源的、基于内存的数据结构存储系统。它可以用作数据库、缓存和消息代理，支持多种数据结构，如字符串、哈希、列表、集合、有序集合、位图和HyperLogLog等。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-内存存储引擎-2"><a href="#1-内存存储引擎-2" class="headerlink" title="1.内存存储引擎"></a>1.内存存储引擎</h3><p>Redis主要基于内存操作，虽然也支持持久化存储。</p>
<h3 id="2-数据结构-2"><a href="#2-数据结构-2" class="headerlink" title="2.数据结构"></a>2.数据结构</h3><p>支持字符串、列表、集合、有序集合、哈希、位图、HyperLogLog等。</p>
<h3 id="3-持久化机制-2"><a href="#3-持久化机制-2" class="headerlink" title="3.持久化机制"></a>3.持久化机制</h3><p>包括RDB（Redis Database）快照和AOF（Append Only File）日志。</p>
<h3 id="4-发布-订阅-2"><a href="#4-发布-订阅-2" class="headerlink" title="4.发布&#x2F;订阅"></a>4.发布&#x2F;订阅</h3><p>消息通信机制。</p>
<h3 id="5-主从复制-2"><a href="#5-主从复制-2" class="headerlink" title="5.主从复制"></a>5.主从复制</h3><p>数据备份和高可用机制。</p>
<h3 id="6-Lua脚本-2"><a href="#6-Lua脚本-2" class="headerlink" title="6.Lua脚本"></a>6.Lua脚本</h3><p>内置脚本支持，允许原子化地执行脚本。</p>
<h3 id="7-集群模式-2"><a href="#7-集群模式-2" class="headerlink" title="7.集群模式"></a>7.集群模式</h3><p>分布式数据管理和负载均衡。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>1.提供快速的数据读写操作，提升应用性能。</p>
<p>2.通过缓存减少数据库负载，提高系统响应速度。</p>
<p>3.实现高效的消息通信和任务队列处理。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>Redis基于内存操作，利用数据结构优化存储和检索效率。持久化机制通过周期性地将内存数据保存到磁盘，或者记录每次写操作。</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>Redis（Remote Dictionary Server）是一种开源的、基于内存的数据结构存储系统。它可以用作数据库、缓存和消息代理，支持多种数据结构，如字符串、哈希、列表、集合、有序集合、位图和HyperLogLog等。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-内存存储引擎-3"><a href="#1-内存存储引擎-3" class="headerlink" title="1.内存存储引擎"></a>1.内存存储引擎</h3><p>Redis主要基于内存操作，虽然也支持持久化存储。</p>
<h3 id="2-数据结构-3"><a href="#2-数据结构-3" class="headerlink" title="2.数据结构"></a>2.数据结构</h3><p>支持字符串、列表、集合、有序集合、哈希、位图、HyperLogLog等。</p>
<h3 id="3-持久化机制-3"><a href="#3-持久化机制-3" class="headerlink" title="3.持久化机制"></a>3.持久化机制</h3><p>包括RDB（Redis Database）快照和AOF（Append Only File）日志。</p>
<h3 id="4-发布-订阅-3"><a href="#4-发布-订阅-3" class="headerlink" title="4.发布&#x2F;订阅"></a>4.发布&#x2F;订阅</h3><p>消息通信机制。</p>
<h3 id="5-主从复制-3"><a href="#5-主从复制-3" class="headerlink" title="5.主从复制"></a>5.主从复制</h3><p>数据备份和高可用机制。</p>
<h3 id="6-Lua脚本-3"><a href="#6-Lua脚本-3" class="headerlink" title="6.Lua脚本"></a>6.Lua脚本</h3><p>内置脚本支持，允许原子化地执行脚本。</p>
<h3 id="7-集群模式-3"><a href="#7-集群模式-3" class="headerlink" title="7.集群模式"></a>7.集群模式</h3><p>分布式数据管理和负载均衡。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>1.提供快速的数据读写操作，提升应用性能。</p>
<p>2.通过缓存减少数据库负载，提高系统响应速度。</p>
<p>3.实现高效的消息通信和任务队列处理。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>Redis基于内存操作，利用数据结构优化存储和检索效率。持久化机制通过周期性地将内存数据保存到磁盘，或者记录每次写操作。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>一元运算符</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E4%B8%80%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<h1 id="一元运算符"><a href="#一元运算符" class="headerlink" title="一元运算符"></a>一元运算符</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>只有一个运算数的运算符</p>
<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.++</p>
<p>自增运算符</p>
<p>2.–</p>
<p>自减运算符</p>
<p>3.+</p>
<p>4.-</p>
<h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><p><img src="/../TyporaImage/image-20240514221141761.png" alt="image-20240514221141761"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.如果运算数不是运算符所要求的类型，那么js引擎会自动将运算数进行类型转换</p>
<p><img src="/../TyporaImage/image-20240514221543255.png" alt="image-20240514221543255"></p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>只有一个运算数的运算符</p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.++</p>
<p>自增运算符</p>
<p>2.–</p>
<p>自减运算符</p>
<p>3.+</p>
<p>4.-</p>
<h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><p><img src="/../TyporaImage/image-20240514221141761.png" alt="image-20240514221141761"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.如果运算数不是运算符所要求的类型，那么js引擎会自动将运算数进行类型转换</p>
<p><img src="/../TyporaImage/image-20240514221543255.png" alt="image-20240514221543255">算符</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>只有一个运算数的运算符</p>
<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.++</p>
<p>自增运算符</p>
<p>2.–</p>
<p>自减运算符</p>
<p>3.+</p>
<p>4.-</p>
<h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><p><img src="/../TyporaImage/image-20240514221141761.png" alt="image-20240514221141761"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.如果运算数不是运算符所要求的类型，那么js引擎会自动将运算数进行类型转换</p>
<p><img src="/../TyporaImage/image-20240514221543255.png" alt="image-20240514221543255"></p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>只有一个运算数的运算符</p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.++</p>
<p>自增运算符</p>
<p>2.–</p>
<p>自减运算符</p>
<p>3.+</p>
<p>4.-</p>
<h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><p><img src="/../TyporaImage/image-20240514221141761.png" alt="image-20240514221141761"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.如果运算数不是运算符所要求的类型，那么js引擎会自动将运算数进行类型转换</p>
<p><img src="/../TyporaImage/image-20240514221543255.png" alt="image-20240514221543255"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>redis—数据结构</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/redis%E2%80%94%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="redis的数据结构"><a href="#redis的数据结构" class="headerlink" title="redis的数据结构"></a>redis的数据结构</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.字符串</p>
<p>2.哈希</p>
<p>3.列表</p>
<p>4.集合</p>
<p>5.有序集合</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/./../TyporaImage/image-20240724205203462.png" alt="image-20240724205203462"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.字符串</p>
<p>2.哈希</p>
<p>3.列表</p>
<p>4.集合</p>
<p>5.有序集合</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/./../TyporaImage/image-20240724205203462.png" alt="image-20240724205203462">结构</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.字符串</p>
<p>2.哈希</p>
<p>3.列表</p>
<p>4.集合</p>
<p>5.有序集合</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/./../TyporaImage/image-20240724205203462.png" alt="image-20240724205203462"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.字符串</p>
<p>2.哈希</p>
<p>3.列表</p>
<p>4.集合</p>
<p>5.有序集合</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/./../TyporaImage/image-20240724205203462.png" alt="image-20240724205203462"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>三层架构</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<h1 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>三层架构（Three-tier Architecture）是一种软件设计模式，将应用程序分为三个逻辑层次：表示层（Presentation Layer）、业务逻辑层（Business Logic Layer）和数据访问层（Data Access Layer）。这种设计模式的目的是分离关注点，提高系统的可维护性和可扩展性。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-表示层（Presentation-Layer）"><a href="#1-表示层（Presentation-Layer）" class="headerlink" title="1.表示层（Presentation Layer）"></a>1.表示层（Presentation Layer）</h3><p>负责用户界面和用户交互，通常包括Web页面、桌面应用程序的前端部分。</p>
<h3 id="2-业务逻辑层（Business-Logic-Layer）"><a href="#2-业务逻辑层（Business-Logic-Layer）" class="headerlink" title="2.业务逻辑层（Business Logic Layer）"></a>2.业务逻辑层（Business Logic Layer）</h3><p>处理应用程序的核心功能和业务规则，包含应用程序的主要逻辑和流程控制。</p>
<h3 id="3-数据访问层（Data-Access-Layer）"><a href="#3-数据访问层（Data-Access-Layer）" class="headerlink" title="3.数据访问层（Data Access Layer）"></a>3.数据访问层（Data Access Layer）</h3><p>负责与数据库或其他数据存储进行交互，执行数据的CRUD（创建、读取、更新、删除）操作。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-表示层"><a href="#1-表示层" class="headerlink" title="1.表示层"></a>1.表示层</h3><p>用户界面组件，如HTML、CSS、JavaScript、JSP、Servlet、前端框架（如React、Angular、Vue）。</p>
<h3 id="2-业务逻辑层"><a href="#2-业务逻辑层" class="headerlink" title="2.业务逻辑层"></a>2.业务逻辑层</h3><p>服务、控制器、业务逻辑类和方法。</p>
<h3 id="3-数据访问层"><a href="#3-数据访问层" class="headerlink" title="3.数据访问层"></a>3.数据访问层</h3><p>数据库连接、DAO（Data Access Objects）、ORM（Object-Relational Mapping）框架（如Hibernate）。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过分离不同的逻辑层次，简化复杂系统的设计和开发，提高代码的可维护性和可扩展性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>物理描述</p>
<p>三层架构通常部署在不同的物理服务器上，例如前端服务器、应用服务器和数据库服务器。</p>
<p>数学描述</p>
<p>可以用依赖关系图来表示各层次之间的关系，其中表示层依赖业务逻辑层，业务逻辑层依赖数据访问层。</p>
<p><img src="/./../TyporaImage/image-20240710164925806.png" alt="image-20240710164925806">## 定义</p>
<p>三层架构（Three-tier Architecture）是一种软件设计模式，将应用程序分为三个逻辑层次：表示层（Presentation Layer）、业务逻辑层（Business Logic Layer）和数据访问层（Data Access Layer）。这种设计模式的目的是分离关注点，提高系统的可维护性和可扩展性。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-表示层（Presentation-Layer）-1"><a href="#1-表示层（Presentation-Layer）-1" class="headerlink" title="1.表示层（Presentation Layer）"></a>1.表示层（Presentation Layer）</h3><p>负责用户界面和用户交互，通常包括Web页面、桌面应用程序的前端部分。</p>
<h3 id="2-业务逻辑层（Business-Logic-Layer）-1"><a href="#2-业务逻辑层（Business-Logic-Layer）-1" class="headerlink" title="2.业务逻辑层（Business Logic Layer）"></a>2.业务逻辑层（Business Logic Layer）</h3><p>处理应用程序的核心功能和业务规则，包含应用程序的主要逻辑和流程控制。</p>
<h3 id="3-数据访问层（Data-Access-Layer）-1"><a href="#3-数据访问层（Data-Access-Layer）-1" class="headerlink" title="3.数据访问层（Data Access Layer）"></a>3.数据访问层（Data Access Layer）</h3><p>负责与数据库或其他数据存储进行交互，执行数据的CRUD（创建、读取、更新、删除）操作。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-表示层-1"><a href="#1-表示层-1" class="headerlink" title="1.表示层"></a>1.表示层</h3><p>用户界面组件，如HTML、CSS、JavaScript、JSP、Servlet、前端框架（如React、Angular、Vue）。</p>
<h3 id="2-业务逻辑层-1"><a href="#2-业务逻辑层-1" class="headerlink" title="2.业务逻辑层"></a>2.业务逻辑层</h3><p>服务、控制器、业务逻辑类和方法。</p>
<h3 id="3-数据访问层-1"><a href="#3-数据访问层-1" class="headerlink" title="3.数据访问层"></a>3.数据访问层</h3><p>数据库连接、DAO（Data Access Objects）、ORM（Object-Relational Mapping）框架（如Hibernate）。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>通过分离不同的逻辑层次，简化复杂系统的设计和开发，提高代码的可维护性和可扩展性。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>物理描述</p>
<p>三层架构通常部署在不同的物理服务器上，例如前端服务器、应用服务器和数据库服务器。</p>
<p>数学描述</p>
<p>可以用依赖关系图来表示各层次之间的关系，其中表示层依赖业务逻辑层，业务逻辑层依赖数据访问层。</p>
<p><img src="/./../TyporaImage/image-20240710164925806.png" alt="image-20240710164925806">架构</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>三层架构（Three-tier Architecture）是一种软件设计模式，将应用程序分为三个逻辑层次：表示层（Presentation Layer）、业务逻辑层（Business Logic Layer）和数据访问层（Data Access Layer）。这种设计模式的目的是分离关注点，提高系统的可维护性和可扩展性。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-表示层（Presentation-Layer）-2"><a href="#1-表示层（Presentation-Layer）-2" class="headerlink" title="1.表示层（Presentation Layer）"></a>1.表示层（Presentation Layer）</h3><p>负责用户界面和用户交互，通常包括Web页面、桌面应用程序的前端部分。</p>
<h3 id="2-业务逻辑层（Business-Logic-Layer）-2"><a href="#2-业务逻辑层（Business-Logic-Layer）-2" class="headerlink" title="2.业务逻辑层（Business Logic Layer）"></a>2.业务逻辑层（Business Logic Layer）</h3><p>处理应用程序的核心功能和业务规则，包含应用程序的主要逻辑和流程控制。</p>
<h3 id="3-数据访问层（Data-Access-Layer）-2"><a href="#3-数据访问层（Data-Access-Layer）-2" class="headerlink" title="3.数据访问层（Data Access Layer）"></a>3.数据访问层（Data Access Layer）</h3><p>负责与数据库或其他数据存储进行交互，执行数据的CRUD（创建、读取、更新、删除）操作。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-表示层-2"><a href="#1-表示层-2" class="headerlink" title="1.表示层"></a>1.表示层</h3><p>用户界面组件，如HTML、CSS、JavaScript、JSP、Servlet、前端框架（如React、Angular、Vue）。</p>
<h3 id="2-业务逻辑层-2"><a href="#2-业务逻辑层-2" class="headerlink" title="2.业务逻辑层"></a>2.业务逻辑层</h3><p>服务、控制器、业务逻辑类和方法。</p>
<h3 id="3-数据访问层-2"><a href="#3-数据访问层-2" class="headerlink" title="3.数据访问层"></a>3.数据访问层</h3><p>数据库连接、DAO（Data Access Objects）、ORM（Object-Relational Mapping）框架（如Hibernate）。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>通过分离不同的逻辑层次，简化复杂系统的设计和开发，提高代码的可维护性和可扩展性。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>物理描述</p>
<p>三层架构通常部署在不同的物理服务器上，例如前端服务器、应用服务器和数据库服务器。</p>
<p>数学描述</p>
<p>可以用依赖关系图来表示各层次之间的关系，其中表示层依赖业务逻辑层，业务逻辑层依赖数据访问层。</p>
<p><img src="/./../TyporaImage/image-20240710164925806.png" alt="image-20240710164925806">## 定义</p>
<p>三层架构（Three-tier Architecture）是一种软件设计模式，将应用程序分为三个逻辑层次：表示层（Presentation Layer）、业务逻辑层（Business Logic Layer）和数据访问层（Data Access Layer）。这种设计模式的目的是分离关注点，提高系统的可维护性和可扩展性。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-表示层（Presentation-Layer）-3"><a href="#1-表示层（Presentation-Layer）-3" class="headerlink" title="1.表示层（Presentation Layer）"></a>1.表示层（Presentation Layer）</h3><p>负责用户界面和用户交互，通常包括Web页面、桌面应用程序的前端部分。</p>
<h3 id="2-业务逻辑层（Business-Logic-Layer）-3"><a href="#2-业务逻辑层（Business-Logic-Layer）-3" class="headerlink" title="2.业务逻辑层（Business Logic Layer）"></a>2.业务逻辑层（Business Logic Layer）</h3><p>处理应用程序的核心功能和业务规则，包含应用程序的主要逻辑和流程控制。</p>
<h3 id="3-数据访问层（Data-Access-Layer）-3"><a href="#3-数据访问层（Data-Access-Layer）-3" class="headerlink" title="3.数据访问层（Data Access Layer）"></a>3.数据访问层（Data Access Layer）</h3><p>负责与数据库或其他数据存储进行交互，执行数据的CRUD（创建、读取、更新、删除）操作。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-表示层-3"><a href="#1-表示层-3" class="headerlink" title="1.表示层"></a>1.表示层</h3><p>用户界面组件，如HTML、CSS、JavaScript、JSP、Servlet、前端框架（如React、Angular、Vue）。</p>
<h3 id="2-业务逻辑层-3"><a href="#2-业务逻辑层-3" class="headerlink" title="2.业务逻辑层"></a>2.业务逻辑层</h3><p>服务、控制器、业务逻辑类和方法。</p>
<h3 id="3-数据访问层-3"><a href="#3-数据访问层-3" class="headerlink" title="3.数据访问层"></a>3.数据访问层</h3><p>数据库连接、DAO（Data Access Objects）、ORM（Object-Relational Mapping）框架（如Hibernate）。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>通过分离不同的逻辑层次，简化复杂系统的设计和开发，提高代码的可维护性和可扩展性。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>物理描述</p>
<p>三层架构通常部署在不同的物理服务器上，例如前端服务器、应用服务器和数据库服务器。</p>
<p>数学描述</p>
<p>可以用依赖关系图来表示各层次之间的关系，其中表示层依赖业务逻辑层，业务逻辑层依赖数据访问层。</p>
<p><img src="/./../TyporaImage/image-20240710164925806.png" alt="image-20240710164925806"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>三元运算符</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E4%B8%89%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<h1 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>？：</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240515205345625.png" alt="image-20240515205345625"></p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>？：</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240515205345625.png" alt="image-20240515205345625">算符</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>？：</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240515205345625.png" alt="image-20240515205345625"></p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>？：</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240515205345625.png" alt="image-20240515205345625"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>事件</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E4%BA%8B%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>本质上是一个操作。</p>
<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-点击事件"><a href="#1-点击事件" class="headerlink" title="1.点击事件"></a>1.点击事件</h4><p>onclick：单击事件</p>
<p>ondblclick：双击事件</p>
<h4 id="2-焦点事件"><a href="#2-焦点事件" class="headerlink" title="2.焦点事件"></a>2.焦点事件</h4><p>onblur：失去焦点</p>
<p>onfocus：元素获得焦点</p>
<h4 id="3-加载事件"><a href="#3-加载事件" class="headerlink" title="3.加载事件"></a>3.加载事件</h4><p> onload：一张 页面或者一幅图片加载完成</p>
<h4 id="4-鼠标事件"><a href="#4-鼠标事件" class="headerlink" title="4.鼠标事件"></a>4.鼠标事件</h4><p>onmousedown：鼠标被按下</p>
<p>onmousemove：鼠标被移动</p>
<p>onmouseout：鼠标从某元素移开</p>
<p>onmouseover：鼠标移到某元素之上</p>
<h4 id="5-键盘事件"><a href="#5-键盘事件" class="headerlink" title="5.键盘事件"></a>5.键盘事件</h4><p>onkeydown：某个按键被按下</p>
<p>onkeyup：某个按键被松开</p>
<p>onkeypress：某个按键被按下且松开</p>
<h4 id="6-选择和改变"><a href="#6-选择和改变" class="headerlink" title="6.选择和改变"></a>6.选择和改变</h4><p>onchange：域的内容被改变</p>
<p>onselect：文本域被选中</p>
<h4 id="7-表单事件"><a href="#7-表单事件" class="headerlink" title="7.表单事件"></a>7.表单事件</h4><p>onsubmit：确认按钮</p>
<p>onreset：重置按钮被点击</p>
<h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.获取对象</p>
<p>2.绑定事件</p>
<p>通过指定事件属性，设置一个函数。函数就代表了一个事件。</p>
<p>1.鼠标事件</p>
<p>定义方法时，定义一个形参来接收event对象</p>
<p>event对象的属性button可以获取鼠标按钮键被点击。</p>
<p>2.表单事件</p>
<p><img src="/../TyporaImage/image-20240519154514488.png" alt="image-20240519154514488"></p>
<p><img src="/../TyporaImage/image-20240519154618118.png" alt="image-20240519154618118"></p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h3><p>某些组件被执行了某些操作后，出发了某些代码的执行。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.有一个所有页面加载完之后，再去执行的方法，即window.onload</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>本质上是一个操作。</p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-点击事件-1"><a href="#1-点击事件-1" class="headerlink" title="1.点击事件"></a>1.点击事件</h4><p>onclick：单击事件</p>
<p>ondblclick：双击事件</p>
<h4 id="2-焦点事件-1"><a href="#2-焦点事件-1" class="headerlink" title="2.焦点事件"></a>2.焦点事件</h4><p>onblur：失去焦点</p>
<p>onfocus：元素获得焦点</p>
<h4 id="3-加载事件-1"><a href="#3-加载事件-1" class="headerlink" title="3.加载事件"></a>3.加载事件</h4><p> onload：一张 页面或者一幅图片加载完成</p>
<h4 id="4-鼠标事件-1"><a href="#4-鼠标事件-1" class="headerlink" title="4.鼠标事件"></a>4.鼠标事件</h4><p>onmousedown：鼠标被按下</p>
<p>onmousemove：鼠标被移动</p>
<p>onmouseout：鼠标从某元素移开</p>
<p>onmouseover：鼠标移到某元素之上</p>
<h4 id="5-键盘事件-1"><a href="#5-键盘事件-1" class="headerlink" title="5.键盘事件"></a>5.键盘事件</h4><p>onkeydown：某个按键被按下</p>
<p>onkeyup：某个按键被松开</p>
<p>onkeypress：某个按键被按下且松开</p>
<h4 id="6-选择和改变-1"><a href="#6-选择和改变-1" class="headerlink" title="6.选择和改变"></a>6.选择和改变</h4><p>onchange：域的内容被改变</p>
<p>onselect：文本域被选中</p>
<h4 id="7-表单事件-1"><a href="#7-表单事件-1" class="headerlink" title="7.表单事件"></a>7.表单事件</h4><p>onsubmit：确认按钮</p>
<p>onreset：重置按钮被点击</p>
<h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.获取对象</p>
<p>2.绑定事件</p>
<p>通过指定事件属性，设置一个函数。函数就代表了一个事件。</p>
<p>1.鼠标事件</p>
<p>定义方法时，定义一个形参来接收event对象</p>
<p>event对象的属性button可以获取鼠标按钮键被点击。</p>
<p>2.表单事件</p>
<p><img src="/../TyporaImage/image-20240519154514488.png" alt="image-20240519154514488"></p>
<p><img src="/../TyporaImage/image-20240519154618118.png" alt="image-20240519154618118"></p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的：-1"><a href="#目的：-1" class="headerlink" title="目的："></a>目的：</h3><p>某些组件被执行了某些操作后，出发了某些代码的执行。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.有一个所有页面加载完之后，再去执行的方法，即window.onload事件</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>本质上是一个操作。</p>
<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-点击事件-2"><a href="#1-点击事件-2" class="headerlink" title="1.点击事件"></a>1.点击事件</h4><p>onclick：单击事件</p>
<p>ondblclick：双击事件</p>
<h4 id="2-焦点事件-2"><a href="#2-焦点事件-2" class="headerlink" title="2.焦点事件"></a>2.焦点事件</h4><p>onblur：失去焦点</p>
<p>onfocus：元素获得焦点</p>
<h4 id="3-加载事件-2"><a href="#3-加载事件-2" class="headerlink" title="3.加载事件"></a>3.加载事件</h4><p> onload：一张 页面或者一幅图片加载完成</p>
<h4 id="4-鼠标事件-2"><a href="#4-鼠标事件-2" class="headerlink" title="4.鼠标事件"></a>4.鼠标事件</h4><p>onmousedown：鼠标被按下</p>
<p>onmousemove：鼠标被移动</p>
<p>onmouseout：鼠标从某元素移开</p>
<p>onmouseover：鼠标移到某元素之上</p>
<h4 id="5-键盘事件-2"><a href="#5-键盘事件-2" class="headerlink" title="5.键盘事件"></a>5.键盘事件</h4><p>onkeydown：某个按键被按下</p>
<p>onkeyup：某个按键被松开</p>
<p>onkeypress：某个按键被按下且松开</p>
<h4 id="6-选择和改变-2"><a href="#6-选择和改变-2" class="headerlink" title="6.选择和改变"></a>6.选择和改变</h4><p>onchange：域的内容被改变</p>
<p>onselect：文本域被选中</p>
<h4 id="7-表单事件-2"><a href="#7-表单事件-2" class="headerlink" title="7.表单事件"></a>7.表单事件</h4><p>onsubmit：确认按钮</p>
<p>onreset：重置按钮被点击</p>
<h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.获取对象</p>
<p>2.绑定事件</p>
<p>通过指定事件属性，设置一个函数。函数就代表了一个事件。</p>
<p>1.鼠标事件</p>
<p>定义方法时，定义一个形参来接收event对象</p>
<p>event对象的属性button可以获取鼠标按钮键被点击。</p>
<p>2.表单事件</p>
<p><img src="/../TyporaImage/image-20240519154514488.png" alt="image-20240519154514488"></p>
<p><img src="/../TyporaImage/image-20240519154618118.png" alt="image-20240519154618118"></p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的：-2"><a href="#目的：-2" class="headerlink" title="目的："></a>目的：</h3><p>某些组件被执行了某些操作后，出发了某些代码的执行。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.有一个所有页面加载完之后，再去执行的方法，即window.onload</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>本质上是一个操作。</p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-点击事件-3"><a href="#1-点击事件-3" class="headerlink" title="1.点击事件"></a>1.点击事件</h4><p>onclick：单击事件</p>
<p>ondblclick：双击事件</p>
<h4 id="2-焦点事件-3"><a href="#2-焦点事件-3" class="headerlink" title="2.焦点事件"></a>2.焦点事件</h4><p>onblur：失去焦点</p>
<p>onfocus：元素获得焦点</p>
<h4 id="3-加载事件-3"><a href="#3-加载事件-3" class="headerlink" title="3.加载事件"></a>3.加载事件</h4><p> onload：一张 页面或者一幅图片加载完成</p>
<h4 id="4-鼠标事件-3"><a href="#4-鼠标事件-3" class="headerlink" title="4.鼠标事件"></a>4.鼠标事件</h4><p>onmousedown：鼠标被按下</p>
<p>onmousemove：鼠标被移动</p>
<p>onmouseout：鼠标从某元素移开</p>
<p>onmouseover：鼠标移到某元素之上</p>
<h4 id="5-键盘事件-3"><a href="#5-键盘事件-3" class="headerlink" title="5.键盘事件"></a>5.键盘事件</h4><p>onkeydown：某个按键被按下</p>
<p>onkeyup：某个按键被松开</p>
<p>onkeypress：某个按键被按下且松开</p>
<h4 id="6-选择和改变-3"><a href="#6-选择和改变-3" class="headerlink" title="6.选择和改变"></a>6.选择和改变</h4><p>onchange：域的内容被改变</p>
<p>onselect：文本域被选中</p>
<h4 id="7-表单事件-3"><a href="#7-表单事件-3" class="headerlink" title="7.表单事件"></a>7.表单事件</h4><p>onsubmit：确认按钮</p>
<p>onreset：重置按钮被点击</p>
<h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.获取对象</p>
<p>2.绑定事件</p>
<p>通过指定事件属性，设置一个函数。函数就代表了一个事件。</p>
<p>1.鼠标事件</p>
<p>定义方法时，定义一个形参来接收event对象</p>
<p>event对象的属性button可以获取鼠标按钮键被点击。</p>
<p>2.表单事件</p>
<p><img src="/../TyporaImage/image-20240519154514488.png" alt="image-20240519154514488"></p>
<p><img src="/../TyporaImage/image-20240519154618118.png" alt="image-20240519154618118"></p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的：-3"><a href="#目的：-3" class="headerlink" title="目的："></a>目的：</h3><p>某些组件被执行了某些操作后，出发了某些代码的执行。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.有一个所有页面加载完之后，再去执行的方法，即window.onload</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>事件监听机制</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<h1 id="事件监听机制"><a href="#事件监听机制" class="headerlink" title="事件监听机制"></a>事件监听机制</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>本质上是一 个操作的连带反应。</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>使用方法</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><p>某些操作</p>
<h3 id="事件源"><a href="#事件源" class="headerlink" title="事件源"></a>事件源</h3><p>即组件。如，按钮、文本框…….</p>
<h3 id="监听器"><a href="#监听器" class="headerlink" title="监听器"></a>监听器</h3><p>代码</p>
<h3 id="注册监听"><a href="#注册监听" class="headerlink" title="注册监听"></a>注册监听</h3><p>将事件源、事件、监听器结合在一起。当事件源上发生了某个事件，则触发执行某个监听器代码。</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>本质上是一 个操作的连带反应。</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><p>使用方法</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="事件-1"><a href="#事件-1" class="headerlink" title="事件"></a>事件</h3><p>某些操作</p>
<h3 id="事件源-1"><a href="#事件源-1" class="headerlink" title="事件源"></a>事件源</h3><p>即组件。如，按钮、文本框…….</p>
<h3 id="监听器-1"><a href="#监听器-1" class="headerlink" title="监听器"></a>监听器</h3><p>代码</p>
<h3 id="注册监听-1"><a href="#注册监听-1" class="headerlink" title="注册监听"></a>注册监听</h3><p>将事件源、事件、监听器结合在一起。当事件源上发生了某个事件，则触发执行某个监听器代码。听机制</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>本质上是一 个操作的连带反应。</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><p>使用方法</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="事件-2"><a href="#事件-2" class="headerlink" title="事件"></a>事件</h3><p>某些操作</p>
<h3 id="事件源-2"><a href="#事件源-2" class="headerlink" title="事件源"></a>事件源</h3><p>即组件。如，按钮、文本框…….</p>
<h3 id="监听器-2"><a href="#监听器-2" class="headerlink" title="监听器"></a>监听器</h3><p>代码</p>
<h3 id="注册监听-2"><a href="#注册监听-2" class="headerlink" title="注册监听"></a>注册监听</h3><p>将事件源、事件、监听器结合在一起。当事件源上发生了某个事件，则触发执行某个监听器代码。</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>本质上是一 个操作的连带反应。</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><p>使用方法</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="事件-3"><a href="#事件-3" class="headerlink" title="事件"></a>事件</h3><p>某些操作</p>
<h3 id="事件源-3"><a href="#事件源-3" class="headerlink" title="事件源"></a>事件源</h3><p>即组件。如，按钮、文本框…….</p>
<h3 id="监听器-3"><a href="#监听器-3" class="headerlink" title="监听器"></a>监听器</h3><p>代码</p>
<h3 id="注册监听-3"><a href="#注册监听-3" class="headerlink" title="注册监听"></a>注册监听</h3><p>将事件源、事件、监听器结合在一起。当事件源上发生了某个事件，则触发执行某个监听器代码。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>事务</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E4%BA%8B%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>数据库管理系统执行过程中的一个逻辑单位，它由一系列操作组成，这些操作要么全部执行成功，要么全部不执行，保证数据的一致性和完整性。</p>
<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="事务提交的两种方式"><a href="#事务提交的两种方式" class="headerlink" title="事务提交的两种方式"></a>事务提交的两种方式</h4><p> 1.自动提交：</p>
<p>一条DML（增删改）语句，会自动提交一次。    – MySQL就是默认自动提交的。</p>
<p>2.手动提交：</p>
<p>需要先开启事务再提交。          – Oracle就是默认手动提交的。</p>
<h4 id="事物的隔离级别"><a href="#事物的隔离级别" class="headerlink" title="事物的隔离级别"></a>事物的隔离级别</h4><p>1.read uncommitted：读未提交    </p>
<p>  存在的问题：脏读、不可重复读、幻读</p>
<p>2.read  committed：读已经提交</p>
<p>存在的问题：不可重复读、幻读         <strong>– 隔离级别从低到高，但是效率越来越低</strong></p>
<p>3.repeatable read ：可重复读</p>
<p>存在的问题：幻读</p>
<p>4.serializeable：可串行化</p>
<p>可以解决所有的问题</p>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1.原子性：是不可分割的最小操作单位，要么同时成功要么，同时失败。</p>
<p>2.持久性：当事务提交或者回滚后，数据库都会持久化的保存数据。</p>
<p>3.隔离性：多个事务操作之间相互独立。</p>
<p>4.一致性：事务操作前后，数据总量不变。</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="事务的操作"><a href="#事务的操作" class="headerlink" title="事务的操作"></a>事务的操作</h3><p>1.开启事务</p>
<p>start  transaction；</p>
<p>2.回滚</p>
<p>rollback；</p>
<p>3.提交</p>
<p>commit；</p>
<h3 id="事务的默认提交方式"><a href="#事务的默认提交方式" class="headerlink" title="事务的默认提交方式"></a>事务的默认提交方式</h3><h4 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h4><p>select  @@autocommit；  – 结果中，1代表自动提交，0代表手动提交。</p>
<h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><p>set   @@autocommit &#x3D; 0；</p>
<h3 id="事务的隔离级别"><a href="#事务的隔离级别" class="headerlink" title="事务的隔离级别"></a>事务的隔离级别</h3><p>查询</p>
<p>select  @@tx_isolation；</p>
<p>修改</p>
<p>set global transaction  isolation level  级别字符串；</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><p>事务的目的：</p>
<p>事务的隔离级别的目的：是解决脏读、不可重复读、幻读的问题。</p>
<h2 id="相关的知识点"><a href="#相关的知识点" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><p>1.脏读：一个事务中，读取到另一个事务中还没来得及提交的数据。</p>
<p>2.不可重复读：同一个事务中，两次读到的数据不一样。</p>
<p>3.幻读：一个事务操作（DML）数据表中所有数据，另一个表中添加了一条数据，则第一个事务查询不到自己的修改。</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>数据库管理系统执行过程中的一个逻辑单位，它由一系列操作组成，这些操作要么全部执行成功，要么全部不执行，保证数据的一致性和完整性。</p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="事务提交的两种方式-1"><a href="#事务提交的两种方式-1" class="headerlink" title="事务提交的两种方式"></a>事务提交的两种方式</h4><p> 1.自动提交：</p>
<p>一条DML（增删改）语句，会自动提交一次。    – MySQL就是默认自动提交的。</p>
<p>2.手动提交：</p>
<p>需要先开启事务再提交。          – Oracle就是默认手动提交的。</p>
<h4 id="事物的隔离级别-1"><a href="#事物的隔离级别-1" class="headerlink" title="事物的隔离级别"></a>事物的隔离级别</h4><p>1.read uncommitted：读未提交    </p>
<p>  存在的问题：脏读、不可重复读、幻读</p>
<p>2.read  committed：读已经提交</p>
<p>存在的问题：不可重复读、幻读         <strong>– 隔离级别从低到高，但是效率越来越低</strong></p>
<p>3.repeatable read ：可重复读</p>
<p>存在的问题：幻读</p>
<p>4.serializeable：可串行化</p>
<p>可以解决所有的问题</p>
<h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p>1.原子性：是不可分割的最小操作单位，要么同时成功要么，同时失败。</p>
<p>2.持久性：当事务提交或者回滚后，数据库都会持久化的保存数据。</p>
<p>3.隔离性：多个事务操作之间相互独立。</p>
<p>4.一致性：事务操作前后，数据总量不变。</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="事务的操作-1"><a href="#事务的操作-1" class="headerlink" title="事务的操作"></a>事务的操作</h3><p>1.开启事务</p>
<p>start  transaction；</p>
<p>2.回滚</p>
<p>rollback；</p>
<p>3.提交</p>
<p>commit；</p>
<h3 id="事务的默认提交方式-1"><a href="#事务的默认提交方式-1" class="headerlink" title="事务的默认提交方式"></a>事务的默认提交方式</h3><h4 id="查看-1"><a href="#查看-1" class="headerlink" title="查看"></a>查看</h4><p>select  @@autocommit；  – 结果中，1代表自动提交，0代表手动提交。</p>
<h4 id="修改-1"><a href="#修改-1" class="headerlink" title="修改"></a>修改</h4><p>set   @@autocommit &#x3D; 0；</p>
<h3 id="事务的隔离级别-1"><a href="#事务的隔离级别-1" class="headerlink" title="事务的隔离级别"></a>事务的隔离级别</h3><p>查询</p>
<p>select  @@tx_isolation；</p>
<p>修改</p>
<p>set global transaction  isolation level  级别字符串；</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><p>事务的目的：</p>
<p>事务的隔离级别的目的：是解决脏读、不可重复读、幻读的问题。</p>
<h2 id="相关的知识点-1"><a href="#相关的知识点-1" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><p>1.脏读：一个事务中，读取到另一个事务中还没来得及提交的数据。</p>
<p>2.不可重复读：同一个事务中，两次读到的数据不一样。</p>
<p>3.幻读：一个事务操作（DML）数据表中所有数据，另一个表中添加了一条数据，则第一个事务查询不到自己的修改。事务</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>数据库管理系统执行过程中的一个逻辑单位，它由一系列操作组成，这些操作要么全部执行成功，要么全部不执行，保证数据的一致性和完整性。</p>
<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="事务提交的两种方式-2"><a href="#事务提交的两种方式-2" class="headerlink" title="事务提交的两种方式"></a>事务提交的两种方式</h4><p> 1.自动提交：</p>
<p>一条DML（增删改）语句，会自动提交一次。    – MySQL就是默认自动提交的。</p>
<p>2.手动提交：</p>
<p>需要先开启事务再提交。          – Oracle就是默认手动提交的。</p>
<h4 id="事物的隔离级别-2"><a href="#事物的隔离级别-2" class="headerlink" title="事物的隔离级别"></a>事物的隔离级别</h4><p>1.read uncommitted：读未提交    </p>
<p>  存在的问题：脏读、不可重复读、幻读</p>
<p>2.read  committed：读已经提交</p>
<p>存在的问题：不可重复读、幻读         <strong>– 隔离级别从低到高，但是效率越来越低</strong></p>
<p>3.repeatable read ：可重复读</p>
<p>存在的问题：幻读</p>
<p>4.serializeable：可串行化</p>
<p>可以解决所有的问题</p>
<h3 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h3><p>1.原子性：是不可分割的最小操作单位，要么同时成功要么，同时失败。</p>
<p>2.持久性：当事务提交或者回滚后，数据库都会持久化的保存数据。</p>
<p>3.隔离性：多个事务操作之间相互独立。</p>
<p>4.一致性：事务操作前后，数据总量不变。</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="事务的操作-2"><a href="#事务的操作-2" class="headerlink" title="事务的操作"></a>事务的操作</h3><p>1.开启事务</p>
<p>start  transaction；</p>
<p>2.回滚</p>
<p>rollback；</p>
<p>3.提交</p>
<p>commit；</p>
<h3 id="事务的默认提交方式-2"><a href="#事务的默认提交方式-2" class="headerlink" title="事务的默认提交方式"></a>事务的默认提交方式</h3><h4 id="查看-2"><a href="#查看-2" class="headerlink" title="查看"></a>查看</h4><p>select  @@autocommit；  – 结果中，1代表自动提交，0代表手动提交。</p>
<h4 id="修改-2"><a href="#修改-2" class="headerlink" title="修改"></a>修改</h4><p>set   @@autocommit &#x3D; 0；</p>
<h3 id="事务的隔离级别-2"><a href="#事务的隔离级别-2" class="headerlink" title="事务的隔离级别"></a>事务的隔离级别</h3><p>查询</p>
<p>select  @@tx_isolation；</p>
<p>修改</p>
<p>set global transaction  isolation level  级别字符串；</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><p>事务的目的：</p>
<p>事务的隔离级别的目的：是解决脏读、不可重复读、幻读的问题。</p>
<h2 id="相关的知识点-2"><a href="#相关的知识点-2" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><p>1.脏读：一个事务中，读取到另一个事务中还没来得及提交的数据。</p>
<p>2.不可重复读：同一个事务中，两次读到的数据不一样。</p>
<p>3.幻读：一个事务操作（DML）数据表中所有数据，另一个表中添加了一条数据，则第一个事务查询不到自己的修改。</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>数据库管理系统执行过程中的一个逻辑单位，它由一系列操作组成，这些操作要么全部执行成功，要么全部不执行，保证数据的一致性和完整性。</p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="事务提交的两种方式-3"><a href="#事务提交的两种方式-3" class="headerlink" title="事务提交的两种方式"></a>事务提交的两种方式</h4><p> 1.自动提交：</p>
<p>一条DML（增删改）语句，会自动提交一次。    – MySQL就是默认自动提交的。</p>
<p>2.手动提交：</p>
<p>需要先开启事务再提交。          – Oracle就是默认手动提交的。</p>
<h4 id="事物的隔离级别-3"><a href="#事物的隔离级别-3" class="headerlink" title="事物的隔离级别"></a>事物的隔离级别</h4><p>1.read uncommitted：读未提交    </p>
<p>  存在的问题：脏读、不可重复读、幻读</p>
<p>2.read  committed：读已经提交</p>
<p>存在的问题：不可重复读、幻读         <strong>– 隔离级别从低到高，但是效率越来越低</strong></p>
<p>3.repeatable read ：可重复读</p>
<p>存在的问题：幻读</p>
<p>4.serializeable：可串行化</p>
<p>可以解决所有的问题</p>
<h3 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h3><p>1.原子性：是不可分割的最小操作单位，要么同时成功要么，同时失败。</p>
<p>2.持久性：当事务提交或者回滚后，数据库都会持久化的保存数据。</p>
<p>3.隔离性：多个事务操作之间相互独立。</p>
<p>4.一致性：事务操作前后，数据总量不变。</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="事务的操作-3"><a href="#事务的操作-3" class="headerlink" title="事务的操作"></a>事务的操作</h3><p>1.开启事务</p>
<p>start  transaction；</p>
<p>2.回滚</p>
<p>rollback；</p>
<p>3.提交</p>
<p>commit；</p>
<h3 id="事务的默认提交方式-3"><a href="#事务的默认提交方式-3" class="headerlink" title="事务的默认提交方式"></a>事务的默认提交方式</h3><h4 id="查看-3"><a href="#查看-3" class="headerlink" title="查看"></a>查看</h4><p>select  @@autocommit；  – 结果中，1代表自动提交，0代表手动提交。</p>
<h4 id="修改-3"><a href="#修改-3" class="headerlink" title="修改"></a>修改</h4><p>set   @@autocommit &#x3D; 0；</p>
<h3 id="事务的隔离级别-3"><a href="#事务的隔离级别-3" class="headerlink" title="事务的隔离级别"></a>事务的隔离级别</h3><p>查询</p>
<p>select  @@tx_isolation；</p>
<p>修改</p>
<p>set global transaction  isolation level  级别字符串；</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><p>事务的目的：</p>
<p>事务的隔离级别的目的：是解决脏读、不可重复读、幻读的问题。</p>
<h2 id="相关的知识点-3"><a href="#相关的知识点-3" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><p>1.脏读：一个事务中，读取到另一个事务中还没来得及提交的数据。</p>
<p>2.不可重复读：同一个事务中，两次读到的数据不一样。</p>
<p>3.幻读：一个事务操作（DML）数据表中所有数据，另一个表中添加了一条数据，则第一个事务查询不到自己的修改。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>二元运算符</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E4%BA%8C%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<h1 id="二元运算符"><a href="#二元运算符" class="headerlink" title="二元运算符"></a>二元运算符</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><h4 id="1-算数运算符"><a href="#1-算数运算符" class="headerlink" title="1.算数运算符"></a>1.算数运算符</h4><p>+、-、*、&#x2F;              – 等等</p>
<h4 id="2-赋值运算符"><a href="#2-赋值运算符" class="headerlink" title="2.赋值运算符"></a>2.赋值运算符</h4><p>&#x3D;、+&#x3D;、-&#x3D;              –等等</p>
<h4 id="3-比较运算符"><a href="#3-比较运算符" class="headerlink" title="3.比较运算符"></a>3.比较运算符</h4><p>&#x3D;&#x3D;&#x3D;、&#x3D;&#x3D;、&gt;、&lt;、          –等等</p>
<h4 id="4-逻辑运算符"><a href="#4-逻辑运算符" class="headerlink" title="4.逻辑运算符"></a>4.逻辑运算符</h4><p>&amp;&amp;、||、！                –  ！运算符比较特殊，是一元运算符。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h3><h4 id="1-比较运算符"><a href="#1-比较运算符" class="headerlink" title="1.比较运算符"></a>1.比较运算符</h4><h5 id="类型相同：直接比较"><a href="#类型相同：直接比较" class="headerlink" title="类型相同：直接比较"></a>类型相同：直接比较</h5><p>字符串：按照字典顺序进行比较，按位逐一比较，直到得出大小为止。</p>
<h5 id="类型不相同：先进行类型转换，再进行比较。"><a href="#类型不相同：先进行类型转换，再进行比较。" class="headerlink" title="类型不相同：先进行类型转换，再进行比较。"></a>类型不相同：先进行类型转换，再进行比较。</h5><h5 id="全等于运算符"><a href="#全等于运算符" class="headerlink" title="&#x3D;&#x3D;&#x3D;全等于运算符"></a>&#x3D;&#x3D;&#x3D;全等于运算符</h5><p>在比较之前，先判断类型，再判断大小。如果类型不同，直接返回false</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.类型转换</p>
<p><img src="/../TyporaImage/image-20240514222719123.png" alt="image-20240514222719123"></p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><h4 id="1-算数运算符-1"><a href="#1-算数运算符-1" class="headerlink" title="1.算数运算符"></a>1.算数运算符</h4><p>+、-、*、&#x2F;              – 等等</p>
<h4 id="2-赋值运算符-1"><a href="#2-赋值运算符-1" class="headerlink" title="2.赋值运算符"></a>2.赋值运算符</h4><p>&#x3D;、+&#x3D;、-&#x3D;              –等等</p>
<h4 id="3-比较运算符-1"><a href="#3-比较运算符-1" class="headerlink" title="3.比较运算符"></a>3.比较运算符</h4><p>&#x3D;&#x3D;&#x3D;、&#x3D;&#x3D;、&gt;、&lt;、          –等等</p>
<h4 id="4-逻辑运算符-1"><a href="#4-逻辑运算符-1" class="headerlink" title="4.逻辑运算符"></a>4.逻辑运算符</h4><p>&amp;&amp;、||、！                –  ！运算符比较特殊，是一元运算符。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h3><h4 id="1-比较运算符-1"><a href="#1-比较运算符-1" class="headerlink" title="1.比较运算符"></a>1.比较运算符</h4><h5 id="类型相同：直接比较-1"><a href="#类型相同：直接比较-1" class="headerlink" title="类型相同：直接比较"></a>类型相同：直接比较</h5><p>字符串：按照字典顺序进行比较，按位逐一比较，直到得出大小为止。</p>
<h5 id="类型不相同：先进行类型转换，再进行比较。-1"><a href="#类型不相同：先进行类型转换，再进行比较。-1" class="headerlink" title="类型不相同：先进行类型转换，再进行比较。"></a>类型不相同：先进行类型转换，再进行比较。</h5><h5 id="全等于运算符-1"><a href="#全等于运算符-1" class="headerlink" title="&#x3D;&#x3D;&#x3D;全等于运算符"></a>&#x3D;&#x3D;&#x3D;全等于运算符</h5><p>在比较之前，先判断类型，再判断大小。如果类型不同，直接返回false</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.类型转换</p>
<p><img src="/../TyporaImage/image-20240514222719123.png" alt="image-20240514222719123">算符</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><h4 id="1-算数运算符-2"><a href="#1-算数运算符-2" class="headerlink" title="1.算数运算符"></a>1.算数运算符</h4><p>+、-、*、&#x2F;              – 等等</p>
<h4 id="2-赋值运算符-2"><a href="#2-赋值运算符-2" class="headerlink" title="2.赋值运算符"></a>2.赋值运算符</h4><p>&#x3D;、+&#x3D;、-&#x3D;              –等等</p>
<h4 id="3-比较运算符-2"><a href="#3-比较运算符-2" class="headerlink" title="3.比较运算符"></a>3.比较运算符</h4><p>&#x3D;&#x3D;&#x3D;、&#x3D;&#x3D;、&gt;、&lt;、          –等等</p>
<h4 id="4-逻辑运算符-2"><a href="#4-逻辑运算符-2" class="headerlink" title="4.逻辑运算符"></a>4.逻辑运算符</h4><p>&amp;&amp;、||、！                –  ！运算符比较特殊，是一元运算符。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h3><h4 id="1-比较运算符-2"><a href="#1-比较运算符-2" class="headerlink" title="1.比较运算符"></a>1.比较运算符</h4><h5 id="类型相同：直接比较-2"><a href="#类型相同：直接比较-2" class="headerlink" title="类型相同：直接比较"></a>类型相同：直接比较</h5><p>字符串：按照字典顺序进行比较，按位逐一比较，直到得出大小为止。</p>
<h5 id="类型不相同：先进行类型转换，再进行比较。-2"><a href="#类型不相同：先进行类型转换，再进行比较。-2" class="headerlink" title="类型不相同：先进行类型转换，再进行比较。"></a>类型不相同：先进行类型转换，再进行比较。</h5><h5 id="全等于运算符-2"><a href="#全等于运算符-2" class="headerlink" title="&#x3D;&#x3D;&#x3D;全等于运算符"></a>&#x3D;&#x3D;&#x3D;全等于运算符</h5><p>在比较之前，先判断类型，再判断大小。如果类型不同，直接返回false</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.类型转换</p>
<p><img src="/../TyporaImage/image-20240514222719123.png" alt="image-20240514222719123"></p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><h4 id="1-算数运算符-3"><a href="#1-算数运算符-3" class="headerlink" title="1.算数运算符"></a>1.算数运算符</h4><p>+、-、*、&#x2F;              – 等等</p>
<h4 id="2-赋值运算符-3"><a href="#2-赋值运算符-3" class="headerlink" title="2.赋值运算符"></a>2.赋值运算符</h4><p>&#x3D;、+&#x3D;、-&#x3D;              –等等</p>
<h4 id="3-比较运算符-3"><a href="#3-比较运算符-3" class="headerlink" title="3.比较运算符"></a>3.比较运算符</h4><p>&#x3D;&#x3D;&#x3D;、&#x3D;&#x3D;、&gt;、&lt;、          –等等</p>
<h4 id="4-逻辑运算符-3"><a href="#4-逻辑运算符-3" class="headerlink" title="4.逻辑运算符"></a>4.逻辑运算符</h4><p>&amp;&amp;、||、！                –  ！运算符比较特殊，是一元运算符。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h3><h4 id="1-比较运算符-3"><a href="#1-比较运算符-3" class="headerlink" title="1.比较运算符"></a>1.比较运算符</h4><h5 id="类型相同：直接比较-3"><a href="#类型相同：直接比较-3" class="headerlink" title="类型相同：直接比较"></a>类型相同：直接比较</h5><p>字符串：按照字典顺序进行比较，按位逐一比较，直到得出大小为止。</p>
<h5 id="类型不相同：先进行类型转换，再进行比较。-3"><a href="#类型不相同：先进行类型转换，再进行比较。-3" class="headerlink" title="类型不相同：先进行类型转换，再进行比较。"></a>类型不相同：先进行类型转换，再进行比较。</h5><h5 id="全等于运算符-3"><a href="#全等于运算符-3" class="headerlink" title="&#x3D;&#x3D;&#x3D;全等于运算符"></a>&#x3D;&#x3D;&#x3D;全等于运算符</h5><p>在比较之前，先判断类型，再判断大小。如果类型不同，直接返回false</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.类型转换</p>
<p><img src="/../TyporaImage/image-20240514222719123.png" alt="image-20240514222719123"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>会话技术</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<h1 id="会话技术"><a href="#会话技术" class="headerlink" title="会话技术"></a>会话技术</h1><p>定义</p>
<p>会话（Session）是指在客户端与服务器之间的一系列交互中，服务器为客户端维持的一种状态信息。通常用于在多次请求之间保持用户状态。</p>
<p>分类</p>
<p>1.客户端会话技术：</p>
<p>Cookie</p>
<p>2.服务器端会话技术：</p>
<p>Session</p>
<p>目的</p>
<p>在无状态的HTTP协议中维持用户的状态信息，以提供连续性和个性化的用户体验。<br>定义</p>
<p>会话（Session）是指在客户端与服务器之间的一系列交互中，服务器为客户端维持的一种状态信息。通常用于在多次请求之间保持用户状态。</p>
<p>分类</p>
<p>1.客户端会话技术：</p>
<p>Cookie</p>
<p>2.服务器端会话技术：</p>
<p>Session</p>
<p>目的</p>
<p>在无状态的HTTP协议中维持用户的状态信息，以提供连续性和个性化的用户体验。技术</p>
<p>定义</p>
<p>会话（Session）是指在客户端与服务器之间的一系列交互中，服务器为客户端维持的一种状态信息。通常用于在多次请求之间保持用户状态。</p>
<p>分类</p>
<p>1.客户端会话技术：</p>
<p>Cookie</p>
<p>2.服务器端会话技术：</p>
<p>Session</p>
<p>目的</p>
<p>在无状态的HTTP协议中维持用户的状态信息，以提供连续性和个性化的用户体验。<br>定义</p>
<p>会话（Session）是指在客户端与服务器之间的一系列交互中，服务器为客户端维持的一种状态信息。通常用于在多次请求之间保持用户状态。</p>
<p>分类</p>
<p>1.客户端会话技术：</p>
<p>Cookie</p>
<p>2.服务器端会话技术：</p>
<p>Session</p>
<p>目的</p>
<p>在无状态的HTTP协议中维持用户的状态信息，以提供连续性和个性化的用户体验。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>元注解</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E5%85%83%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="元注解"><a href="#元注解" class="headerlink" title="元注解"></a>元注解</h1><h2 id="是什么："><a href="#是什么：" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h3><p>用于描述注解的注解。</p>
<p>组成：</p>
<p>@Target、、@Documented、@inherited </p>
<h2 id="怎么做："><a href="#怎么做：" class="headerlink" title="怎么做："></a>怎么做：</h2><p>@Target：</p>
<p>TYPE、METHOD可以用于类、方法等。</p>
<p>@Retention：</p>
<p>Runtime在什么阶段JVM机读取到。</p>
<h2 id="为什么："><a href="#为什么：" class="headerlink" title="为什么："></a>为什么：</h2><h2 id="是什么：-1"><a href="#是什么：-1" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义：-1"><a href="#定义：-1" class="headerlink" title="定义："></a>定义：</h3><p>用于描述注解的注解。</p>
<p>组成：</p>
<p>@Target、、@Documented、@inherited </p>
<h2 id="怎么做：-1"><a href="#怎么做：-1" class="headerlink" title="怎么做："></a>怎么做：</h2><p>@Target：</p>
<p>TYPE、METHOD可以用于类、方法等。</p>
<p>@Retention：</p>
<p>Runtime在什么阶段JVM机读取到。</p>
<h2 id="为什么：注解"><a href="#为什么：注解" class="headerlink" title="为什么：注解"></a>为什么：注解</h2><h2 id="是什么：-2"><a href="#是什么：-2" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义：-2"><a href="#定义：-2" class="headerlink" title="定义："></a>定义：</h3><p>用于描述注解的注解。</p>
<p>组成：</p>
<p>@Target、、@Documented、@inherited </p>
<h2 id="怎么做：-2"><a href="#怎么做：-2" class="headerlink" title="怎么做："></a>怎么做：</h2><p>@Target：</p>
<p>TYPE、METHOD可以用于类、方法等。</p>
<p>@Retention：</p>
<p>Runtime在什么阶段JVM机读取到。</p>
<h2 id="为什么：-1"><a href="#为什么：-1" class="headerlink" title="为什么："></a>为什么：</h2><h2 id="是什么：-3"><a href="#是什么：-3" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义：-3"><a href="#定义：-3" class="headerlink" title="定义："></a>定义：</h3><p>用于描述注解的注解。</p>
<p>组成：</p>
<p>@Target、、@Documented、@inherited </p>
<h2 id="怎么做：-3"><a href="#怎么做：-3" class="headerlink" title="怎么做："></a>怎么做：</h2><p>@Target：</p>
<p>TYPE、METHOD可以用于类、方法等。</p>
<p>@Retention：</p>
<p>Runtime在什么阶段JVM机读取到。</p>
<h2 id="为什么：-2"><a href="#为什么：-2" class="headerlink" title="为什么："></a>为什么：</h2>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>关于知识结构的疑惑</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E5%85%B3%E4%BA%8E%E7%9F%A5%E8%AF%86%E7%BB%93%E6%9E%84%E7%9A%84%E7%96%91%E6%83%91/</url>
    <content><![CDATA[<p>1.关于分类和组成的疑惑：</p>
<p>分类和组成：一是概念内部的组成部分</p>
<p>二是概念的特殊类型。分类和组成：一是概念内部的组成部分</p>
<p>二是概念的特殊类型。分类和组成：一是概念内部的组成部分</p>
<p>二是概念的特殊类型。分类和组成：一是概念内部的组成部分</p>
<p>二是概念的特殊类型。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>列表标签</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E5%88%97%E8%A1%A8%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-有序列表"><a href="#1-有序列表" class="headerlink" title="1.有序列表"></a>1.有序列表</h3><p>标签<ol>代表有序列表</p>
<p>标签<li>代表列表项</p>
<h3 id="2-无序列表"><a href="#2-无序列表" class="headerlink" title="2.无序列表"></a>2.无序列表</h3><p>标签<ul>代表无序序列</p>
<p>标签<li>代表列表项</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="有序列表可以用属性："><a href="#有序列表可以用属性：" class="headerlink" title="有序列表可以用属性："></a>有序列表可以用属性：</h3><p>type选择表示顺序的符号，start用于符号从哪里开始。</p>
<h3 id="无序列表可以用属性："><a href="#无序列表可以用属性：" class="headerlink" title="无序列表可以用属性："></a>无序列表可以用属性：</h3><p>type中的三个值用于表示无序列表的不同符号</p>
<img src="../TyporaImage/image-20240509215547832.png" alt="image-20240509215547832" style="zoom: 67%;" />

<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-有序列表-1"><a href="#1-有序列表-1" class="headerlink" title="1.有序列表"></a>1.有序列表</h3><p>标签<ol>代表有序列表</p>
<p>标签<li>代表列表项</p>
<h3 id="2-无序列表-1"><a href="#2-无序列表-1" class="headerlink" title="2.无序列表"></a>2.无序列表</h3><p>标签<ul>代表无序序列</p>
<p>标签<li>代表列表项</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="有序列表可以用属性：-1"><a href="#有序列表可以用属性：-1" class="headerlink" title="有序列表可以用属性："></a>有序列表可以用属性：</h3><p>type选择表示顺序的符号，start用于符号从哪里开始。</p>
<h3 id="无序列表可以用属性：-1"><a href="#无序列表可以用属性：-1" class="headerlink" title="无序列表可以用属性："></a>无序列表可以用属性：</h3><p>type中的三个值用于表示无序列表的不同符号</p>
<p><img src="../TyporaImage/image-20240509215547832.png" alt="image-20240509215547832" style="zoom: 67%;" />标签</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-有序列表-2"><a href="#1-有序列表-2" class="headerlink" title="1.有序列表"></a>1.有序列表</h3><p>标签<ol>代表有序列表</p>
<p>标签<li>代表列表项</p>
<h3 id="2-无序列表-2"><a href="#2-无序列表-2" class="headerlink" title="2.无序列表"></a>2.无序列表</h3><p>标签<ul>代表无序序列</p>
<p>标签<li>代表列表项</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="有序列表可以用属性：-2"><a href="#有序列表可以用属性：-2" class="headerlink" title="有序列表可以用属性："></a>有序列表可以用属性：</h3><p>type选择表示顺序的符号，start用于符号从哪里开始。</p>
<h3 id="无序列表可以用属性：-2"><a href="#无序列表可以用属性：-2" class="headerlink" title="无序列表可以用属性："></a>无序列表可以用属性：</h3><p>type中的三个值用于表示无序列表的不同符号</p>
<img src="../TyporaImage/image-20240509215547832.png" alt="image-20240509215547832" style="zoom: 67%;" />

<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-有序列表-3"><a href="#1-有序列表-3" class="headerlink" title="1.有序列表"></a>1.有序列表</h3><p>标签<ol>代表有序列表</p>
<p>标签<li>代表列表项</p>
<h3 id="2-无序列表-3"><a href="#2-无序列表-3" class="headerlink" title="2.无序列表"></a>2.无序列表</h3><p>标签<ul>代表无序序列</p>
<p>标签<li>代表列表项</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="有序列表可以用属性：-3"><a href="#有序列表可以用属性：-3" class="headerlink" title="有序列表可以用属性："></a>有序列表可以用属性：</h3><p>type选择表示顺序的符号，start用于符号从哪里开始。</p>
<h3 id="无序列表可以用属性：-3"><a href="#无序列表可以用属性：-3" class="headerlink" title="无序列表可以用属性："></a>无序列表可以用属性：</h3><p>type中的三个值用于表示无序列表的不同符号</p>
<img src="../TyporaImage/image-20240509215547832.png" alt="image-20240509215547832" style="zoom: 67%;" />]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>反射</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E5%8F%8D%E5%B0%84/</url>
    <content><![CDATA[<h1 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h1><h2 id="是什么："><a href="#是什么：" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>将类的各个部分封装起来称对象，这就是反射机制。</p>
<h2 id="怎么用："><a href="#怎么用：" class="headerlink" title="怎么用："></a>怎么用：</h2><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>获取class对象：</p>
<p>1.源代码阶段：class.forName(“全类名”)</p>
<p>2.class类对象阶段：类名.class</p>
<p>3.Runtime运行阶段：对象.getclass（）</p>
<p>使用class对象：</p>
<p>1.获取成员变量们</p>
<p>操作：</p>
<p>get、set</p>
<p>2.获取构造方法们</p>
<p>创建对象：</p>
<p>获得以后，用newInstance（）创建对象。</p>
<p>3.获取成员方法们</p>
<p>   执行方法：</p>
<p>用invoke方法进行执行。</p>
<p>4.获取类名</p>
<p>PS：如果获取private权限的成员，则需要暴力反射，即使用setAccessable（true）</p>
<h2 id="为什么："><a href="#为什么：" class="headerlink" title="为什么："></a>为什么：</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>1.java代码在程序中运行的三个阶段。源代码阶段、class类对象阶段、Runtime运行阶段。</p>
<h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><p>1.程序运行的时候可以操作这些对象。</p>
<p>2.进行解耦操作。</p>
<h2 id="是什么：-1"><a href="#是什么：-1" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><p>将类的各个部分封装起来称对象，这就是反射机制。</p>
<h2 id="怎么用：-1"><a href="#怎么用：-1" class="headerlink" title="怎么用："></a>怎么用：</h2><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p>获取class对象：</p>
<p>1.源代码阶段：class.forName(“全类名”)</p>
<p>2.class类对象阶段：类名.class</p>
<p>3.Runtime运行阶段：对象.getclass（）</p>
<p>使用class对象：</p>
<p>1.获取成员变量们</p>
<p>操作：</p>
<p>get、set</p>
<p>2.获取构造方法们</p>
<p>创建对象：</p>
<p>获得以后，用newInstance（）创建对象。</p>
<p>3.获取成员方法们</p>
<p>   执行方法：</p>
<p>用invoke方法进行执行。</p>
<p>4.获取类名</p>
<p>PS：如果获取private权限的成员，则需要暴力反射，即使用setAccessable（true）</p>
<h2 id="为什么：-1"><a href="#为什么：-1" class="headerlink" title="为什么："></a>为什么：</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p>1.java代码在程序中运行的三个阶段。源代码阶段、class类对象阶段、Runtime运行阶段。</p>
<h3 id="好处-1"><a href="#好处-1" class="headerlink" title="好处"></a>好处</h3><p>1.程序运行的时候可以操作这些对象。</p>
<p>2.进行解耦操作。反射</p>
<h2 id="是什么：-2"><a href="#是什么：-2" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h3><p>将类的各个部分封装起来称对象，这就是反射机制。</p>
<h2 id="怎么用：-2"><a href="#怎么用：-2" class="headerlink" title="怎么用："></a>怎么用：</h2><h3 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h3><p>获取class对象：</p>
<p>1.源代码阶段：class.forName(“全类名”)</p>
<p>2.class类对象阶段：类名.class</p>
<p>3.Runtime运行阶段：对象.getclass（）</p>
<p>使用class对象：</p>
<p>1.获取成员变量们</p>
<p>操作：</p>
<p>get、set</p>
<p>2.获取构造方法们</p>
<p>创建对象：</p>
<p>获得以后，用newInstance（）创建对象。</p>
<p>3.获取成员方法们</p>
<p>   执行方法：</p>
<p>用invoke方法进行执行。</p>
<p>4.获取类名</p>
<p>PS：如果获取private权限的成员，则需要暴力反射，即使用setAccessable（true）</p>
<h2 id="为什么：-2"><a href="#为什么：-2" class="headerlink" title="为什么："></a>为什么：</h2><h3 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h3><p>1.java代码在程序中运行的三个阶段。源代码阶段、class类对象阶段、Runtime运行阶段。</p>
<h3 id="好处-2"><a href="#好处-2" class="headerlink" title="好处"></a>好处</h3><p>1.程序运行的时候可以操作这些对象。</p>
<p>2.进行解耦操作。</p>
<h2 id="是什么：-3"><a href="#是什么：-3" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="概念-3"><a href="#概念-3" class="headerlink" title="概念"></a>概念</h3><p>将类的各个部分封装起来称对象，这就是反射机制。</p>
<h2 id="怎么用：-3"><a href="#怎么用：-3" class="headerlink" title="怎么用："></a>怎么用：</h2><h3 id="使用-3"><a href="#使用-3" class="headerlink" title="使用"></a>使用</h3><p>获取class对象：</p>
<p>1.源代码阶段：class.forName(“全类名”)</p>
<p>2.class类对象阶段：类名.class</p>
<p>3.Runtime运行阶段：对象.getclass（）</p>
<p>使用class对象：</p>
<p>1.获取成员变量们</p>
<p>操作：</p>
<p>get、set</p>
<p>2.获取构造方法们</p>
<p>创建对象：</p>
<p>获得以后，用newInstance（）创建对象。</p>
<p>3.获取成员方法们</p>
<p>   执行方法：</p>
<p>用invoke方法进行执行。</p>
<p>4.获取类名</p>
<p>PS：如果获取private权限的成员，则需要暴力反射，即使用setAccessable（true）</p>
<h2 id="为什么：-3"><a href="#为什么：-3" class="headerlink" title="为什么："></a>为什么：</h2><h3 id="原理-3"><a href="#原理-3" class="headerlink" title="原理"></a>原理</h3><p>1.java代码在程序中运行的三个阶段。源代码阶段、class类对象阶段、Runtime运行阶段。</p>
<h3 id="好处-3"><a href="#好处-3" class="headerlink" title="好处"></a>好处</h3><p>1.程序运行的时候可以操作这些对象。</p>
<p>2.进行解耦操作。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E5%8F%8D%E5%B0%84/</url>
    <content><![CDATA[<h1 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>反射（Reflection）是计算机科学中的一种机制，它允许程序在运行时检查和修改自身的结构和行为。这包括获取类的名称、方法、字段和构造函数等信息，并可以动态地调用方法和访问字段。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-类对象"><a href="#1-类对象" class="headerlink" title="1.类对象"></a>1.类对象</h3><p>反射的基础，通过类对象可以获取类的详细信息。</p>
<h3 id="2-字段（Field）"><a href="#2-字段（Field）" class="headerlink" title="2.字段（Field）"></a>2.字段（Field）</h3><p>类中的变量，通过反射可以访问和修改字段的值。</p>
<h3 id="3-方法（Method）"><a href="#3-方法（Method）" class="headerlink" title="3.方法（Method）"></a>3.方法（Method）</h3><p>类中的函数，通过反射可以调用方法。</p>
<h3 id="4-构造函数（Constructor）"><a href="#4-构造函数（Constructor）" class="headerlink" title="4.构造函数（Constructor）"></a>4.构造函数（Constructor）</h3><p>用于创建类的实例，通过反射可以调用构造函数来创建对象。</p>
<h3 id="5-注解（Annotation）"><a href="#5-注解（Annotation）" class="headerlink" title="5.注解（Annotation）"></a>5.注解（Annotation）</h3><p>反射可以用来检查类、方法和字段上的注解。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-静态反射"><a href="#1-静态反射" class="headerlink" title="1.静态反射"></a>1.静态反射</h3><p>在编译时就已经知道和定义好的反射。</p>
<h3 id="2-动态反射"><a href="#2-动态反射" class="headerlink" title="2.动态反射"></a>2.动态反射</h3><p>在运行时才确定的反射，主要是Java中的反射机制。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-类反射"><a href="#1-类反射" class="headerlink" title="1.类反射"></a>1.类反射</h3><p>获取类的信息，如类名、修饰符、父类、接口等。</p>
<h3 id="2-成员反射"><a href="#2-成员反射" class="headerlink" title="2.成员反射"></a>2.成员反射</h3><p>获取类的成员信息，如字段、方法、构造函数等。</p>
<h3 id="3-行为反射"><a href="#3-行为反射" class="headerlink" title="3.行为反射"></a>3.行为反射</h3><p>调用类的方法或构造函数，修改类的字段值。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>反射的主要目的是提供一种动态访问和操作类及其成员的机制，使得程序在运行时能够灵活地处理不同的类和对象，适应各种动态变化的需求。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="物理描述"><a href="#物理描述" class="headerlink" title="物理描述"></a>物理描述</h3><p>反射通过Java提供的反射API来实现。程序在运行时可以加载类，通过类对象获取类的详细信息，并可以动态地调用类的方法、访问和修改类的字段。</p>
<h3 id="数学描述"><a href="#数学描述" class="headerlink" title="数学描述"></a>数学描述</h3><p>在运行时，通过Class类和相关反射API（如Method、Field、Constructor）实现对类的动态操作。</p>
]]></content>
  </entry>
  <entry>
    <title>变量</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>一小块存储数据的内存空间</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240514220548038.png" alt="image-20240514220548038"></p>
<h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240514220612434.png" alt="image-20240514220612434"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.typeof运算符</p>
<p>获取变量的类型；null运算后得到的是object类型，因为这是一个历史原因而遗传的错误。</p>
<p>2.变量的定义可以用var关键字，也可以不用。</p>
<p>用了var关键字，是局部变量；</p>
<p>不用是全局变量（不推荐）。</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>一小块存储数据的内存空间</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240514220548038.png" alt="image-20240514220548038"></p>
<h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240514220612434.png" alt="image-20240514220612434"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.typeof运算符</p>
<p>获取变量的类型；null运算后得到的是object类型，因为这是一个历史原因而遗传的错误。</p>
<p>2.变量的定义可以用var关键字，也可以不用。</p>
<p>用了var关键字，是局部变量；</p>
<p>不用是全局变量（不推荐）。变量</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>一小块存储数据的内存空间</p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240514220548038.png" alt="image-20240514220548038"></p>
<h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240514220612434.png" alt="image-20240514220612434"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.typeof运算符</p>
<p>获取变量的类型；null运算后得到的是object类型，因为这是一个历史原因而遗传的错误。</p>
<p>2.变量的定义可以用var关键字，也可以不用。</p>
<p>用了var关键字，是局部变量；</p>
<p>不用是全局变量（不推荐）。</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>一小块存储数据的内存空间</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240514220548038.png" alt="image-20240514220548038"></p>
<h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240514220612434.png" alt="image-20240514220612434"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.typeof运算符</p>
<p>获取变量的类型；null运算后得到的是object类型，因为这是一个历史原因而遗传的错误。</p>
<p>2.变量的定义可以用var关键字，也可以不用。</p>
<p>用了var关键字，是局部变量；</p>
<p>不用是全局变量（不推荐）。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>图片标签</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E5%9B%BE%E7%89%87%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>展示图片的标签</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240509214449402.png"></p>
<p><img src="/../TyporaImage/image-20240509214410111.png" alt="image-20240509214410111">## 定义</p>
<p>展示图片的标签</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240509214449402.png"></p>
<p><img src="/../TyporaImage/image-20240509214410111.png" alt="image-20240509214410111">标签</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>展示图片的标签</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240509214449402.png"></p>
<p><img src="/../TyporaImage/image-20240509214410111.png" alt="image-20240509214410111">## 定义</p>
<p>展示图片的标签</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240509214449402.png"></p>
<p><img src="/../TyporaImage/image-20240509214410111.png" alt="image-20240509214410111"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>响应式布局_BootStrap</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80_BootStrap/</url>
    <content><![CDATA[<h1 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>同一套页面可以兼容不同分辨率的设备的布局。</p>
<p>它的实现依赖于栅格系统，栅格系统将一行平均分为12个格子，可以指定元素占据了几个格子。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-定义容器"><a href="#1-定义容器" class="headerlink" title="1.定义容器"></a>1.定义容器</h3><p>分类：</p>
<h4 id="1-container"><a href="#1-container" class="headerlink" title="1.container"></a>1.container</h4><p>两边留白</p>
<h4 id="2-container-fluid"><a href="#2-container-fluid" class="headerlink" title="2.container-fluid"></a>2.container-fluid</h4><p>每一种设备都是100%宽度</p>
<h3 id="2-定义行"><a href="#2-定义行" class="headerlink" title="2.定义行"></a>2.定义行</h3><p>class样式row</p>
<h3 id="3-定义元素"><a href="#3-定义元素" class="headerlink" title="3.定义元素"></a>3.定义元素</h3><p>指定该元素在不同设备上，所占据的格子数目。</p>
<p>class样式col-设备代号-格子数目</p>
<p>分类：</p>
<p><img src="/../TyporaImage/image-20240518162058178.png" alt="image-20240518162058178"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/image-20240518162204844.png" alt="image-20240518162204844">## 定义</p>
<p>同一套页面可以兼容不同分辨率的设备的布局。</p>
<p>它的实现依赖于栅格系统，栅格系统将一行平均分为12个格子，可以指定元素占据了几个格子。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-定义容器-1"><a href="#1-定义容器-1" class="headerlink" title="1.定义容器"></a>1.定义容器</h3><p>分类：</p>
<h4 id="1-container-1"><a href="#1-container-1" class="headerlink" title="1.container"></a>1.container</h4><p>两边留白</p>
<h4 id="2-container-fluid-1"><a href="#2-container-fluid-1" class="headerlink" title="2.container-fluid"></a>2.container-fluid</h4><p>每一种设备都是100%宽度</p>
<h3 id="2-定义行-1"><a href="#2-定义行-1" class="headerlink" title="2.定义行"></a>2.定义行</h3><p>class样式row</p>
<h3 id="3-定义元素-1"><a href="#3-定义元素-1" class="headerlink" title="3.定义元素"></a>3.定义元素</h3><p>指定该元素在不同设备上，所占据的格子数目。</p>
<p>class样式col-设备代号-格子数目</p>
<p>分类：</p>
<p><img src="/../TyporaImage/image-20240518162058178.png" alt="image-20240518162058178"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/image-20240518162204844.png" alt="image-20240518162204844">布局</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>同一套页面可以兼容不同分辨率的设备的布局。</p>
<p>它的实现依赖于栅格系统，栅格系统将一行平均分为12个格子，可以指定元素占据了几个格子。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-定义容器-2"><a href="#1-定义容器-2" class="headerlink" title="1.定义容器"></a>1.定义容器</h3><p>分类：</p>
<h4 id="1-container-2"><a href="#1-container-2" class="headerlink" title="1.container"></a>1.container</h4><p>两边留白</p>
<h4 id="2-container-fluid-2"><a href="#2-container-fluid-2" class="headerlink" title="2.container-fluid"></a>2.container-fluid</h4><p>每一种设备都是100%宽度</p>
<h3 id="2-定义行-2"><a href="#2-定义行-2" class="headerlink" title="2.定义行"></a>2.定义行</h3><p>class样式row</p>
<h3 id="3-定义元素-2"><a href="#3-定义元素-2" class="headerlink" title="3.定义元素"></a>3.定义元素</h3><p>指定该元素在不同设备上，所占据的格子数目。</p>
<p>class样式col-设备代号-格子数目</p>
<p>分类：</p>
<p><img src="/../TyporaImage/image-20240518162058178.png" alt="image-20240518162058178"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/image-20240518162204844.png" alt="image-20240518162204844">## 定义</p>
<p>同一套页面可以兼容不同分辨率的设备的布局。</p>
<p>它的实现依赖于栅格系统，栅格系统将一行平均分为12个格子，可以指定元素占据了几个格子。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-定义容器-3"><a href="#1-定义容器-3" class="headerlink" title="1.定义容器"></a>1.定义容器</h3><p>分类：</p>
<h4 id="1-container-3"><a href="#1-container-3" class="headerlink" title="1.container"></a>1.container</h4><p>两边留白</p>
<h4 id="2-container-fluid-3"><a href="#2-container-fluid-3" class="headerlink" title="2.container-fluid"></a>2.container-fluid</h4><p>每一种设备都是100%宽度</p>
<h3 id="2-定义行-3"><a href="#2-定义行-3" class="headerlink" title="2.定义行"></a>2.定义行</h3><p>class样式row</p>
<h3 id="3-定义元素-3"><a href="#3-定义元素-3" class="headerlink" title="3.定义元素"></a>3.定义元素</h3><p>指定该元素在不同设备上，所占据的格子数目。</p>
<p>class样式col-设备代号-格子数目</p>
<p>分类：</p>
<p><img src="/../TyporaImage/image-20240518162058178.png" alt="image-20240518162058178"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/image-20240518162204844.png" alt="image-20240518162204844"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>块标签</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E5%9D%97%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="块标签"><a href="#块标签" class="headerlink" title="块标签"></a>块标签</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>默认情况下会占据一整行，并且通常前后会有换行符的元素。</p>
<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><ul>
<li><code>&lt;div&gt;</code>：通用块级容器，常用于布局。</li>
<li><code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code>：标题元素，用于定义不同级别的标题。</li>
<li><code>&lt;p&gt;</code>：段落元素，用于定义文本段落。</li>
<li><code>&lt;ul&gt;</code>、<code>&lt;ol&gt;</code>、<code>&lt;li&gt;</code>：列表元素，用于定义无序列表和有序列表及其列表项。</li>
<li><code>&lt;form&gt;</code>：表单元素，用于创建交互式表单。</li>
<li><code>&lt;header&gt;</code>、<code>&lt;footer&gt;</code>、<code>&lt;nav&gt;</code>、<code>&lt;article&gt;</code>、<code>&lt;section&gt;</code>：HTML5中的语义化块级元素，用于定义页面不同部分的内容。</li>
</ul>
<h2 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h2><p>有助于创建清晰、有组织的页面结构。</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>默认情况下会占据一整行，并且通常前后会有换行符的元素。</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><ul>
<li><code>&lt;div&gt;</code>：通用块级容器，常用于布局。</li>
<li><code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code>：标题元素，用于定义不同级别的标题。</li>
<li><code>&lt;p&gt;</code>：段落元素，用于定义文本段落。</li>
<li><code>&lt;ul&gt;</code>、<code>&lt;ol&gt;</code>、<code>&lt;li&gt;</code>：列表元素，用于定义无序列表和有序列表及其列表项。</li>
<li><code>&lt;form&gt;</code>：表单元素，用于创建交互式表单。</li>
<li><code>&lt;header&gt;</code>、<code>&lt;footer&gt;</code>、<code>&lt;nav&gt;</code>、<code>&lt;article&gt;</code>、<code>&lt;section&gt;</code>：HTML5中的语义化块级元素，用于定义页面不同部分的内容。</li>
</ul>
<h2 id="目的：-1"><a href="#目的：-1" class="headerlink" title="目的："></a>目的：</h2><p>有助于创建清晰、有组织的页面结构。标签</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>默认情况下会占据一整行，并且通常前后会有换行符的元素。</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><ul>
<li><code>&lt;div&gt;</code>：通用块级容器，常用于布局。</li>
<li><code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code>：标题元素，用于定义不同级别的标题。</li>
<li><code>&lt;p&gt;</code>：段落元素，用于定义文本段落。</li>
<li><code>&lt;ul&gt;</code>、<code>&lt;ol&gt;</code>、<code>&lt;li&gt;</code>：列表元素，用于定义无序列表和有序列表及其列表项。</li>
<li><code>&lt;form&gt;</code>：表单元素，用于创建交互式表单。</li>
<li><code>&lt;header&gt;</code>、<code>&lt;footer&gt;</code>、<code>&lt;nav&gt;</code>、<code>&lt;article&gt;</code>、<code>&lt;section&gt;</code>：HTML5中的语义化块级元素，用于定义页面不同部分的内容。</li>
</ul>
<h2 id="目的：-2"><a href="#目的：-2" class="headerlink" title="目的："></a>目的：</h2><p>有助于创建清晰、有组织的页面结构。</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>默认情况下会占据一整行，并且通常前后会有换行符的元素。</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><ul>
<li><code>&lt;div&gt;</code>：通用块级容器，常用于布局。</li>
<li><code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code>：标题元素，用于定义不同级别的标题。</li>
<li><code>&lt;p&gt;</code>：段落元素，用于定义文本段落。</li>
<li><code>&lt;ul&gt;</code>、<code>&lt;ol&gt;</code>、<code>&lt;li&gt;</code>：列表元素，用于定义无序列表和有序列表及其列表项。</li>
<li><code>&lt;form&gt;</code>：表单元素，用于创建交互式表单。</li>
<li><code>&lt;header&gt;</code>、<code>&lt;footer&gt;</code>、<code>&lt;nav&gt;</code>、<code>&lt;article&gt;</code>、<code>&lt;section&gt;</code>：HTML5中的语义化块级元素，用于定义页面不同部分的内容。</li>
</ul>
<h2 id="目的：-3"><a href="#目的：-3" class="headerlink" title="目的："></a>目的：</h2><p>有助于创建清晰、有组织的页面结构。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>多表查询</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>从多张表中进行数据的查询操作。</p>
<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="内连接查询"><a href="#内连接查询" class="headerlink" title="内连接查询"></a>内连接查询</h4><p>1.隐式内连接</p>
<p>2.显式内连接</p>
<h4 id="外连接查询"><a href="#外连接查询" class="headerlink" title="外连接查询"></a>外连接查询</h4><p>1.左外连接：</p>
<p>可以查询左表所有数据以及其交集部分数据。 </p>
<p>2.右外连接</p>
<p>可以查询右表所有数据以及其交集部分数据。</p>
<h4 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h4><p>1.子查询的结果是单行单列的。</p>
<p>子查询可以作为条件，使用运算符去判断。</p>
<p>运算符： &gt;　＝　</p>
<p>2.子查询的结果是多行单列的。</p>
<p>作为条件，用运算符in来判断。</p>
<p>3.是多行多列的。</p>
<p>作为一张虚拟表，来参与查询。</p>
<h3 id="PS："><a href="#PS：" class="headerlink" title="PS："></a>PS：</h3><p>1.一般将表用as 起别名，方便进行操作。</p>
<p>2.<strong>左外连接的NULL值填充</strong>：对于右表中没有匹配的左表行，结果集中的右表列将填充为NULL。</p>
<p>3.<strong>右外连接的NULL值填充</strong>：对于左表中没有匹配的右表行，结果集中的左表列将填充为NULL。</p>
<p>4.子查询定义：</p>
<p>查询中嵌套查询，称呼嵌套查询为子查询。</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="内连接查询-1"><a href="#内连接查询-1" class="headerlink" title="内连接查询"></a>内连接查询</h3><h4 id="1-隐式内连接"><a href="#1-隐式内连接" class="headerlink" title="1.隐式内连接"></a>1.隐式内连接</h4><p>用正常的where语句将两张表进行联系并查询即可。</p>
<h4 id="2-显式内连接"><a href="#2-显式内连接" class="headerlink" title="2.显式内连接"></a>2.显式内连接</h4><p>select  字段列表  from  表1  inner  join  表名2 on  条件；</p>
<p>select  字段列表  from  表1   join  表名2 on  条件；</p>
<h3 id="外连接查询-1"><a href="#外连接查询-1" class="headerlink" title="外连接查询"></a>外连接查询</h3><p>1.左外连接</p>
<p>select 字段列表  from 表1 left outer join 表2 on 条件；</p>
<p>select 字段列表  from 表1 left  join 表2 on 条件；</p>
<p>2.右外连接</p>
<p>select 字段列表  from 表1 right outer join 表2 on 条件；</p>
<p>select 字段列表  from 表1 right  join 表2 on 条件；</p>
<h3 id="子查询-1"><a href="#子查询-1" class="headerlink" title="子查询"></a>子查询</h3><p>将某一部分用查询语句替代即可。</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>消除笛卡尔积结果中的无用数据。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-笛卡尔积"><a href="#1-笛卡尔积" class="headerlink" title="1.笛卡尔积"></a>1.笛卡尔积</h3><p>A，B两个集合，取A和B的所有组合情况。</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>从多张表中进行数据的查询操作。</p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="内连接查询-2"><a href="#内连接查询-2" class="headerlink" title="内连接查询"></a>内连接查询</h4><p>1.隐式内连接</p>
<p>2.显式内连接</p>
<h4 id="外连接查询-2"><a href="#外连接查询-2" class="headerlink" title="外连接查询"></a>外连接查询</h4><p>1.左外连接：</p>
<p>可以查询左表所有数据以及其交集部分数据。 </p>
<p>2.右外连接</p>
<p>可以查询右表所有数据以及其交集部分数据。</p>
<h4 id="子查询-2"><a href="#子查询-2" class="headerlink" title="子查询"></a>子查询</h4><p>1.子查询的结果是单行单列的。</p>
<p>子查询可以作为条件，使用运算符去判断。</p>
<p>运算符： &gt;　＝　</p>
<p>2.子查询的结果是多行单列的。</p>
<p>作为条件，用运算符in来判断。</p>
<p>3.是多行多列的。</p>
<p>作为一张虚拟表，来参与查询。</p>
<h3 id="PS：-1"><a href="#PS：-1" class="headerlink" title="PS："></a>PS：</h3><p>1.一般将表用as 起别名，方便进行操作。</p>
<p>2.<strong>左外连接的NULL值填充</strong>：对于右表中没有匹配的左表行，结果集中的右表列将填充为NULL。</p>
<p>3.<strong>右外连接的NULL值填充</strong>：对于左表中没有匹配的右表行，结果集中的左表列将填充为NULL。</p>
<p>4.子查询定义：</p>
<p>查询中嵌套查询，称呼嵌套查询为子查询。</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="内连接查询-3"><a href="#内连接查询-3" class="headerlink" title="内连接查询"></a>内连接查询</h3><h4 id="1-隐式内连接-1"><a href="#1-隐式内连接-1" class="headerlink" title="1.隐式内连接"></a>1.隐式内连接</h4><p>用正常的where语句将两张表进行联系并查询即可。</p>
<h4 id="2-显式内连接-1"><a href="#2-显式内连接-1" class="headerlink" title="2.显式内连接"></a>2.显式内连接</h4><p>select  字段列表  from  表1  inner  join  表名2 on  条件；</p>
<p>select  字段列表  from  表1   join  表名2 on  条件；</p>
<h3 id="外连接查询-3"><a href="#外连接查询-3" class="headerlink" title="外连接查询"></a>外连接查询</h3><p>1.左外连接</p>
<p>select 字段列表  from 表1 left outer join 表2 on 条件；</p>
<p>select 字段列表  from 表1 left  join 表2 on 条件；</p>
<p>2.右外连接</p>
<p>select 字段列表  from 表1 right outer join 表2 on 条件；</p>
<p>select 字段列表  from 表1 right  join 表2 on 条件；</p>
<h3 id="子查询-3"><a href="#子查询-3" class="headerlink" title="子查询"></a>子查询</h3><p>将某一部分用查询语句替代即可。</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>消除笛卡尔积结果中的无用数据。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-笛卡尔积-1"><a href="#1-笛卡尔积-1" class="headerlink" title="1.笛卡尔积"></a>1.笛卡尔积</h3><p>A，B两个集合，取A和B的所有组合情况。查询</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>从多张表中进行数据的查询操作。</p>
<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="内连接查询-4"><a href="#内连接查询-4" class="headerlink" title="内连接查询"></a>内连接查询</h4><p>1.隐式内连接</p>
<p>2.显式内连接</p>
<h4 id="外连接查询-4"><a href="#外连接查询-4" class="headerlink" title="外连接查询"></a>外连接查询</h4><p>1.左外连接：</p>
<p>可以查询左表所有数据以及其交集部分数据。 </p>
<p>2.右外连接</p>
<p>可以查询右表所有数据以及其交集部分数据。</p>
<h4 id="子查询-4"><a href="#子查询-4" class="headerlink" title="子查询"></a>子查询</h4><p>1.子查询的结果是单行单列的。</p>
<p>子查询可以作为条件，使用运算符去判断。</p>
<p>运算符： &gt;　＝　</p>
<p>2.子查询的结果是多行单列的。</p>
<p>作为条件，用运算符in来判断。</p>
<p>3.是多行多列的。</p>
<p>作为一张虚拟表，来参与查询。</p>
<h3 id="PS：-2"><a href="#PS：-2" class="headerlink" title="PS："></a>PS：</h3><p>1.一般将表用as 起别名，方便进行操作。</p>
<p>2.<strong>左外连接的NULL值填充</strong>：对于右表中没有匹配的左表行，结果集中的右表列将填充为NULL。</p>
<p>3.<strong>右外连接的NULL值填充</strong>：对于左表中没有匹配的右表行，结果集中的左表列将填充为NULL。</p>
<p>4.子查询定义：</p>
<p>查询中嵌套查询，称呼嵌套查询为子查询。</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="内连接查询-5"><a href="#内连接查询-5" class="headerlink" title="内连接查询"></a>内连接查询</h3><h4 id="1-隐式内连接-2"><a href="#1-隐式内连接-2" class="headerlink" title="1.隐式内连接"></a>1.隐式内连接</h4><p>用正常的where语句将两张表进行联系并查询即可。</p>
<h4 id="2-显式内连接-2"><a href="#2-显式内连接-2" class="headerlink" title="2.显式内连接"></a>2.显式内连接</h4><p>select  字段列表  from  表1  inner  join  表名2 on  条件；</p>
<p>select  字段列表  from  表1   join  表名2 on  条件；</p>
<h3 id="外连接查询-5"><a href="#外连接查询-5" class="headerlink" title="外连接查询"></a>外连接查询</h3><p>1.左外连接</p>
<p>select 字段列表  from 表1 left outer join 表2 on 条件；</p>
<p>select 字段列表  from 表1 left  join 表2 on 条件；</p>
<p>2.右外连接</p>
<p>select 字段列表  from 表1 right outer join 表2 on 条件；</p>
<p>select 字段列表  from 表1 right  join 表2 on 条件；</p>
<h3 id="子查询-5"><a href="#子查询-5" class="headerlink" title="子查询"></a>子查询</h3><p>将某一部分用查询语句替代即可。</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>消除笛卡尔积结果中的无用数据。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-笛卡尔积-2"><a href="#1-笛卡尔积-2" class="headerlink" title="1.笛卡尔积"></a>1.笛卡尔积</h3><p>A，B两个集合，取A和B的所有组合情况。</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>从多张表中进行数据的查询操作。</p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="内连接查询-6"><a href="#内连接查询-6" class="headerlink" title="内连接查询"></a>内连接查询</h4><p>1.隐式内连接</p>
<p>2.显式内连接</p>
<h4 id="外连接查询-6"><a href="#外连接查询-6" class="headerlink" title="外连接查询"></a>外连接查询</h4><p>1.左外连接：</p>
<p>可以查询左表所有数据以及其交集部分数据。 </p>
<p>2.右外连接</p>
<p>可以查询右表所有数据以及其交集部分数据。</p>
<h4 id="子查询-6"><a href="#子查询-6" class="headerlink" title="子查询"></a>子查询</h4><p>1.子查询的结果是单行单列的。</p>
<p>子查询可以作为条件，使用运算符去判断。</p>
<p>运算符： &gt;　＝　</p>
<p>2.子查询的结果是多行单列的。</p>
<p>作为条件，用运算符in来判断。</p>
<p>3.是多行多列的。</p>
<p>作为一张虚拟表，来参与查询。</p>
<h3 id="PS：-3"><a href="#PS：-3" class="headerlink" title="PS："></a>PS：</h3><p>1.一般将表用as 起别名，方便进行操作。</p>
<p>2.<strong>左外连接的NULL值填充</strong>：对于右表中没有匹配的左表行，结果集中的右表列将填充为NULL。</p>
<p>3.<strong>右外连接的NULL值填充</strong>：对于左表中没有匹配的右表行，结果集中的左表列将填充为NULL。</p>
<p>4.子查询定义：</p>
<p>查询中嵌套查询，称呼嵌套查询为子查询。</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="内连接查询-7"><a href="#内连接查询-7" class="headerlink" title="内连接查询"></a>内连接查询</h3><h4 id="1-隐式内连接-3"><a href="#1-隐式内连接-3" class="headerlink" title="1.隐式内连接"></a>1.隐式内连接</h4><p>用正常的where语句将两张表进行联系并查询即可。</p>
<h4 id="2-显式内连接-3"><a href="#2-显式内连接-3" class="headerlink" title="2.显式内连接"></a>2.显式内连接</h4><p>select  字段列表  from  表1  inner  join  表名2 on  条件；</p>
<p>select  字段列表  from  表1   join  表名2 on  条件；</p>
<h3 id="外连接查询-7"><a href="#外连接查询-7" class="headerlink" title="外连接查询"></a>外连接查询</h3><p>1.左外连接</p>
<p>select 字段列表  from 表1 left outer join 表2 on 条件；</p>
<p>select 字段列表  from 表1 left  join 表2 on 条件；</p>
<p>2.右外连接</p>
<p>select 字段列表  from 表1 right outer join 表2 on 条件；</p>
<p>select 字段列表  from 表1 right  join 表2 on 条件；</p>
<h3 id="子查询-7"><a href="#子查询-7" class="headerlink" title="子查询"></a>子查询</h3><p>将某一部分用查询语句替代即可。</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>消除笛卡尔积结果中的无用数据。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-笛卡尔积-3"><a href="#1-笛卡尔积-3" class="headerlink" title="1.笛卡尔积"></a>1.笛卡尔积</h3><p>A，B两个集合，取A和B的所有组合情况。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>多表关系</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[<h1 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>多张表之间的关系。</p>
<h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p>1.一对一</p>
<p>2.多对一</p>
<p>3.多对多</p>
<p>​	</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h3><p>在任意一方添加唯一外键，指向另一方的主键。</p>
<p>PS：一般都合并这两张表，因为是一对一的关系了。</p>
<h3 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h3><p>在多的一方建立外键，指向一的一方的主键。</p>
<h3 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h3><p>通过建立一个中间表来实现。中间表最少有两个属性，分别指向两张表的主键。</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><p>目的：为了设计数据库，数据库是现实事物的影射。</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>多张表之间的关系。</p>
<h4 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h4><p>1.一对一</p>
<p>2.多对一</p>
<p>3.多对多</p>
<p>​	</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="一对一-1"><a href="#一对一-1" class="headerlink" title="一对一"></a>一对一</h3><p>在任意一方添加唯一外键，指向另一方的主键。</p>
<p>PS：一般都合并这两张表，因为是一对一的关系了。</p>
<h3 id="一对多-1"><a href="#一对多-1" class="headerlink" title="一对多"></a>一对多</h3><p>在多的一方建立外键，指向一的一方的主键。</p>
<h3 id="多对多-1"><a href="#多对多-1" class="headerlink" title="多对多"></a>多对多</h3><p>通过建立一个中间表来实现。中间表最少有两个属性，分别指向两张表的主键。</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><p>目的：为了设计数据库，数据库是现实事物的影射。关系</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>多张表之间的关系。</p>
<h4 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h4><p>1.一对一</p>
<p>2.多对一</p>
<p>3.多对多</p>
<p>​	</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="一对一-2"><a href="#一对一-2" class="headerlink" title="一对一"></a>一对一</h3><p>在任意一方添加唯一外键，指向另一方的主键。</p>
<p>PS：一般都合并这两张表，因为是一对一的关系了。</p>
<h3 id="一对多-2"><a href="#一对多-2" class="headerlink" title="一对多"></a>一对多</h3><p>在多的一方建立外键，指向一的一方的主键。</p>
<h3 id="多对多-2"><a href="#多对多-2" class="headerlink" title="多对多"></a>多对多</h3><p>通过建立一个中间表来实现。中间表最少有两个属性，分别指向两张表的主键。</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><p>目的：为了设计数据库，数据库是现实事物的影射。</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>多张表之间的关系。</p>
<h4 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h4><p>1.一对一</p>
<p>2.多对一</p>
<p>3.多对多</p>
<p>​	</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="一对一-3"><a href="#一对一-3" class="headerlink" title="一对一"></a>一对一</h3><p>在任意一方添加唯一外键，指向另一方的主键。</p>
<p>PS：一般都合并这两张表，因为是一对一的关系了。</p>
<h3 id="一对多-3"><a href="#一对多-3" class="headerlink" title="一对多"></a>一对多</h3><p>在多的一方建立外键，指向一的一方的主键。</p>
<h3 id="多对多-3"><a href="#多对多-3" class="headerlink" title="多对多"></a>多对多</h3><p>通过建立一个中间表来实现。中间表最少有两个属性，分别指向两张表的主键。</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><p>目的：为了设计数据库，数据库是现实事物的影射。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>数据库</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h1 id="数据库："><a href="#数据库：" class="headerlink" title="数据库："></a>数据库：</h1><h2 id="是什么："><a href="#是什么：" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>用于存储和管理数据的仓库</p>
<h3 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h3><p>从上到下：数据库、表、数据</p>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>持久化存储数据，数据库就是一个文件系统。</p>
<p>方法存储和管理数据。</p>
<p>使用了统一的方式来操作数据库。</p>
<h3 id="常见的数据库软件"><a href="#常见的数据库软件" class="headerlink" title="常见的数据库软件"></a>常见的数据库软件</h3><p>oracle、MySQL</p>
<h2 id="是什么：-1"><a href="#是什么：-1" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>用于存储和管理数据的仓库</p>
<h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h3><p>从上到下：数据库、表、数据</p>
<h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p>持久化存储数据，数据库就是一个文件系统。</p>
<p>方法存储和管理数据。</p>
<p>使用了统一的方式来操作数据库。</p>
<h3 id="常见的数据库软件-1"><a href="#常见的数据库软件-1" class="headerlink" title="常见的数据库软件"></a>常见的数据库软件</h3><p>oracle、MySQL库：</p>
<h2 id="是什么：-2"><a href="#是什么：-2" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>用于存储和管理数据的仓库</p>
<h3 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h3><p>从上到下：数据库、表、数据</p>
<h3 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h3><p>持久化存储数据，数据库就是一个文件系统。</p>
<p>方法存储和管理数据。</p>
<p>使用了统一的方式来操作数据库。</p>
<h3 id="常见的数据库软件-2"><a href="#常见的数据库软件-2" class="headerlink" title="常见的数据库软件"></a>常见的数据库软件</h3><p>oracle、MySQL</p>
<h2 id="是什么：-3"><a href="#是什么：-3" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>用于存储和管理数据的仓库</p>
<h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h3><p>从上到下：数据库、表、数据</p>
<h3 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h3><p>持久化存储数据，数据库就是一个文件系统。</p>
<p>方法存储和管理数据。</p>
<p>使用了统一的方式来操作数据库。</p>
<h3 id="常见的数据库软件-3"><a href="#常见的数据库软件-3" class="headerlink" title="常见的数据库软件"></a>常见的数据库软件</h3><p>oracle、MySQL</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>数据库的备份和还原</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F/</url>
    <content><![CDATA[<h1 id="数据库的备份和还原"><a href="#数据库的备份和还原" class="headerlink" title="数据库的备份和还原"></a>数据库的备份和还原</h1><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>1.命令行   2.图形化工具</p>
<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><h4 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h4><p>mysqldump -u用户名 -p密码   数据库名称  &gt;保存的路径；         这是保存文件</p>
<p>source 文件路径  ；                           这是还原文件，要注意进入数据库后再写命令。</p>
<h4 id="图形化工具"><a href="#图形化工具" class="headerlink" title="图形化工具"></a>图形化工具</h4><p>软件工具上有导出和执行操作。          </p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><p>1.命令行   2.图形化工具</p>
<h3 id="操作-1"><a href="#操作-1" class="headerlink" title="操作"></a>操作</h3><h4 id="命令行-1"><a href="#命令行-1" class="headerlink" title="命令行"></a>命令行</h4><p>mysqldump -u用户名 -p密码   数据库名称  &gt;保存的路径；         这是保存文件</p>
<p>source 文件路径  ；                           这是还原文件，要注意进入数据库后再写命令。</p>
<h4 id="图形化工具-1"><a href="#图形化工具-1" class="headerlink" title="图形化工具"></a>图形化工具</h4><p>软件工具上有导出和执行操作。还原</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h3><p>1.命令行   2.图形化工具</p>
<h3 id="操作-2"><a href="#操作-2" class="headerlink" title="操作"></a>操作</h3><h4 id="命令行-2"><a href="#命令行-2" class="headerlink" title="命令行"></a>命令行</h4><p>mysqldump -u用户名 -p密码   数据库名称  &gt;保存的路径；         这是保存文件</p>
<p>source 文件路径  ；                           这是还原文件，要注意进入数据库后再写命令。</p>
<h4 id="图形化工具-2"><a href="#图形化工具-2" class="headerlink" title="图形化工具"></a>图形化工具</h4><p>软件工具上有导出和执行操作。          </p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h3><p>1.命令行   2.图形化工具</p>
<h3 id="操作-3"><a href="#操作-3" class="headerlink" title="操作"></a>操作</h3><h4 id="命令行-3"><a href="#命令行-3" class="headerlink" title="命令行"></a>命令行</h4><p>mysqldump -u用户名 -p密码   数据库名称  &gt;保存的路径；         这是保存文件</p>
<p>source 文件路径  ；                           这是还原文件，要注意进入数据库后再写命令。</p>
<h4 id="图形化工具-3"><a href="#图形化工具-3" class="headerlink" title="图形化工具"></a>图形化工具</h4><p>软件工具上有导出和执行操作。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>数据库连接池</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</url>
    <content><![CDATA[<h1 id="数据库连接池（DataSource）"><a href="#数据库连接池（DataSource）" class="headerlink" title="数据库连接池（DataSource）"></a>数据库连接池（DataSource）</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>是一个存放数据库连接的容器。  – 系统初始化后，容器自动被创建，容器会申请一些连接对象，用户来访问数据库时，                     																从容器中获取对象；用户使用完后，归还给容器。</p>
<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-C3p0"><a href="#1-C3p0" class="headerlink" title="1.C3p0"></a>1.C3p0</h4><p>数据库连接池技术</p>
<h4 id="2-Druid"><a href="#2-Druid" class="headerlink" title="2.Druid"></a>2.Druid</h4><p>阿里巴巴提供的数据库连接池实现技术</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>DataSource接口由具体的供应商进行实现。</p>
<h4 id="1-基本实现"><a href="#1-基本实现" class="headerlink" title="1.基本实现"></a>1.基本实现</h4><p>生成标准的Connection对象</p>
<h4 id="2-连接池实现"><a href="#2-连接池实现" class="headerlink" title="2.连接池实现"></a>2.连接池实现</h4><p>生成将自动参与连接池的Connection对象</p>
<h4 id="3-分布式事务实现"><a href="#3-分布式事务实现" class="headerlink" title="3.分布式事务实现"></a>3.分布式事务实现</h4><p>生成可以用于分布式事务的Connection对象，并且几乎总是参与连接池。</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="应用价值"><a href="#应用价值" class="headerlink" title="应用价值"></a>应用价值</h3><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>1.节约资源</p>
<p>2.用户高效访问</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>是一个存放数据库连接的容器。  – 系统初始化后，容器自动被创建，容器会申请一些连接对象，用户来访问数据库时，                     																从容器中获取对象；用户使用完后，归还给容器。</p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-C3p0-1"><a href="#1-C3p0-1" class="headerlink" title="1.C3p0"></a>1.C3p0</h4><p>数据库连接池技术</p>
<h4 id="2-Druid-1"><a href="#2-Druid-1" class="headerlink" title="2.Druid"></a>2.Druid</h4><p>阿里巴巴提供的数据库连接池实现技术</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><p>DataSource接口由具体的供应商进行实现。</p>
<h4 id="1-基本实现-1"><a href="#1-基本实现-1" class="headerlink" title="1.基本实现"></a>1.基本实现</h4><p>生成标准的Connection对象</p>
<h4 id="2-连接池实现-1"><a href="#2-连接池实现-1" class="headerlink" title="2.连接池实现"></a>2.连接池实现</h4><p>生成将自动参与连接池的Connection对象</p>
<h4 id="3-分布式事务实现-1"><a href="#3-分布式事务实现-1" class="headerlink" title="3.分布式事务实现"></a>3.分布式事务实现</h4><p>生成可以用于分布式事务的Connection对象，并且几乎总是参与连接池。</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="应用价值-1"><a href="#应用价值-1" class="headerlink" title="应用价值"></a>应用价值</h3><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><p>1.节约资源</p>
<p>2.用户高效访问e）</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>是一个存放数据库连接的容器。  – 系统初始化后，容器自动被创建，容器会申请一些连接对象，用户来访问数据库时，                     																从容器中获取对象；用户使用完后，归还给容器。</p>
<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-C3p0-2"><a href="#1-C3p0-2" class="headerlink" title="1.C3p0"></a>1.C3p0</h4><p>数据库连接池技术</p>
<h4 id="2-Druid-2"><a href="#2-Druid-2" class="headerlink" title="2.Druid"></a>2.Druid</h4><p>阿里巴巴提供的数据库连接池实现技术</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><p>DataSource接口由具体的供应商进行实现。</p>
<h4 id="1-基本实现-2"><a href="#1-基本实现-2" class="headerlink" title="1.基本实现"></a>1.基本实现</h4><p>生成标准的Connection对象</p>
<h4 id="2-连接池实现-2"><a href="#2-连接池实现-2" class="headerlink" title="2.连接池实现"></a>2.连接池实现</h4><p>生成将自动参与连接池的Connection对象</p>
<h4 id="3-分布式事务实现-2"><a href="#3-分布式事务实现-2" class="headerlink" title="3.分布式事务实现"></a>3.分布式事务实现</h4><p>生成可以用于分布式事务的Connection对象，并且几乎总是参与连接池。</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="应用价值-2"><a href="#应用价值-2" class="headerlink" title="应用价值"></a>应用价值</h3><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><p>1.节约资源</p>
<p>2.用户高效访问</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>是一个存放数据库连接的容器。  – 系统初始化后，容器自动被创建，容器会申请一些连接对象，用户来访问数据库时，                     																从容器中获取对象；用户使用完后，归还给容器。</p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-C3p0-3"><a href="#1-C3p0-3" class="headerlink" title="1.C3p0"></a>1.C3p0</h4><p>数据库连接池技术</p>
<h4 id="2-Druid-3"><a href="#2-Druid-3" class="headerlink" title="2.Druid"></a>2.Druid</h4><p>阿里巴巴提供的数据库连接池实现技术</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><p>DataSource接口由具体的供应商进行实现。</p>
<h4 id="1-基本实现-3"><a href="#1-基本实现-3" class="headerlink" title="1.基本实现"></a>1.基本实现</h4><p>生成标准的Connection对象</p>
<h4 id="2-连接池实现-3"><a href="#2-连接池实现-3" class="headerlink" title="2.连接池实现"></a>2.连接池实现</h4><p>生成将自动参与连接池的Connection对象</p>
<h4 id="3-分布式事务实现-3"><a href="#3-分布式事务实现-3" class="headerlink" title="3.分布式事务实现"></a>3.分布式事务实现</h4><p>生成可以用于分布式事务的Connection对象，并且几乎总是参与连接池。</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="应用价值-3"><a href="#应用价值-3" class="headerlink" title="应用价值"></a>应用价值</h3><h4 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a>优点</h4><p>1.节约资源</p>
<p>2.用户高效访问</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>文件下载</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<h1 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-请求参数，文件名称"><a href="#1-请求参数，文件名称" class="headerlink" title="1.请求参数，文件名称"></a>1.请求参数，文件名称</h3><p>getParameter（）</p>
<h3 id="2-使用字节输入流加载文件进内存"><a href="#2-使用字节输入流加载文件进内存" class="headerlink" title="2.使用字节输入流加载文件进内存"></a>2.使用字节输入流加载文件进内存</h3><h4 id="①找到文件服务器路径"><a href="#①找到文件服务器路径" class="headerlink" title="①找到文件服务器路径"></a>①找到文件服务器路径</h4><p>getServletContext（）</p>
<p>再用getRealPath（）</p>
<h4 id="②用字节流关联。"><a href="#②用字节流关联。" class="headerlink" title="②用字节流关联。"></a>②用字节流关联。</h4><p>new FileInputStream（）</p>
<h3 id="3-设置response的响应头"><a href="#3-设置response的响应头" class="headerlink" title="3.设置response的响应头"></a>3.设置response的响应头</h3><h4 id="①设置头类型：content-type"><a href="#①设置头类型：content-type" class="headerlink" title="①设置头类型：content-type"></a>①设置头类型：content-type</h4><p><img src="/./../TyporaImage/image-20240708171049742.png" alt="image-20240708171049742"></p>
<h4 id="②设置头打开方式：content-disposition"><a href="#②设置头打开方式：content-disposition" class="headerlink" title="②设置头打开方式：content-disposition"></a>②设置头打开方式：content-disposition</h4><p><img src="/./../TyporaImage/image-20240708171341725.png" alt="image-20240708171341725"></p>
<h3 id="4-将输入流写到输出流中"><a href="#4-将输入流写到输出流中" class="headerlink" title="4.将输入流写到输出流中"></a>4.将输入流写到输出流中</h3><p><img src="/./../TyporaImage/image-20240708171448027.png" alt="image-20240708171448027"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>Ⅰ.中文文件名问题</p>
<p>解决方式</p>
<p>1.获取客户端试用的浏览器版本信息</p>
<p>getHeader（“user-agent”）</p>
<p>2.根据不同版本信息，响应不同数据</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-请求参数，文件名称-1"><a href="#1-请求参数，文件名称-1" class="headerlink" title="1.请求参数，文件名称"></a>1.请求参数，文件名称</h3><p>getParameter（）</p>
<h3 id="2-使用字节输入流加载文件进内存-1"><a href="#2-使用字节输入流加载文件进内存-1" class="headerlink" title="2.使用字节输入流加载文件进内存"></a>2.使用字节输入流加载文件进内存</h3><h4 id="①找到文件服务器路径-1"><a href="#①找到文件服务器路径-1" class="headerlink" title="①找到文件服务器路径"></a>①找到文件服务器路径</h4><p>getServletContext（）</p>
<p>再用getRealPath（）</p>
<h4 id="②用字节流关联。-1"><a href="#②用字节流关联。-1" class="headerlink" title="②用字节流关联。"></a>②用字节流关联。</h4><p>new FileInputStream（）</p>
<h3 id="3-设置response的响应头-1"><a href="#3-设置response的响应头-1" class="headerlink" title="3.设置response的响应头"></a>3.设置response的响应头</h3><h4 id="①设置头类型：content-type-1"><a href="#①设置头类型：content-type-1" class="headerlink" title="①设置头类型：content-type"></a>①设置头类型：content-type</h4><p><img src="/./../TyporaImage/image-20240708171049742.png" alt="image-20240708171049742"></p>
<h4 id="②设置头打开方式：content-disposition-1"><a href="#②设置头打开方式：content-disposition-1" class="headerlink" title="②设置头打开方式：content-disposition"></a>②设置头打开方式：content-disposition</h4><p><img src="/./../TyporaImage/image-20240708171341725.png" alt="image-20240708171341725"></p>
<h3 id="4-将输入流写到输出流中-1"><a href="#4-将输入流写到输出流中-1" class="headerlink" title="4.将输入流写到输出流中"></a>4.将输入流写到输出流中</h3><p><img src="/./../TyporaImage/image-20240708171448027.png" alt="image-20240708171448027"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>Ⅰ.中文文件名问题</p>
<p>解决方式</p>
<p>1.获取客户端试用的浏览器版本信息</p>
<p>getHeader（“user-agent”）</p>
<p>2.根据不同版本信息，响应不同数据下载</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-请求参数，文件名称-2"><a href="#1-请求参数，文件名称-2" class="headerlink" title="1.请求参数，文件名称"></a>1.请求参数，文件名称</h3><p>getParameter（）</p>
<h3 id="2-使用字节输入流加载文件进内存-2"><a href="#2-使用字节输入流加载文件进内存-2" class="headerlink" title="2.使用字节输入流加载文件进内存"></a>2.使用字节输入流加载文件进内存</h3><h4 id="①找到文件服务器路径-2"><a href="#①找到文件服务器路径-2" class="headerlink" title="①找到文件服务器路径"></a>①找到文件服务器路径</h4><p>getServletContext（）</p>
<p>再用getRealPath（）</p>
<h4 id="②用字节流关联。-2"><a href="#②用字节流关联。-2" class="headerlink" title="②用字节流关联。"></a>②用字节流关联。</h4><p>new FileInputStream（）</p>
<h3 id="3-设置response的响应头-2"><a href="#3-设置response的响应头-2" class="headerlink" title="3.设置response的响应头"></a>3.设置response的响应头</h3><h4 id="①设置头类型：content-type-2"><a href="#①设置头类型：content-type-2" class="headerlink" title="①设置头类型：content-type"></a>①设置头类型：content-type</h4><p><img src="/./../TyporaImage/image-20240708171049742.png" alt="image-20240708171049742"></p>
<h4 id="②设置头打开方式：content-disposition-2"><a href="#②设置头打开方式：content-disposition-2" class="headerlink" title="②设置头打开方式：content-disposition"></a>②设置头打开方式：content-disposition</h4><p><img src="/./../TyporaImage/image-20240708171341725.png" alt="image-20240708171341725"></p>
<h3 id="4-将输入流写到输出流中-2"><a href="#4-将输入流写到输出流中-2" class="headerlink" title="4.将输入流写到输出流中"></a>4.将输入流写到输出流中</h3><p><img src="/./../TyporaImage/image-20240708171448027.png" alt="image-20240708171448027"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>Ⅰ.中文文件名问题</p>
<p>解决方式</p>
<p>1.获取客户端试用的浏览器版本信息</p>
<p>getHeader（“user-agent”）</p>
<p>2.根据不同版本信息，响应不同数据</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-请求参数，文件名称-3"><a href="#1-请求参数，文件名称-3" class="headerlink" title="1.请求参数，文件名称"></a>1.请求参数，文件名称</h3><p>getParameter（）</p>
<h3 id="2-使用字节输入流加载文件进内存-3"><a href="#2-使用字节输入流加载文件进内存-3" class="headerlink" title="2.使用字节输入流加载文件进内存"></a>2.使用字节输入流加载文件进内存</h3><h4 id="①找到文件服务器路径-3"><a href="#①找到文件服务器路径-3" class="headerlink" title="①找到文件服务器路径"></a>①找到文件服务器路径</h4><p>getServletContext（）</p>
<p>再用getRealPath（）</p>
<h4 id="②用字节流关联。-3"><a href="#②用字节流关联。-3" class="headerlink" title="②用字节流关联。"></a>②用字节流关联。</h4><p>new FileInputStream（）</p>
<h3 id="3-设置response的响应头-3"><a href="#3-设置response的响应头-3" class="headerlink" title="3.设置response的响应头"></a>3.设置response的响应头</h3><h4 id="①设置头类型：content-type-3"><a href="#①设置头类型：content-type-3" class="headerlink" title="①设置头类型：content-type"></a>①设置头类型：content-type</h4><p><img src="/./../TyporaImage/image-20240708171049742.png" alt="image-20240708171049742"></p>
<h4 id="②设置头打开方式：content-disposition-3"><a href="#②设置头打开方式：content-disposition-3" class="headerlink" title="②设置头打开方式：content-disposition"></a>②设置头打开方式：content-disposition</h4><p><img src="/./../TyporaImage/image-20240708171341725.png" alt="image-20240708171341725"></p>
<h3 id="4-将输入流写到输出流中-3"><a href="#4-将输入流写到输出流中-3" class="headerlink" title="4.将输入流写到输出流中"></a>4.将输入流写到输出流中</h3><p><img src="/./../TyporaImage/image-20240708171448027.png" alt="image-20240708171448027"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>Ⅰ.中文文件名问题</p>
<p>解决方式</p>
<p>1.获取客户端试用的浏览器版本信息</p>
<p>getHeader（“user-agent”）</p>
<p>2.根据不同版本信息，响应不同数据</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>文件标签</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E6%96%87%E4%BB%B6%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="文件标签"><a href="#文件标签" class="headerlink" title="文件标签"></a>文件标签</h1><h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><p><img src="/../TyporaImage/image-20240509213945728.png" alt="image-20240509213945728"></p>
<h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><p><img src="/../TyporaImage/image-20240509213945728.png" alt="image-20240509213945728">标签</p>
<h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><p><img src="/../TyporaImage/image-20240509213945728.png" alt="image-20240509213945728"></p>
<h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><p><img src="/../TyporaImage/image-20240509213945728.png" alt="image-20240509213945728"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>文本标签</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="文本标签"><a href="#文本标签" class="headerlink" title="文本标签"></a>文本标签</h1><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>和文本有关的标签</p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="../TyporaImage/image-20240509214207010.png" alt="image-20240509214207010" style="zoom:50%;" />### 定义</p>
<p>和文本有关的标签</p>
<h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="../TyporaImage/image-20240509214207010.png" alt="image-20240509214207010" style="zoom:50%;" />标签</p>
<h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>和文本有关的标签</p>
<h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="../TyporaImage/image-20240509214207010.png" alt="image-20240509214207010" style="zoom:50%;" />### 定义</p>
<p>和文本有关的标签</p>
<h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><img src="../TyporaImage/image-20240509214207010.png" alt="image-20240509214207010" style="zoom:50%;" />]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>注解</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h1><h2 id="是什么："><a href="#是什么：" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h3><p>给计算机看的，用于说明的。</p>
<h3 id="形式："><a href="#形式：" class="headerlink" title="形式："></a>形式：</h3><p>public @interface 注解名称{}</p>
<h3 id="本质："><a href="#本质：" class="headerlink" title="本质："></a>本质：</h3><p>是一个接口</p>
<h3 id="组成："><a href="#组成：" class="headerlink" title="组成："></a>组成：</h3><p>内置注解：</p>
<p>1、@override</p>
<p>2、@Deprecated</p>
<p>3.@Suppresswarning</p>
<p>自定义注解：</p>
<p>1.自定义属性的返回值可以是基本数据类型、String、枚举、注解、数组。</p>
<p>2.使用注解时，需要给属性赋值，也可以提前用default进行默认初始化。</p>
<p>3.如果只有一个属性进行复制，并且属性名称为value那么可以直接进行定义数值。</p>
<h2 id="怎么做："><a href="#怎么做：" class="headerlink" title="怎么做："></a>怎么做：</h2><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景:"></a>应用场景:</h3><p>1.编写档案。</p>
<p>2、代码分析</p>
<p>3、编译检查</p>
<p>4.解析注解</p>
<p>   首先获取该类的字节码对象，其次获取该类对应的注解对象，最后调用注解对象中定义的抽象方法，获得返回值。</p>
<h2 id="为什么："><a href="#为什么：" class="headerlink" title="为什么："></a>为什么：</h2><h2 id="是什么：-1"><a href="#是什么：-1" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义：-1"><a href="#定义：-1" class="headerlink" title="定义："></a>定义：</h3><p>给计算机看的，用于说明的。</p>
<h3 id="形式：-1"><a href="#形式：-1" class="headerlink" title="形式："></a>形式：</h3><p>public @interface 注解名称{}</p>
<h3 id="本质：-1"><a href="#本质：-1" class="headerlink" title="本质："></a>本质：</h3><p>是一个接口</p>
<h3 id="组成：-1"><a href="#组成：-1" class="headerlink" title="组成："></a>组成：</h3><p>内置注解：</p>
<p>1、@override</p>
<p>2、@Deprecated</p>
<p>3.@Suppresswarning</p>
<p>自定义注解：</p>
<p>1.自定义属性的返回值可以是基本数据类型、String、枚举、注解、数组。</p>
<p>2.使用注解时，需要给属性赋值，也可以提前用default进行默认初始化。</p>
<p>3.如果只有一个属性进行复制，并且属性名称为value那么可以直接进行定义数值。</p>
<h2 id="怎么做：-1"><a href="#怎么做：-1" class="headerlink" title="怎么做："></a>怎么做：</h2><h3 id="应用场景-1"><a href="#应用场景-1" class="headerlink" title="应用场景:"></a>应用场景:</h3><p>1.编写档案。</p>
<p>2、代码分析</p>
<p>3、编译检查</p>
<p>4.解析注解</p>
<p>   首先获取该类的字节码对象，其次获取该类对应的注解对象，最后调用注解对象中定义的抽象方法，获得返回值。</p>
<h2 id="为什么：注解"><a href="#为什么：注解" class="headerlink" title="为什么：注解"></a>为什么：注解</h2><h2 id="是什么：-2"><a href="#是什么：-2" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义：-2"><a href="#定义：-2" class="headerlink" title="定义："></a>定义：</h3><p>给计算机看的，用于说明的。</p>
<h3 id="形式：-2"><a href="#形式：-2" class="headerlink" title="形式："></a>形式：</h3><p>public @interface 注解名称{}</p>
<h3 id="本质：-2"><a href="#本质：-2" class="headerlink" title="本质："></a>本质：</h3><p>是一个接口</p>
<h3 id="组成：-2"><a href="#组成：-2" class="headerlink" title="组成："></a>组成：</h3><p>内置注解：</p>
<p>1、@override</p>
<p>2、@Deprecated</p>
<p>3.@Suppresswarning</p>
<p>自定义注解：</p>
<p>1.自定义属性的返回值可以是基本数据类型、String、枚举、注解、数组。</p>
<p>2.使用注解时，需要给属性赋值，也可以提前用default进行默认初始化。</p>
<p>3.如果只有一个属性进行复制，并且属性名称为value那么可以直接进行定义数值。</p>
<h2 id="怎么做：-2"><a href="#怎么做：-2" class="headerlink" title="怎么做："></a>怎么做：</h2><h3 id="应用场景-2"><a href="#应用场景-2" class="headerlink" title="应用场景:"></a>应用场景:</h3><p>1.编写档案。</p>
<p>2、代码分析</p>
<p>3、编译检查</p>
<p>4.解析注解</p>
<p>   首先获取该类的字节码对象，其次获取该类对应的注解对象，最后调用注解对象中定义的抽象方法，获得返回值。</p>
<h2 id="为什么：-1"><a href="#为什么：-1" class="headerlink" title="为什么："></a>为什么：</h2><h2 id="是什么：-3"><a href="#是什么：-3" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义：-3"><a href="#定义：-3" class="headerlink" title="定义："></a>定义：</h3><p>给计算机看的，用于说明的。</p>
<h3 id="形式：-3"><a href="#形式：-3" class="headerlink" title="形式："></a>形式：</h3><p>public @interface 注解名称{}</p>
<h3 id="本质：-3"><a href="#本质：-3" class="headerlink" title="本质："></a>本质：</h3><p>是一个接口</p>
<h3 id="组成：-3"><a href="#组成：-3" class="headerlink" title="组成："></a>组成：</h3><p>内置注解：</p>
<p>1、@override</p>
<p>2、@Deprecated</p>
<p>3.@Suppresswarning</p>
<p>自定义注解：</p>
<p>1.自定义属性的返回值可以是基本数据类型、String、枚举、注解、数组。</p>
<p>2.使用注解时，需要给属性赋值，也可以提前用default进行默认初始化。</p>
<p>3.如果只有一个属性进行复制，并且属性名称为value那么可以直接进行定义数值。</p>
<h2 id="怎么做：-3"><a href="#怎么做：-3" class="headerlink" title="怎么做："></a>怎么做：</h2><h3 id="应用场景-3"><a href="#应用场景-3" class="headerlink" title="应用场景:"></a>应用场景:</h3><p>1.编写档案。</p>
<p>2、代码分析</p>
<p>3、编译检查</p>
<p>4.解析注解</p>
<p>   首先获取该类的字节码对象，其次获取该类对应的注解对象，最后调用注解对象中定义的抽象方法，获得返回值。</p>
<h2 id="为什么：-2"><a href="#为什么：-2" class="headerlink" title="为什么："></a>为什么：</h2>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>流程控制语句</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<h1 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h1><h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><p><img src="/../TyporaImage/image-20240515205719039.png" alt="image-20240515205719039"></p>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="怎么用-1"><a href="#怎么用-1" class="headerlink" title="怎么用"></a>怎么用</h2><p><img src="/../TyporaImage/image-20240515205719039.png" alt="image-20240515205719039"></p>
<p>##语句</p>
<h2 id="怎么用-2"><a href="#怎么用-2" class="headerlink" title="怎么用"></a>怎么用</h2><p><img src="/../TyporaImage/image-20240515205719039.png" alt="image-20240515205719039"></p>
<h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h2 id="怎么用-3"><a href="#怎么用-3" class="headerlink" title="怎么用"></a>怎么用</h2><p><img src="/../TyporaImage/image-20240515205719039.png" alt="image-20240515205719039"></p>
<h2 id="-2"><a href="#-2" class="headerlink" title=""></a></h2>]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>盒子模型</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h1><h2 id="是什么："><a href="#是什么：" class="headerlink" title="是什么："></a>是什么：</h2><ul>
<li><h3 id="定义："><a href="#定义：" class="headerlink" title="定义："></a><strong>定义</strong>：</h3><p>盒子模型是CSS中的一个核心概念，它描述了如何计算一个元素的总宽度和高度。</p>
</li>
<li><h3 id="结构形式："><a href="#结构形式：" class="headerlink" title="结构形式："></a><strong>结构形式</strong>：</h3><p>内向外依次为：内容（content）、内边距（padding）、边框（border）和外边距（margin）.</p>
</li>
<li><h3 id="分类和组成："><a href="#分类和组成：" class="headerlink" title="分类和组成："></a><strong>分类和组成</strong>：</h3><ul>
<li>内容（Content）：元素的实际内容，如文本或图像。</li>
<li>内边距（Padding）：内容与边框之间的空间。</li>
<li>边框（Border）：围绕内容和内边距的线条。</li>
<li>外边距（Margin）：边框外的空白区域，用于与其他元素分隔。</li>
</ul>
</li>
<li><h3 id="所属领域："><a href="#所属领域：" class="headerlink" title="所属领域："></a><strong>所属领域</strong>：</h3><p>盒子模型属于前端开发领域，特别是CSS布局和设计的部分。</p>
</li>
<li><h3 id="特征："><a href="#特征：" class="headerlink" title="特征："></a><strong>特征</strong>：</h3><ul>
<li>可预测性：通过精确控制内容的宽高以及内边距、边框和外边距，可以精确控制元素在页面上的布局。</li>
<li>灵活性：盒子模型适用于各种元素，可以创建复杂和响应式的布局。</li>
<li>标准化：盒子模型是Web标准的一部分，被所有现代浏览器支持。</li>
</ul>
</li>
</ul>
<h2 id="怎么用："><a href="#怎么用：" class="headerlink" title="怎么用："></a><strong>怎么用</strong>：</h2><ul>
<li><h3 id="作用："><a href="#作用：" class="headerlink" title="作用："></a><strong>作用</strong>：</h3><p>盒子模型用于控制元素在页面上的布局、尺寸和间距，是创建良好排版和设计的基石。</p>
</li>
<li><h3 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a><strong>使用方法</strong>：</h3><p><img src="/../TyporaImage/image-20240512171817653.png" alt="image-20240512171817653"></p>
</li>
<li><h3 id="最佳实践："><a href="#最佳实践：" class="headerlink" title="最佳实践："></a><strong>最佳实践</strong>：</h3><p>在使用盒子模型时，应遵循最佳实践，如使用CSS Reset来统一不同浏览器的默认样式，使用CSS Frameworks（如Bootstrap）来简化布局工作。</p>
</li>
</ul>
<h2 id="为什么："><a href="#为什么：" class="headerlink" title="为什么："></a><strong>为什么</strong>：</h2><ul>
<li><h3 id="目的："><a href="#目的：" class="headerlink" title="目的："></a><strong>目的</strong>：</h3><p>使用盒子模型的目的是为了创建一致、可预测且响应式的网页布局。</p>
</li>
<li><h3 id="应用价值："><a href="#应用价值：" class="headerlink" title="应用价值："></a><strong>应用价值</strong>：</h3><p>盒子模型在Web设计中具有极高的应用价值，它使得开发者能够轻松控制元素的布局和间距，从而提高用户体验。</p>
</li>
<li><h3 id="基本原理："><a href="#基本原理：" class="headerlink" title="基本原理："></a><strong>基本原理</strong>：</h3><p>盒子模型的工作原理基于CSS的盒模型概念，它将每个元素视为一个矩形盒子，通过设置内容、内边距、边框和外边距来控制盒子的尺寸和位置。</p>
</li>
<li><h3 id="设计理念"><a href="#设计理念" class="headerlink" title="设计理念"></a><strong>设计理念</strong></h3><p>盒子模型的设计理念是提供一种简单、直观的方式来控制元素在页面上的布局，同时保持代码的可读性和维护性。</p>
</li>
</ul>
<h2 id="相关知识点："><a href="#相关知识点：" class="headerlink" title="相关知识点："></a><strong>相关知识点</strong>：</h2><p>盒子模型与CSS的其他知识点紧密相关，包括布局（如Flexbox和Grid）、响应式设计、媒体查询、以及CSS的显示类型（如块级元素和内联元素）。这些知识点共同构成了CSS布局和设计的完整体系。## 是什么：</p>
<ul>
<li><h3 id="定义：-1"><a href="#定义：-1" class="headerlink" title="定义："></a><strong>定义</strong>：</h3><p>盒子模型是CSS中的一个核心概念，它描述了如何计算一个元素的总宽度和高度。</p>
</li>
<li><h3 id="结构形式：-1"><a href="#结构形式：-1" class="headerlink" title="结构形式："></a><strong>结构形式</strong>：</h3><p>内向外依次为：内容（content）、内边距（padding）、边框（border）和外边距（margin）.</p>
</li>
<li><h3 id="分类和组成：-1"><a href="#分类和组成：-1" class="headerlink" title="分类和组成："></a><strong>分类和组成</strong>：</h3><ul>
<li>内容（Content）：元素的实际内容，如文本或图像。</li>
<li>内边距（Padding）：内容与边框之间的空间。</li>
<li>边框（Border）：围绕内容和内边距的线条。</li>
<li>外边距（Margin）：边框外的空白区域，用于与其他元素分隔。</li>
</ul>
</li>
<li><h3 id="所属领域：-1"><a href="#所属领域：-1" class="headerlink" title="所属领域："></a><strong>所属领域</strong>：</h3><p>盒子模型属于前端开发领域，特别是CSS布局和设计的部分。</p>
</li>
<li><h3 id="特征：-1"><a href="#特征：-1" class="headerlink" title="特征："></a><strong>特征</strong>：</h3><ul>
<li>可预测性：通过精确控制内容的宽高以及内边距、边框和外边距，可以精确控制元素在页面上的布局。</li>
<li>灵活性：盒子模型适用于各种元素，可以创建复杂和响应式的布局。</li>
<li>标准化：盒子模型是Web标准的一部分，被所有现代浏览器支持。</li>
</ul>
</li>
</ul>
<h2 id="怎么用：-1"><a href="#怎么用：-1" class="headerlink" title="怎么用："></a><strong>怎么用</strong>：</h2><ul>
<li><h3 id="作用：-1"><a href="#作用：-1" class="headerlink" title="作用："></a><strong>作用</strong>：</h3><p>盒子模型用于控制元素在页面上的布局、尺寸和间距，是创建良好排版和设计的基石。</p>
</li>
<li><h3 id="使用方法：-1"><a href="#使用方法：-1" class="headerlink" title="使用方法："></a><strong>使用方法</strong>：</h3><p><img src="/../TyporaImage/image-20240512171817653.png" alt="image-20240512171817653"></p>
</li>
<li><h3 id="最佳实践：-1"><a href="#最佳实践：-1" class="headerlink" title="最佳实践："></a><strong>最佳实践</strong>：</h3><p>在使用盒子模型时，应遵循最佳实践，如使用CSS Reset来统一不同浏览器的默认样式，使用CSS Frameworks（如Bootstrap）来简化布局工作。</p>
</li>
</ul>
<h2 id="为什么：-1"><a href="#为什么：-1" class="headerlink" title="为什么："></a><strong>为什么</strong>：</h2><ul>
<li><h3 id="目的：-1"><a href="#目的：-1" class="headerlink" title="目的："></a><strong>目的</strong>：</h3><p>使用盒子模型的目的是为了创建一致、可预测且响应式的网页布局。</p>
</li>
<li><h3 id="应用价值：-1"><a href="#应用价值：-1" class="headerlink" title="应用价值："></a><strong>应用价值</strong>：</h3><p>盒子模型在Web设计中具有极高的应用价值，它使得开发者能够轻松控制元素的布局和间距，从而提高用户体验。</p>
</li>
<li><h3 id="基本原理：-1"><a href="#基本原理：-1" class="headerlink" title="基本原理："></a><strong>基本原理</strong>：</h3><p>盒子模型的工作原理基于CSS的盒模型概念，它将每个元素视为一个矩形盒子，通过设置内容、内边距、边框和外边距来控制盒子的尺寸和位置。</p>
</li>
<li><h3 id="设计理念-1"><a href="#设计理念-1" class="headerlink" title="设计理念"></a><strong>设计理念</strong></h3><p>盒子模型的设计理念是提供一种简单、直观的方式来控制元素在页面上的布局，同时保持代码的可读性和维护性。</p>
</li>
</ul>
<h2 id="相关知识点：-1"><a href="#相关知识点：-1" class="headerlink" title="相关知识点："></a><strong>相关知识点</strong>：</h2><p>盒子模型与CSS的其他知识点紧密相关，包括布局（如Flexbox和Grid）、响应式设计、媒体查询、以及CSS的显示类型（如块级元素和内联元素）。这些知识点共同构成了CSS布局和设计的完整体系。模型</p>
<h2 id="是什么：-1"><a href="#是什么：-1" class="headerlink" title="是什么："></a>是什么：</h2><ul>
<li><h3 id="定义：-2"><a href="#定义：-2" class="headerlink" title="定义："></a><strong>定义</strong>：</h3><p>盒子模型是CSS中的一个核心概念，它描述了如何计算一个元素的总宽度和高度。</p>
</li>
<li><h3 id="结构形式：-2"><a href="#结构形式：-2" class="headerlink" title="结构形式："></a><strong>结构形式</strong>：</h3><p>内向外依次为：内容（content）、内边距（padding）、边框（border）和外边距（margin）.</p>
</li>
<li><h3 id="分类和组成：-2"><a href="#分类和组成：-2" class="headerlink" title="分类和组成："></a><strong>分类和组成</strong>：</h3><ul>
<li>内容（Content）：元素的实际内容，如文本或图像。</li>
<li>内边距（Padding）：内容与边框之间的空间。</li>
<li>边框（Border）：围绕内容和内边距的线条。</li>
<li>外边距（Margin）：边框外的空白区域，用于与其他元素分隔。</li>
</ul>
</li>
<li><h3 id="所属领域：-2"><a href="#所属领域：-2" class="headerlink" title="所属领域："></a><strong>所属领域</strong>：</h3><p>盒子模型属于前端开发领域，特别是CSS布局和设计的部分。</p>
</li>
<li><h3 id="特征：-2"><a href="#特征：-2" class="headerlink" title="特征："></a><strong>特征</strong>：</h3><ul>
<li>可预测性：通过精确控制内容的宽高以及内边距、边框和外边距，可以精确控制元素在页面上的布局。</li>
<li>灵活性：盒子模型适用于各种元素，可以创建复杂和响应式的布局。</li>
<li>标准化：盒子模型是Web标准的一部分，被所有现代浏览器支持。</li>
</ul>
</li>
</ul>
<h2 id="怎么用：-2"><a href="#怎么用：-2" class="headerlink" title="怎么用："></a><strong>怎么用</strong>：</h2><ul>
<li><h3 id="作用：-2"><a href="#作用：-2" class="headerlink" title="作用："></a><strong>作用</strong>：</h3><p>盒子模型用于控制元素在页面上的布局、尺寸和间距，是创建良好排版和设计的基石。</p>
</li>
<li><h3 id="使用方法：-2"><a href="#使用方法：-2" class="headerlink" title="使用方法："></a><strong>使用方法</strong>：</h3><p><img src="/../TyporaImage/image-20240512171817653.png" alt="image-20240512171817653"></p>
</li>
<li><h3 id="最佳实践：-2"><a href="#最佳实践：-2" class="headerlink" title="最佳实践："></a><strong>最佳实践</strong>：</h3><p>在使用盒子模型时，应遵循最佳实践，如使用CSS Reset来统一不同浏览器的默认样式，使用CSS Frameworks（如Bootstrap）来简化布局工作。</p>
</li>
</ul>
<h2 id="为什么：-2"><a href="#为什么：-2" class="headerlink" title="为什么："></a><strong>为什么</strong>：</h2><ul>
<li><h3 id="目的：-2"><a href="#目的：-2" class="headerlink" title="目的："></a><strong>目的</strong>：</h3><p>使用盒子模型的目的是为了创建一致、可预测且响应式的网页布局。</p>
</li>
<li><h3 id="应用价值：-2"><a href="#应用价值：-2" class="headerlink" title="应用价值："></a><strong>应用价值</strong>：</h3><p>盒子模型在Web设计中具有极高的应用价值，它使得开发者能够轻松控制元素的布局和间距，从而提高用户体验。</p>
</li>
<li><h3 id="基本原理：-2"><a href="#基本原理：-2" class="headerlink" title="基本原理："></a><strong>基本原理</strong>：</h3><p>盒子模型的工作原理基于CSS的盒模型概念，它将每个元素视为一个矩形盒子，通过设置内容、内边距、边框和外边距来控制盒子的尺寸和位置。</p>
</li>
<li><h3 id="设计理念-2"><a href="#设计理念-2" class="headerlink" title="设计理念"></a><strong>设计理念</strong></h3><p>盒子模型的设计理念是提供一种简单、直观的方式来控制元素在页面上的布局，同时保持代码的可读性和维护性。</p>
</li>
</ul>
<h2 id="相关知识点：-2"><a href="#相关知识点：-2" class="headerlink" title="相关知识点："></a><strong>相关知识点</strong>：</h2><p>盒子模型与CSS的其他知识点紧密相关，包括布局（如Flexbox和Grid）、响应式设计、媒体查询、以及CSS的显示类型（如块级元素和内联元素）。这些知识点共同构成了CSS布局和设计的完整体系。## 是什么：</p>
<ul>
<li><h3 id="定义：-3"><a href="#定义：-3" class="headerlink" title="定义："></a><strong>定义</strong>：</h3><p>盒子模型是CSS中的一个核心概念，它描述了如何计算一个元素的总宽度和高度。</p>
</li>
<li><h3 id="结构形式：-3"><a href="#结构形式：-3" class="headerlink" title="结构形式："></a><strong>结构形式</strong>：</h3><p>内向外依次为：内容（content）、内边距（padding）、边框（border）和外边距（margin）.</p>
</li>
<li><h3 id="分类和组成：-3"><a href="#分类和组成：-3" class="headerlink" title="分类和组成："></a><strong>分类和组成</strong>：</h3><ul>
<li>内容（Content）：元素的实际内容，如文本或图像。</li>
<li>内边距（Padding）：内容与边框之间的空间。</li>
<li>边框（Border）：围绕内容和内边距的线条。</li>
<li>外边距（Margin）：边框外的空白区域，用于与其他元素分隔。</li>
</ul>
</li>
<li><h3 id="所属领域：-3"><a href="#所属领域：-3" class="headerlink" title="所属领域："></a><strong>所属领域</strong>：</h3><p>盒子模型属于前端开发领域，特别是CSS布局和设计的部分。</p>
</li>
<li><h3 id="特征：-3"><a href="#特征：-3" class="headerlink" title="特征："></a><strong>特征</strong>：</h3><ul>
<li>可预测性：通过精确控制内容的宽高以及内边距、边框和外边距，可以精确控制元素在页面上的布局。</li>
<li>灵活性：盒子模型适用于各种元素，可以创建复杂和响应式的布局。</li>
<li>标准化：盒子模型是Web标准的一部分，被所有现代浏览器支持。</li>
</ul>
</li>
</ul>
<h2 id="怎么用：-3"><a href="#怎么用：-3" class="headerlink" title="怎么用："></a><strong>怎么用</strong>：</h2><ul>
<li><h3 id="作用：-3"><a href="#作用：-3" class="headerlink" title="作用："></a><strong>作用</strong>：</h3><p>盒子模型用于控制元素在页面上的布局、尺寸和间距，是创建良好排版和设计的基石。</p>
</li>
<li><h3 id="使用方法：-3"><a href="#使用方法：-3" class="headerlink" title="使用方法："></a><strong>使用方法</strong>：</h3><p><img src="/../TyporaImage/image-20240512171817653.png" alt="image-20240512171817653"></p>
</li>
<li><h3 id="最佳实践：-3"><a href="#最佳实践：-3" class="headerlink" title="最佳实践："></a><strong>最佳实践</strong>：</h3><p>在使用盒子模型时，应遵循最佳实践，如使用CSS Reset来统一不同浏览器的默认样式，使用CSS Frameworks（如Bootstrap）来简化布局工作。</p>
</li>
</ul>
<h2 id="为什么：-3"><a href="#为什么：-3" class="headerlink" title="为什么："></a><strong>为什么</strong>：</h2><ul>
<li><h3 id="目的：-3"><a href="#目的：-3" class="headerlink" title="目的："></a><strong>目的</strong>：</h3><p>使用盒子模型的目的是为了创建一致、可预测且响应式的网页布局。</p>
</li>
<li><h3 id="应用价值：-3"><a href="#应用价值：-3" class="headerlink" title="应用价值："></a><strong>应用价值</strong>：</h3><p>盒子模型在Web设计中具有极高的应用价值，它使得开发者能够轻松控制元素的布局和间距，从而提高用户体验。</p>
</li>
<li><h3 id="基本原理：-3"><a href="#基本原理：-3" class="headerlink" title="基本原理："></a><strong>基本原理</strong>：</h3><p>盒子模型的工作原理基于CSS的盒模型概念，它将每个元素视为一个矩形盒子，通过设置内容、内边距、边框和外边距来控制盒子的尺寸和位置。</p>
</li>
<li><h3 id="设计理念-3"><a href="#设计理念-3" class="headerlink" title="设计理念"></a><strong>设计理念</strong></h3><p>盒子模型的设计理念是提供一种简单、直观的方式来控制元素在页面上的布局，同时保持代码的可读性和维护性。</p>
</li>
</ul>
<h2 id="相关知识点：-3"><a href="#相关知识点：-3" class="headerlink" title="相关知识点："></a><strong>相关知识点</strong>：</h2><p>盒子模型与CSS的其他知识点紧密相关，包括布局（如Flexbox和Grid）、响应式设计、媒体查询、以及CSS的显示类型（如块级元素和内联元素）。这些知识点共同构成了CSS布局和设计的完整体系。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>约束</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E7%BA%A6%E6%9D%9F/</url>
    <content><![CDATA[<h1 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h1><h2 id="是什么："><a href="#是什么：" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>对表中的数据进行限制，保证数据的正确性、有效性和完整性。</p>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>非空约束：not null              某一列的值不能为null。</p>
<p>唯一约束：unique              某一列的值不能重复。</p>
<p>主键约束：primary key         </p>
<p>外键约束：foreign key        </p>
<h2 id="怎么做："><a href="#怎么做：" class="headerlink" title="怎么做："></a>怎么做：</h2><h3 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h3><h4 id="创建："><a href="#创建：" class="headerlink" title="创建："></a>创建：</h4><p>create table 表名（</p>
<p>name varchar（20 ） not null</p>
<p>）；</p>
<h4 id="添加："><a href="#添加：" class="headerlink" title="添加："></a>添加：</h4><p> alter  table  表名  modify  列名   name varchar（20 ）；</p>
<h4 id="修改："><a href="#修改：" class="headerlink" title="修改："></a>修改：</h4><p>alter  table  表名 modify   列名   name varchar（20 ）not null；</p>
<h3 id="唯一约束"><a href="#唯一约束" class="headerlink" title="唯一约束"></a>唯一约束</h3><h4 id="添加：-1"><a href="#添加：-1" class="headerlink" title="添加："></a>添加：</h4><p>create table 表名（</p>
<p>列名 varchar（20） unique</p>
<p>）；</p>
<h4 id="删除："><a href="#删除：" class="headerlink" title="删除："></a>删除：</h4><p>alter   table 表名	 drop  index 列名；</p>
<h4 id="修改：-1"><a href="#修改：-1" class="headerlink" title="修改："></a>修改：</h4><p>alter table 表名 modify 列名 varchar（20） unique；</p>
<p>PS：可以有null值，但是只能有一个。</p>
<h3 id="主键约束"><a href="#主键约束" class="headerlink" title="主键约束"></a>主键约束</h3><h4 id="添加：-2"><a href="#添加：-2" class="headerlink" title="添加："></a>添加：</h4><p>create table 表名（</p>
<p>列名 数据类型 primary key</p>
<p>）；</p>
<h4 id="删除：-1"><a href="#删除：-1" class="headerlink" title="删除："></a>删除：</h4><p>alter  table  表名  drop primary key； </p>
<h4 id="修改：-2"><a href="#修改：-2" class="headerlink" title="修改："></a>修改：</h4><p>alter table 表名 modify  列名 数据类型 primary key；</p>
<h4 id="自动增长："><a href="#自动增长：" class="headerlink" title="自动增长："></a>自动增长：</h4><p>添加：</p>
<p>create table 表名（</p>
<p>列名 数据类型 primary key  auto_increment</p>
<p>）；</p>
<p>删除：</p>
<p>alter  table 表名 modify 列名1 数据类型1； </p>
<p>修改：</p>
<p>alter  table 表名 modify 列名1 数据类型1 auto_increment； </p>
<p>PS：</p>
<p>非空且唯一</p>
<p>一张表只能有一个字段为主键</p>
<h3 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h3><h4 id="添加：-3"><a href="#添加：-3" class="headerlink" title="添加："></a>添加：</h4><p>create table 表名（</p>
<p>…….，</p>
<p>这一行是外键列，</p>
<p>constraint 外键名称 foreign key  外键列名称 references 主表列名称</p>
<p>）；</p>
<h4 id="删除：-2"><a href="#删除：-2" class="headerlink" title="删除："></a>删除：</h4><p>alter table 表名  drop foreign key  外键名；</p>
<h4 id="修改：-3"><a href="#修改：-3" class="headerlink" title="修改："></a>修改：</h4><p>alter table 表名 add constraint 外键名称 foreign key （外键列名称） references 	</p>
<p>主表名称（主表列名称）；</p>
<h4 id="级联操作："><a href="#级联操作：" class="headerlink" title="级联操作："></a>级联操作：</h4><p>添加：</p>
<p>alter table 表名 add constraint 外键名称 foreign key （外键列名称） references 	</p>
<p>主表名称（主表列名称） on <strong>update</strong> cascade；</p>
<p>删除：</p>
<p>alter table 表名 add constraint 外键名称 foreign key （外键列名称） references 	</p>
<p>主表名称（主表列名称） on <strong>delete</strong> cascade；</p>
<h2 id="为什么："><a href="#为什么：" class="headerlink" title="为什么："></a>为什么：</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>对表中的数据进行限制，保证数据的正确性、有效性和完整性。</p>
<h2 id="是什么：-1"><a href="#是什么：-1" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>对表中的数据进行限制，保证数据的正确性、有效性和完整性。</p>
<h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><p>非空约束：not null              某一列的值不能为null。</p>
<p>唯一约束：unique              某一列的值不能重复。</p>
<p>主键约束：primary key         </p>
<p>外键约束：foreign key        </p>
<h2 id="怎么做：-1"><a href="#怎么做：-1" class="headerlink" title="怎么做："></a>怎么做：</h2><h3 id="非空约束-1"><a href="#非空约束-1" class="headerlink" title="非空约束"></a>非空约束</h3><h4 id="创建：-1"><a href="#创建：-1" class="headerlink" title="创建："></a>创建：</h4><p>create table 表名（</p>
<p>name varchar（20 ） not null</p>
<p>）；</p>
<h4 id="添加：-4"><a href="#添加：-4" class="headerlink" title="添加："></a>添加：</h4><p> alter  table  表名  modify  列名   name varchar（20 ）；</p>
<h4 id="修改：-4"><a href="#修改：-4" class="headerlink" title="修改："></a>修改：</h4><p>alter  table  表名 modify   列名   name varchar（20 ）not null；</p>
<h3 id="唯一约束-1"><a href="#唯一约束-1" class="headerlink" title="唯一约束"></a>唯一约束</h3><h4 id="添加：-5"><a href="#添加：-5" class="headerlink" title="添加："></a>添加：</h4><p>create table 表名（</p>
<p>列名 varchar（20） unique</p>
<p>）；</p>
<h4 id="删除：-3"><a href="#删除：-3" class="headerlink" title="删除："></a>删除：</h4><p>alter   table 表名	 drop  index 列名；</p>
<h4 id="修改：-5"><a href="#修改：-5" class="headerlink" title="修改："></a>修改：</h4><p>alter table 表名 modify 列名 varchar（20） unique；</p>
<p>PS：可以有null值，但是只能有一个。</p>
<h3 id="主键约束-1"><a href="#主键约束-1" class="headerlink" title="主键约束"></a>主键约束</h3><h4 id="添加：-6"><a href="#添加：-6" class="headerlink" title="添加："></a>添加：</h4><p>create table 表名（</p>
<p>列名 数据类型 primary key</p>
<p>）；</p>
<h4 id="删除：-4"><a href="#删除：-4" class="headerlink" title="删除："></a>删除：</h4><p>alter  table  表名  drop primary key； </p>
<h4 id="修改：-6"><a href="#修改：-6" class="headerlink" title="修改："></a>修改：</h4><p>alter table 表名 modify  列名 数据类型 primary key；</p>
<h4 id="自动增长：-1"><a href="#自动增长：-1" class="headerlink" title="自动增长："></a>自动增长：</h4><p>添加：</p>
<p>create table 表名（</p>
<p>列名 数据类型 primary key  auto_increment</p>
<p>）；</p>
<p>删除：</p>
<p>alter  table 表名 modify 列名1 数据类型1； </p>
<p>修改：</p>
<p>alter  table 表名 modify 列名1 数据类型1 auto_increment； </p>
<p>PS：</p>
<p>非空且唯一</p>
<p>一张表只能有一个字段为主键</p>
<h3 id="外键约束-1"><a href="#外键约束-1" class="headerlink" title="外键约束"></a>外键约束</h3><h4 id="添加：-7"><a href="#添加：-7" class="headerlink" title="添加："></a>添加：</h4><p>create table 表名（</p>
<p>…….，</p>
<p>这一行是外键列，</p>
<p>constraint 外键名称 foreign key  外键列名称 references 主表列名称</p>
<p>）；</p>
<h4 id="删除：-5"><a href="#删除：-5" class="headerlink" title="删除："></a>删除：</h4><p>alter table 表名  drop foreign key  外键名；</p>
<h4 id="修改：-7"><a href="#修改：-7" class="headerlink" title="修改："></a>修改：</h4><p>alter table 表名 add constraint 外键名称 foreign key （外键列名称） references 	</p>
<p>主表名称（主表列名称）；</p>
<h4 id="级联操作：-1"><a href="#级联操作：-1" class="headerlink" title="级联操作："></a>级联操作：</h4><p>添加：</p>
<p>alter table 表名 add constraint 外键名称 foreign key （外键列名称） references 	</p>
<p>主表名称（主表列名称） on <strong>update</strong> cascade；</p>
<p>删除：</p>
<p>alter table 表名 add constraint 外键名称 foreign key （外键列名称） references 	</p>
<p>主表名称（主表列名称） on <strong>delete</strong> cascade；</p>
<h2 id="为什么：-1"><a href="#为什么：-1" class="headerlink" title="为什么："></a>为什么：</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>对表中的数据进行限制，保证数据的正确性、有效性和完整性。约束</p>
<h2 id="是什么：-2"><a href="#是什么：-2" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>对表中的数据进行限制，保证数据的正确性、有效性和完整性。</p>
<h3 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h3><p>非空约束：not null              某一列的值不能为null。</p>
<p>唯一约束：unique              某一列的值不能重复。</p>
<p>主键约束：primary key         </p>
<p>外键约束：foreign key        </p>
<h2 id="怎么做：-2"><a href="#怎么做：-2" class="headerlink" title="怎么做："></a>怎么做：</h2><h3 id="非空约束-2"><a href="#非空约束-2" class="headerlink" title="非空约束"></a>非空约束</h3><h4 id="创建：-2"><a href="#创建：-2" class="headerlink" title="创建："></a>创建：</h4><p>create table 表名（</p>
<p>name varchar（20 ） not null</p>
<p>）；</p>
<h4 id="添加：-8"><a href="#添加：-8" class="headerlink" title="添加："></a>添加：</h4><p> alter  table  表名  modify  列名   name varchar（20 ）；</p>
<h4 id="修改：-8"><a href="#修改：-8" class="headerlink" title="修改："></a>修改：</h4><p>alter  table  表名 modify   列名   name varchar（20 ）not null；</p>
<h3 id="唯一约束-2"><a href="#唯一约束-2" class="headerlink" title="唯一约束"></a>唯一约束</h3><h4 id="添加：-9"><a href="#添加：-9" class="headerlink" title="添加："></a>添加：</h4><p>create table 表名（</p>
<p>列名 varchar（20） unique</p>
<p>）；</p>
<h4 id="删除：-6"><a href="#删除：-6" class="headerlink" title="删除："></a>删除：</h4><p>alter   table 表名	 drop  index 列名；</p>
<h4 id="修改：-9"><a href="#修改：-9" class="headerlink" title="修改："></a>修改：</h4><p>alter table 表名 modify 列名 varchar（20） unique；</p>
<p>PS：可以有null值，但是只能有一个。</p>
<h3 id="主键约束-2"><a href="#主键约束-2" class="headerlink" title="主键约束"></a>主键约束</h3><h4 id="添加：-10"><a href="#添加：-10" class="headerlink" title="添加："></a>添加：</h4><p>create table 表名（</p>
<p>列名 数据类型 primary key</p>
<p>）；</p>
<h4 id="删除：-7"><a href="#删除：-7" class="headerlink" title="删除："></a>删除：</h4><p>alter  table  表名  drop primary key； </p>
<h4 id="修改：-10"><a href="#修改：-10" class="headerlink" title="修改："></a>修改：</h4><p>alter table 表名 modify  列名 数据类型 primary key；</p>
<h4 id="自动增长：-2"><a href="#自动增长：-2" class="headerlink" title="自动增长："></a>自动增长：</h4><p>添加：</p>
<p>create table 表名（</p>
<p>列名 数据类型 primary key  auto_increment</p>
<p>）；</p>
<p>删除：</p>
<p>alter  table 表名 modify 列名1 数据类型1； </p>
<p>修改：</p>
<p>alter  table 表名 modify 列名1 数据类型1 auto_increment； </p>
<p>PS：</p>
<p>非空且唯一</p>
<p>一张表只能有一个字段为主键</p>
<h3 id="外键约束-2"><a href="#外键约束-2" class="headerlink" title="外键约束"></a>外键约束</h3><h4 id="添加：-11"><a href="#添加：-11" class="headerlink" title="添加："></a>添加：</h4><p>create table 表名（</p>
<p>…….，</p>
<p>这一行是外键列，</p>
<p>constraint 外键名称 foreign key  外键列名称 references 主表列名称</p>
<p>）；</p>
<h4 id="删除：-8"><a href="#删除：-8" class="headerlink" title="删除："></a>删除：</h4><p>alter table 表名  drop foreign key  外键名；</p>
<h4 id="修改：-11"><a href="#修改：-11" class="headerlink" title="修改："></a>修改：</h4><p>alter table 表名 add constraint 外键名称 foreign key （外键列名称） references 	</p>
<p>主表名称（主表列名称）；</p>
<h4 id="级联操作：-2"><a href="#级联操作：-2" class="headerlink" title="级联操作："></a>级联操作：</h4><p>添加：</p>
<p>alter table 表名 add constraint 外键名称 foreign key （外键列名称） references 	</p>
<p>主表名称（主表列名称） on <strong>update</strong> cascade；</p>
<p>删除：</p>
<p>alter table 表名 add constraint 外键名称 foreign key （外键列名称） references 	</p>
<p>主表名称（主表列名称） on <strong>delete</strong> cascade；</p>
<h2 id="为什么：-2"><a href="#为什么：-2" class="headerlink" title="为什么："></a>为什么：</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>对表中的数据进行限制，保证数据的正确性、有效性和完整性。</p>
<h2 id="是什么：-3"><a href="#是什么：-3" class="headerlink" title="是什么："></a>是什么：</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>对表中的数据进行限制，保证数据的正确性、有效性和完整性。</p>
<h3 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h3><p>非空约束：not null              某一列的值不能为null。</p>
<p>唯一约束：unique              某一列的值不能重复。</p>
<p>主键约束：primary key         </p>
<p>外键约束：foreign key        </p>
<h2 id="怎么做：-3"><a href="#怎么做：-3" class="headerlink" title="怎么做："></a>怎么做：</h2><h3 id="非空约束-3"><a href="#非空约束-3" class="headerlink" title="非空约束"></a>非空约束</h3><h4 id="创建：-3"><a href="#创建：-3" class="headerlink" title="创建："></a>创建：</h4><p>create table 表名（</p>
<p>name varchar（20 ） not null</p>
<p>）；</p>
<h4 id="添加：-12"><a href="#添加：-12" class="headerlink" title="添加："></a>添加：</h4><p> alter  table  表名  modify  列名   name varchar（20 ）；</p>
<h4 id="修改：-12"><a href="#修改：-12" class="headerlink" title="修改："></a>修改：</h4><p>alter  table  表名 modify   列名   name varchar（20 ）not null；</p>
<h3 id="唯一约束-3"><a href="#唯一约束-3" class="headerlink" title="唯一约束"></a>唯一约束</h3><h4 id="添加：-13"><a href="#添加：-13" class="headerlink" title="添加："></a>添加：</h4><p>create table 表名（</p>
<p>列名 varchar（20） unique</p>
<p>）；</p>
<h4 id="删除：-9"><a href="#删除：-9" class="headerlink" title="删除："></a>删除：</h4><p>alter   table 表名	 drop  index 列名；</p>
<h4 id="修改：-13"><a href="#修改：-13" class="headerlink" title="修改："></a>修改：</h4><p>alter table 表名 modify 列名 varchar（20） unique；</p>
<p>PS：可以有null值，但是只能有一个。</p>
<h3 id="主键约束-3"><a href="#主键约束-3" class="headerlink" title="主键约束"></a>主键约束</h3><h4 id="添加：-14"><a href="#添加：-14" class="headerlink" title="添加："></a>添加：</h4><p>create table 表名（</p>
<p>列名 数据类型 primary key</p>
<p>）；</p>
<h4 id="删除：-10"><a href="#删除：-10" class="headerlink" title="删除："></a>删除：</h4><p>alter  table  表名  drop primary key； </p>
<h4 id="修改：-14"><a href="#修改：-14" class="headerlink" title="修改："></a>修改：</h4><p>alter table 表名 modify  列名 数据类型 primary key；</p>
<h4 id="自动增长：-3"><a href="#自动增长：-3" class="headerlink" title="自动增长："></a>自动增长：</h4><p>添加：</p>
<p>create table 表名（</p>
<p>列名 数据类型 primary key  auto_increment</p>
<p>）；</p>
<p>删除：</p>
<p>alter  table 表名 modify 列名1 数据类型1； </p>
<p>修改：</p>
<p>alter  table 表名 modify 列名1 数据类型1 auto_increment； </p>
<p>PS：</p>
<p>非空且唯一</p>
<p>一张表只能有一个字段为主键</p>
<h3 id="外键约束-3"><a href="#外键约束-3" class="headerlink" title="外键约束"></a>外键约束</h3><h4 id="添加：-15"><a href="#添加：-15" class="headerlink" title="添加："></a>添加：</h4><p>create table 表名（</p>
<p>…….，</p>
<p>这一行是外键列，</p>
<p>constraint 外键名称 foreign key  外键列名称 references 主表列名称</p>
<p>）；</p>
<h4 id="删除：-11"><a href="#删除：-11" class="headerlink" title="删除："></a>删除：</h4><p>alter table 表名  drop foreign key  外键名；</p>
<h4 id="修改：-15"><a href="#修改：-15" class="headerlink" title="修改："></a>修改：</h4><p>alter table 表名 add constraint 外键名称 foreign key （外键列名称） references 	</p>
<p>主表名称（主表列名称）；</p>
<h4 id="级联操作：-3"><a href="#级联操作：-3" class="headerlink" title="级联操作："></a>级联操作：</h4><p>添加：</p>
<p>alter table 表名 add constraint 外键名称 foreign key （外键列名称） references 	</p>
<p>主表名称（主表列名称） on <strong>update</strong> cascade；</p>
<p>删除：</p>
<p>alter table 表名 add constraint 外键名称 foreign key （外键列名称） references 	</p>
<p>主表名称（主表列名称） on <strong>delete</strong> cascade；</p>
<h2 id="为什么：-3"><a href="#为什么：-3" class="headerlink" title="为什么："></a>为什么：</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>对表中的数据进行限制，保证数据的正确性、有效性和完整性。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>知识了解</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E7%9F%A5%E8%AF%86%E4%BA%86%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="知识了解"><a href="#知识了解" class="headerlink" title="知识了解"></a>知识了解</h1><p>1.jpeg&#x2F;jgp：</p>
<p>是一种用于数字图像压缩的标准和文件格式。它使用有损压缩算法，旨在通过牺牲一些图像细节来减小文件大小，以便更高效地存储和传输图像数据。JPEG格式广泛应用于数字摄影和网络图像，因其在图像质量和文件大小之间找到了一个平衡点，使得它成为最流行的图像格式之一。</p>
<p>2.<strong>Hypertext Reference</strong> </p>
<p>是 <code>href</code> 的全称，表示超文本引用。超文本是指一种可以包含链接到其他文档的文本形式，通过这些链接，用户可以在不同的文档之间导航。</p>
<p>3.手指名称</p>
<p>大拇指、食指、中指、无名指、小指</p>
<p>4.IDea的常见短写</p>
<p>P：表示一个属性（Property），通常是类的字段或成员变量。<br>v：表示一个局部变量（Variable），通常是在方法内部定义的变量。<br>m：表示一个方法（Method）。<br>c：表示一个类（Class）。<br>i：表示一个接口（Interface）。<br>f：表示一个字段（Field），与属性类似，但通常用于静态字段。<br>C：表示一个构造函数（Constructor）。<br>E：表示一个枚举（Enum）。<br>A：表示一个注解（Annotation）。</p>
<ol start="5">
<li>1.jpeg&#x2F;jgp：</li>
</ol>
<p>是一种用于数字图像压缩的标准和文件格式。它使用有损压缩算法，旨在通过牺牲一些图像细节来减小文件大小，以便更高效地存储和传输图像数据。JPEG格式广泛应用于数字摄影和网络图像，因其在图像质量和文件大小之间找到了一个平衡点，使得它成为最流行的图像格式之一。</p>
<p>2.<strong>Hypertext Reference</strong> </p>
<p>是 <code>href</code> 的全称，表示超文本引用。超文本是指一种可以包含链接到其他文档的文本形式，通过这些链接，用户可以在不同的文档之间导航。</p>
<p>3.手指名称</p>
<p>大拇指、食指、中指、无名指、小指</p>
<p>4.IDea的常见短写</p>
<p>P：表示一个属性（Property），通常是类的字段或成员变量。<br>v：表示一个局部变量（Variable），通常是在方法内部定义的变量。<br>m：表示一个方法（Method）。<br>c：表示一个类（Class）。<br>i：表示一个接口（Interface）。<br>f：表示一个字段（Field），与属性类似，但通常用于静态字段。<br>C：表示一个构造函数（Constructor）。<br>E：表示一个枚举（Enum）。<br>A：表示一个注解（Annotation）。</p>
<p>5.了解</p>
<p>1.jpeg&#x2F;jgp：</p>
<p>是一种用于数字图像压缩的标准和文件格式。它使用有损压缩算法，旨在通过牺牲一些图像细节来减小文件大小，以便更高效地存储和传输图像数据。JPEG格式广泛应用于数字摄影和网络图像，因其在图像质量和文件大小之间找到了一个平衡点，使得它成为最流行的图像格式之一。</p>
<p>2.<strong>Hypertext Reference</strong> </p>
<p>是 <code>href</code> 的全称，表示超文本引用。超文本是指一种可以包含链接到其他文档的文本形式，通过这些链接，用户可以在不同的文档之间导航。</p>
<p>3.手指名称</p>
<p>大拇指、食指、中指、无名指、小指</p>
<p>4.IDea的常见短写</p>
<p>P：表示一个属性（Property），通常是类的字段或成员变量。<br>v：表示一个局部变量（Variable），通常是在方法内部定义的变量。<br>m：表示一个方法（Method）。<br>c：表示一个类（Class）。<br>i：表示一个接口（Interface）。<br>f：表示一个字段（Field），与属性类似，但通常用于静态字段。<br>C：表示一个构造函数（Constructor）。<br>E：表示一个枚举（Enum）。<br>A：表示一个注解（Annotation）。</p>
<ol start="5">
<li>1.jpeg&#x2F;jgp：</li>
</ol>
<p>是一种用于数字图像压缩的标准和文件格式。它使用有损压缩算法，旨在通过牺牲一些图像细节来减小文件大小，以便更高效地存储和传输图像数据。JPEG格式广泛应用于数字摄影和网络图像，因其在图像质量和文件大小之间找到了一个平衡点，使得它成为最流行的图像格式之一。</p>
<p>2.<strong>Hypertext Reference</strong> </p>
<p>是 <code>href</code> 的全称，表示超文本引用。超文本是指一种可以包含链接到其他文档的文本形式，通过这些链接，用户可以在不同的文档之间导航。</p>
<p>3.手指名称</p>
<p>大拇指、食指、中指、无名指、小指</p>
<p>4.IDea的常见短写</p>
<p>P：表示一个属性（Property），通常是类的字段或成员变量。<br>v：表示一个局部变量（Variable），通常是在方法内部定义的变量。<br>m：表示一个方法（Method）。<br>c：表示一个类（Class）。<br>i：表示一个接口（Interface）。<br>f：表示一个字段（Field），与属性类似，但通常用于静态字段。<br>C：表示一个构造函数（Constructor）。<br>E：表示一个枚举（Enum）。<br>A：表示一个注解（Annotation）。</p>
<ol start="5">
<li></li>
</ol>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>范式</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E8%8C%83%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="范式"><a href="#范式" class="headerlink" title="范式"></a>范式</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>设计数据库时，需要遵从的一些规范要求。</p>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>第一范式、第二范式、第三范式、巴斯-科德范式、第四范式和第五范式（又称完美范式）。</p>
<p>第一范式：每一列都是不可分割的原子数据项。</p>
<p>第二范式：在第一范式的基础上，非码属性必须完全依赖于候选码。（在第一范式的基础上消除非主属性对主码的部分函数依赖）</p>
<p>第三范式：在第二范式的基础上，任何非主属性不依赖于其他非主属性。（在第二范式基础上消除传递依赖）</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="第一范式"><a href="#第一范式" class="headerlink" title="第一范式"></a>第一范式</h3><p>一开始创建表的数据格式就已经是第一范式。 </p>
<p> PS：   但是存在很多问题，比如数据冗余、添加存在不合法问题、删除数据过多等问题。</p>
<h3 id="第二范式"><a href="#第二范式" class="headerlink" title="第二范式"></a>第二范式</h3><p>1.将表进行拆分，将拆分成的各个表都实现消除部分函数依赖，实现完全函数依赖。</p>
<p>2.删除冗余数据。</p>
<p>PS：解决了冗余数据问题，但是还有很多问题。</p>
<h3 id="第三范式"><a href="#第三范式" class="headerlink" title="第三范式"></a>第三范式</h3><p>将表在第二范式表的基础上，再进一步进行划分，实现所有的表都消除传递依赖。</p>
<p>PS：这样子就解决了数据冗余、添加存在不合法问题、删除数据过多的问题。</p>
<p>一般第三范式就已经很合理了。</p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>设计出合理的关系型数据库。</p>
<h2 id="相关的知识点"><a href="#相关的知识点" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><h3 id="1-函数依赖"><a href="#1-函数依赖" class="headerlink" title="1.函数依赖"></a>1.函数依赖</h3><p>A–&gt;B,通过A属性（属性组）的值，可以唯一确定B属性的值，则称B依赖于A。</p>
<h3 id="2-完全函数依赖"><a href="#2-完全函数依赖" class="headerlink" title="2.完全函数依赖"></a>2.完全函数依赖</h3><p>A–&gt;B，如果A是一个属性组，则B属性值的确定需要依赖于A属性组所有属性值。</p>
<h3 id="3-部分函数依赖"><a href="#3-部分函数依赖" class="headerlink" title="3.部分函数依赖"></a>3.部分函数依赖</h3><p>A–&gt;B，如果A是一个属性组，则B属性值的确定仅仅需要依赖于A属性组的一部分属性值。</p>
<h3 id="4-传递函数依赖"><a href="#4-传递函数依赖" class="headerlink" title="4.传递函数依赖"></a>4.传递函数依赖</h3><p>A–&gt;B，B–&gt;C,则A–&gt;C.如果通过A属性（属性组）的值，可以唯一确定B属性的值，B属性可以唯一确定C属性的值，那么C传递函数依赖于A。</p>
<h3 id="5-码"><a href="#5-码" class="headerlink" title="5.码"></a>5.码</h3><p>如果一张表中，一个属性或者属性组，被其他所有属性所完全依赖，则称这个属性（属性组）为<strong>码</strong>。</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>设计数据库时，需要遵从的一些规范要求。</p>
<h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><p>第一范式、第二范式、第三范式、巴斯-科德范式、第四范式和第五范式（又称完美范式）。</p>
<p>第一范式：每一列都是不可分割的原子数据项。</p>
<p>第二范式：在第一范式的基础上，非码属性必须完全依赖于候选码。（在第一范式的基础上消除非主属性对主码的部分函数依赖）</p>
<p>第三范式：在第二范式的基础上，任何非主属性不依赖于其他非主属性。（在第二范式基础上消除传递依赖）</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="第一范式-1"><a href="#第一范式-1" class="headerlink" title="第一范式"></a>第一范式</h3><p>一开始创建表的数据格式就已经是第一范式。 </p>
<p> PS：   但是存在很多问题，比如数据冗余、添加存在不合法问题、删除数据过多等问题。</p>
<h3 id="第二范式-1"><a href="#第二范式-1" class="headerlink" title="第二范式"></a>第二范式</h3><p>1.将表进行拆分，将拆分成的各个表都实现消除部分函数依赖，实现完全函数依赖。</p>
<p>2.删除冗余数据。</p>
<p>PS：解决了冗余数据问题，但是还有很多问题。</p>
<h3 id="第三范式-1"><a href="#第三范式-1" class="headerlink" title="第三范式"></a>第三范式</h3><p>将表在第二范式表的基础上，再进一步进行划分，实现所有的表都消除传递依赖。</p>
<p>PS：这样子就解决了数据冗余、添加存在不合法问题、删除数据过多的问题。</p>
<p>一般第三范式就已经很合理了。</p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>设计出合理的关系型数据库。</p>
<h2 id="相关的知识点-1"><a href="#相关的知识点-1" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><h3 id="1-函数依赖-1"><a href="#1-函数依赖-1" class="headerlink" title="1.函数依赖"></a>1.函数依赖</h3><p>A–&gt;B,通过A属性（属性组）的值，可以唯一确定B属性的值，则称B依赖于A。</p>
<h3 id="2-完全函数依赖-1"><a href="#2-完全函数依赖-1" class="headerlink" title="2.完全函数依赖"></a>2.完全函数依赖</h3><p>A–&gt;B，如果A是一个属性组，则B属性值的确定需要依赖于A属性组所有属性值。</p>
<h3 id="3-部分函数依赖-1"><a href="#3-部分函数依赖-1" class="headerlink" title="3.部分函数依赖"></a>3.部分函数依赖</h3><p>A–&gt;B，如果A是一个属性组，则B属性值的确定仅仅需要依赖于A属性组的一部分属性值。</p>
<h3 id="4-传递函数依赖-1"><a href="#4-传递函数依赖-1" class="headerlink" title="4.传递函数依赖"></a>4.传递函数依赖</h3><p>A–&gt;B，B–&gt;C,则A–&gt;C.如果通过A属性（属性组）的值，可以唯一确定B属性的值，B属性可以唯一确定C属性的值，那么C传递函数依赖于A。</p>
<h3 id="5-码-1"><a href="#5-码-1" class="headerlink" title="5.码"></a>5.码</h3><p>如果一张表中，一个属性或者属性组，被其他所有属性所完全依赖，则称这个属性（属性组）为<strong>码</strong>。范式</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>设计数据库时，需要遵从的一些规范要求。</p>
<h3 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h3><p>第一范式、第二范式、第三范式、巴斯-科德范式、第四范式和第五范式（又称完美范式）。</p>
<p>第一范式：每一列都是不可分割的原子数据项。</p>
<p>第二范式：在第一范式的基础上，非码属性必须完全依赖于候选码。（在第一范式的基础上消除非主属性对主码的部分函数依赖）</p>
<p>第三范式：在第二范式的基础上，任何非主属性不依赖于其他非主属性。（在第二范式基础上消除传递依赖）</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="第一范式-2"><a href="#第一范式-2" class="headerlink" title="第一范式"></a>第一范式</h3><p>一开始创建表的数据格式就已经是第一范式。 </p>
<p> PS：   但是存在很多问题，比如数据冗余、添加存在不合法问题、删除数据过多等问题。</p>
<h3 id="第二范式-2"><a href="#第二范式-2" class="headerlink" title="第二范式"></a>第二范式</h3><p>1.将表进行拆分，将拆分成的各个表都实现消除部分函数依赖，实现完全函数依赖。</p>
<p>2.删除冗余数据。</p>
<p>PS：解决了冗余数据问题，但是还有很多问题。</p>
<h3 id="第三范式-2"><a href="#第三范式-2" class="headerlink" title="第三范式"></a>第三范式</h3><p>将表在第二范式表的基础上，再进一步进行划分，实现所有的表都消除传递依赖。</p>
<p>PS：这样子就解决了数据冗余、添加存在不合法问题、删除数据过多的问题。</p>
<p>一般第三范式就已经很合理了。</p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>设计出合理的关系型数据库。</p>
<h2 id="相关的知识点-2"><a href="#相关的知识点-2" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><h3 id="1-函数依赖-2"><a href="#1-函数依赖-2" class="headerlink" title="1.函数依赖"></a>1.函数依赖</h3><p>A–&gt;B,通过A属性（属性组）的值，可以唯一确定B属性的值，则称B依赖于A。</p>
<h3 id="2-完全函数依赖-2"><a href="#2-完全函数依赖-2" class="headerlink" title="2.完全函数依赖"></a>2.完全函数依赖</h3><p>A–&gt;B，如果A是一个属性组，则B属性值的确定需要依赖于A属性组所有属性值。</p>
<h3 id="3-部分函数依赖-2"><a href="#3-部分函数依赖-2" class="headerlink" title="3.部分函数依赖"></a>3.部分函数依赖</h3><p>A–&gt;B，如果A是一个属性组，则B属性值的确定仅仅需要依赖于A属性组的一部分属性值。</p>
<h3 id="4-传递函数依赖-2"><a href="#4-传递函数依赖-2" class="headerlink" title="4.传递函数依赖"></a>4.传递函数依赖</h3><p>A–&gt;B，B–&gt;C,则A–&gt;C.如果通过A属性（属性组）的值，可以唯一确定B属性的值，B属性可以唯一确定C属性的值，那么C传递函数依赖于A。</p>
<h3 id="5-码-2"><a href="#5-码-2" class="headerlink" title="5.码"></a>5.码</h3><p>如果一张表中，一个属性或者属性组，被其他所有属性所完全依赖，则称这个属性（属性组）为<strong>码</strong>。</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>设计数据库时，需要遵从的一些规范要求。</p>
<h3 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h3><p>第一范式、第二范式、第三范式、巴斯-科德范式、第四范式和第五范式（又称完美范式）。</p>
<p>第一范式：每一列都是不可分割的原子数据项。</p>
<p>第二范式：在第一范式的基础上，非码属性必须完全依赖于候选码。（在第一范式的基础上消除非主属性对主码的部分函数依赖）</p>
<p>第三范式：在第二范式的基础上，任何非主属性不依赖于其他非主属性。（在第二范式基础上消除传递依赖）</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="第一范式-3"><a href="#第一范式-3" class="headerlink" title="第一范式"></a>第一范式</h3><p>一开始创建表的数据格式就已经是第一范式。 </p>
<p> PS：   但是存在很多问题，比如数据冗余、添加存在不合法问题、删除数据过多等问题。</p>
<h3 id="第二范式-3"><a href="#第二范式-3" class="headerlink" title="第二范式"></a>第二范式</h3><p>1.将表进行拆分，将拆分成的各个表都实现消除部分函数依赖，实现完全函数依赖。</p>
<p>2.删除冗余数据。</p>
<p>PS：解决了冗余数据问题，但是还有很多问题。</p>
<h3 id="第三范式-3"><a href="#第三范式-3" class="headerlink" title="第三范式"></a>第三范式</h3><p>将表在第二范式表的基础上，再进一步进行划分，实现所有的表都消除传递依赖。</p>
<p>PS：这样子就解决了数据冗余、添加存在不合法问题、删除数据过多的问题。</p>
<p>一般第三范式就已经很合理了。</p>
<h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>设计出合理的关系型数据库。</p>
<h2 id="相关的知识点-3"><a href="#相关的知识点-3" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><h3 id="1-函数依赖-3"><a href="#1-函数依赖-3" class="headerlink" title="1.函数依赖"></a>1.函数依赖</h3><p>A–&gt;B,通过A属性（属性组）的值，可以唯一确定B属性的值，则称B依赖于A。</p>
<h3 id="2-完全函数依赖-3"><a href="#2-完全函数依赖-3" class="headerlink" title="2.完全函数依赖"></a>2.完全函数依赖</h3><p>A–&gt;B，如果A是一个属性组，则B属性值的确定需要依赖于A属性组所有属性值。</p>
<h3 id="3-部分函数依赖-3"><a href="#3-部分函数依赖-3" class="headerlink" title="3.部分函数依赖"></a>3.部分函数依赖</h3><p>A–&gt;B，如果A是一个属性组，则B属性值的确定仅仅需要依赖于A属性组的一部分属性值。</p>
<h3 id="4-传递函数依赖-3"><a href="#4-传递函数依赖-3" class="headerlink" title="4.传递函数依赖"></a>4.传递函数依赖</h3><p>A–&gt;B，B–&gt;C,则A–&gt;C.如果通过A属性（属性组）的值，可以唯一确定B属性的值，B属性可以唯一确定C属性的值，那么C传递函数依赖于A。</p>
<h3 id="5-码-3"><a href="#5-码-3" class="headerlink" title="5.码"></a>5.码</h3><p>如果一张表中，一个属性或者属性组，被其他所有属性所完全依赖，则称这个属性（属性组）为<strong>码</strong>。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>约束_xml</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E7%BA%A6%E6%9D%9F_xml/</url>
    <content><![CDATA[<h1 id="约束—xml"><a href="#约束—xml" class="headerlink" title="约束—xml"></a>约束—xml</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>规定XML文档的书写的规则</p>
<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-DTD："><a href="#1-DTD：" class="headerlink" title="1.DTD："></a>1.DTD：</h3><p>一种简单的约束技术</p>
<h3 id="2-Schema："><a href="#2-Schema：" class="headerlink" title="2.Schema："></a>2.Schema：</h3><p>一种复杂的约束技术</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-DTD"><a href="#1-DTD" class="headerlink" title="1.DTD"></a>1.DTD</h3><p><img src="/../TyporaImage/image-20240522215007405.png" alt="image-20240522215007405"></p>
<p>   示例：</p>
<p><img src="/../TyporaImage/image-20240522215211273.png" alt="image-20240522215211273"></p>
<h3 id="2-Schema"><a href="#2-Schema" class="headerlink" title="2.Schema"></a>2.Schema</h3><p><img src="/../TyporaImage/image-20240522215504140.png" alt="image-20240522215504140"></p>
<p>示例：</p>
<p><img src="/../TyporaImage/image-20240522215645875.png" alt="image-20240522215645875">## 定义</p>
<p>规定XML文档的书写的规则</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-DTD：-1"><a href="#1-DTD：-1" class="headerlink" title="1.DTD："></a>1.DTD：</h3><p>一种简单的约束技术</p>
<h3 id="2-Schema：-1"><a href="#2-Schema：-1" class="headerlink" title="2.Schema："></a>2.Schema：</h3><p>一种复杂的约束技术</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-DTD-1"><a href="#1-DTD-1" class="headerlink" title="1.DTD"></a>1.DTD</h3><p><img src="/../TyporaImage/image-20240522215007405.png" alt="image-20240522215007405"></p>
<p>   示例：</p>
<p><img src="/../TyporaImage/image-20240522215211273.png" alt="image-20240522215211273"></p>
<h3 id="2-Schema-1"><a href="#2-Schema-1" class="headerlink" title="2.Schema"></a>2.Schema</h3><p><img src="/../TyporaImage/image-20240522215504140.png" alt="image-20240522215504140"></p>
<p>示例：</p>
<p><img src="/../TyporaImage/image-20240522215645875.png" alt="image-20240522215645875">ml</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>规定XML文档的书写的规则</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-DTD：-2"><a href="#1-DTD：-2" class="headerlink" title="1.DTD："></a>1.DTD：</h3><p>一种简单的约束技术</p>
<h3 id="2-Schema：-2"><a href="#2-Schema：-2" class="headerlink" title="2.Schema："></a>2.Schema：</h3><p>一种复杂的约束技术</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-DTD-2"><a href="#1-DTD-2" class="headerlink" title="1.DTD"></a>1.DTD</h3><p><img src="/../TyporaImage/image-20240522215007405.png" alt="image-20240522215007405"></p>
<p>   示例：</p>
<p><img src="/../TyporaImage/image-20240522215211273.png" alt="image-20240522215211273"></p>
<h3 id="2-Schema-2"><a href="#2-Schema-2" class="headerlink" title="2.Schema"></a>2.Schema</h3><p><img src="/../TyporaImage/image-20240522215504140.png" alt="image-20240522215504140"></p>
<p>示例：</p>
<p><img src="/../TyporaImage/image-20240522215645875.png" alt="image-20240522215645875">## 定义</p>
<p>规定XML文档的书写的规则</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-DTD：-3"><a href="#1-DTD：-3" class="headerlink" title="1.DTD："></a>1.DTD：</h3><p>一种简单的约束技术</p>
<h3 id="2-Schema：-3"><a href="#2-Schema：-3" class="headerlink" title="2.Schema："></a>2.Schema：</h3><p>一种复杂的约束技术</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-DTD-3"><a href="#1-DTD-3" class="headerlink" title="1.DTD"></a>1.DTD</h3><p><img src="/../TyporaImage/image-20240522215007405.png" alt="image-20240522215007405"></p>
<p>   示例：</p>
<p><img src="/../TyporaImage/image-20240522215211273.png" alt="image-20240522215211273"></p>
<h3 id="2-Schema-3"><a href="#2-Schema-3" class="headerlink" title="2.Schema"></a>2.Schema</h3><p><img src="/../TyporaImage/image-20240522215504140.png" alt="image-20240522215504140"></p>
<p>示例：</p>
<p><img src="/../TyporaImage/image-20240522215645875.png" alt="image-20240522215645875"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>表单项--input</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E8%A1%A8%E5%8D%95%E9%A1%B9--input/</url>
    <content><![CDATA[<h1 id="input"><a href="#input" class="headerlink" title="input"></a>input</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>type、placeholder</p>
<p><img src="/../TyporaImage/image-20240511170444334.png" alt="image-20240511170444334"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="label标签"><a href="#label标签" class="headerlink" title="label标签"></a>label标签</h3><p><img src="/../TyporaImage/image-20240511170241193.png" alt="image-20240511170241193"></p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h3><p>type、placeholder</p>
<p><img src="/../TyporaImage/image-20240511170444334.png" alt="image-20240511170444334"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="label标签-1"><a href="#label标签-1" class="headerlink" title="label标签"></a>label标签</h3><p><img src="/../TyporaImage/image-20240511170241193.png" alt="image-20240511170241193">ut</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h3><p>type、placeholder</p>
<p><img src="/../TyporaImage/image-20240511170444334.png" alt="image-20240511170444334"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="label标签-2"><a href="#label标签-2" class="headerlink" title="label标签"></a>label标签</h3><p><img src="/../TyporaImage/image-20240511170241193.png" alt="image-20240511170241193"></p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h3><p>type、placeholder</p>
<p><img src="/../TyporaImage/image-20240511170444334.png" alt="image-20240511170444334"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="label标签-3"><a href="#label标签-3" class="headerlink" title="label标签"></a>label标签</h3><p><img src="/../TyporaImage/image-20240511170241193.png" alt="image-20240511170241193"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>表单标签</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E8%A1%A8%E5%8D%95%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>用于定义一个表单，表单规定了一个采集用户数据的范围。</p>
<h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><h4 id="action："><a href="#action：" class="headerlink" title="action："></a>action：</h4><p>指定提交数据的URL</p>
<h4 id="method（7种）："><a href="#method（7种）：" class="headerlink" title="method（7种）："></a>method（7种）：</h4><p>指定提交的方式：</p>
<p>​		get：</p>
<p><img src="/../TyporaImage/image-20240511164612995.png" alt="image-20240511164612995"></p>
<p>​		post：</p>
<p>​		<img src="/../TyporaImage/image-20240511164619707.png" alt="image-20240511164619707"></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>采集用户输入的数据。</p>
<h2 id="相关的知识点"><a href="#相关的知识点" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><p>表单项中的数据相被提交，必须指定name属性。## 定义</p>
<p>用于定义一个表单，表单规定了一个采集用户数据的范围。</p>
<h2 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h3><h4 id="action：-1"><a href="#action：-1" class="headerlink" title="action："></a>action：</h4><p>指定提交数据的URL</p>
<h4 id="method（7种）：-1"><a href="#method（7种）：-1" class="headerlink" title="method（7种）："></a>method（7种）：</h4><p>指定提交的方式：</p>
<p>​		get：</p>
<p><img src="/../TyporaImage/image-20240511164612995.png" alt="image-20240511164612995"></p>
<p>​		post：</p>
<p>​		<img src="/../TyporaImage/image-20240511164619707.png" alt="image-20240511164619707"></p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>采集用户输入的数据。</p>
<h2 id="相关的知识点-1"><a href="#相关的知识点-1" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><p>表单项中的数据相被提交，必须指定name属性。标签</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>用于定义一个表单，表单规定了一个采集用户数据的范围。</p>
<h2 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h3><h4 id="action：-2"><a href="#action：-2" class="headerlink" title="action："></a>action：</h4><p>指定提交数据的URL</p>
<h4 id="method（7种）：-2"><a href="#method（7种）：-2" class="headerlink" title="method（7种）："></a>method（7种）：</h4><p>指定提交的方式：</p>
<p>​		get：</p>
<p><img src="/../TyporaImage/image-20240511164612995.png" alt="image-20240511164612995"></p>
<p>​		post：</p>
<p>​		<img src="/../TyporaImage/image-20240511164619707.png" alt="image-20240511164619707"></p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>采集用户输入的数据。</p>
<h2 id="相关的知识点-2"><a href="#相关的知识点-2" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><p>表单项中的数据相被提交，必须指定name属性。## 定义</p>
<p>用于定义一个表单，表单规定了一个采集用户数据的范围。</p>
<h2 id="使用方式-3"><a href="#使用方式-3" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h3><h4 id="action：-3"><a href="#action：-3" class="headerlink" title="action："></a>action：</h4><p>指定提交数据的URL</p>
<h4 id="method（7种）：-3"><a href="#method（7种）：-3" class="headerlink" title="method（7种）："></a>method（7种）：</h4><p>指定提交的方式：</p>
<p>​		get：</p>
<p><img src="/../TyporaImage/image-20240511164612995.png" alt="image-20240511164612995"></p>
<p>​		post：</p>
<p>​		<img src="/../TyporaImage/image-20240511164619707.png" alt="image-20240511164619707"></p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>采集用户输入的数据。</p>
<h2 id="相关的知识点-3"><a href="#相关的知识点-3" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><p>表单项中的数据相被提交，必须指定name属性。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>表单项--select</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E8%A1%A8%E5%8D%95%E9%A1%B9--select/</url>
    <content><![CDATA[<h1 id="select"><a href="#select" class="headerlink" title="select"></a>select</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p><img src="/../TyporaImage/image-20240511170544052.png" alt="image-20240511170544052">## 使用方法</p>
<h3 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h3><p><img src="/../TyporaImage/image-20240511170544052.png" alt="image-20240511170544052">ct</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h3><p><img src="/../TyporaImage/image-20240511170544052.png" alt="image-20240511170544052">## 使用方法</p>
<h3 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h3><p><img src="/../TyporaImage/image-20240511170544052.png" alt="image-20240511170544052"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>表单项标签</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E8%A1%A8%E5%8D%95%E9%A1%B9%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="表单项标签"><a href="#表单项标签" class="headerlink" title="表单项标签"></a>表单项标签</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>通过type属性，改变元素展示的样式</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.input</p>
<p>2.select</p>
<p>3.textarea</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>帮助用户准确理解信息，并完成表单的填写。</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>通过type属性，改变元素展示的样式</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.input</p>
<p>2.select</p>
<p>3.textarea</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>帮助用户准确理解信息，并完成表单的填写。标签</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>通过type属性，改变元素展示的样式</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.input</p>
<p>2.select</p>
<p>3.textarea</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>帮助用户准确理解信息，并完成表单的填写。</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>通过type属性，改变元素展示的样式</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.input</p>
<p>2.select</p>
<p>3.textarea</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>帮助用户准确理解信息，并完成表单的填写。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>表单项--textarea</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E8%A1%A8%E5%8D%95%E9%A1%B9--textarea/</url>
    <content><![CDATA[<h1 id="textarea"><a href="#textarea" class="headerlink" title="textarea"></a>textarea</h1><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240511170625864.png" alt="image-20240511170625864"></p>
<h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240511170625864.png" alt="image-20240511170625864">ea</p>
<h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240511170625864.png" alt="image-20240511170625864"></p>
<h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240511170625864.png" alt="image-20240511170625864"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>解析_xml</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E8%A7%A3%E6%9E%90_xml/</url>
    <content><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>操作xml文档，将文档的数据读取到内存中</p>
<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240523094847528.png" alt="image-20240523094847528"></p>
<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>1.解析（读取）：</p>
<p>将文档中的数据读取到内存中去</p>
<p>2.写入</p>
<p>将内存中的数据保存到xml文档中。   持久化的存储</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="解析方式"><a href="#解析方式" class="headerlink" title="解析方式"></a>解析方式</h3><p>1.DOM</p>
<p><img src="/../TyporaImage/image-20240522220302454.png" alt="image-20240522220302454"></p>
<p>2.SAX</p>
<p><img src="/../TyporaImage/image-20240522220249873.png" alt="image-20240522220249873"></p>
<p>操作xml文档，将文档的数据读取到内存中</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240523094847528.png" alt="image-20240523094847528"></p>
<h2 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h2><p>1.解析（读取）：</p>
<p>将文档中的数据读取到内存中去</p>
<p>2.写入</p>
<p>将内存中的数据保存到xml文档中。   持久化的存储</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="解析方式-1"><a href="#解析方式-1" class="headerlink" title="解析方式"></a>解析方式</h3><p>1.DOM</p>
<p><img src="/../TyporaImage/image-20240522220302454.png" alt="image-20240522220302454"></p>
<p>2.SAX</p>
<p><img src="/../TyporaImage/image-20240522220249873.png" alt="image-20240522220249873">定义</p>
<p>操作xml文档，将文档的数据读取到内存中</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240523094847528.png" alt="image-20240523094847528"></p>
<h2 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h2><p>1.解析（读取）：</p>
<p>将文档中的数据读取到内存中去</p>
<p>2.写入</p>
<p>将内存中的数据保存到xml文档中。   持久化的存储</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="解析方式-2"><a href="#解析方式-2" class="headerlink" title="解析方式"></a>解析方式</h3><p>1.DOM</p>
<p><img src="/../TyporaImage/image-20240522220302454.png" alt="image-20240522220302454"></p>
<p>2.SAX</p>
<p><img src="/../TyporaImage/image-20240522220249873.png" alt="image-20240522220249873"></p>
<p>操作xml文档，将文档的数据读取到内存中</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240523094847528.png" alt="image-20240523094847528"></p>
<h2 id="作用-3"><a href="#作用-3" class="headerlink" title="作用"></a>作用</h2><p>1.解析（读取）：</p>
<p>将文档中的数据读取到内存中去</p>
<p>2.写入</p>
<p>将内存中的数据保存到xml文档中。   持久化的存储</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="解析方式-3"><a href="#解析方式-3" class="headerlink" title="解析方式"></a>解析方式</h3><p>1.DOM</p>
<p><img src="/../TyporaImage/image-20240522220302454.png" alt="image-20240522220302454"></p>
<p>2.SAX</p>
<p><img src="/../TyporaImage/image-20240522220249873.png" alt="image-20240522220249873"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>表格标签</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E8%A1%A8%E6%A0%BC%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>定义表格的标签</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240509221503985.png" alt="image-20240509221503985"></p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>定义表格的标签</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240509221503985.png" alt="image-20240509221503985">标签</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>定义表格的标签</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240509221503985.png" alt="image-20240509221503985"></p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>定义表格的标签</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240509221503985.png" alt="image-20240509221503985"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>语义化标签</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>具有明确语义的标签，它们不仅仅是用于展示内容的样式，还提供了关于内容的额外信息。</p>
<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><ol>
<li><p>**<code>&lt;header&gt;</code>**：定义文档或节的头部，通常包含标题和导航链接。</p>
</li>
<li><p>**<code>&lt;nav&gt;</code>**：定义页面的导航链接部分。</p>
</li>
<li><p>**<code>&lt;article&gt;</code>**：定义独立的自包含内容，可以是博客文章、新闻故事、论坛帖子等。</p>
</li>
<li><p>**<code>&lt;section&gt;</code>**：定义文档中的一个节，通常包含一个标题。</p>
</li>
<li><p>**<code>&lt;aside&gt;</code>**：定义与页面内容轻微相关的辅助信息，如侧边栏、广告、引用等。</p>
</li>
<li><p>**<code>&lt;footer&gt;</code>**：定义文档或节的页脚，通常包含作者信息、版权信息、联系信息等。</p>
</li>
<li><p>**<code>&lt;figure&gt;</code>和<code>&lt;figcaption&gt;</code>**：<code>&lt;figure&gt;</code>用于定义独立的流内容（如图表、图片、代码等），<code>&lt;figcaption&gt;</code>用于为其提供标题或说明。</p>
</li>
<li><p>**<code>&lt;time&gt;</code>**：定义日期或时间，可以是机器可读的格式。</p>
</li>
<li><p>**<code>&lt;mark&gt;</code>**：定义被标记或高亮的文本。</p>
</li>
<li><p>**<code>&lt;details&gt;</code>和<code>&lt;summary&gt;</code>**：<code>&lt;details&gt;</code>用于创建一个可展开折叠的交互式控件，<code>&lt;summary&gt;</code>用于为其提供标题。</p>
<p>——————-等</p>
</li>
</ol>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>提高程序的结构性和可读性，更便于开发者进行样式设计## 定义</p>
<p>具有明确语义的标签，它们不仅仅是用于展示内容的样式，还提供了关于内容的额外信息。</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><ol>
<li><p>**<code>&lt;header&gt;</code>**：定义文档或节的头部，通常包含标题和导航链接。</p>
</li>
<li><p>**<code>&lt;nav&gt;</code>**：定义页面的导航链接部分。</p>
</li>
<li><p>**<code>&lt;article&gt;</code>**：定义独立的自包含内容，可以是博客文章、新闻故事、论坛帖子等。</p>
</li>
<li><p>**<code>&lt;section&gt;</code>**：定义文档中的一个节，通常包含一个标题。</p>
</li>
<li><p>**<code>&lt;aside&gt;</code>**：定义与页面内容轻微相关的辅助信息，如侧边栏、广告、引用等。</p>
</li>
<li><p>**<code>&lt;footer&gt;</code>**：定义文档或节的页脚，通常包含作者信息、版权信息、联系信息等。</p>
</li>
<li><p>**<code>&lt;figure&gt;</code>和<code>&lt;figcaption&gt;</code>**：<code>&lt;figure&gt;</code>用于定义独立的流内容（如图表、图片、代码等），<code>&lt;figcaption&gt;</code>用于为其提供标题或说明。</p>
</li>
<li><p>**<code>&lt;time&gt;</code>**：定义日期或时间，可以是机器可读的格式。</p>
</li>
<li><p>**<code>&lt;mark&gt;</code>**：定义被标记或高亮的文本。</p>
</li>
<li><p>**<code>&lt;details&gt;</code>和<code>&lt;summary&gt;</code>**：<code>&lt;details&gt;</code>用于创建一个可展开折叠的交互式控件，<code>&lt;summary&gt;</code>用于为其提供标题。</p>
<p>——————-等</p>
</li>
</ol>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>提高程序的结构性和可读性，更便于开发者进行样式设计标签</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>具有明确语义的标签，它们不仅仅是用于展示内容的样式，还提供了关于内容的额外信息。</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><ol>
<li><p>**<code>&lt;header&gt;</code>**：定义文档或节的头部，通常包含标题和导航链接。</p>
</li>
<li><p>**<code>&lt;nav&gt;</code>**：定义页面的导航链接部分。</p>
</li>
<li><p>**<code>&lt;article&gt;</code>**：定义独立的自包含内容，可以是博客文章、新闻故事、论坛帖子等。</p>
</li>
<li><p>**<code>&lt;section&gt;</code>**：定义文档中的一个节，通常包含一个标题。</p>
</li>
<li><p>**<code>&lt;aside&gt;</code>**：定义与页面内容轻微相关的辅助信息，如侧边栏、广告、引用等。</p>
</li>
<li><p>**<code>&lt;footer&gt;</code>**：定义文档或节的页脚，通常包含作者信息、版权信息、联系信息等。</p>
</li>
<li><p>**<code>&lt;figure&gt;</code>和<code>&lt;figcaption&gt;</code>**：<code>&lt;figure&gt;</code>用于定义独立的流内容（如图表、图片、代码等），<code>&lt;figcaption&gt;</code>用于为其提供标题或说明。</p>
</li>
<li><p>**<code>&lt;time&gt;</code>**：定义日期或时间，可以是机器可读的格式。</p>
</li>
<li><p>**<code>&lt;mark&gt;</code>**：定义被标记或高亮的文本。</p>
</li>
<li><p>**<code>&lt;details&gt;</code>和<code>&lt;summary&gt;</code>**：<code>&lt;details&gt;</code>用于创建一个可展开折叠的交互式控件，<code>&lt;summary&gt;</code>用于为其提供标题。</p>
<p>——————-等</p>
</li>
</ol>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>提高程序的结构性和可读性，更便于开发者进行样式设计## 定义</p>
<p>具有明确语义的标签，它们不仅仅是用于展示内容的样式，还提供了关于内容的额外信息。</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><ol>
<li><p>**<code>&lt;header&gt;</code>**：定义文档或节的头部，通常包含标题和导航链接。</p>
</li>
<li><p>**<code>&lt;nav&gt;</code>**：定义页面的导航链接部分。</p>
</li>
<li><p>**<code>&lt;article&gt;</code>**：定义独立的自包含内容，可以是博客文章、新闻故事、论坛帖子等。</p>
</li>
<li><p>**<code>&lt;section&gt;</code>**：定义文档中的一个节，通常包含一个标题。</p>
</li>
<li><p>**<code>&lt;aside&gt;</code>**：定义与页面内容轻微相关的辅助信息，如侧边栏、广告、引用等。</p>
</li>
<li><p>**<code>&lt;footer&gt;</code>**：定义文档或节的页脚，通常包含作者信息、版权信息、联系信息等。</p>
</li>
<li><p>**<code>&lt;figure&gt;</code>和<code>&lt;figcaption&gt;</code>**：<code>&lt;figure&gt;</code>用于定义独立的流内容（如图表、图片、代码等），<code>&lt;figcaption&gt;</code>用于为其提供标题或说明。</p>
</li>
<li><p>**<code>&lt;time&gt;</code>**：定义日期或时间，可以是机器可读的格式。</p>
</li>
<li><p>**<code>&lt;mark&gt;</code>**：定义被标记或高亮的文本。</p>
</li>
<li><p>**<code>&lt;details&gt;</code>和<code>&lt;summary&gt;</code>**：<code>&lt;details&gt;</code>用于创建一个可展开折叠的交互式控件，<code>&lt;summary&gt;</code>用于为其提供标题。</p>
<p>——————-等</p>
</li>
</ol>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>提高程序的结构性和可读性，更便于开发者进行样式设计</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>链接标签</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E9%93%BE%E6%8E%A5%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>定义一个超链接的标签。标签为<a></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240509215818575.png" alt="image-20240509215818575">## 定义</p>
<p>定义一个超链接的标签。标签为<a></p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240509215818575.png" alt="image-20240509215818575">标签</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>定义一个超链接的标签。标签为<a></p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240509215818575.png" alt="image-20240509215818575">## 定义</p>
<p>定义一个超链接的标签。标签为<a></p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240509215818575.png" alt="image-20240509215818575"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>选择器查询-jsoup</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E9%80%89%E6%8B%A9%E5%99%A8%E6%9F%A5%E8%AF%A2-jsoup/</url>
    <content><![CDATA[<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240523101806755.png" alt="image-20240523101806755"></p>
<p><img src="/../TyporaImage/image-20240523101806755.png" alt="image-20240523101806755">用方法</p>
<p><img src="/../TyporaImage/image-20240523101806755.png" alt="image-20240523101806755"></p>
<p><img src="/../TyporaImage/image-20240523101806755.png" alt="image-20240523101806755"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>错误经历</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E9%94%99%E8%AF%AF%E7%BB%8F%E5%8E%86/</url>
    <content><![CDATA[<h1 id="各类错误"><a href="#各类错误" class="headerlink" title="各类错误"></a>各类错误</h1><h2 id="jsp"><a href="#jsp" class="headerlink" title="jsp"></a>jsp</h2><p>1.如果新增了jsp文件，而没有重启浏览器，那么服务器会报错。</p>
<ol start="2">
<li></li>
</ol>
<h2 id="service"><a href="#service" class="headerlink" title="service"></a>service</h2><p>1.有的时候接口已经实现了，但还是报错，可以尝试把接口删了，然后重新编写。</p>
<h2 id="键盘打字"><a href="#键盘打字" class="headerlink" title="键盘打字"></a>键盘打字</h2><p>1.打字符i应该用中指</p>
<p>2.打字符o应该用无名指</p>
<p>3.打字符p应该用小拇指</p>
<p>4.字符y和u都应该用食指</p>
<ol start="5">
<li><h2 id="jsp-1"><a href="#jsp-1" class="headerlink" title="jsp"></a>jsp</h2></li>
</ol>
<p>1.如果新增了jsp文件，而没有重启浏览器，那么服务器会报错。</p>
<ol start="2">
<li></li>
</ol>
<h2 id="service-1"><a href="#service-1" class="headerlink" title="service"></a>service</h2><p>1.有的时候接口已经实现了，但还是报错，可以尝试把接口删了，然后重新编写。</p>
<h2 id="键盘打字-1"><a href="#键盘打字-1" class="headerlink" title="键盘打字"></a>键盘打字</h2><p>1.打字符i应该用中指</p>
<p>2.打字符o应该用无名指</p>
<p>3.打字符p应该用小拇指</p>
<p>4.字符y和u都应该用食指</p>
<p>5.错误</p>
<h2 id="jsp-2"><a href="#jsp-2" class="headerlink" title="jsp"></a>jsp</h2><p>1.如果新增了jsp文件，而没有重启浏览器，那么服务器会报错。</p>
<ol start="2">
<li></li>
</ol>
<h2 id="service-2"><a href="#service-2" class="headerlink" title="service"></a>service</h2><p>1.有的时候接口已经实现了，但还是报错，可以尝试把接口删了，然后重新编写。</p>
<h2 id="键盘打字-2"><a href="#键盘打字-2" class="headerlink" title="键盘打字"></a>键盘打字</h2><p>1.打字符i应该用中指</p>
<p>2.打字符o应该用无名指</p>
<p>3.打字符p应该用小拇指</p>
<p>4.字符y和u都应该用食指</p>
<ol start="5">
<li><h2 id="jsp-3"><a href="#jsp-3" class="headerlink" title="jsp"></a>jsp</h2></li>
</ol>
<p>1.如果新增了jsp文件，而没有重启浏览器，那么服务器会报错。</p>
<ol start="2">
<li></li>
</ol>
<h2 id="service-3"><a href="#service-3" class="headerlink" title="service"></a>service</h2><p>1.有的时候接口已经实现了，但还是报错，可以尝试把接口删了，然后重新编写。</p>
<h2 id="键盘打字-3"><a href="#键盘打字-3" class="headerlink" title="键盘打字"></a>键盘打字</h2><p>1.打字符i应该用中指</p>
<p>2.打字符o应该用无名指</p>
<p>3.打字符p应该用小拇指</p>
<p>4.字符y和u都应该用食指</p>
<ol start="5">
<li></li>
</ol>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>验证码实现</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="验证码实现"><a href="#验证码实现" class="headerlink" title="验证码实现"></a>验证码实现</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-创建对象"><a href="#1-创建对象" class="headerlink" title="1..创建对象"></a>1..创建对象</h3><p>new BufferedImage（）创建一个图片对象</p>
<h3 id="2-美化"><a href="#2-美化" class="headerlink" title="2.美化"></a>2.美化</h3><p>通过创建对象的画笔，来进行底色填充、划线等。</p>
<h3 id="3-输出到页面"><a href="#3-输出到页面" class="headerlink" title="3.输出到页面"></a>3.输出到页面</h3><p>ImageIO.write（）方法</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="Ⅰ-验证码点击切换"><a href="#Ⅰ-验证码点击切换" class="headerlink" title="Ⅰ.验证码点击切换"></a>Ⅰ.验证码点击切换</h3><p>通过编写javascript实现</p>
<p>1.给超链接和图片绑定单击事件</p>
<p>2.重新设置图片的src属性</p>
<p>这里需要设置一个时间戳，可以用不重复。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-创建对象-1"><a href="#1-创建对象-1" class="headerlink" title="1..创建对象"></a>1..创建对象</h3><p>new BufferedImage（）创建一个图片对象</p>
<h3 id="2-美化-1"><a href="#2-美化-1" class="headerlink" title="2.美化"></a>2.美化</h3><p>通过创建对象的画笔，来进行底色填充、划线等。</p>
<h3 id="3-输出到页面-1"><a href="#3-输出到页面-1" class="headerlink" title="3.输出到页面"></a>3.输出到页面</h3><p>ImageIO.write（）方法</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="Ⅰ-验证码点击切换-1"><a href="#Ⅰ-验证码点击切换-1" class="headerlink" title="Ⅰ.验证码点击切换"></a>Ⅰ.验证码点击切换</h3><p>通过编写javascript实现</p>
<p>1.给超链接和图片绑定单击事件</p>
<p>2.重新设置图片的src属性</p>
<p>这里需要设置一个时间戳，可以用不重复。实现</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-创建对象-2"><a href="#1-创建对象-2" class="headerlink" title="1..创建对象"></a>1..创建对象</h3><p>new BufferedImage（）创建一个图片对象</p>
<h3 id="2-美化-2"><a href="#2-美化-2" class="headerlink" title="2.美化"></a>2.美化</h3><p>通过创建对象的画笔，来进行底色填充、划线等。</p>
<h3 id="3-输出到页面-2"><a href="#3-输出到页面-2" class="headerlink" title="3.输出到页面"></a>3.输出到页面</h3><p>ImageIO.write（）方法</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="Ⅰ-验证码点击切换-2"><a href="#Ⅰ-验证码点击切换-2" class="headerlink" title="Ⅰ.验证码点击切换"></a>Ⅰ.验证码点击切换</h3><p>通过编写javascript实现</p>
<p>1.给超链接和图片绑定单击事件</p>
<p>2.重新设置图片的src属性</p>
<p>这里需要设置一个时间戳，可以用不重复。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-创建对象-3"><a href="#1-创建对象-3" class="headerlink" title="1..创建对象"></a>1..创建对象</h3><p>new BufferedImage（）创建一个图片对象</p>
<h3 id="2-美化-3"><a href="#2-美化-3" class="headerlink" title="2.美化"></a>2.美化</h3><p>通过创建对象的画笔，来进行底色填充、划线等。</p>
<h3 id="3-输出到页面-3"><a href="#3-输出到页面-3" class="headerlink" title="3.输出到页面"></a>3.输出到页面</h3><p>ImageIO.write（）方法</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="Ⅰ-验证码点击切换-3"><a href="#Ⅰ-验证码点击切换-3" class="headerlink" title="Ⅰ.验证码点击切换"></a>Ⅰ.验证码点击切换</h3><p>通过编写javascript实现</p>
<p>1.给超链接和图片绑定单击事件</p>
<p>2.重新设置图片的src属性</p>
<p>这里需要设置一个时间戳，可以用不重复。</p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
  <entry>
    <title>MyBatis简介</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/MyBatis%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="MyBatis简介"><a href="#MyBatis简介" class="headerlink" title="MyBatis简介"></a>MyBatis简介</h1><p><img src="/./../../TyporaImage/MyBatis/image-20240924214520581.png" alt="image-20240924214520581"></p>
<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>MyBatis是一款支持定制化 SQL、存储过程以及高级映射的持久层框架，用于简化数据库交互。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.SqlSession：用于执行SQL命令的接口。<br>2.Mapper：定义SQL语句和Java方法的映射关系的接口或XML文件。<br>3.Configuration：MyBatis的配置文件，包含数据库连接信息、映射器等设置。<br>4.ResultMap：定义数据库查询结果与Java对象之间的映射。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>包括配置文件、Mapper接口、映射XML文件、Java实体类等。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.XML配置：使用XML文件进行SQL语句和映射定义。<br>2.注解配置：使用Java注解来定义SQL语句和映射。</p>
<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>简化数据库操作，增强SQL语句的灵活性和可维护性，支持复杂的查询和映射。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>提高数据库操作的效率与可维护性，减少JDBC代码的冗余。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过将SQL语句与Java方法映射，MyBatis允许开发者使用简洁的方式进行数据操作。简介</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20240924214520581.png" alt="image-20240924214520581"></p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>MyBatis是一款支持定制化 SQL、存储过程以及高级映射的持久层框架，用于简化数据库交互。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.SqlSession：用于执行SQL命令的接口。<br>2.Mapper：定义SQL语句和Java方法的映射关系的接口或XML文件。<br>3.Configuration：MyBatis的配置文件，包含数据库连接信息、映射器等设置。<br>4.ResultMap：定义数据库查询结果与Java对象之间的映射。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>包括配置文件、Mapper接口、映射XML文件、Java实体类等。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.XML配置：使用XML文件进行SQL语句和映射定义。<br>2.注解配置：使用Java注解来定义SQL语句和映射。</p>
<h2 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h2><p>简化数据库操作，增强SQL语句的灵活性和可维护性，支持复杂的查询和映射。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>提高数据库操作的效率与可维护性，减少JDBC代码的冗余。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过将SQL语句与Java方法映射，MyBatis允许开发者使用简洁的方式进行数据操作。</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>MyBatis框架的环境搭建</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/MyBatis%E6%A1%86%E6%9E%B6%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="1-设置idea的SDK以及语言级别"><a href="#1-设置idea的SDK以及语言级别" class="headerlink" title="1.设置idea的SDK以及语言级别"></a>1.设置idea的SDK以及语言级别</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241009211925490.png" alt="image-20241009211925490"></p>
<p>SDK与语言级别要相对应。</p>
<h2 id="2-配置maven"><a href="#2-配置maven" class="headerlink" title="2.配置maven"></a>2.配置maven</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241009212028992.png" alt="image-20241009212028992"></p>
<p>搭建</p>
<h2 id="1-设置idea的SDK以及语言级别-1"><a href="#1-设置idea的SDK以及语言级别-1" class="headerlink" title="1.设置idea的SDK以及语言级别"></a>1.设置idea的SDK以及语言级别</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241009211925490.png" alt="image-20241009211925490"></p>
<p>SDK与语言级别要相对应。</p>
<h2 id="2-配置maven-1"><a href="#2-配置maven-1" class="headerlink" title="2.配置maven"></a>2.配置maven</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241009212028992.png" alt="image-20241009212028992"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>MyBatis逆向工程</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/MyBatis%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="MyBatis的逆向工程"><a href="#MyBatis的逆向工程" class="headerlink" title="MyBatis的逆向工程"></a>MyBatis的逆向工程</h1><ul>
<li>正向工程：先创建Java实体类，由框架负责根据实体类生成数据库表。Hibernate是支持正向工程的</li>
<li>逆向工程：先创建数据库表，由框架负责根据数据库表，反向生成如下资源：  </li>
<li>Java实体类  <ul>
<li>Mapper接口  </li>
<li>Mapper映射文件</li>
</ul>
</li>
</ul>
<h2 id="创建逆向工程的步骤"><a href="#创建逆向工程的步骤" class="headerlink" title="创建逆向工程的步骤"></a>创建逆向工程的步骤</h2><h3 id="1-添加依赖和插件"><a href="#1-添加依赖和插件" class="headerlink" title="1.添加依赖和插件"></a>1.添加依赖和插件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- MyBatis核心依赖包 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- log4j日志 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 控制Maven在构建过程中相关配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 构建过程中用到的插件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 具体插件，逆向工程的操作是以构建过程中插件形式出现的 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 插件的依赖 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 逆向工程的核心依赖 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-创建MyBatis的核心配置文件"><a href="#2-创建MyBatis的核心配置文件" class="headerlink" title="2.创建MyBatis的核心配置文件"></a>2.创建MyBatis的核心配置文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-创建逆向工程的配置文件"><a href="#3-创建逆向工程的配置文件" class="headerlink" title="3.创建逆向工程的配置文件"></a>3.创建逆向工程的配置文件</h3><ul>
<li>文件名必须是：<code>generatorConfig.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    targetRuntime: 执行生成的逆向工程的版本</span></span><br><span class="line"><span class="comment">    MyBatis3Simple: 生成基本的CRUD（清新简洁版）</span></span><br><span class="line"><span class="comment">    MyBatis3: 生成带条件的CRUD（奢华尊享版）</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;DB2Tables&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3Simple&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 数据库的连接信息 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">&quot;123456&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- javaBean的生成策略--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.pojo&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;trimStrings&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SQL映射文件的生成策略 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\resources&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Mapper接口的生成策略 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 逆向分析的表 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- tableName设置为*号，可以对应所有表，此时不写domainObjectName --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- domainObjectName属性指定生成出来的实体类的类名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;t_emp&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Emp&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;t_dept&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Dept&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-执行MBG插件的generate目标"><a href="#4-执行MBG插件的generate目标" class="headerlink" title="4.执行MBG插件的generate目标"></a>4.执行MBG插件的generate目标</h3><p>工程</p>
<ul>
<li>正向工程：先创建Java实体类，由框架负责根据实体类生成数据库表。Hibernate是支持正向工程的</li>
<li>逆向工程：先创建数据库表，由框架负责根据数据库表，反向生成如下资源：  </li>
<li>Java实体类  <ul>
<li>Mapper接口  </li>
<li>Mapper映射文件</li>
</ul>
</li>
</ul>
<h2 id="创建逆向工程的步骤-1"><a href="#创建逆向工程的步骤-1" class="headerlink" title="创建逆向工程的步骤"></a>创建逆向工程的步骤</h2><h3 id="1-添加依赖和插件-1"><a href="#1-添加依赖和插件-1" class="headerlink" title="1.添加依赖和插件"></a>1.添加依赖和插件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- MyBatis核心依赖包 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- log4j日志 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 控制Maven在构建过程中相关配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 构建过程中用到的插件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 具体插件，逆向工程的操作是以构建过程中插件形式出现的 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 插件的依赖 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 逆向工程的核心依赖 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-创建MyBatis的核心配置文件-1"><a href="#2-创建MyBatis的核心配置文件-1" class="headerlink" title="2.创建MyBatis的核心配置文件"></a>2.创建MyBatis的核心配置文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-创建逆向工程的配置文件-1"><a href="#3-创建逆向工程的配置文件-1" class="headerlink" title="3.创建逆向工程的配置文件"></a>3.创建逆向工程的配置文件</h3><ul>
<li>文件名必须是：<code>generatorConfig.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    targetRuntime: 执行生成的逆向工程的版本</span></span><br><span class="line"><span class="comment">    MyBatis3Simple: 生成基本的CRUD（清新简洁版）</span></span><br><span class="line"><span class="comment">    MyBatis3: 生成带条件的CRUD（奢华尊享版）</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;DB2Tables&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3Simple&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 数据库的连接信息 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">&quot;123456&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- javaBean的生成策略--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.pojo&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;trimStrings&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SQL映射文件的生成策略 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\resources&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Mapper接口的生成策略 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 逆向分析的表 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- tableName设置为*号，可以对应所有表，此时不写domainObjectName --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- domainObjectName属性指定生成出来的实体类的类名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;t_emp&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Emp&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;t_dept&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Dept&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-执行MBG插件的generate目标-1"><a href="#4-执行MBG插件的generate目标-1" class="headerlink" title="4.执行MBG插件的generate目标"></a>4.执行MBG插件的generate目标</h3>]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>Properties文件-核心配置文件</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/Properties%E6%96%87%E4%BB%B6-%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="Properties文件"><a href="#Properties文件" class="headerlink" title="Properties文件"></a>Properties文件</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-设置键的时候用明确的具体的标识。-这是为了区分不同文件的不同数据源。"><a href="#1-设置键的时候用明确的具体的标识。-这是为了区分不同文件的不同数据源。" class="headerlink" title="1.设置键的时候用明确的具体的标识。   这是为了区分不同文件的不同数据源。"></a>1.设置键的时候用明确的具体的标识。   这是为了区分不同文件的不同数据源。</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011103604765.png" alt="image-20241011103604765"></p>
<h3 id="2-在核心配置文件中引入该Properties文件。"><a href="#2-在核心配置文件中引入该Properties文件。" class="headerlink" title="2.在核心配置文件中引入该Properties文件。"></a>2.在核心配置文件中引入该Properties文件。</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011104039516.png" alt="image-20241011104039516"></p>
<h3 id="3-配置数据源的引用"><a href="#3-配置数据源的引用" class="headerlink" title="3.配置数据源的引用"></a>3.配置数据源的引用</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011104103339.png" alt="image-20241011104103339"></p>
<p>文件</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-设置键的时候用明确的具体的标识。-这是为了区分不同文件的不同数据源。-1"><a href="#1-设置键的时候用明确的具体的标识。-这是为了区分不同文件的不同数据源。-1" class="headerlink" title="1.设置键的时候用明确的具体的标识。   这是为了区分不同文件的不同数据源。"></a>1.设置键的时候用明确的具体的标识。   这是为了区分不同文件的不同数据源。</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011103604765.png" alt="image-20241011103604765"></p>
<h3 id="2-在核心配置文件中引入该Properties文件。-1"><a href="#2-在核心配置文件中引入该Properties文件。-1" class="headerlink" title="2.在核心配置文件中引入该Properties文件。"></a>2.在核心配置文件中引入该Properties文件。</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011104039516.png" alt="image-20241011104039516"></p>
<h3 id="3-配置数据源的引用-1"><a href="#3-配置数据源的引用-1" class="headerlink" title="3.配置数据源的引用"></a>3.配置数据源的引用</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011104103339.png" alt="image-20241011104103339"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>ResultMap_解决字段名与属性名不一致</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/ResultMap_%E8%A7%A3%E5%86%B3%E5%AD%97%E6%AE%B5%E5%90%8D%E4%B8%8E%E5%B1%9E%E6%80%A7%E5%90%8D%E4%B8%8D%E4%B8%80%E8%87%B4/</url>
    <content><![CDATA[<h1 id="ResultMap-查询语句"><a href="#ResultMap-查询语句" class="headerlink" title="ResultMap(查询语句)"></a>ResultMap(查询语句)</h1><h2 id="1-将select语句中属性设置为resultmap"><a href="#1-将select语句中属性设置为resultmap" class="headerlink" title="1.将select语句中属性设置为resultmap"></a>1.将select语句中属性设置为resultmap</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023165141731.png" alt="image-20241023165141731"></p>
<h2 id="2-在同一个xml文件中-自定义这个resultmap类型"><a href="#2-在同一个xml文件中-自定义这个resultmap类型" class="headerlink" title="2.在同一个xml文件中,自定义这个resultmap类型"></a>2.在同一个xml文件中,自定义这个resultmap类型</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023165217805.png" alt="image-20241023165217805"></p>
<p>id属性是唯一标识</p>
<p>type设置映射关系中实体类的类型</p>
<p>id标签用来设置主键字段的映射关系</p>
<p>result标签用来设置普通字段的映射关系</p>
<p>property属性设置实体类属性</p>
<p>culumn属性设置查询的字段名</p>
<p>句)</p>
<h2 id="1-将select语句中属性设置为resultmap-1"><a href="#1-将select语句中属性设置为resultmap-1" class="headerlink" title="1.将select语句中属性设置为resultmap"></a>1.将select语句中属性设置为resultmap</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023165141731.png" alt="image-20241023165141731"></p>
<h2 id="2-在同一个xml文件中-自定义这个resultmap类型-1"><a href="#2-在同一个xml文件中-自定义这个resultmap类型-1" class="headerlink" title="2.在同一个xml文件中,自定义这个resultmap类型"></a>2.在同一个xml文件中,自定义这个resultmap类型</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023165217805.png" alt="image-20241023165217805"></p>
<p>id属性是唯一标识</p>
<p>type设置映射关系中实体类的类型</p>
<p>id标签用来设置主键字段的映射关系</p>
<p>result标签用来设置普通字段的映射关系</p>
<p>property属性设置实体类属性</p>
<p>culumn属性设置查询的字段名</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>SQL拼接_映射文件</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/SQL%E6%8B%BC%E6%8E%A5_%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="SQL拼接"><a href="#SQL拼接" class="headerlink" title="SQL拼接"></a>SQL拼接</h1><p>拼接</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>Mybatis一级缓存</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/Mybatis%E4%B8%80%E7%BA%A7%E7%BC%93%E5%AD%98/</url>
    <content><![CDATA[<h1 id="一级缓存"><a href="#一级缓存" class="headerlink" title="一级缓存"></a>一级缓存</h1><p>一级缓存默认开启.级别:SqlSession.</p>
<p>在同一个SqlSession中,查询相同的数据,会从缓存中拿取数据.</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241025164247462.png" alt="image-20241025164247462"></p>
<p>从日志中,可以看出只调用了一次sql语句</p>
<p>缓存</p>
<p>一级缓存默认开启.级别:SqlSession.</p>
<p>在同一个SqlSession中,查询相同的数据,会从缓存中拿取数据.</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241025164247462.png" alt="image-20241025164247462"></p>
<p>从日志中,可以看出只调用了一次sql语句</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>association标签_多对一映射关系</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/association%E6%A0%87%E7%AD%BE_%E5%A4%9A%E5%AF%B9%E4%B8%80%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[<h1 id="association标签"><a href="#association标签" class="headerlink" title="association标签"></a>association标签</h1><h2 id="1-通过左连接查询查询两个表的内容"><a href="#1-通过左连接查询查询两个表的内容" class="headerlink" title="1.通过左连接查询查询两个表的内容"></a>1.通过左连接查询查询两个表的内容</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023203235061.png" alt="image-20241023203235061"></p>
<h2 id="2-设置resultmap-其中多对一的属性通过association标签进行设置"><a href="#2-设置resultmap-其中多对一的属性通过association标签进行设置" class="headerlink" title="2.设置resultmap.其中多对一的属性通过association标签进行设置."></a>2.设置resultmap.其中多对一的属性通过association标签进行设置.</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023203253026.png" alt="image-20241023203253026">标签</p>
<h2 id="1-通过左连接查询查询两个表的内容-1"><a href="#1-通过左连接查询查询两个表的内容-1" class="headerlink" title="1.通过左连接查询查询两个表的内容"></a>1.通过左连接查询查询两个表的内容</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023203235061.png" alt="image-20241023203235061"></p>
<h2 id="2-设置resultmap-其中多对一的属性通过association标签进行设置-1"><a href="#2-设置resultmap-其中多对一的属性通过association标签进行设置-1" class="headerlink" title="2.设置resultmap.其中多对一的属性通过association标签进行设置."></a>2.设置resultmap.其中多对一的属性通过association标签进行设置.</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023203253026.png" alt="image-20241023203253026"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>collection_一对多映射关系</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/collection_%E4%B8%80%E5%AF%B9%E5%A4%9A%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[<h1 id="collection"><a href="#collection" class="headerlink" title="collection"></a>collection</h1><h2 id="1-编写接口"><a href="#1-编写接口" class="headerlink" title="1.编写接口"></a>1.编写接口</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024204106590.png" alt="image-20241024204106590"></p>
<h2 id="2-配置接口对应方法的xml文件"><a href="#2-配置接口对应方法的xml文件" class="headerlink" title="2.配置接口对应方法的xml文件."></a>2.配置接口对应方法的xml文件.</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024204158804.png" alt="image-20241024204158804"></p>
<h3 id="这个List用collection标签来表示-ofType是List集合里面的类型"><a href="#这个List用collection标签来表示-ofType是List集合里面的类型" class="headerlink" title="这个List用collection标签来表示,ofType是List集合里面的类型"></a>这个List用collection标签来表示,ofType是List集合里面的类型</h3><h2 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024204312202.png" alt="image-20241024204312202"><br>on</p>
<h2 id="1-编写接口-1"><a href="#1-编写接口-1" class="headerlink" title="1.编写接口"></a>1.编写接口</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024204106590.png" alt="image-20241024204106590"></p>
<h2 id="2-配置接口对应方法的xml文件-1"><a href="#2-配置接口对应方法的xml文件-1" class="headerlink" title="2.配置接口对应方法的xml文件."></a>2.配置接口对应方法的xml文件.</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024204158804.png" alt="image-20241024204158804"></p>
<h3 id="这个List用collection标签来表示-ofType是List集合里面的类型-1"><a href="#这个List用collection标签来表示-ofType是List集合里面的类型-1" class="headerlink" title="这个List用collection标签来表示,ofType是List集合里面的类型"></a>这个List用collection标签来表示,ofType是List集合里面的类型</h3><h2 id="3-测试-1"><a href="#3-测试-1" class="headerlink" title="3.测试"></a>3.测试</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024204312202.png" alt="image-20241024204312202"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>chose.when.otherwise标签_SQL拼接</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/chose.when.otherwise%E6%A0%87%E7%AD%BE_SQL%E6%8B%BC%E6%8E%A5/</url>
    <content><![CDATA[<h1 id="chose-when-otherwise标签"><a href="#chose-when-otherwise标签" class="headerlink" title="chose&#x2F;when&#x2F;otherwise标签"></a>chose&#x2F;when&#x2F;otherwise标签</h1><p>这个标签相当于if….else if….else,所以只能有一个条件起作用</p>
<p>when标签至少有一个,otherwise标签最多有一个</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241025111638917.png" alt="image-20241025111638917">标签</p>
<p>这个标签相当于if….else if….else,所以只能有一个条件起作用</p>
<p>when标签至少有一个,otherwise标签最多有一个</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241025111638917.png" alt="image-20241025111638917"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>foreach标签(删除)_SQL拼接</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/foreach%E6%A0%87%E7%AD%BE(%E5%88%A0%E9%99%A4)_SQL%E6%8B%BC%E6%8E%A5/</url>
    <content><![CDATA[<h1 id="foreach标签-删除"><a href="#foreach标签-删除" class="headerlink" title="foreach标签(删除)"></a>foreach标签(删除)</h1><h2 id="1-创建mapper接口"><a href="#1-创建mapper接口" class="headerlink" title="1.创建mapper接口"></a>1.创建mapper接口</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025113322047.png" alt="image-20241025113322047"></p>
<h2 id="2-相对应的xml文件"><a href="#2-相对应的xml文件" class="headerlink" title="2.相对应的xml文件"></a>2.相对应的xml文件</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025113348894.png" alt="image-20241025113348894"></p>
<p>collection是集合</p>
<p>item是每一项</p>
<p>separator是分隔符</p>
<h2 id="3-调用"><a href="#3-调用" class="headerlink" title="3.调用"></a>3.调用</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025113406848.png" alt="image-20241025113406848"></p>
<h2 id="PS-也可以通过open和close属性-替代那个括号"><a href="#PS-也可以通过open和close属性-替代那个括号" class="headerlink" title="PS:也可以通过open和close属性,替代那个括号"></a>PS:也可以通过open和close属性,替代那个括号</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025113648581.png" alt="image-20241025113648581">除)</p>
<h2 id="1-创建mapper接口-1"><a href="#1-创建mapper接口-1" class="headerlink" title="1.创建mapper接口"></a>1.创建mapper接口</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025113322047.png" alt="image-20241025113322047"></p>
<h2 id="2-相对应的xml文件-1"><a href="#2-相对应的xml文件-1" class="headerlink" title="2.相对应的xml文件"></a>2.相对应的xml文件</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025113348894.png" alt="image-20241025113348894"></p>
<p>collection是集合</p>
<p>item是每一项</p>
<p>separator是分隔符</p>
<h2 id="3-调用-1"><a href="#3-调用-1" class="headerlink" title="3.调用"></a>3.调用</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025113406848.png" alt="image-20241025113406848"></p>
<h2 id="PS-也可以通过open和close属性-替代那个括号-1"><a href="#PS-也可以通过open和close属性-替代那个括号-1" class="headerlink" title="PS:也可以通过open和close属性,替代那个括号"></a>PS:也可以通过open和close属性,替代那个括号</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025113648581.png" alt="image-20241025113648581"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>environments标签-核心配置文件</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/environments%E6%A0%87%E7%AD%BE-%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="enviroments标签"><a href="#enviroments标签" class="headerlink" title="enviroments标签"></a>enviroments标签</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>用来配置多个连接数据库的环境</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-environments标签中的default属性用来配置默认使用的环境"><a href="#1-environments标签中的default属性用来配置默认使用的环境" class="headerlink" title="1.environments标签中的default属性用来配置默认使用的环境"></a>1.environments标签中的default属性用来配置默认使用的环境</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011102711000.png" alt="image-20241011102711000"></p>
<h3 id="2，enviroment标签用来配置具体的环境，id属性是它的唯一标识"><a href="#2，enviroment标签用来配置具体的环境，id属性是它的唯一标识" class="headerlink" title="2，enviroment标签用来配置具体的环境，id属性是它的唯一标识"></a>2，enviroment标签用来配置具体的环境，id属性是它的唯一标识</h3><h3 id="3-transactionManager标签的type设置为JDBC表示事务的提交采用手动方式"><a href="#3-transactionManager标签的type设置为JDBC表示事务的提交采用手动方式" class="headerlink" title="3.transactionManager标签的type设置为JDBC表示事务的提交采用手动方式"></a>3.transactionManager标签的type设置为JDBC表示事务的提交采用手动方式</h3><h3 id="4-datasource标签用来配置数据源"><a href="#4-datasource标签用来配置数据源" class="headerlink" title="4.datasource标签用来配置数据源"></a>4.datasource标签用来配置数据源</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011103120235.png" alt="image-20241011103120235">标签</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>用来配置多个连接数据库的环境</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-environments标签中的default属性用来配置默认使用的环境-1"><a href="#1-environments标签中的default属性用来配置默认使用的环境-1" class="headerlink" title="1.environments标签中的default属性用来配置默认使用的环境"></a>1.environments标签中的default属性用来配置默认使用的环境</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011102711000.png" alt="image-20241011102711000"></p>
<h3 id="2，enviroment标签用来配置具体的环境，id属性是它的唯一标识-1"><a href="#2，enviroment标签用来配置具体的环境，id属性是它的唯一标识-1" class="headerlink" title="2，enviroment标签用来配置具体的环境，id属性是它的唯一标识"></a>2，enviroment标签用来配置具体的环境，id属性是它的唯一标识</h3><h3 id="3-transactionManager标签的type设置为JDBC表示事务的提交采用手动方式-1"><a href="#3-transactionManager标签的type设置为JDBC表示事务的提交采用手动方式-1" class="headerlink" title="3.transactionManager标签的type设置为JDBC表示事务的提交采用手动方式"></a>3.transactionManager标签的type设置为JDBC表示事务的提交采用手动方式</h3><h3 id="4-datasource标签用来配置数据源-1"><a href="#4-datasource标签用来配置数据源-1" class="headerlink" title="4.datasource标签用来配置数据源"></a>4.datasource标签用来配置数据源</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011103120235.png" alt="image-20241011103120235"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>foreach标签(添加)_SQL拼接</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/foreach%E6%A0%87%E7%AD%BE(%E6%B7%BB%E5%8A%A0)_SQL%E6%8B%BC%E6%8E%A5/</url>
    <content><![CDATA[<h1 id="foreach标签-添加"><a href="#foreach标签-添加" class="headerlink" title="foreach标签(添加)"></a>foreach标签(添加)</h1><h2 id="1-设置mapper接口"><a href="#1-设置mapper接口" class="headerlink" title="1.设置mapper接口"></a>1.设置mapper接口</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025154927912.png" alt="image-20241025154927912"></p>
<h2 id="2-编写对应的xml文件"><a href="#2-编写对应的xml文件" class="headerlink" title="2.编写对应的xml文件"></a>2.编写对应的xml文件</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025154948993.png" alt="image-20241025154948993"></p>
<h3 id="PS-注意引用一定要用emp-age等等-明确指明是emp这个项的属性"><a href="#PS-注意引用一定要用emp-age等等-明确指明是emp这个项的属性" class="headerlink" title="PS:注意引用一定要用emp.age等等.明确指明是emp这个项的属性."></a>PS:注意引用一定要用emp.age等等.明确指明是emp这个项的属性.</h3><h2 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025155648848.png" alt="image-20241025155648848"></p>
<p>加)</p>
<h2 id="1-设置mapper接口-1"><a href="#1-设置mapper接口-1" class="headerlink" title="1.设置mapper接口"></a>1.设置mapper接口</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025154927912.png" alt="image-20241025154927912"></p>
<h2 id="2-编写对应的xml文件-1"><a href="#2-编写对应的xml文件-1" class="headerlink" title="2.编写对应的xml文件"></a>2.编写对应的xml文件</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025154948993.png" alt="image-20241025154948993"></p>
<h3 id="PS-注意引用一定要用emp-age等等-明确指明是emp这个项的属性-1"><a href="#PS-注意引用一定要用emp-age等等-明确指明是emp这个项的属性-1" class="headerlink" title="PS:注意引用一定要用emp.age等等.明确指明是emp这个项的属性."></a>PS:注意引用一定要用emp.age等等.明确指明是emp这个项的属性.</h3><h2 id="3-测试-1"><a href="#3-测试-1" class="headerlink" title="3.测试"></a>3.测试</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025155648848.png" alt="image-20241025155648848"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>if标签-动态SQL</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/if%E6%A0%87%E7%AD%BE-%E5%8A%A8%E6%80%81SQL/</url>
    <content><![CDATA[<h1 id="if标签"><a href="#if标签" class="headerlink" title="if标签"></a>if标签</h1><p>通过if标签动态拼接SQL语句,来从实体类中接收参数来拼接SQL语句</p>
<h2 id="1-编写动态拼接的mapper"><a href="#1-编写动态拼接的mapper" class="headerlink" title="1.编写动态拼接的mapper"></a>1.编写动态拼接的mapper</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024215245780.png" alt="image-20241024215245780"></p>
<h2 id="2-设置mapper相对应的xml文件"><a href="#2-设置mapper相对应的xml文件" class="headerlink" title="2.设置mapper相对应的xml文件"></a>2.设置mapper相对应的xml文件</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024215339313.png" alt="image-20241024215339313"></p>
<h3 id="在where后面加一个1-1-避免SQL拼接中的and问题"><a href="#在where后面加一个1-1-避免SQL拼接中的and问题" class="headerlink" title="在where后面加一个1&#x3D;1,避免SQL拼接中的and问题."></a>在where后面加一个1&#x3D;1,避免SQL拼接中的and问题.</h3><h2 id="3-调用"><a href="#3-调用" class="headerlink" title="3.调用"></a>3.调用</h2><p>标签</p>
<p>通过if标签动态拼接SQL语句,来从实体类中接收参数来拼接SQL语句</p>
<h2 id="1-编写动态拼接的mapper-1"><a href="#1-编写动态拼接的mapper-1" class="headerlink" title="1.编写动态拼接的mapper"></a>1.编写动态拼接的mapper</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024215245780.png" alt="image-20241024215245780"></p>
<h2 id="2-设置mapper相对应的xml文件-1"><a href="#2-设置mapper相对应的xml文件-1" class="headerlink" title="2.设置mapper相对应的xml文件"></a>2.设置mapper相对应的xml文件</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024215339313.png" alt="image-20241024215339313"></p>
<h3 id="在where后面加一个1-1-避免SQL拼接中的and问题-1"><a href="#在where后面加一个1-1-避免SQL拼接中的and问题-1" class="headerlink" title="在where后面加一个1&#x3D;1,避免SQL拼接中的and问题."></a>在where后面加一个1&#x3D;1,避免SQL拼接中的and问题.</h3><h2 id="3-调用-1"><a href="#3-调用-1" class="headerlink" title="3.调用"></a>3.调用</h2>]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>mappers_核心配置文件</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/mappers_%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="mapeprs标签"><a href="#mapeprs标签" class="headerlink" title="mapeprs标签"></a>mapeprs标签</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>引入映射文件的标签。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="以包为单位引入映射文件"><a href="#以包为单位引入映射文件" class="headerlink" title="以包为单位引入映射文件"></a>以包为单位引入映射文件</h3><p>1.mapper接口所在的包要和映射文件所在的包一致</p>
<p>2.mapper接口要和映射文件名字一致</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241011105854787.png" alt="image-20241011105854787"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241011105902697.png" alt="image-20241011105902697">标签</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>引入映射文件的标签。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="以包为单位引入映射文件-1"><a href="#以包为单位引入映射文件-1" class="headerlink" title="以包为单位引入映射文件"></a>以包为单位引入映射文件</h3><p>1.mapper接口所在的包要和映射文件所在的包一致</p>
<p>2.mapper接口要和映射文件名字一致</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241011105854787.png" alt="image-20241011105854787"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241011105902697.png" alt="image-20241011105902697"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>sql标签_SQL拼接</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/sql%E6%A0%87%E7%AD%BE_SQL%E6%8B%BC%E6%8E%A5/</url>
    <content><![CDATA[<h1 id="sql拼接"><a href="#sql拼接" class="headerlink" title="sql拼接"></a>sql拼接</h1><h2 id="1-编写sql标签"><a href="#1-编写sql标签" class="headerlink" title="1.编写sql标签"></a>1.编写sql标签</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025160222644.png" alt="image-20241025160222644"></p>
<h2 id="2-引用sql标签内容"><a href="#2-引用sql标签内容" class="headerlink" title="2.引用sql标签内容"></a>2.引用sql标签内容</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025160249923.png" alt="image-20241025160249923"></p>
<h2 id="3-调用"><a href="#3-调用" class="headerlink" title="3.调用"></a>3.调用</h2><p>拼接</p>
<h2 id="1-编写sql标签-1"><a href="#1-编写sql标签-1" class="headerlink" title="1.编写sql标签"></a>1.编写sql标签</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025160222644.png" alt="image-20241025160222644"></p>
<h2 id="2-引用sql标签内容-1"><a href="#2-引用sql标签内容-1" class="headerlink" title="2.引用sql标签内容"></a>2.引用sql标签内容</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241025160249923.png" alt="image-20241025160249923"></p>
<h2 id="3-调用-1"><a href="#3-调用-1" class="headerlink" title="3.调用"></a>3.调用</h2>]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>trim标签_SQL拼接</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/trim%E6%A0%87%E7%AD%BE_SQL%E6%8B%BC%E6%8E%A5/</url>
    <content><![CDATA[<h1 id="trim标签"><a href="#trim标签" class="headerlink" title="trim标签"></a>trim标签</h1><p><img src="/./../../TyporaImage/MyBatis/image-20241025110340437.png" alt="image-20241025110340437"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241025110349038.png" alt="image-20241025110349038">标签</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241025110340437.png" alt="image-20241025110340437"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241025110349038.png" alt="image-20241025110349038"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>typeAliases_核心配置文件</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/typeAliases_%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="typeAliases"><a href="#typeAliases" class="headerlink" title="typeAliases"></a>typeAliases</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>一个可以用来设置类型的别名的标签。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="使用方式1："><a href="#使用方式1：" class="headerlink" title="使用方式1："></a>使用方式1：</h3><h4 id="在type中设置全类名，alias中设置别名；如果不设置，则默认是类名。"><a href="#在type中设置全类名，alias中设置别名；如果不设置，则默认是类名。" class="headerlink" title="在type中设置全类名，alias中设置别名；如果不设置，则默认是类名。"></a>在type中设置全类名，alias中设置别名；如果不设置，则默认是类名。</h4><p><img src="/./../../TyporaImage/MyBatis/image-20241011104514429.png" alt="image-20241011104514429"></p>
<h3 id="使用方式2"><a href="#使用方式2" class="headerlink" title="使用方式2:"></a>使用方式2:</h3><p>用package标签引入相关的包来设置默认的别名。</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241011105029113.png" alt="image-20241011105029113">es</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>一个可以用来设置类型的别名的标签。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="使用方式1：-1"><a href="#使用方式1：-1" class="headerlink" title="使用方式1："></a>使用方式1：</h3><h4 id="在type中设置全类名，alias中设置别名；如果不设置，则默认是类名。-1"><a href="#在type中设置全类名，alias中设置别名；如果不设置，则默认是类名。-1" class="headerlink" title="在type中设置全类名，alias中设置别名；如果不设置，则默认是类名。"></a>在type中设置全类名，alias中设置别名；如果不设置，则默认是类名。</h4><p><img src="/./../../TyporaImage/MyBatis/image-20241011104514429.png" alt="image-20241011104514429"></p>
<h3 id="使用方式2-1"><a href="#使用方式2-1" class="headerlink" title="使用方式2:"></a>使用方式2:</h3><p>用package标签引入相关的包来设置默认的别名。</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241011105029113.png" alt="image-20241011105029113"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>where标签_SQL拼接</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/where%E6%A0%87%E7%AD%BE_SQL%E6%8B%BC%E6%8E%A5/</url>
    <content><![CDATA[<h1 id="where标签"><a href="#where标签" class="headerlink" title="where标签"></a>where标签</h1><p>当where标签中有内容时,会自动生成where关键字,并将内容前多余的and或者or去掉</p>
<p>当where标签中没有内容时,此时where标签没有任何效果,不会生成关键字.</p>
<p>PS:where标签不能将其中内容后面多余的and或者or去掉,也就是说where只能自动去掉内容前面的关键字</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241025105844289.png" alt="image-20241025105844289"></p>
<p>标签</p>
<p>当where标签中有内容时,会自动生成where关键字,并将内容前多余的and或者or去掉</p>
<p>当where标签中没有内容时,此时where标签没有任何效果,不会生成关键字.</p>
<p>PS:where标签不能将其中内容后面多余的and或者or去掉,也就是说where只能自动去掉内容前面的关键字</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241025105844289.png" alt="image-20241025105844289"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>二级缓存</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98/</url>
    <content><![CDATA[<h1 id="二级缓存"><a href="#二级缓存" class="headerlink" title="二级缓存"></a>二级缓存</h1><h2 id="二级缓存是SqlSessionFactory级别"><a href="#二级缓存是SqlSessionFactory级别" class="headerlink" title="二级缓存是SqlSessionFactory级别"></a>二级缓存是SqlSessionFactory级别</h2><h2 id="开启条件："><a href="#开启条件：" class="headerlink" title="开启条件："></a>开启条件：</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241026195656066.png" alt="image-20241026195656066"></p>
<h2 id="失效："><a href="#失效：" class="headerlink" title="失效："></a>失效：</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241026200833905.png" alt="image-20241026200833905">缓存</p>
<h2 id="二级缓存是SqlSessionFactory级别-1"><a href="#二级缓存是SqlSessionFactory级别-1" class="headerlink" title="二级缓存是SqlSessionFactory级别"></a>二级缓存是SqlSessionFactory级别</h2><h2 id="开启条件：-1"><a href="#开启条件：-1" class="headerlink" title="开启条件："></a>开启条件：</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241026195656066.png" alt="image-20241026195656066"></p>
<h2 id="失效：-1"><a href="#失效：-1" class="headerlink" title="失效："></a>失效：</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241026200833905.png" alt="image-20241026200833905"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>二级缓存的相关配置</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E7%9A%84%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="二级缓存的相关配置"><a href="#二级缓存的相关配置" class="headerlink" title="二级缓存的相关配置"></a>二级缓存的相关配置</h1><p><img src="/./../../TyporaImage/MyBatis/image-20241026201110563.png" alt="image-20241026201110563">配置</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241026201110563.png" alt="image-20241026201110563"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>全局配置_解决字段名与属性名映射不一致问题</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE_%E8%A7%A3%E5%86%B3%E5%AD%97%E6%AE%B5%E5%90%8D%E4%B8%8E%E5%B1%9E%E6%80%A7%E5%90%8D%E6%98%A0%E5%B0%84%E4%B8%8D%E4%B8%80%E8%87%B4%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h1><p><img src="/./../../TyporaImage/MyBatis/image-20241021210028254.png" alt="image-20241021210028254"></p>
<p>通过mapUnderscoreToCamelCase属性,来将下划线命名转换成驼峰命名.配置</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241021210028254.png" alt="image-20241021210028254"></p>
<p>通过mapUnderscoreToCamelCase属性,来将下划线命名转换成驼峰命名.</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>使一级缓存失效</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E4%BD%BF%E4%B8%80%E7%BA%A7%E7%BC%93%E5%AD%98%E5%A4%B1%E6%95%88/</url>
    <content><![CDATA[<h1 id="使一级缓存失效"><a href="#使一级缓存失效" class="headerlink" title="使一级缓存失效"></a>使一级缓存失效</h1><p><img src="/./../../TyporaImage/MyBatis/image-20241025164404037.png" alt="image-20241025164404037"></p>
<p>(4)可以通过sqlSession.clearCache();这个方法清空缓存</p>
<p>失效</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241025164404037.png" alt="image-20241025164404037"></p>
<p>(4)可以通过sqlSession.clearCache();这个方法清空缓存</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>分步查询_一对多关系</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%88%86%E6%AD%A5%E6%9F%A5%E8%AF%A2_%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[<h1 id="分步查询"><a href="#分步查询" class="headerlink" title="分步查询"></a>分步查询</h1><h2 id="1-定义相关接口"><a href="#1-定义相关接口" class="headerlink" title="1.定义相关接口"></a>1.定义相关接口</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024210819560.png" alt="image-20241024210819560"></p>
<h2 id="2-定义对应的xml文件"><a href="#2-定义对应的xml文件" class="headerlink" title="2.定义对应的xml文件"></a>2.定义对应的xml文件</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024210849288.png" alt="image-20241024210849288"></p>
<p>在collection标签中,select的值是第二步查询的全方法名.column是select的参数值</p>
<p>也可以在collection标签中设置fetchType属性来进行lazy加载和eager加载</p>
<p>查询</p>
<h2 id="1-定义相关接口-1"><a href="#1-定义相关接口-1" class="headerlink" title="1.定义相关接口"></a>1.定义相关接口</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024210819560.png" alt="image-20241024210819560"></p>
<h2 id="2-定义对应的xml文件-1"><a href="#2-定义对应的xml文件-1" class="headerlink" title="2.定义对应的xml文件"></a>2.定义对应的xml文件</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241024210849288.png" alt="image-20241024210849288"></p>
<p>在collection标签中,select的值是第二步查询的全方法名.column是select的参数值</p>
<p>也可以在collection标签中设置fetchType属性来进行lazy加载和eager加载</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>分步查询_解决多对一的关系</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%88%86%E6%AD%A5%E6%9F%A5%E8%AF%A2_%E8%A7%A3%E5%86%B3%E5%A4%9A%E5%AF%B9%E4%B8%80%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[<h1 id="分步查询"><a href="#分步查询" class="headerlink" title="分步查询"></a>分步查询</h1><h2 id="1-通过特定字段查询出想要的字段们"><a href="#1-通过特定字段查询出想要的字段们" class="headerlink" title="1.通过特定字段查询出想要的字段们"></a>1.通过特定字段查询出想要的字段们</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023211432777.png" alt="image-20241023211432777"></p>
<h2 id="2-设置resultMap-还是需要用association标签设置"><a href="#2-设置resultMap-还是需要用association标签设置" class="headerlink" title="2.设置resultMap,还是需要用association标签设置"></a>2.设置resultMap,还是需要用association标签设置</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023211606482.png" alt="image-20241023211606482"></p>
<p>其中select属性是二次查询方法的唯一标识,即群类名+方法名.</p>
<p>column属性是把第一次查询的结果,赋值给select的参数字段.</p>
<p>查询</p>
<h2 id="1-通过特定字段查询出想要的字段们-1"><a href="#1-通过特定字段查询出想要的字段们-1" class="headerlink" title="1.通过特定字段查询出想要的字段们"></a>1.通过特定字段查询出想要的字段们</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023211432777.png" alt="image-20241023211432777"></p>
<h2 id="2-设置resultMap-还是需要用association标签设置-1"><a href="#2-设置resultMap-还是需要用association标签设置-1" class="headerlink" title="2.设置resultMap,还是需要用association标签设置"></a>2.设置resultMap,还是需要用association标签设置</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023211606482.png" alt="image-20241023211606482"></p>
<p>其中select属性是二次查询方法的唯一标识,即群类名+方法名.</p>
<p>column属性是把第一次查询的结果,赋值给select的参数字段.</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>分页插件</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="分页插件"><a href="#分页插件" class="headerlink" title="分页插件"></a>分页插件</h1><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><h3 id="1-添加依赖"><a href="#1-添加依赖" class="headerlink" title="1.添加依赖"></a>1.添加依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-配置分页插件"><a href="#2-配置分页插件" class="headerlink" title="2.配置分页插件"></a>2.配置分页插件</h3><p>在MyBatis的核心配置文件（mybatis-config.xml）中配置插件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--设置分页插件--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-开启分页功能"><a href="#3-开启分页功能" class="headerlink" title="3.开启分页功能"></a>3.开启分页功能</h3><ul>
<li>在查询功能之前使用<code>PageHelper.startPage(int pageNum, int pageSize)</code>开启分页功能</li>
<li>pageNum：当前页的页码  </li>
<li>pageSize：每页显示的条数</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageHelper</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">	<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">	<span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">	<span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(is);</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">	<span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">	<span class="comment">//访问第一页，每页四条数据</span></span><br><span class="line">	PageHelper.startPage(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">	List&lt;Emp&gt; emps = mapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">	emps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-分页相关数据"><a href="#4-分页相关数据" class="headerlink" title="4.分页相关数据"></a>4.分页相关数据</h3><h4 id="方法一：直接输出"><a href="#方法一：直接输出" class="headerlink" title="方法一：直接输出"></a>方法一：直接输出</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageHelper</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">	<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">	<span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">	<span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(is);</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">	<span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">	<span class="comment">//访问第一页，每页四条数据</span></span><br><span class="line">	Page&lt;Object&gt; page = PageHelper.startPage(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">	List&lt;Emp&gt; emps = mapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">	<span class="comment">//在查询到List集合后，打印分页数据</span></span><br><span class="line">	System.out.println(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>分页相关数据：</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Page&#123;count=true, pageNum=1, pageSize=4, startRow=0, endRow=4, total=8, pages=2, reasonable=false, pageSizeZero=false&#125;[Emp&#123;eid=1, empName=&#x27;admin&#x27;, age=22, sex=&#x27;男&#x27;, email=&#x27;456@qq.com&#x27;, did=3&#125;, Emp&#123;eid=2, empName=&#x27;admin2&#x27;, age=22, sex=&#x27;男&#x27;, email=&#x27;456@qq.com&#x27;, did=3&#125;, Emp&#123;eid=3, empName=&#x27;王五&#x27;, age=12, sex=&#x27;女&#x27;, email=&#x27;123@qq.com&#x27;, did=3&#125;, Emp&#123;eid=4, empName=&#x27;赵六&#x27;, age=32, sex=&#x27;男&#x27;, email=&#x27;123@qq.com&#x27;, did=1&#125;]</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="方法二使用PageInfo"><a href="#方法二使用PageInfo" class="headerlink" title="方法二使用PageInfo"></a>方法二使用PageInfo</h4><ul>
<li>在查询获取list集合之后，使用<code>PageInfo&lt;T&gt; pageInfo = new PageInfo&lt;&gt;(List&lt;T&gt; list, intnavigatePages)</code>获取分页相关数据</li>
<li>list：分页之后的数据  </li>
<li>navigatePages：导航分页的页码数</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageHelper</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">	<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">	<span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">	<span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(is);</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">	<span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">	PageHelper.startPage(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">	List&lt;Emp&gt; emps = mapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">	PageInfo&lt;Emp&gt; page = <span class="keyword">new</span> <span class="title class_">PageInfo</span>&lt;&gt;(emps,<span class="number">5</span>);</span><br><span class="line">	System.out.println(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>分页相关数据：</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PageInfo&#123;</span><br><span class="line">pageNum=1, pageSize=4, size=4, startRow=1, endRow=4, total=8, pages=2, </span><br><span class="line">list=Page&#123;count=true, pageNum=1, pageSize=4, startRow=0, endRow=4, total=8, pages=2, reasonable=false, pageSizeZero=false&#125;[Emp&#123;eid=1, empName=&#x27;admin&#x27;, age=22, sex=&#x27;男&#x27;, email=&#x27;456@qq.com&#x27;, did=3&#125;, Emp&#123;eid=2, empName=&#x27;admin2&#x27;, age=22, sex=&#x27;男&#x27;, email=&#x27;456@qq.com&#x27;, did=3&#125;, Emp&#123;eid=3, empName=&#x27;王五&#x27;, age=12, sex=&#x27;女&#x27;, email=&#x27;123@qq.com&#x27;, did=3&#125;, Emp&#123;eid=4, empName=&#x27;赵六&#x27;, age=32, sex=&#x27;男&#x27;, email=&#x27;123@qq.com&#x27;, did=1&#125;], </span><br><span class="line">prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=5, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>其中list中的数据等同于方法一中直接输出的page数据</p>
</li>
</ul>
<h4 id="常用数据："><a href="#常用数据：" class="headerlink" title="常用数据："></a>常用数据：</h4><ul>
<li>pageNum：当前页的页码  </li>
<li>pageSize：每页显示的条数  </li>
<li>size：当前页显示的真实条数  </li>
<li>total：总记录数  </li>
<li>pages：总页数  </li>
<li>prePage：上一页的页码  </li>
<li>nextPage：下一页的页码</li>
<li>isFirstPage&#x2F;isLastPage：是否为第一页&#x2F;最后一页  </li>
<li>hasPreviousPage&#x2F;hasNextPage：是否存在上一页&#x2F;下一页  </li>
<li>navigatePages：导航分页的页码数  </li>
<li>navigatepageNums：导航分页的页码，[1,2,3,4,5]</li>
</ul>
<p>插件</p>
<h2 id="使用步骤-1"><a href="#使用步骤-1" class="headerlink" title="使用步骤"></a>使用步骤</h2><h3 id="1-添加依赖-1"><a href="#1-添加依赖-1" class="headerlink" title="1.添加依赖"></a>1.添加依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-配置分页插件-1"><a href="#2-配置分页插件-1" class="headerlink" title="2.配置分页插件"></a>2.配置分页插件</h3><p>在MyBatis的核心配置文件（mybatis-config.xml）中配置插件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--设置分页插件--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-开启分页功能-1"><a href="#3-开启分页功能-1" class="headerlink" title="3.开启分页功能"></a>3.开启分页功能</h3><ul>
<li>在查询功能之前使用<code>PageHelper.startPage(int pageNum, int pageSize)</code>开启分页功能</li>
<li>pageNum：当前页的页码  </li>
<li>pageSize：每页显示的条数</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageHelper</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">	<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">	<span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">	<span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(is);</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">	<span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">	<span class="comment">//访问第一页，每页四条数据</span></span><br><span class="line">	PageHelper.startPage(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">	List&lt;Emp&gt; emps = mapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">	emps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-分页相关数据-1"><a href="#4-分页相关数据-1" class="headerlink" title="4.分页相关数据"></a>4.分页相关数据</h3><h4 id="方法一：直接输出-1"><a href="#方法一：直接输出-1" class="headerlink" title="方法一：直接输出"></a>方法一：直接输出</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageHelper</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">	<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">	<span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">	<span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(is);</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">	<span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">	<span class="comment">//访问第一页，每页四条数据</span></span><br><span class="line">	Page&lt;Object&gt; page = PageHelper.startPage(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">	List&lt;Emp&gt; emps = mapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">	<span class="comment">//在查询到List集合后，打印分页数据</span></span><br><span class="line">	System.out.println(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>分页相关数据：</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Page&#123;count=true, pageNum=1, pageSize=4, startRow=0, endRow=4, total=8, pages=2, reasonable=false, pageSizeZero=false&#125;[Emp&#123;eid=1, empName=&#x27;admin&#x27;, age=22, sex=&#x27;男&#x27;, email=&#x27;456@qq.com&#x27;, did=3&#125;, Emp&#123;eid=2, empName=&#x27;admin2&#x27;, age=22, sex=&#x27;男&#x27;, email=&#x27;456@qq.com&#x27;, did=3&#125;, Emp&#123;eid=3, empName=&#x27;王五&#x27;, age=12, sex=&#x27;女&#x27;, email=&#x27;123@qq.com&#x27;, did=3&#125;, Emp&#123;eid=4, empName=&#x27;赵六&#x27;, age=32, sex=&#x27;男&#x27;, email=&#x27;123@qq.com&#x27;, did=1&#125;]</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="方法二使用PageInfo-1"><a href="#方法二使用PageInfo-1" class="headerlink" title="方法二使用PageInfo"></a>方法二使用PageInfo</h4><ul>
<li>在查询获取list集合之后，使用<code>PageInfo&lt;T&gt; pageInfo = new PageInfo&lt;&gt;(List&lt;T&gt; list, intnavigatePages)</code>获取分页相关数据</li>
<li>list：分页之后的数据  </li>
<li>navigatePages：导航分页的页码数</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageHelper</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">	<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">	<span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">	<span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(is);</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">	<span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">	PageHelper.startPage(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">	List&lt;Emp&gt; emps = mapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">	PageInfo&lt;Emp&gt; page = <span class="keyword">new</span> <span class="title class_">PageInfo</span>&lt;&gt;(emps,<span class="number">5</span>);</span><br><span class="line">	System.out.println(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>分页相关数据：</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PageInfo&#123;</span><br><span class="line">pageNum=1, pageSize=4, size=4, startRow=1, endRow=4, total=8, pages=2, </span><br><span class="line">list=Page&#123;count=true, pageNum=1, pageSize=4, startRow=0, endRow=4, total=8, pages=2, reasonable=false, pageSizeZero=false&#125;[Emp&#123;eid=1, empName=&#x27;admin&#x27;, age=22, sex=&#x27;男&#x27;, email=&#x27;456@qq.com&#x27;, did=3&#125;, Emp&#123;eid=2, empName=&#x27;admin2&#x27;, age=22, sex=&#x27;男&#x27;, email=&#x27;456@qq.com&#x27;, did=3&#125;, Emp&#123;eid=3, empName=&#x27;王五&#x27;, age=12, sex=&#x27;女&#x27;, email=&#x27;123@qq.com&#x27;, did=3&#125;, Emp&#123;eid=4, empName=&#x27;赵六&#x27;, age=32, sex=&#x27;男&#x27;, email=&#x27;123@qq.com&#x27;, did=1&#125;], </span><br><span class="line">prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=5, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>其中list中的数据等同于方法一中直接输出的page数据</p>
</li>
</ul>
<h4 id="常用数据：-1"><a href="#常用数据：-1" class="headerlink" title="常用数据："></a>常用数据：</h4><ul>
<li>pageNum：当前页的页码  </li>
<li>pageSize：每页显示的条数  </li>
<li>size：当前页显示的真实条数  </li>
<li>total：总记录数  </li>
<li>pages：总页数  </li>
<li>prePage：上一页的页码  </li>
<li>nextPage：下一页的页码</li>
<li>isFirstPage&#x2F;isLastPage：是否为第一页&#x2F;最后一页  </li>
<li>hasPreviousPage&#x2F;hasNextPage：是否存在上一页&#x2F;下一页  </li>
<li>navigatePages：导航分页的页码数  </li>
<li>navigatepageNums：导航分页的页码，[1,2,3,4,5]</li>
</ul>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>创建MyBatis映射文件</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%88%9B%E5%BB%BAMyBatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="创建映射文件"><a href="#创建映射文件" class="headerlink" title="创建映射文件"></a>创建映射文件</h1><p>一个数据库里的一张表，对应着一个mapper接口，对应着一个xml的映射文件。  他们的java代码结果通过实体类来展示。</p>
<p>映射文件要保持两个一致：</p>
<p>①mapper接口名称要与对应的xml文件名称一致</p>
<p>②mapper接口内部的方法名称要与xml文件内部的标签id一致</p>
<p>PS：</p>
<p>如果字段名与属性名一致用resultType，不一致用resultMap。</p>
<p>查询语句需要指定resultType，否则会报错</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241011101742239.png" alt="image-20241011101742239"><br>文件</p>
<p>一个数据库里的一张表，对应着一个mapper接口，对应着一个xml的映射文件。  他们的java代码结果通过实体类来展示。</p>
<p>映射文件要保持两个一致：</p>
<p>①mapper接口名称要与对应的xml文件名称一致</p>
<p>②mapper接口内部的方法名称要与xml文件内部的标签id一致</p>
<p>PS：</p>
<p>如果字段名与属性名一致用resultType，不一致用resultMap。</p>
<p>查询语句需要指定resultType，否则会报错</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241011101742239.png" alt="image-20241011101742239"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>创建MyBatis的核心配置文件</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%88%9B%E5%BB%BAMyBatis%E7%9A%84%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="创建核心配置文件"><a href="#创建核心配置文件" class="headerlink" title="创建核心配置文件"></a>创建核心配置文件</h1><p>1.在项目结构下的resources文件夹下面创建核心配置文件</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241009214024524.png" alt="image-20241009214024524"></p>
<p>2.编写相关的配置。     复制粘贴而已。</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241009214046635.png" alt="image-20241009214046635">文件</p>
<p>1.在项目结构下的resources文件夹下面创建核心配置文件</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241009214024524.png" alt="image-20241009214024524"></p>
<p>2.编写相关的配置。     复制粘贴而已。</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241009214046635.png" alt="image-20241009214046635"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>创建maven工程</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%88%9B%E5%BB%BAmaven%E5%B7%A5%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="创建maven工程"><a href="#创建maven工程" class="headerlink" title="创建maven工程"></a>创建maven工程</h1><h2 id="设置pom文件-设置打包方式以及相关的依赖。"><a href="#设置pom文件-设置打包方式以及相关的依赖。" class="headerlink" title="设置pom文件,设置打包方式以及相关的依赖。"></a>设置pom文件,设置打包方式以及相关的依赖。</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241009213352335.png" alt="image-20241009213352335">工程</p>
<h2 id="设置pom文件-设置打包方式以及相关的依赖。-1"><a href="#设置pom文件-设置打包方式以及相关的依赖。-1" class="headerlink" title="设置pom文件,设置打包方式以及相关的依赖。"></a>设置pom文件,设置打包方式以及相关的依赖。</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241009213352335.png" alt="image-20241009213352335"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>创建mapper接口</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%88%9B%E5%BB%BAmapper%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<h1 id="创建mapper接口"><a href="#创建mapper接口" class="headerlink" title="创建mapper接口"></a>创建mapper接口</h1><h2 id="1-创建表"><a href="#1-创建表" class="headerlink" title="1.创建表"></a>1.创建表</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241009215049730.png" alt="image-20241009215049730"></p>
<h2 id="2-创建表对应的实体类"><a href="#2-创建表对应的实体类" class="headerlink" title="2.创建表对应的实体类"></a>2.创建表对应的实体类</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241009215211729.png" alt="image-20241009215211729"></p>
<p>3.创建以上两个文件对应的接口</p>
<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a><img src="/./../../TyporaImage/MyBatis/image-20241009215231943.png" alt="image-20241009215231943">接口</h2><h2 id="1-创建表-1"><a href="#1-创建表-1" class="headerlink" title="1.创建表"></a>1.创建表</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241009215049730.png" alt="image-20241009215049730"></p>
<h2 id="2-创建表对应的实体类-1"><a href="#2-创建表对应的实体类-1" class="headerlink" title="2.创建表对应的实体类"></a>2.创建表对应的实体类</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241009215211729.png" alt="image-20241009215211729"></p>
<p>3.创建以上两个文件对应的接口</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/./../../TyporaImage/MyBatis/image-20241009215231943.png" alt="image-20241009215231943"></h2>]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>动态SQL</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%8A%A8%E6%80%81SQL/</url>
    <content><![CDATA[<h1 id="动态SQL"><a href="#动态SQL" class="headerlink" title="动态SQL"></a>动态SQL</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>动态 SQL 是一种在运行时构建和执行的 SQL 语句，允许根据程序逻辑或用户输入动态改变 SQL 语句的结构和内容。它与静态 SQL 相对，后者在编译时就确定了所有的 SQL 语句。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.参数化查询：使用占位符来动态插入参数，增强安全性和灵活性。<br>2.拼接字符串：通过程序逻辑拼接成完整的 SQL 语句。<br>3.执行机制：通常通过数据库 API 或 ORM（对象关系映射）工具来执行动态生成的 SQL。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>提供更高的灵活性，使得应用程序能够根据不同条件生成相应的 SQL 语句。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>在程序运行时，根据条件选择合适的 SQL 语句。<br>QL</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>动态 SQL 是一种在运行时构建和执行的 SQL 语句，允许根据程序逻辑或用户输入动态改变 SQL 语句的结构和内容。它与静态 SQL 相对，后者在编译时就确定了所有的 SQL 语句。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.参数化查询：使用占位符来动态插入参数，增强安全性和灵活性。<br>2.拼接字符串：通过程序逻辑拼接成完整的 SQL 语句。<br>3.执行机制：通常通过数据库 API 或 ORM（对象关系映射）工具来执行动态生成的 SQL。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>提供更高的灵活性，使得应用程序能够根据不同条件生成相应的 SQL 语句。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>在程序运行时，根据条件选择合适的 SQL 语句。</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>动态设置表名-特殊SQL</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E8%A1%A8%E5%90%8D-%E7%89%B9%E6%AE%8ASQL/</url>
    <content><![CDATA[<h1 id="动态设置表名"><a href="#动态设置表名" class="headerlink" title="动态设置表名"></a>动态设置表名</h1><h2 id="因为表名没有单引号-所以需要用"><a href="#因为表名没有单引号-所以需要用" class="headerlink" title="因为表名没有单引号,所以需要用${}"></a>因为表名没有单引号,所以需要用${}</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014212547199.png" alt="image-20241014212547199"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014212553240.png" alt="image-20241014212553240"></p>
<p>表名</p>
<h2 id="因为表名没有单引号-所以需要用-1"><a href="#因为表名没有单引号-所以需要用-1" class="headerlink" title="因为表名没有单引号,所以需要用${}"></a>因为表名没有单引号,所以需要用${}</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014212547199.png" alt="image-20241014212547199"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014212553240.png" alt="image-20241014212553240"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>单个字面量-获取参数值</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%8D%95%E4%B8%AA%E5%AD%97%E9%9D%A2%E9%87%8F-%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0%E5%80%BC/</url>
    <content><![CDATA[<h1 id="获取参数值-单个字面"><a href="#获取参数值-单个字面" class="headerlink" title="获取参数值-单个字面"></a>获取参数值-单个字面</h1><p>1.mapper接口的方法的参数为单个字面量类型</p>
<p>${}:</p>
<p>本质是字符串拼接，所以记得加双引号。</p>
<p>#{}：</p>
<p>本质是？替代，直接用就行。括号里的内容不为空即可</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241012213025129.png" alt="image-20241012213025129"></p>
<p>2.字面</p>
<p>1.mapper接口的方法的参数为单个字面量类型</p>
<p>${}:</p>
<p>本质是字符串拼接，所以记得加双引号。</p>
<p>#{}：</p>
<p>本质是？替代，直接用就行。括号里的内容不为空即可</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241012213025129.png" alt="image-20241012213025129"></p>
<ol start="2">
<li></li>
</ol>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>各种查询功能</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%90%84%E7%A7%8D%E6%9F%A5%E8%AF%A2%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h1 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h1><h2 id="1-查询出一个结果-那么应该用实体对象来接收"><a href="#1-查询出一个结果-那么应该用实体对象来接收" class="headerlink" title="1.查询出一个结果,那么应该用实体对象来接收"></a>1.查询出一个结果,那么应该用实体对象来接收</h2><h2 id="2-查询出两个结果-可以用集合来接收"><a href="#2-查询出两个结果-可以用集合来接收" class="headerlink" title="2.查询出两个结果,可以用集合来接收"></a>2.查询出两个结果,可以用集合来接收</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014203644259.png" alt="image-20241014203644259"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014203653411.png" alt="image-20241014203653411"></p>
<h2 id="3-查询出的结果-没有任何一个实体类与之想对应-那么就可以用map进行接收"><a href="#3-查询出的结果-没有任何一个实体类与之想对应-那么就可以用map进行接收" class="headerlink" title="3.查询出的结果,没有任何一个实体类与之想对应,那么就可以用map进行接收."></a>3.查询出的结果,没有任何一个实体类与之想对应,那么就可以用map进行接收.</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014204257181.png" alt="image-20241014204257181"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014204305571.png" alt="image-20241014204305571"></p>
<h2 id="4-查询多条数据时-可以通过Map类型的List集合来接收"><a href="#4-查询多条数据时-可以通过Map类型的List集合来接收" class="headerlink" title="4.查询多条数据时,可以通过Map类型的List集合来接收"></a>4.查询多条数据时,可以通过Map类型的List集合来接收</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014204955360.png" alt="image-20241014204955360"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014205005768.png" alt="image-20241014205005768"></p>
<h2 id="5-在mapper接口方法上添加-MapKey"><a href="#5-在mapper接口方法上添加-MapKey" class="headerlink" title="5.在mapper接口方法上添加@MapKey"></a>5.在mapper接口方法上添加@MapKey</h2><p>这样可以将某个字段作为键,将每条数据转换的map集合作为值,放在同一个map集合里面.</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014205539698.png" alt="image-20241014205539698"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014205549165.png" alt="image-20241014205549165"><br>查询</p>
<h2 id="1-查询出一个结果-那么应该用实体对象来接收-1"><a href="#1-查询出一个结果-那么应该用实体对象来接收-1" class="headerlink" title="1.查询出一个结果,那么应该用实体对象来接收"></a>1.查询出一个结果,那么应该用实体对象来接收</h2><h2 id="2-查询出两个结果-可以用集合来接收-1"><a href="#2-查询出两个结果-可以用集合来接收-1" class="headerlink" title="2.查询出两个结果,可以用集合来接收"></a>2.查询出两个结果,可以用集合来接收</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014203644259.png" alt="image-20241014203644259"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014203653411.png" alt="image-20241014203653411"></p>
<h2 id="3-查询出的结果-没有任何一个实体类与之想对应-那么就可以用map进行接收-1"><a href="#3-查询出的结果-没有任何一个实体类与之想对应-那么就可以用map进行接收-1" class="headerlink" title="3.查询出的结果,没有任何一个实体类与之想对应,那么就可以用map进行接收."></a>3.查询出的结果,没有任何一个实体类与之想对应,那么就可以用map进行接收.</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014204257181.png" alt="image-20241014204257181"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014204305571.png" alt="image-20241014204305571"></p>
<h2 id="4-查询多条数据时-可以通过Map类型的List集合来接收-1"><a href="#4-查询多条数据时-可以通过Map类型的List集合来接收-1" class="headerlink" title="4.查询多条数据时,可以通过Map类型的List集合来接收"></a>4.查询多条数据时,可以通过Map类型的List集合来接收</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014204955360.png" alt="image-20241014204955360"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014205005768.png" alt="image-20241014205005768"></p>
<h2 id="5-在mapper接口方法上添加-MapKey-1"><a href="#5-在mapper接口方法上添加-MapKey-1" class="headerlink" title="5.在mapper接口方法上添加@MapKey"></a>5.在mapper接口方法上添加@MapKey</h2><p>这样可以将某个字段作为键,将每条数据转换的map集合作为值,放在同一个map集合里面.</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014205539698.png" alt="image-20241014205539698"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014205549165.png" alt="image-20241014205549165"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>多个参数-获取参数值</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%A4%9A%E4%B8%AA%E5%8F%82%E6%95%B0-%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0%E5%80%BC/</url>
    <content><![CDATA[<h1 id="多个参数"><a href="#多个参数" class="headerlink" title="多个参数"></a>多个参数</h1><p>#{}：</p>
<p>那么传递的参数就不能随便写了，只能用arg0、arg1与param1、param2.作为参数写入</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241012214926055.png" alt="image-20241012214926055"></p>
<p>${}:</p>
<p>注意手动添加单引号,只能用arg0、arg1与param1、param2.作为参数写入.</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241012215002810.png" alt="image-20241012215002810">参数</p>
<p>#{}：</p>
<p>那么传递的参数就不能随便写了，只能用arg0、arg1与param1、param2.作为参数写入</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241012214926055.png" alt="image-20241012214926055"></p>
<p>${}:</p>
<p>注意手动添加单引号,只能用arg0、arg1与param1、param2.作为参数写入.</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241012215002810.png" alt="image-20241012215002810"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>命名参数注解-获取参数值</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%91%BD%E5%90%8D%E5%8F%82%E6%95%B0%E6%B3%A8%E8%A7%A3-%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0%E5%80%BC/</url>
    <content><![CDATA[<h1 id="命名参数注解"><a href="#命名参数注解" class="headerlink" title="命名参数注解"></a>命名参数注解</h1><p>#{}:</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014200930377.png" alt="image-20241014200930377"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014201038349.png" alt="image-20241014201038349"></p>
<p>可以在@param()中自定义键名,那么xml文件中的查询语句要绑定与之相同的名字</p>
<p>注解</p>
<p>#{}:</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014200930377.png" alt="image-20241014200930377"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014201038349.png" alt="image-20241014201038349"></p>
<p>可以在@param()中自定义键名,那么xml文件中的查询语句要绑定与之相同的名字</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>字段别名_解决字段名与属性名映射不一致问题</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%AD%97%E6%AE%B5%E5%88%AB%E5%90%8D_%E8%A7%A3%E5%86%B3%E5%AD%97%E6%AE%B5%E5%90%8D%E4%B8%8E%E5%B1%9E%E6%80%A7%E5%90%8D%E6%98%A0%E5%B0%84%E4%B8%8D%E4%B8%80%E8%87%B4%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="字段别名解决映射不一致问题"><a href="#字段别名解决映射不一致问题" class="headerlink" title="字段别名解决映射不一致问题"></a>字段别名解决映射不一致问题</h1><p>实体类与SQL数据库中的数据绑定,是通过实体类中的属性名与字段名一致进行匹配的.</p>
<p>但是因为这两者的命名方式不同,所以不一致是经常发生的.</p>
<p>可以通过字段别名解决.</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241021204951526.png" alt="image-20241021204951526">问题</p>
<p>实体类与SQL数据库中的数据绑定,是通过实体类中的属性名与字段名一致进行匹配的.</p>
<p>但是因为这两者的命名方式不同,所以不一致是经常发生的.</p>
<p>可以通过字段别名解决.</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241021204951526.png" alt="image-20241021204951526"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>实体类对象参数-获取参数值</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%AF%B9%E8%B1%A1%E5%8F%82%E6%95%B0-%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0%E5%80%BC/</url>
    <content><![CDATA[<h1 id="实体类对象参数"><a href="#实体类对象参数" class="headerlink" title="实体类对象参数"></a>实体类对象参数</h1><p>#{}与${}</p>
<p>都是通过访问属性的方式获取属性参数.</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241012221111550.png" alt="image-20241012221111550"></p>
<p>参数</p>
<p>#{}与${}</p>
<p>都是通过访问属性的方式获取属性参数.</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241012221111550.png" alt="image-20241012221111550"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>延迟加载</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD/</url>
    <content><![CDATA[<h1 id="延迟加载"><a href="#延迟加载" class="headerlink" title="延迟加载"></a>延迟加载</h1><h2 id="1-在全局配置中的settings标签中设置lazyLoadingEnabled属性为true"><a href="#1-在全局配置中的settings标签中设置lazyLoadingEnabled属性为true" class="headerlink" title="1.在全局配置中的settings标签中设置lazyLoadingEnabled属性为true"></a>1.在全局配置中的settings标签中设置lazyLoadingEnabled属性为true</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023215108190.png" alt="image-20241023215108190"></p>
<h2 id="2-这样子-只有涉及到相关的方法后-才会调用"><a href="#2-这样子-只有涉及到相关的方法后-才会调用" class="headerlink" title="2.这样子,只有涉及到相关的方法后,才会调用."></a>2.这样子,只有涉及到相关的方法后,才会调用.</h2><h3 id="PS"><a href="#PS" class="headerlink" title="PS:"></a>PS:</h3><p>对于不需要延迟加载的方法,可以在association标签中将fetchType属性设置为eager.</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241023215459540.png" alt="image-20241023215459540"></p>
<p>加载</p>
<h2 id="1-在全局配置中的settings标签中设置lazyLoadingEnabled属性为true-1"><a href="#1-在全局配置中的settings标签中设置lazyLoadingEnabled属性为true-1" class="headerlink" title="1.在全局配置中的settings标签中设置lazyLoadingEnabled属性为true"></a>1.在全局配置中的settings标签中设置lazyLoadingEnabled属性为true</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023215108190.png" alt="image-20241023215108190"></p>
<h2 id="2-这样子-只有涉及到相关的方法后-才会调用-1"><a href="#2-这样子-只有涉及到相关的方法后-才会调用-1" class="headerlink" title="2.这样子,只有涉及到相关的方法后,才会调用."></a>2.这样子,只有涉及到相关的方法后,才会调用.</h2><h3 id="PS-1"><a href="#PS-1" class="headerlink" title="PS:"></a>PS:</h3><p>对于不需要延迟加载的方法,可以在association标签中将fetchType属性设置为eager.</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241023215459540.png" alt="image-20241023215459540"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>批量删除-特殊SQL</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4-%E7%89%B9%E6%AE%8ASQL/</url>
    <content><![CDATA[<h1 id="批量删除"><a href="#批量删除" class="headerlink" title="批量删除"></a>批量删除</h1><h2 id="只能通过-来拼接SQL-因为-的本质没有单引号"><a href="#只能通过-来拼接SQL-因为-的本质没有单引号" class="headerlink" title="只能通过${}来拼接SQL,因为${}的本质没有单引号"></a>只能通过${}来拼接SQL,因为${}的本质没有单引号</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014211805033.png" alt="image-20241014211805033"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014211811309.png" alt="image-20241014211811309">删除</p>
<h2 id="只能通过-来拼接SQL-因为-的本质没有单引号-1"><a href="#只能通过-来拼接SQL-因为-的本质没有单引号-1" class="headerlink" title="只能通过${}来拼接SQL,因为${}的本质没有单引号"></a>只能通过${}来拼接SQL,因为${}的本质没有单引号</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014211805033.png" alt="image-20241014211805033"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241014211811309.png" alt="image-20241014211811309"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>整合第三方缓存EHCache</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E6%95%B4%E5%90%88%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BC%93%E5%AD%98EHCache/</url>
    <content><![CDATA[<h1 id="整合第三方缓存"><a href="#整合第三方缓存" class="headerlink" title="整合第三方缓存"></a>整合第三方缓存</h1><p>替代二级缓存,一级缓存无法被替代.</p>
<p>1.引入依赖</p>
<p>2.配置xml文件</p>
<p>3.在CacheMapper.xml文件中的cache标签中设置</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241026205519267.png" alt="image-20241026205519267"></p>
<p>4.调用缓存</p>
<p>替代二级缓存,一级缓存无法被替代.</p>
<p>1.引入依赖</p>
<p>2.配置xml文件</p>
<p>3.在CacheMapper.xml文件中的cache标签中设置</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241026205519267.png" alt="image-20241026205519267"></p>
<p>4.调用</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>手动放置map参数</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E6%89%8B%E5%8A%A8%E6%94%BE%E7%BD%AEmap%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<h1 id="自己设置map集合"><a href="#自己设置map集合" class="headerlink" title="自己设置map集合"></a>自己设置map集合</h1><p>#{}:</p>
<p>可以自己设置map的键,那么xml语句中的参数名也要写相同的键名</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241012215902825.png" alt="image-20241012215902825"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241012215843156.png" alt="image-20241012215843156"></p>
<p>${}:集合</p>
<p>#{}:</p>
<p>可以自己设置map的键,那么xml语句中的参数名也要写相同的键名</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241012215902825.png" alt="image-20241012215902825"></p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241012215843156.png" alt="image-20241012215843156"></p>
<p>${}:</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>映射文件模板-idea</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6%E6%A8%A1%E6%9D%BF-idea/</url>
    <content><![CDATA[<h1 id="映射文件模板"><a href="#映射文件模板" class="headerlink" title="映射文件模板"></a>映射文件模板</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>与之前那个核心配置文件模板一致模板</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>与之前那个核心配置文件模板一致</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>核心配置文件模板-idea</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%A8%A1%E6%9D%BF-idea/</url>
    <content><![CDATA[<h1 id="配置模板"><a href="#配置模板" class="headerlink" title="配置模板"></a>配置模板</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-点击设置"><a href="#1-点击设置" class="headerlink" title="1.点击设置"></a>1.点击设置</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011113640891.png" alt="image-20241011113640891"></p>
<h3 id="2-点击文件和代码模板"><a href="#2-点击文件和代码模板" class="headerlink" title="2.点击文件和代码模板"></a>2.点击文件和代码模板</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011113657954.png" alt="image-20241011113657954"></p>
<h3 id="3-点击添加"><a href="#3-点击添加" class="headerlink" title="3.点击添加"></a>3.点击添加</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011113745941.png" alt="image-20241011113745941"></p>
<h3 id="4-配置名称、扩展名以及文件内容"><a href="#4-配置名称、扩展名以及文件内容" class="headerlink" title="4.配置名称、扩展名以及文件内容"></a>4.配置名称、扩展名以及文件内容</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011113814828.png" alt="image-20241011113814828"></p>
<h3 id="5-确定完成"><a href="#5-确定完成" class="headerlink" title="5.确定完成"></a>5.确定完成</h3><p>模板</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-点击设置-1"><a href="#1-点击设置-1" class="headerlink" title="1.点击设置"></a>1.点击设置</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011113640891.png" alt="image-20241011113640891"></p>
<h3 id="2-点击文件和代码模板-1"><a href="#2-点击文件和代码模板-1" class="headerlink" title="2.点击文件和代码模板"></a>2.点击文件和代码模板</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011113657954.png" alt="image-20241011113657954"></p>
<h3 id="3-点击添加-1"><a href="#3-点击添加-1" class="headerlink" title="3.点击添加"></a>3.点击添加</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011113745941.png" alt="image-20241011113745941"></p>
<h3 id="4-配置名称、扩展名以及文件内容-1"><a href="#4-配置名称、扩展名以及文件内容-1" class="headerlink" title="4.配置名称、扩展名以及文件内容"></a>4.配置名称、扩展名以及文件内容</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011113814828.png" alt="image-20241011113814828"></p>
<h3 id="5-确定完成-1"><a href="#5-确定完成-1" class="headerlink" title="5.确定完成"></a>5.确定完成</h3>]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>模糊查询-特殊SQL</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2-%E7%89%B9%E6%AE%8ASQL/</url>
    <content><![CDATA[<h1 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h1><h2 id="1-可以直接用"><a href="#1-可以直接用" class="headerlink" title="1.可以直接用${}"></a>1.可以直接用${}</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014210743771.png" alt="image-20241014210743771"></p>
<h2 id="2-用concat-拼接"><a href="#2-用concat-拼接" class="headerlink" title="2.用concat()拼接"></a>2.用concat()拼接</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014210729789.png" alt="image-20241014210729789"></p>
<h2 id="3-直接用-拼接"><a href="#3-直接用-拼接" class="headerlink" title="3.直接用#{}拼接"></a>3.直接用#{}拼接</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014210718010.png" alt="image-20241014210718010">查询</p>
<h2 id="1-可以直接用-1"><a href="#1-可以直接用-1" class="headerlink" title="1.可以直接用${}"></a>1.可以直接用${}</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014210743771.png" alt="image-20241014210743771"></p>
<h2 id="2-用concat-拼接-1"><a href="#2-用concat-拼接-1" class="headerlink" title="2.用concat()拼接"></a>2.用concat()拼接</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014210729789.png" alt="image-20241014210729789"></p>
<h2 id="3-直接用-拼接-1"><a href="#3-直接用-拼接-1" class="headerlink" title="3.直接用#{}拼接"></a>3.直接用#{}拼接</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241014210718010.png" alt="image-20241014210718010"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>级联属性赋值_解决多对一的映射</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E7%BA%A7%E8%81%94%E5%B1%9E%E6%80%A7%E8%B5%8B%E5%80%BC_%E8%A7%A3%E5%86%B3%E5%A4%9A%E5%AF%B9%E4%B8%80%E7%9A%84%E6%98%A0%E5%B0%84/</url>
    <content><![CDATA[<h1 id="级联属性赋值"><a href="#级联属性赋值" class="headerlink" title="级联属性赋值"></a>级联属性赋值</h1><h2 id="1-通过左连接查询查询两个表的内容"><a href="#1-通过左连接查询查询两个表的内容" class="headerlink" title="1.通过左连接查询查询两个表的内容"></a>1.通过左连接查询查询两个表的内容</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023172230403.png" alt="image-20241023172230403"></p>
<h2 id="2-ResultMap映射中的property属性赋值可以是本类对象-属性-中的属性值-级联属性"><a href="#2-ResultMap映射中的property属性赋值可以是本类对象-属性-中的属性值-级联属性" class="headerlink" title="2.ResultMap映射中的property属性赋值可以是本类对象(属性)中的属性值.(级联属性)"></a>2.ResultMap映射中的property属性赋值可以是本类对象(属性)中的属性值.(级联属性)</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023172341578.png" alt="image-20241023172341578"></p>
<p>赋值</p>
<h2 id="1-通过左连接查询查询两个表的内容-1"><a href="#1-通过左连接查询查询两个表的内容-1" class="headerlink" title="1.通过左连接查询查询两个表的内容"></a>1.通过左连接查询查询两个表的内容</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023172230403.png" alt="image-20241023172230403"></p>
<h2 id="2-ResultMap映射中的property属性赋值可以是本类对象-属性-中的属性值-级联属性-1"><a href="#2-ResultMap映射中的property属性赋值可以是本类对象-属性-中的属性值-级联属性-1" class="headerlink" title="2.ResultMap映射中的property属性赋值可以是本类对象(属性)中的属性值.(级联属性)"></a>2.ResultMap映射中的property属性赋值可以是本类对象(属性)中的属性值.(级联属性)</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241023172341578.png" alt="image-20241023172341578"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>缓存查询的顺序</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E7%BC%93%E5%AD%98%E6%9F%A5%E8%AF%A2%E7%9A%84%E9%A1%BA%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="缓存查询的顺序"><a href="#缓存查询的顺序" class="headerlink" title="缓存查询的顺序"></a>缓存查询的顺序</h1><p><img src="/./../../TyporaImage/MyBatis/image-20241026201423557.png" alt="image-20241026201423557"></p>
<p>二级缓存&gt;一级缓存&gt;数据库</p>
<p>顺序</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241026201423557.png" alt="image-20241026201423557"></p>
<p>二级缓存&gt;一级缓存&gt;数据库</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>获取参数值的两种方式</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0%E5%80%BC%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="获取参数值的两种方式"><a href="#获取参数值的两种方式" class="headerlink" title="获取参数值的两种方式"></a>获取参数值的两种方式</h1><p>通过获取参数值来拼接SQL语句</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1"><a href="#1" class="headerlink" title="1.${}"></a>1.${}</h3><p>本质是字符串拼接</p>
<h3 id="2"><a href="#2" class="headerlink" title="2.#{}"></a>2.#{}</h3><p>本质是占位符赋值</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1.${}:"></a>1.${}:</h3><p>因为本质是字符串拼接，所以SQL语句要注意添加引号。</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241011204937061.png" alt="image-20241011204937061"></p>
<h3 id="2-1"><a href="#2-1" class="headerlink" title="2.#{}"></a>2.#{}</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011205035811.png" alt="image-20241011205035811"></p>
<p>方式</p>
<p>通过获取参数值来拼接SQL语句</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-2"><a href="#1-2" class="headerlink" title="1.${}"></a>1.${}</h3><p>本质是字符串拼接</p>
<h3 id="2-2"><a href="#2-2" class="headerlink" title="2.#{}"></a>2.#{}</h3><p>本质是占位符赋值</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-3"><a href="#1-3" class="headerlink" title="1.${}:"></a>1.${}:</h3><p>因为本质是字符串拼接，所以SQL语句要注意添加引号。</p>
<p><img src="/./../../TyporaImage/MyBatis/image-20241011204937061.png" alt="image-20241011204937061"></p>
<h3 id="2-3"><a href="#2-3" class="headerlink" title="2.#{}"></a>2.#{}</h3><p><img src="/./../../TyporaImage/MyBatis/image-20241011205035811.png" alt="image-20241011205035811"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>获取自增的主键</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E8%8E%B7%E5%8F%96%E8%87%AA%E5%A2%9E%E7%9A%84%E4%B8%BB%E9%94%AE/</url>
    <content><![CDATA[<h1 id="获取自增的主键"><a href="#获取自增的主键" class="headerlink" title="获取自增的主键"></a>获取自增的主键</h1><h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241021200906668.png" alt="image-20241021200906668"></p>
<h2 id="Mapper"><a href="#Mapper" class="headerlink" title="Mapper"></a>Mapper</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241021200918850.png" alt="image-20241021200918850">	</p>
<h2 id="XML文件"><a href="#XML文件" class="headerlink" title="XML文件"></a>XML文件</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241021200947056.png" alt="image-20241021200947056">主键</p>
<h2 id="Test-1"><a href="#Test-1" class="headerlink" title="Test"></a>Test</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241021200906668.png" alt="image-20241021200906668"></p>
<h2 id="Mapper-1"><a href="#Mapper-1" class="headerlink" title="Mapper"></a>Mapper</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241021200918850.png" alt="image-20241021200918850">	</p>
<h2 id="XML文件-1"><a href="#XML文件-1" class="headerlink" title="XML文件"></a>XML文件</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241021200947056.png" alt="image-20241021200947056"></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>逆向工程奢华版</title>
    <url>/2024/11/08/TyporaNotes/Typora_MyBatis/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E5%A5%A2%E5%8D%8E%E7%89%88/</url>
    <content><![CDATA[<h1 id="奢华版逆向工程"><a href="#奢华版逆向工程" class="headerlink" title="奢华版逆向工程"></a>奢华版逆向工程</h1><h2 id="1-在xml文件中配置属性targetRuntime为MyBatis3"><a href="#1-在xml文件中配置属性targetRuntime为MyBatis3" class="headerlink" title="1.在xml文件中配置属性targetRuntime为MyBatis3"></a>1.在xml文件中配置属性targetRuntime为MyBatis3</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241026214223430.png" alt="image-20241026214223430"></p>
<h2 id="2-调用"><a href="#2-调用" class="headerlink" title="2.调用"></a>2.调用</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241026214317259.png" alt="image-20241026214317259"></p>
<p>奢华版可以通过创建EmpExample实例来添加条件.</p>
<p>工程</p>
<h2 id="1-在xml文件中配置属性targetRuntime为MyBatis3-1"><a href="#1-在xml文件中配置属性targetRuntime为MyBatis3-1" class="headerlink" title="1.在xml文件中配置属性targetRuntime为MyBatis3"></a>1.在xml文件中配置属性targetRuntime为MyBatis3</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241026214223430.png" alt="image-20241026214223430"></p>
<h2 id="2-调用-1"><a href="#2-调用-1" class="headerlink" title="2.调用"></a>2.调用</h2><p><img src="/./../../TyporaImage/MyBatis/image-20241026214317259.png" alt="image-20241026214317259"></p>
<p>奢华版可以通过创建EmpExample实例来添加条件.</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
  </entry>
  <entry>
    <title>习惯一（积极主动）</title>
    <url>/2024/11/08/TyporaNotes/Typora_SevenHabits/%E4%B9%A0%E6%83%AF%E4%B8%80%EF%BC%88%E7%A7%AF%E6%9E%81%E4%B8%BB%E5%8A%A8%EF%BC%89/</url>
    <content><![CDATA[<h1 id="习惯一（积极主动）"><a href="#习惯一（积极主动）" class="headerlink" title="习惯一（积极主动）"></a>习惯一（积极主动）</h1><p>刺激与回应之间存在一段距离，成长和幸福的关键就在于我们如何利用这段距离。</p>
<h2 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h2><p>不仅指行事的态度，还意味着人一定要对自己的人生负责。</p>
<h2 id="二、刺激和回应之间选择的自由"><a href="#二、刺激和回应之间选择的自由" class="headerlink" title="二、刺激和回应之间选择的自由"></a>二、刺激和回应之间选择的自由</h2><p>自我意识、想象力、良知、独立意志。</p>
<h2 id="三、关注圈与影响圈"><a href="#三、关注圈与影响圈" class="headerlink" title="三、关注圈与影响圈"></a>三、关注圈与影响圈</h2><p>积极主动者，常关注于影响圈。他们专心走在自己的路上，不断地扩大着自己的影响范围，自己不断地成长。</p>
<h2 id="四、直接控制、间接控制和无法控制"><a href="#四、直接控制、间接控制和无法控制" class="headerlink" title="四、直接控制、间接控制和无法控制"></a>四、直接控制、间接控制和无法控制</h2><h3 id="可以直接控制的问题："><a href="#可以直接控制的问题：" class="headerlink" title="可以直接控制的问题："></a>可以直接控制的问题：</h3><p>可以通过培养正确的习惯来解决，这是影响圈的范围。</p>
<h3 id="可间接控制的问题："><a href="#可间接控制的问题：" class="headerlink" title="可间接控制的问题："></a>可间接控制的问题：</h3><p>可以通过改进施加影响的方法来解决。</p>
<h3 id="无法控制的问题："><a href="#无法控制的问题：" class="headerlink" title="无法控制的问题："></a>无法控制的问题：</h3><p>以微笑、真诚与平和坦然接受即可。</p>
<h2 id="五、“如果”和“我可以”"><a href="#五、“如果”和“我可以”" class="headerlink" title="五、“如果”和“我可以”"></a>五、“如果”和“我可以”</h2><p>与关注圈相关的语句多半带有假设性质，而与影响圈相关的语句多半体现了这个人的品德修养。<br>积极的做法应该是“由内而外”地进行改变，即先改变自己，让自己变得充实，再去施加影响，改变环境。</p>
<h2 id="六、应对错误的选择"><a href="#六、应对错误的选择" class="headerlink" title="六、应对错误的选择"></a>六、应对错误的选择</h2><p>对于已经无法挽回的错误，需要承认错误，并且认识到往日错误已经属于关注圈的事实，那是人力无法企及的范畴，已经无法改变。此后，吸取教训并加以改正。</p>
<h3 id="错误的影响："><a href="#错误的影响：" class="headerlink" title="错误的影响："></a>错误的影响：</h3><p>伤害我们最深的既不是别人的所作所为，也不是我们自己所犯下的错误，而是我们对错误的回应。<br>我们对错误的回应都会影响到下一刻发生的事件，所以一定要及时吸取教训并改正，避免殃及未来，这样我们也可以重获力量。</p>
<h2 id="七、做出承诺，信守诺言"><a href="#七、做出承诺，信守诺言" class="headerlink" title="七、做出承诺，信守诺言"></a>七、做出承诺，信守诺言</h2><p>积极主动的本质就是对自己或他人有所承诺，然后从不食言。动）</p>
<p>刺激与回应之间存在一段距离，成长和幸福的关键就在于我们如何利用这段距离。</p>
<h2 id="一、定义-1"><a href="#一、定义-1" class="headerlink" title="一、定义"></a>一、定义</h2><p>不仅指行事的态度，还意味着人一定要对自己的人生负责。</p>
<h2 id="二、刺激和回应之间选择的自由-1"><a href="#二、刺激和回应之间选择的自由-1" class="headerlink" title="二、刺激和回应之间选择的自由"></a>二、刺激和回应之间选择的自由</h2><p>自我意识、想象力、良知、独立意志。</p>
<h2 id="三、关注圈与影响圈-1"><a href="#三、关注圈与影响圈-1" class="headerlink" title="三、关注圈与影响圈"></a>三、关注圈与影响圈</h2><p>积极主动者，常关注于影响圈。他们专心走在自己的路上，不断地扩大着自己的影响范围，自己不断地成长。</p>
<h2 id="四、直接控制、间接控制和无法控制-1"><a href="#四、直接控制、间接控制和无法控制-1" class="headerlink" title="四、直接控制、间接控制和无法控制"></a>四、直接控制、间接控制和无法控制</h2><h3 id="可以直接控制的问题：-1"><a href="#可以直接控制的问题：-1" class="headerlink" title="可以直接控制的问题："></a>可以直接控制的问题：</h3><p>可以通过培养正确的习惯来解决，这是影响圈的范围。</p>
<h3 id="可间接控制的问题：-1"><a href="#可间接控制的问题：-1" class="headerlink" title="可间接控制的问题："></a>可间接控制的问题：</h3><p>可以通过改进施加影响的方法来解决。</p>
<h3 id="无法控制的问题：-1"><a href="#无法控制的问题：-1" class="headerlink" title="无法控制的问题："></a>无法控制的问题：</h3><p>以微笑、真诚与平和坦然接受即可。</p>
<h2 id="五、“如果”和“我可以”-1"><a href="#五、“如果”和“我可以”-1" class="headerlink" title="五、“如果”和“我可以”"></a>五、“如果”和“我可以”</h2><p>与关注圈相关的语句多半带有假设性质，而与影响圈相关的语句多半体现了这个人的品德修养。<br>积极的做法应该是“由内而外”地进行改变，即先改变自己，让自己变得充实，再去施加影响，改变环境。</p>
<h2 id="六、应对错误的选择-1"><a href="#六、应对错误的选择-1" class="headerlink" title="六、应对错误的选择"></a>六、应对错误的选择</h2><p>对于已经无法挽回的错误，需要承认错误，并且认识到往日错误已经属于关注圈的事实，那是人力无法企及的范畴，已经无法改变。此后，吸取教训并加以改正。</p>
<h3 id="错误的影响：-1"><a href="#错误的影响：-1" class="headerlink" title="错误的影响："></a>错误的影响：</h3><p>伤害我们最深的既不是别人的所作所为，也不是我们自己所犯下的错误，而是我们对错误的回应。<br>我们对错误的回应都会影响到下一刻发生的事件，所以一定要及时吸取教训并改正，避免殃及未来，这样我们也可以重获力量。</p>
<h2 id="七、做出承诺，信守诺言-1"><a href="#七、做出承诺，信守诺言-1" class="headerlink" title="七、做出承诺，信守诺言"></a>七、做出承诺，信守诺言</h2><p>积极主动的本质就是对自己或他人有所承诺，然后从不食言。</p>
]]></content>
      <categories>
        <category>七个习惯</category>
      </categories>
  </entry>
  <entry>
    <title>习惯七（自我更新）</title>
    <url>/2024/11/08/TyporaNotes/Typora_SevenHabits/%E4%B9%A0%E6%83%AF%E4%B8%83%EF%BC%88%E8%87%AA%E6%88%91%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="习惯七（自我更新）"><a href="#习惯七（自我更新）" class="headerlink" title="习惯七（自我更新）"></a>习惯七（自我更新）</h1><h2 id="一、自我提升和完善的四个层面"><a href="#一、自我提升和完善的四个层面" class="headerlink" title="一、自我提升和完善的四个层面"></a>一、自我提升和完善的四个层面</h2><p>身体、精神、智力、社会&#x2F;情感</p>
<h2 id="二、定义"><a href="#二、定义" class="headerlink" title="二、定义"></a>二、定义</h2><p>自我更新需要兼顾这四种要素，要以睿智而均衡的方式，经常并持续运用我们天性中的四个方面。</p>
<h2 id="三、不同层面"><a href="#三、不同层面" class="headerlink" title="三、不同层面"></a>三、不同层面</h2><h3 id="Ⅰ、身体层面："><a href="#Ⅰ、身体层面：" class="headerlink" title="Ⅰ、身体层面："></a>Ⅰ、身体层面：</h3><p>①耐力。<br>达到每分钟至少100下的心率维持30分钟。<br>②韧性。<br>③力量。</p>
<h3 id="Ⅱ、精神层面："><a href="#Ⅱ、精神层面：" class="headerlink" title="Ⅱ、精神层面："></a>Ⅱ、精神层面：</h3><p>这可以指引人生方向，这是对人的本质、核心和对价值体系的坚持。</p>
<h3 id="Ⅲ、智力层面："><a href="#Ⅲ、智力层面：" class="headerlink" title="Ⅲ、智力层面："></a>Ⅲ、智力层面：</h3><h4 id="两种方式："><a href="#两种方式：" class="headerlink" title="两种方式："></a>两种方式：</h4><p>①定期阅读优秀文学作品。<br>每个月读一本书，然后每两周读一本，最后一周读一本。<br>②写作<br>不断记录自己的想法、精力、深刻见解和学习心得，我们的思路会更加明晰、准确和连贯。</p>
<h3 id="Ⅳ、社会-情感方面："><a href="#Ⅳ、社会-情感方面：" class="headerlink" title="Ⅳ、社会&#x2F;情感方面："></a>Ⅳ、社会&#x2F;情感方面：</h3><p>围绕着习惯四、五、六进行。</p>
<h2 id="四、改变他人"><a href="#四、改变他人" class="headerlink" title="四、改变他人"></a>四、改变他人</h2><p>我们可以选择清晰而真实地反映出他人的形象，肯定他们的积极性和责任心，帮助他们改变行为模式。</p>
<p>（知足的心态让我们认识到，反映他人的正面形象并不会贬低我们自己，反而会使我们更加强大，因为这种行为增加了我们与其他积极主动者有效交往的机会。）</p>
<h2 id="五、自我提升是个过程，这没有捷径。"><a href="#五、自我提升是个过程，这没有捷径。" class="headerlink" title="五、自我提升是个过程，这没有捷径。"></a>五、自我提升是个过程，这没有捷径。</h2><p>要坚持学习、坚持、实践，沿着螺旋式上升的路线不断提高实践的层次。新）</p>
<h2 id="一、自我提升和完善的四个层面-1"><a href="#一、自我提升和完善的四个层面-1" class="headerlink" title="一、自我提升和完善的四个层面"></a>一、自我提升和完善的四个层面</h2><p>身体、精神、智力、社会&#x2F;情感</p>
<h2 id="二、定义-1"><a href="#二、定义-1" class="headerlink" title="二、定义"></a>二、定义</h2><p>自我更新需要兼顾这四种要素，要以睿智而均衡的方式，经常并持续运用我们天性中的四个方面。</p>
<h2 id="三、不同层面-1"><a href="#三、不同层面-1" class="headerlink" title="三、不同层面"></a>三、不同层面</h2><h3 id="Ⅰ、身体层面：-1"><a href="#Ⅰ、身体层面：-1" class="headerlink" title="Ⅰ、身体层面："></a>Ⅰ、身体层面：</h3><p>①耐力。<br>达到每分钟至少100下的心率维持30分钟。<br>②韧性。<br>③力量。</p>
<h3 id="Ⅱ、精神层面：-1"><a href="#Ⅱ、精神层面：-1" class="headerlink" title="Ⅱ、精神层面："></a>Ⅱ、精神层面：</h3><p>这可以指引人生方向，这是对人的本质、核心和对价值体系的坚持。</p>
<h3 id="Ⅲ、智力层面：-1"><a href="#Ⅲ、智力层面：-1" class="headerlink" title="Ⅲ、智力层面："></a>Ⅲ、智力层面：</h3><h4 id="两种方式：-1"><a href="#两种方式：-1" class="headerlink" title="两种方式："></a>两种方式：</h4><p>①定期阅读优秀文学作品。<br>每个月读一本书，然后每两周读一本，最后一周读一本。<br>②写作<br>不断记录自己的想法、精力、深刻见解和学习心得，我们的思路会更加明晰、准确和连贯。</p>
<h3 id="Ⅳ、社会-情感方面：-1"><a href="#Ⅳ、社会-情感方面：-1" class="headerlink" title="Ⅳ、社会&#x2F;情感方面："></a>Ⅳ、社会&#x2F;情感方面：</h3><p>围绕着习惯四、五、六进行。</p>
<h2 id="四、改变他人-1"><a href="#四、改变他人-1" class="headerlink" title="四、改变他人"></a>四、改变他人</h2><p>我们可以选择清晰而真实地反映出他人的形象，肯定他们的积极性和责任心，帮助他们改变行为模式。</p>
<p>（知足的心态让我们认识到，反映他人的正面形象并不会贬低我们自己，反而会使我们更加强大，因为这种行为增加了我们与其他积极主动者有效交往的机会。）</p>
<h2 id="五、自我提升是个过程，这没有捷径。-1"><a href="#五、自我提升是个过程，这没有捷径。-1" class="headerlink" title="五、自我提升是个过程，这没有捷径。"></a>五、自我提升是个过程，这没有捷径。</h2><p>要坚持学习、坚持、实践，沿着螺旋式上升的路线不断提高实践的层次。</p>
]]></content>
      <categories>
        <category>七个习惯</category>
      </categories>
  </entry>
  <entry>
    <title>习惯三(要事第一)</title>
    <url>/2024/11/08/TyporaNotes/Typora_SevenHabits/%E4%B9%A0%E6%83%AF%E4%B8%89(%E8%A6%81%E4%BA%8B%E7%AC%AC%E4%B8%80)/</url>
    <content><![CDATA[<h1 id="习惯三-要事第一"><a href="#习惯三-要事第一" class="headerlink" title="习惯三(要事第一)"></a>习惯三(要事第一)</h1><h2 id="一、-基础"><a href="#一、-基础" class="headerlink" title="一、 基础"></a>一、 基础</h2><p>独立意志</p>
<h2 id="二、原则"><a href="#二、原则" class="headerlink" title="二、原则"></a>二、原则</h2><p>根据事情的重要性进行排序。使精力集中到那些重要但是不紧急的事情中去。</p>
<h2 id="三、关键步骤"><a href="#三、关键步骤" class="headerlink" title="三、关键步骤"></a>三、关键步骤</h2><p>1.确认角色。写出自己扮演的关键角色，然后根据角色写出自己想要持续投入时间和精力去做的一些事。<br>2.选择目标。思考下一周里，你的每一个任务栏里最重要的一两个任务，并将他们作为选定的目标。<br>3.安排进度。为每一项目标安排具体的实施时间。<br>4.每日调整。根据事情的动态发展及时进行调整。</p>
<h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><p> 提高效率的有效方式是：责任性授权，而不是指令式授权。一)</p>
<h2 id="一、-基础-1"><a href="#一、-基础-1" class="headerlink" title="一、 基础"></a>一、 基础</h2><p>独立意志</p>
<h2 id="二、原则-1"><a href="#二、原则-1" class="headerlink" title="二、原则"></a>二、原则</h2><p>根据事情的重要性进行排序。使精力集中到那些重要但是不紧急的事情中去。</p>
<h2 id="三、关键步骤-1"><a href="#三、关键步骤-1" class="headerlink" title="三、关键步骤"></a>三、关键步骤</h2><p>1.确认角色。写出自己扮演的关键角色，然后根据角色写出自己想要持续投入时间和精力去做的一些事。<br>2.选择目标。思考下一周里，你的每一个任务栏里最重要的一两个任务，并将他们作为选定的目标。<br>3.安排进度。为每一项目标安排具体的实施时间。<br>4.每日调整。根据事情的动态发展及时进行调整。</p>
<h2 id="PS-1"><a href="#PS-1" class="headerlink" title="PS"></a>PS</h2><p> 提高效率的有效方式是：责任性授权，而不是指令式授权。</p>
]]></content>
      <categories>
        <category>七个习惯</category>
      </categories>
  </entry>
  <entry>
    <title>习惯二(以终为始)</title>
    <url>/2024/11/08/TyporaNotes/Typora_SevenHabits/%E4%B9%A0%E6%83%AF%E4%BA%8C(%E4%BB%A5%E7%BB%88%E4%B8%BA%E5%A7%8B)/</url>
    <content><![CDATA[<h1 id="习惯二-以终为始"><a href="#习惯二-以终为始" class="headerlink" title="习惯二(以终为始)"></a>习惯二(以终为始)</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>​    从现在开始，以你的人生目标作为衡量一切的标准，你的一言一行、一举一动，无论发生在何时，都必须遵循这一原则，即由个人最重视的期许或者价值观来决定一切。</p>
<h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><h3 id="原则基础一："><a href="#原则基础一：" class="headerlink" title="原则基础一："></a>原则基础一：</h3><p>任何事都是两次创造而成的。我们做任何事都是先在头脑中构思，即智力上的或第一次的创造，然后付诸实践，即体力上的或第二次的创造。</p>
<h3 id="原则基础二："><a href="#原则基础二：" class="headerlink" title="原则基础二："></a>原则基础二：</h3><p>自我领导。领导是第一次的创造，是人生的地图，即一套原则或者方针。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>①撰写一份个人使命宣言，即人生哲学或基本信念。宣言主要说明自己想成为怎样的人（品德），成就什么样的事业（贡献和成就）及为此奠基的价值观和原则。<br>②实践个人使命宣言。</p>
<h2 id="PS："><a href="#PS：" class="headerlink" title="PS："></a>PS：</h2><h3 id="一、锻炼右脑的方法："><a href="#一、锻炼右脑的方法：" class="headerlink" title="一、锻炼右脑的方法："></a>一、锻炼右脑的方法：</h3><p>1.拓宽思路<br>2.心灵演练及确认</p>
<h3 id="二、注意以原则为中心，从我们影响圈的核心开始。"><a href="#二、注意以原则为中心，从我们影响圈的核心开始。" class="headerlink" title="二、注意以原则为中心，从我们影响圈的核心开始。"></a>二、注意以原则为中心，从我们影响圈的核心开始。</h3><p>左脑主司逻辑思考和语言能力，右脑执掌创造力与直觉。始)</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>​    从现在开始，以你的人生目标作为衡量一切的标准，你的一言一行、一举一动，无论发生在何时，都必须遵循这一原则，即由个人最重视的期许或者价值观来决定一切。</p>
<h2 id="原则-1"><a href="#原则-1" class="headerlink" title="原则"></a>原则</h2><h3 id="原则基础一：-1"><a href="#原则基础一：-1" class="headerlink" title="原则基础一："></a>原则基础一：</h3><p>任何事都是两次创造而成的。我们做任何事都是先在头脑中构思，即智力上的或第一次的创造，然后付诸实践，即体力上的或第二次的创造。</p>
<h3 id="原则基础二：-1"><a href="#原则基础二：-1" class="headerlink" title="原则基础二："></a>原则基础二：</h3><p>自我领导。领导是第一次的创造，是人生的地图，即一套原则或者方针。</p>
<h2 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h2><p>①撰写一份个人使命宣言，即人生哲学或基本信念。宣言主要说明自己想成为怎样的人（品德），成就什么样的事业（贡献和成就）及为此奠基的价值观和原则。<br>②实践个人使命宣言。</p>
<h2 id="PS：-1"><a href="#PS：-1" class="headerlink" title="PS："></a>PS：</h2><h3 id="一、锻炼右脑的方法：-1"><a href="#一、锻炼右脑的方法：-1" class="headerlink" title="一、锻炼右脑的方法："></a>一、锻炼右脑的方法：</h3><p>1.拓宽思路<br>2.心灵演练及确认</p>
<h3 id="二、注意以原则为中心，从我们影响圈的核心开始。-1"><a href="#二、注意以原则为中心，从我们影响圈的核心开始。-1" class="headerlink" title="二、注意以原则为中心，从我们影响圈的核心开始。"></a>二、注意以原则为中心，从我们影响圈的核心开始。</h3><p>左脑主司逻辑思考和语言能力，右脑执掌创造力与直觉。</p>
]]></content>
      <categories>
        <category>七个习惯</category>
      </categories>
  </entry>
  <entry>
    <title>习惯五（知彼解己）</title>
    <url>/2024/11/08/TyporaNotes/Typora_SevenHabits/%E4%B9%A0%E6%83%AF%E4%BA%94%EF%BC%88%E7%9F%A5%E5%BD%BC%E8%A7%A3%E5%B7%B1%EF%BC%89/</url>
    <content><![CDATA[<h1 id="习惯五（知彼解己）"><a href="#习惯五（知彼解己）" class="headerlink" title="习惯五（知彼解己）"></a>习惯五（知彼解己）</h1><h2 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h2><p>听懂对方说的话，尤其是从对方的立场上去聆听。</p>
<h2 id="二、移情聆听"><a href="#二、移情聆听" class="headerlink" title="二、移情聆听"></a>二、移情聆听</h2><p>聆听是为了更好的理解对方，而不是仅仅做出回应。<br>因为如果你想明白一个人，那就应该听他说话。</p>
<p>移情聆听是指以理解为目的的聆听，要求听者站在说话者的角度理解他们的思维方式和感受。这种方式的本质是不是要你赞同对方，而是在感情和理智上充分而深入地理解对方。</p>
<p>注意：<br>这种方法是有风险的。这需要自身做好被影响的心理准备，因为在影响对方之前，你必须先被影响，即真正理解对方。</p>
<h2 id="三、自以为是的人经常有的四种“自传式回应”的倾向：（负面）"><a href="#三、自以为是的人经常有的四种“自传式回应”的倾向：（负面）" class="headerlink" title="三、自以为是的人经常有的四种“自传式回应”的倾向：（负面）"></a>三、自以为是的人经常有的四种“自传式回应”的倾向：（负面）</h2><p>①价值判断-对旁人的意见只有接受或者不接受。<br>②追根究底-依自己的价值观探查别人的隐私<br>③好为人师-以自己的经验提供忠告。<br>④自以为是-根据自己的行为与动机衡量别人的行为与动机</p>
<h2 id="四、有效沟通-移情聆听（正面）"><a href="#四、有效沟通-移情聆听（正面）" class="headerlink" title="四、有效沟通-移情聆听（正面）"></a>四、有效沟通-移情聆听（正面）</h2><p>第一段，复述句子。<br>第二段，加入自己的理解，并用自己的语言去表达。<br>第三段，掺入个人的感觉，体会对方的心情。<br>第四段，既加入自己的理解，又掺入个人的感觉。</p>
<p><img src="/./../TyporaImage/SevenHabits/image-20240909123132103.png" alt="image-20240909123132103"></p>
<h2 id="五、双向奔赴"><a href="#五、双向奔赴" class="headerlink" title="五、双向奔赴"></a>五、双向奔赴</h2><p>了解别人固然重要，但我们也有义务让别人了解我们。</p>
<p> 牢记品德第一，感情第二，理性第三。</p>
<h2 id="六、一对一沟通。"><a href="#六、一对一沟通。" class="headerlink" title="六、一对一沟通。"></a>六、一对一沟通。</h2><p>①我应该先想着理解别人，因为这是我力所能及的。<br>②不要过于心急，要有耐心，且要尊重对方。<br>③如果将精力都放在了关注圈范围，如问题、分歧、环境、他人行为等，人很快就会精疲力尽。</p>
<p>己）</p>
<h2 id="一、定义-1"><a href="#一、定义-1" class="headerlink" title="一、定义"></a>一、定义</h2><p>听懂对方说的话，尤其是从对方的立场上去聆听。</p>
<h2 id="二、移情聆听-1"><a href="#二、移情聆听-1" class="headerlink" title="二、移情聆听"></a>二、移情聆听</h2><p>聆听是为了更好的理解对方，而不是仅仅做出回应。<br>因为如果你想明白一个人，那就应该听他说话。</p>
<p>移情聆听是指以理解为目的的聆听，要求听者站在说话者的角度理解他们的思维方式和感受。这种方式的本质是不是要你赞同对方，而是在感情和理智上充分而深入地理解对方。</p>
<p>注意：<br>这种方法是有风险的。这需要自身做好被影响的心理准备，因为在影响对方之前，你必须先被影响，即真正理解对方。</p>
<h2 id="三、自以为是的人经常有的四种“自传式回应”的倾向：（负面）-1"><a href="#三、自以为是的人经常有的四种“自传式回应”的倾向：（负面）-1" class="headerlink" title="三、自以为是的人经常有的四种“自传式回应”的倾向：（负面）"></a>三、自以为是的人经常有的四种“自传式回应”的倾向：（负面）</h2><p>①价值判断-对旁人的意见只有接受或者不接受。<br>②追根究底-依自己的价值观探查别人的隐私<br>③好为人师-以自己的经验提供忠告。<br>④自以为是-根据自己的行为与动机衡量别人的行为与动机</p>
<h2 id="四、有效沟通-移情聆听（正面）-1"><a href="#四、有效沟通-移情聆听（正面）-1" class="headerlink" title="四、有效沟通-移情聆听（正面）"></a>四、有效沟通-移情聆听（正面）</h2><p>第一段，复述句子。<br>第二段，加入自己的理解，并用自己的语言去表达。<br>第三段，掺入个人的感觉，体会对方的心情。<br>第四段，既加入自己的理解，又掺入个人的感觉。</p>
<p><img src="/./../TyporaImage/SevenHabits/image-20240909123132103.png" alt="image-20240909123132103"></p>
<h2 id="五、双向奔赴-1"><a href="#五、双向奔赴-1" class="headerlink" title="五、双向奔赴"></a>五、双向奔赴</h2><p>了解别人固然重要，但我们也有义务让别人了解我们。</p>
<p> 牢记品德第一，感情第二，理性第三。</p>
<h2 id="六、一对一沟通。-1"><a href="#六、一对一沟通。-1" class="headerlink" title="六、一对一沟通。"></a>六、一对一沟通。</h2><p>①我应该先想着理解别人，因为这是我力所能及的。<br>②不要过于心急，要有耐心，且要尊重对方。<br>③如果将精力都放在了关注圈范围，如问题、分歧、环境、他人行为等，人很快就会精疲力尽。</p>
]]></content>
      <categories>
        <category>七个习惯</category>
      </categories>
  </entry>
  <entry>
    <title>习惯六（统合综效）</title>
    <url>/2024/11/08/TyporaNotes/Typora_SevenHabits/%E4%B9%A0%E6%83%AF%E5%85%AD%EF%BC%88%E7%BB%9F%E5%90%88%E7%BB%BC%E6%95%88%EF%BC%89/</url>
    <content><![CDATA[<h1 id="习惯六（统合综效）"><a href="#习惯六（统合综效）" class="headerlink" title="习惯六（统合综效）"></a>习惯六（统合综效）</h1><h2 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h2><p>敞开胸怀，接纳一切奇怪的想法，同时也贡献出自己的见地。<br>（但凡创新就得有担当，不怕失败，不断尝试，即便最后证明是错误的。）</p>
<h2 id="二、沟通三层次"><a href="#二、沟通三层次" class="headerlink" title="二、沟通三层次"></a>二、沟通三层次</h2><p>①相互提防。源于低信任度。<br>②互相尊重。为了避免冲突，双方都保持礼貌，但是不一定为对方着想，也不能了解背后的真正原因。<br>③统合综效。源自于高信任度，进行的一种创造性活动。</p>
<h2 id="三、尊重差异"><a href="#三、尊重差异" class="headerlink" title="三、尊重差异"></a>三、尊重差异</h2><p>虚怀若谷的人承认自己有不足之处，而乐于在与人的交往中汲取丰富的知识见解，重视不同的意见，因而增广见闻。<br>反面：自以为是的人总以为自己最客观，看别人都有所偏颇，这实际上是画地为牢。</p>
<h2 id="四、化阻力为动力"><a href="#四、化阻力为动力" class="headerlink" title="四、化阻力为动力"></a>四、化阻力为动力</h2><p>动力通常是积极、合理、自觉、符合经济效益的力量，而阻力通常是消极、负面、不合逻辑、情绪化、不自觉，具社会性与心理性因素。<br>这些都同时存在，在应变时都要考虑清楚。</p>
<p>效）</p>
<h2 id="一、定义-1"><a href="#一、定义-1" class="headerlink" title="一、定义"></a>一、定义</h2><p>敞开胸怀，接纳一切奇怪的想法，同时也贡献出自己的见地。<br>（但凡创新就得有担当，不怕失败，不断尝试，即便最后证明是错误的。）</p>
<h2 id="二、沟通三层次-1"><a href="#二、沟通三层次-1" class="headerlink" title="二、沟通三层次"></a>二、沟通三层次</h2><p>①相互提防。源于低信任度。<br>②互相尊重。为了避免冲突，双方都保持礼貌，但是不一定为对方着想，也不能了解背后的真正原因。<br>③统合综效。源自于高信任度，进行的一种创造性活动。</p>
<h2 id="三、尊重差异-1"><a href="#三、尊重差异-1" class="headerlink" title="三、尊重差异"></a>三、尊重差异</h2><p>虚怀若谷的人承认自己有不足之处，而乐于在与人的交往中汲取丰富的知识见解，重视不同的意见，因而增广见闻。<br>反面：自以为是的人总以为自己最客观，看别人都有所偏颇，这实际上是画地为牢。</p>
<h2 id="四、化阻力为动力-1"><a href="#四、化阻力为动力-1" class="headerlink" title="四、化阻力为动力"></a>四、化阻力为动力</h2><p>动力通常是积极、合理、自觉、符合经济效益的力量，而阻力通常是消极、负面、不合逻辑、情绪化、不自觉，具社会性与心理性因素。<br>这些都同时存在，在应变时都要考虑清楚。</p>
]]></content>
      <categories>
        <category>七个习惯</category>
      </categories>
  </entry>
  <entry>
    <title>人际关系的本质</title>
    <url>/2024/11/08/TyporaNotes/Typora_SevenHabits/%E4%BA%BA%E9%99%85%E5%85%B3%E7%B3%BB%E7%9A%84%E6%9C%AC%E8%B4%A8/</url>
    <content><![CDATA[<h1 id="人际关系的本质"><a href="#人际关系的本质" class="headerlink" title="人际关系的本质"></a>人际关系的本质</h1><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>爱人先爱己，即独立是互赖的基础。</p>
<h2 id="情感账户的七种主要投资方式："><a href="#情感账户的七种主要投资方式：" class="headerlink" title="情感账户的七种主要投资方式："></a>情感账户的七种主要投资方式：</h2><p>①理解他人。这是一切情感的基础。<br>②注意小节。人的内心都是及其软弱和敏感的，不分你年龄和资历。<br>③信守承诺。<br>④明确期望。明确应该由谁来完成什么样的工作，期望不明会导致误会、失望和信用度的降低。<br>⑤正直诚信。正直诚信能产生信任，这是其他投资的基础。最好的方式就是避免背后中伤他人。<br>⑥勇于致歉。要诚心致歉，而动机不良或企图文过饰非，就不会获得宽恕。<br>⑦无条件的爱。无条件的爱，由于没人任何附加条件，没有任何牵绊，被爱者可以用自己的方式，体验人生中种种美好的人生境界。<br>有条件的爱，往往引起被爱者的反抗心理。这反映出了爱人者不成熟的心理，表明其受制于对方。</p>
<p>本质</p>
<h2 id="前提-1"><a href="#前提-1" class="headerlink" title="前提"></a>前提</h2><p>爱人先爱己，即独立是互赖的基础。</p>
<h2 id="情感账户的七种主要投资方式：-1"><a href="#情感账户的七种主要投资方式：-1" class="headerlink" title="情感账户的七种主要投资方式："></a>情感账户的七种主要投资方式：</h2><p>①理解他人。这是一切情感的基础。<br>②注意小节。人的内心都是及其软弱和敏感的，不分你年龄和资历。<br>③信守承诺。<br>④明确期望。明确应该由谁来完成什么样的工作，期望不明会导致误会、失望和信用度的降低。<br>⑤正直诚信。正直诚信能产生信任，这是其他投资的基础。最好的方式就是避免背后中伤他人。<br>⑥勇于致歉。要诚心致歉，而动机不良或企图文过饰非，就不会获得宽恕。<br>⑦无条件的爱。无条件的爱，由于没人任何附加条件，没有任何牵绊，被爱者可以用自己的方式，体验人生中种种美好的人生境界。<br>有条件的爱，往往引起被爱者的反抗心理。这反映出了爱人者不成熟的心理，表明其受制于对方。</p>
]]></content>
      <categories>
        <category>七个习惯</category>
      </categories>
  </entry>
  <entry>
    <title>习惯四（双赢思维）</title>
    <url>/2024/11/08/TyporaNotes/Typora_SevenHabits/%E4%B9%A0%E6%83%AF%E5%9B%9B%EF%BC%88%E5%8F%8C%E8%B5%A2%E6%80%9D%E7%BB%B4%EF%BC%89/</url>
    <content><![CDATA[<h1 id="习惯四（双赢思维）"><a href="#习惯四（双赢思维）" class="headerlink" title="习惯四（双赢思维）"></a>习惯四（双赢思维）</h1><h2 id="人际关系的六种模式"><a href="#人际关系的六种模式" class="headerlink" title="人际关系的六种模式"></a>人际关系的六种模式</h2><p>利人利己（双赢）  两败俱伤（双输）<br>损人利己（赢输）  独善其身（赢）<br>舍己为人（输赢）  好聚好散（无交易）</p>
<h2 id="双赢思维的五个要领"><a href="#双赢思维的五个要领" class="headerlink" title="双赢思维的五个要领"></a>双赢思维的五个要领</h2><p>双赢品德、双赢关系、双赢协议、双赢体系、双赢关系。</p>
<h3 id="一、双赢品德："><a href="#一、双赢品德：" class="headerlink" title="一、双赢品德："></a>一、双赢品德：</h3><p>①诚信：信守承诺。</p>
<p>②成熟：这是敢作敢为与善解人意之间的一种平衡状态，即考虑自己的利益与他人利益的一种平衡。</p>
<p>③知足。</p>
<h3 id="二、双赢关系"><a href="#二、双赢关系" class="headerlink" title="二、双赢关系:"></a>二、双赢关系:</h3><p>精髓是信用，即情感账户。只有彼此信任，才能坦诚相待。</p>
<h3 id="三、双赢协议："><a href="#三、双赢协议：" class="headerlink" title="三、双赢协议："></a>三、双赢协议：</h3><p>这使上下关系转换为平级关系，上级监督转换为了自我监督。</p>
<p>内容：<br>①预期结果。<br>②指导方针<br>③可用资源<br>④任务考核、<br>⑤奖惩制度</p>
<h3 id="四、双赢体系："><a href="#四、双赢体系：" class="headerlink" title="四、双赢体系："></a>四、双赢体系：</h3><p>只存在于体系健全的组织机构中。</p>
<p>包括：培训、规划、交流、预算、信息、薪酬等。</p>
<h3 id="五、双赢过程："><a href="#五、双赢过程：" class="headerlink" title="五、双赢过程："></a>五、双赢过程：</h3><p>首先，从对方的角度看问题。真正理解对方的想法、需要和顾虑，有时甚至比对方理解的更加透彻。</p>
<p>其次，认清主要问题和顾虑（而不是立场）。</p>
<p>最后，寻找实现这种结果的各种可能路径。维）</p>
<h2 id="人际关系的六种模式-1"><a href="#人际关系的六种模式-1" class="headerlink" title="人际关系的六种模式"></a>人际关系的六种模式</h2><p>利人利己（双赢）  两败俱伤（双输）<br>损人利己（赢输）  独善其身（赢）<br>舍己为人（输赢）  好聚好散（无交易）</p>
<h2 id="双赢思维的五个要领-1"><a href="#双赢思维的五个要领-1" class="headerlink" title="双赢思维的五个要领"></a>双赢思维的五个要领</h2><p>双赢品德、双赢关系、双赢协议、双赢体系、双赢关系。</p>
<h3 id="一、双赢品德：-1"><a href="#一、双赢品德：-1" class="headerlink" title="一、双赢品德："></a>一、双赢品德：</h3><p>①诚信：信守承诺。</p>
<p>②成熟：这是敢作敢为与善解人意之间的一种平衡状态，即考虑自己的利益与他人利益的一种平衡。</p>
<p>③知足。</p>
<h3 id="二、双赢关系-1"><a href="#二、双赢关系-1" class="headerlink" title="二、双赢关系:"></a>二、双赢关系:</h3><p>精髓是信用，即情感账户。只有彼此信任，才能坦诚相待。</p>
<h3 id="三、双赢协议：-1"><a href="#三、双赢协议：-1" class="headerlink" title="三、双赢协议："></a>三、双赢协议：</h3><p>这使上下关系转换为平级关系，上级监督转换为了自我监督。</p>
<p>内容：<br>①预期结果。<br>②指导方针<br>③可用资源<br>④任务考核、<br>⑤奖惩制度</p>
<h3 id="四、双赢体系：-1"><a href="#四、双赢体系：-1" class="headerlink" title="四、双赢体系："></a>四、双赢体系：</h3><p>只存在于体系健全的组织机构中。</p>
<p>包括：培训、规划、交流、预算、信息、薪酬等。</p>
<h3 id="五、双赢过程：-1"><a href="#五、双赢过程：-1" class="headerlink" title="五、双赢过程："></a>五、双赢过程：</h3><p>首先，从对方的角度看问题。真正理解对方的想法、需要和顾虑，有时甚至比对方理解的更加透彻。</p>
<p>其次，认清主要问题和顾虑（而不是立场）。</p>
<p>最后，寻找实现这种结果的各种可能路径。</p>
]]></content>
      <categories>
        <category>七个习惯</category>
      </categories>
  </entry>
  <entry>
    <title>人世间</title>
    <url>/2024/11/08/TyporaNotes/Typora_Zhuangzi/%E4%BA%BA%E4%B8%96%E9%97%B4/</url>
    <content><![CDATA[<h1 id="人世间"><a href="#人世间" class="headerlink" title="人世间"></a>人世间</h1><p>一、勿要求名争胜，古时候的至人是先充实自己而后才去扶助他人。<br>外曲内直来规避风险虽然可以规避祸患，但并不是最好的处世方式。<br>保持心斋，心灵凝聚，处理事情寄托于不得已就好，这样就差不多了。瞻彼阕者，虚室生白。<br>二、不要改变所受的使命，不要强求事情的成功；心神任随外物的变化而悠游自适，寄托于不得已而保养自己的心性，这就是最好的了。<br>三、面对一个天性残酷的人，应该外曲内直；亲附他不要太过分，诱导他不要太显露；顺其天性，慎之又慎。<br>四、无用之用，是为大用；显露有用就会招致打击，无所可用有时才是智慧。<br>五到七、人皆知有用之用，而莫知无用之用。郤曲郤曲，无伤吾足。世间</p>
<p>一、勿要求名争胜，古时候的至人是先充实自己而后才去扶助他人。<br>外曲内直来规避风险虽然可以规避祸患，但并不是最好的处世方式。<br>保持心斋，心灵凝聚，处理事情寄托于不得已就好，这样就差不多了。瞻彼阕者，虚室生白。<br>二、不要改变所受的使命，不要强求事情的成功；心神任随外物的变化而悠游自适，寄托于不得已而保养自己的心性，这就是最好的了。<br>三、面对一个天性残酷的人，应该外曲内直；亲附他不要太过分，诱导他不要太显露；顺其天性，慎之又慎。<br>四、无用之用，是为大用；显露有用就会招致打击，无所可用有时才是智慧。<br>五到七、人皆知有用之用，而莫知无用之用。郤曲郤曲，无伤吾足。# 人世间</p>
<p>一、勿要求名争胜，古时候的至人是先充实自己而后才去扶助他人。<br>外曲内直来规避风险虽然可以规避祸患，但并不是最好的处世方式。<br>保持心斋，心灵凝聚，处理事情寄托于不得已就好，这样就差不多了。瞻彼阕者，虚室生白。<br>二、不要改变所受的使命，不要强求事情的成功；心神任随外物的变化而悠游自适，寄托于不得已而保养自己的心性，这就是最好的了。<br>三、面对一个天性残酷的人，应该外曲内直；亲附他不要太过分，诱导他不要太显露；顺其天性，慎之又慎。<br>四、无用之用，是为大用；显露有用就会招致打击，无所可用有时才是智慧。<br>五到七、人皆知有用之用，而莫知无用之用。郤曲郤曲，无伤吾足。世间</p>
<p>一、勿要求名争胜，古时候的至人是先充实自己而后才去扶助他人。<br>外曲内直来规避风险虽然可以规避祸患，但并不是最好的处世方式。<br>保持心斋，心灵凝聚，处理事情寄托于不得已就好，这样就差不多了。瞻彼阕者，虚室生白。<br>二、不要改变所受的使命，不要强求事情的成功；心神任随外物的变化而悠游自适，寄托于不得已而保养自己的心性，这就是最好的了。<br>三、面对一个天性残酷的人，应该外曲内直；亲附他不要太过分，诱导他不要太显露；顺其天性，慎之又慎。<br>四、无用之用，是为大用；显露有用就会招致打击，无所可用有时才是智慧。<br>五到七、人皆知有用之用，而莫知无用之用。郤曲郤曲，无伤吾足。</p>
]]></content>
      <categories>
        <category>庄子</category>
      </categories>
  </entry>
  <entry>
    <title>养生主</title>
    <url>/2024/11/08/TyporaNotes/Typora_Zhuangzi/%E5%85%BB%E7%94%9F%E4%B8%BB/</url>
    <content><![CDATA[<h1 id="养生主"><a href="#养生主" class="headerlink" title="养生主"></a>养生主</h1><p>一、以有限度的生命去追求无限度的东西，就会疲惫不堪。那么善养生做到不求名气，不善养生不要招致刑法，顺应自然就好。<br>二、庖丁解牛时，目无全牛，顺着牛的自然结构去用刀，刀十九年常新；人要顺其自然，节省自己的精力，方能养生。<br>三、有些事情非人力所能及，尽力就好。<br>养在笼子里的野鸡虽然形神旺盛，但是并不自在；人在养生的时候，注意要融入自然，不要把自己拘束小天地。<br>老聃应时而生，顺时而死；人的喜怒哀乐、生死担忧应顺应自然。<br>万物与我并生，天地与我为一；将小我融入到大我中，将个体生命融入到整个宇宙中。生主</p>
<p>一、以有限度的生命去追求无限度的东西，就会疲惫不堪。那么善养生做到不求名气，不善养生不要招致刑法，顺应自然就好。<br>二、庖丁解牛时，目无全牛，顺着牛的自然结构去用刀，刀十九年常新；人要顺其自然，节省自己的精力，方能养生。<br>三、有些事情非人力所能及，尽力就好。<br>养在笼子里的野鸡虽然形神旺盛，但是并不自在；人在养生的时候，注意要融入自然，不要把自己拘束小天地。<br>老聃应时而生，顺时而死；人的喜怒哀乐、生死担忧应顺应自然。<br>万物与我并生，天地与我为一；将小我融入到大我中，将个体生命融入到整个宇宙中。# 养生主</p>
<p>一、以有限度的生命去追求无限度的东西，就会疲惫不堪。那么善养生做到不求名气，不善养生不要招致刑法，顺应自然就好。<br>二、庖丁解牛时，目无全牛，顺着牛的自然结构去用刀，刀十九年常新；人要顺其自然，节省自己的精力，方能养生。<br>三、有些事情非人力所能及，尽力就好。<br>养在笼子里的野鸡虽然形神旺盛，但是并不自在；人在养生的时候，注意要融入自然，不要把自己拘束小天地。<br>老聃应时而生，顺时而死；人的喜怒哀乐、生死担忧应顺应自然。<br>万物与我并生，天地与我为一；将小我融入到大我中，将个体生命融入到整个宇宙中。生主</p>
<p>一、以有限度的生命去追求无限度的东西，就会疲惫不堪。那么善养生做到不求名气，不善养生不要招致刑法，顺应自然就好。<br>二、庖丁解牛时，目无全牛，顺着牛的自然结构去用刀，刀十九年常新；人要顺其自然，节省自己的精力，方能养生。<br>三、有些事情非人力所能及，尽力就好。<br>养在笼子里的野鸡虽然形神旺盛，但是并不自在；人在养生的时候，注意要融入自然，不要把自己拘束小天地。<br>老聃应时而生，顺时而死；人的喜怒哀乐、生死担忧应顺应自然。<br>万物与我并生，天地与我为一；将小我融入到大我中，将个体生命融入到整个宇宙中。</p>
]]></content>
      <categories>
        <category>庄子</category>
      </categories>
  </entry>
  <entry>
    <title>大宗师</title>
    <url>/2024/11/08/TyporaNotes/Typora_Zhuangzi/%E5%A4%A7%E5%AE%97%E5%B8%88/</url>
    <content><![CDATA[<h1 id="大宗师"><a href="#大宗师" class="headerlink" title="大宗师"></a>大宗师</h1><p>一、能做到认清楚自然与人为的区别，这已经是洞察事理的极致了。<br>真人顺其自然，能做到天人合一；不过于担心人的非议，不过于担心衣食住行，不过于担心死生之事，真人所做的仅是顺其自然，顺其自然而保养自己的天性，使自己的的身心愉悦。<br>二、人的生死是不可以避免的，是自然而然的规律；相濡以沫，不如相忘于江湖。<br>将小船隐藏于大山中，是可以的，但仍有被偷的风险；将天下托付于天下，顺其自然，就不用担心这些事了。<br>三、道是真实的，是隐蔽的，永恒的。<br>四、心境变化：持空明之心、忘世故、不为物役、无虑生死、心境清明洞彻、体悟绝对的道</p>
<p>修道方法：迷茫之始、文字、诵读、见解明澈、心得、实行、咏叹歌吟、静默、高邈廖旷。<br>实质：迷茫、观察、了解、明白、感悟总结、实践、赞叹、反思、心境空明。<br>五、天人合一为比较好的心境，能够安时处顺；无虑自然生死，心境空明，悠游自在。<br>六、做到自然是方外的人，符合礼的是方内的人。以自然的角度看，方外人是君子，方内人是小人；以人间的角度看，方内人是君子，方外人是小人。<br>七、不要为礼制所困，否则我们就不清楚究竟是清醒着还是睡梦中；安时处顺，顺应自然的变化，就能够达到空明、纯一的心境。<br>八、不要为仁义、是非所困；大道泽及万世不以为仁，长于上古却不以为老，覆天载地、塑造生灵却不以为智巧，这才是“游心”的境界。<br>九、不拘束于形体，不为智巧所累，超脱物外，与大道融通为一，这就是“坐忘”。达到坐忘的境界，参与自然的变化，就不会头脑执滞而不知变通，画地为牢。<br>十、天地未曾偏私，从未有意让我们贫穷或者富裕。宗师</p>
<p>一、能做到认清楚自然与人为的区别，这已经是洞察事理的极致了。<br>真人顺其自然，能做到天人合一；不过于担心人的非议，不过于担心衣食住行，不过于担心死生之事，真人所做的仅是顺其自然，顺其自然而保养自己的天性，使自己的的身心愉悦。<br>二、人的生死是不可以避免的，是自然而然的规律；相濡以沫，不如相忘于江湖。<br>将小船隐藏于大山中，是可以的，但仍有被偷的风险；将天下托付于天下，顺其自然，就不用担心这些事了。<br>三、道是真实的，是隐蔽的，永恒的。<br>四、心境变化：持空明之心、忘世故、不为物役、无虑生死、心境清明洞彻、体悟绝对的道</p>
<p>修道方法：迷茫之始、文字、诵读、见解明澈、心得、实行、咏叹歌吟、静默、高邈廖旷。<br>实质：迷茫、观察、了解、明白、感悟总结、实践、赞叹、反思、心境空明。<br>五、天人合一为比较好的心境，能够安时处顺；无虑自然生死，心境空明，悠游自在。<br>六、做到自然是方外的人，符合礼的是方内的人。以自然的角度看，方外人是君子，方内人是小人；以人间的角度看，方内人是君子，方外人是小人。<br>七、不要为礼制所困，否则我们就不清楚究竟是清醒着还是睡梦中；安时处顺，顺应自然的变化，就能够达到空明、纯一的心境。<br>八、不要为仁义、是非所困；大道泽及万世不以为仁，长于上古却不以为老，覆天载地、塑造生灵却不以为智巧，这才是“游心”的境界。<br>九、不拘束于形体，不为智巧所累，超脱物外，与大道融通为一，这就是“坐忘”。达到坐忘的境界，参与自然的变化，就不会头脑执滞而不知变通，画地为牢。<br>十、天地未曾偏私，从未有意让我们贫穷或者富裕。# 大宗师</p>
<p>一、能做到认清楚自然与人为的区别，这已经是洞察事理的极致了。<br>真人顺其自然，能做到天人合一；不过于担心人的非议，不过于担心衣食住行，不过于担心死生之事，真人所做的仅是顺其自然，顺其自然而保养自己的天性，使自己的的身心愉悦。<br>二、人的生死是不可以避免的，是自然而然的规律；相濡以沫，不如相忘于江湖。<br>将小船隐藏于大山中，是可以的，但仍有被偷的风险；将天下托付于天下，顺其自然，就不用担心这些事了。<br>三、道是真实的，是隐蔽的，永恒的。<br>四、心境变化：持空明之心、忘世故、不为物役、无虑生死、心境清明洞彻、体悟绝对的道</p>
<p>修道方法：迷茫之始、文字、诵读、见解明澈、心得、实行、咏叹歌吟、静默、高邈廖旷。<br>实质：迷茫、观察、了解、明白、感悟总结、实践、赞叹、反思、心境空明。<br>五、天人合一为比较好的心境，能够安时处顺；无虑自然生死，心境空明，悠游自在。<br>六、做到自然是方外的人，符合礼的是方内的人。以自然的角度看，方外人是君子，方内人是小人；以人间的角度看，方内人是君子，方外人是小人。<br>七、不要为礼制所困，否则我们就不清楚究竟是清醒着还是睡梦中；安时处顺，顺应自然的变化，就能够达到空明、纯一的心境。<br>八、不要为仁义、是非所困；大道泽及万世不以为仁，长于上古却不以为老，覆天载地、塑造生灵却不以为智巧，这才是“游心”的境界。<br>九、不拘束于形体，不为智巧所累，超脱物外，与大道融通为一，这就是“坐忘”。达到坐忘的境界，参与自然的变化，就不会头脑执滞而不知变通，画地为牢。<br>十、天地未曾偏私，从未有意让我们贫穷或者富裕。宗师</p>
<p>一、能做到认清楚自然与人为的区别，这已经是洞察事理的极致了。<br>真人顺其自然，能做到天人合一；不过于担心人的非议，不过于担心衣食住行，不过于担心死生之事，真人所做的仅是顺其自然，顺其自然而保养自己的天性，使自己的的身心愉悦。<br>二、人的生死是不可以避免的，是自然而然的规律；相濡以沫，不如相忘于江湖。<br>将小船隐藏于大山中，是可以的，但仍有被偷的风险；将天下托付于天下，顺其自然，就不用担心这些事了。<br>三、道是真实的，是隐蔽的，永恒的。<br>四、心境变化：持空明之心、忘世故、不为物役、无虑生死、心境清明洞彻、体悟绝对的道</p>
<p>修道方法：迷茫之始、文字、诵读、见解明澈、心得、实行、咏叹歌吟、静默、高邈廖旷。<br>实质：迷茫、观察、了解、明白、感悟总结、实践、赞叹、反思、心境空明。<br>五、天人合一为比较好的心境，能够安时处顺；无虑自然生死，心境空明，悠游自在。<br>六、做到自然是方外的人，符合礼的是方内的人。以自然的角度看，方外人是君子，方内人是小人；以人间的角度看，方内人是君子，方外人是小人。<br>七、不要为礼制所困，否则我们就不清楚究竟是清醒着还是睡梦中；安时处顺，顺应自然的变化，就能够达到空明、纯一的心境。<br>八、不要为仁义、是非所困；大道泽及万世不以为仁，长于上古却不以为老，覆天载地、塑造生灵却不以为智巧，这才是“游心”的境界。<br>九、不拘束于形体，不为智巧所累，超脱物外，与大道融通为一，这就是“坐忘”。达到坐忘的境界，参与自然的变化，就不会头脑执滞而不知变通，画地为牢。<br>十、天地未曾偏私，从未有意让我们贫穷或者富裕。</p>
]]></content>
      <categories>
        <category>庄子</category>
      </categories>
  </entry>
  <entry>
    <title>德充符</title>
    <url>/2024/11/08/TyporaNotes/Typora_Zhuangzi/%E5%BE%B7%E5%85%85%E7%AC%A6%20/</url>
    <content><![CDATA[<h1 id="德充符"><a href="#德充符" class="headerlink" title="德充符"></a>德充符</h1><p>一、不用言语的教导，行不言之教达到潜移默化之功，这才是善教。<br>把握事物的本质，处于无所待的境界而不受外物的影响；人不过度受生死和景色的影响而轻易的改变自己的心灵，要主宰事物的变化而执守事物的中枢。<br>自正性命才能保全天性，才会有勇者的无畏，才能引导众人。<br>二、知道事情的无可奈何而安之若命，这只有德的人才能做到；应游于形骸之内，以德相交，而非游于形骸之外，以外貌衡量。<br>三、不识庐山真面目，只在此山中；责任也是束缚，束缚越深，看清楚事情的可能性就越小。<br>四、才全德不形者，虽丑貌惊骇天下，日久，天下亲附之。一个好的人，不在于外貌的美丑，而在于他美好的才能和德行。<br>五、真正的遗忘是遗忘掉不应该遗忘掉的东西（才能和德行），而记住了应该遗忘的东西（外貌等表面的东西）。<br>圣人不搞工巧的言行，而保全自己的天性；既然人已经受到了上天的滋养，为什么还要人为的滋养呢？<br>与人群交往但不受人群是非议论的影响，这就已经很好了。<br>六、人应该尽量做到“无情”，不以好恶内伤自己的身体，保全自己的天性。<br>上天给予了人身体，但是人却用自己的好恶发表意见来争论，这是伤害自己天性的行为；做人应该顺势自然，不过人执着于自己的好恶，保持自己的身心健康。充符 </p>
<p>一、不用言语的教导，行不言之教达到潜移默化之功，这才是善教。<br>把握事物的本质，处于无所待的境界而不受外物的影响；人不过度受生死和景色的影响而轻易的改变自己的心灵，要主宰事物的变化而执守事物的中枢。<br>自正性命才能保全天性，才会有勇者的无畏，才能引导众人。<br>二、知道事情的无可奈何而安之若命，这只有德的人才能做到；应游于形骸之内，以德相交，而非游于形骸之外，以外貌衡量。<br>三、不识庐山真面目，只在此山中；责任也是束缚，束缚越深，看清楚事情的可能性就越小。<br>四、才全德不形者，虽丑貌惊骇天下，日久，天下亲附之。一个好的人，不在于外貌的美丑，而在于他美好的才能和德行。<br>五、真正的遗忘是遗忘掉不应该遗忘掉的东西（才能和德行），而记住了应该遗忘的东西（外貌等表面的东西）。<br>圣人不搞工巧的言行，而保全自己的天性；既然人已经受到了上天的滋养，为什么还要人为的滋养呢？<br>与人群交往但不受人群是非议论的影响，这就已经很好了。<br>六、人应该尽量做到“无情”，不以好恶内伤自己的身体，保全自己的天性。<br>上天给予了人身体，但是人却用自己的好恶发表意见来争论，这是伤害自己天性的行为；做人应该顺势自然，不过人执着于自己的好恶，保持自己的身心健康。# 德充符 </p>
<p>一、不用言语的教导，行不言之教达到潜移默化之功，这才是善教。<br>把握事物的本质，处于无所待的境界而不受外物的影响；人不过度受生死和景色的影响而轻易的改变自己的心灵，要主宰事物的变化而执守事物的中枢。<br>自正性命才能保全天性，才会有勇者的无畏，才能引导众人。<br>二、知道事情的无可奈何而安之若命，这只有德的人才能做到；应游于形骸之内，以德相交，而非游于形骸之外，以外貌衡量。<br>三、不识庐山真面目，只在此山中；责任也是束缚，束缚越深，看清楚事情的可能性就越小。<br>四、才全德不形者，虽丑貌惊骇天下，日久，天下亲附之。一个好的人，不在于外貌的美丑，而在于他美好的才能和德行。<br>五、真正的遗忘是遗忘掉不应该遗忘掉的东西（才能和德行），而记住了应该遗忘的东西（外貌等表面的东西）。<br>圣人不搞工巧的言行，而保全自己的天性；既然人已经受到了上天的滋养，为什么还要人为的滋养呢？<br>与人群交往但不受人群是非议论的影响，这就已经很好了。<br>六、人应该尽量做到“无情”，不以好恶内伤自己的身体，保全自己的天性。<br>上天给予了人身体，但是人却用自己的好恶发表意见来争论，这是伤害自己天性的行为；做人应该顺势自然，不过人执着于自己的好恶，保持自己的身心健康。充符 </p>
<p>一、不用言语的教导，行不言之教达到潜移默化之功，这才是善教。<br>把握事物的本质，处于无所待的境界而不受外物的影响；人不过度受生死和景色的影响而轻易的改变自己的心灵，要主宰事物的变化而执守事物的中枢。<br>自正性命才能保全天性，才会有勇者的无畏，才能引导众人。<br>二、知道事情的无可奈何而安之若命，这只有德的人才能做到；应游于形骸之内，以德相交，而非游于形骸之外，以外貌衡量。<br>三、不识庐山真面目，只在此山中；责任也是束缚，束缚越深，看清楚事情的可能性就越小。<br>四、才全德不形者，虽丑貌惊骇天下，日久，天下亲附之。一个好的人，不在于外貌的美丑，而在于他美好的才能和德行。<br>五、真正的遗忘是遗忘掉不应该遗忘掉的东西（才能和德行），而记住了应该遗忘的东西（外貌等表面的东西）。<br>圣人不搞工巧的言行，而保全自己的天性；既然人已经受到了上天的滋养，为什么还要人为的滋养呢？<br>与人群交往但不受人群是非议论的影响，这就已经很好了。<br>六、人应该尽量做到“无情”，不以好恶内伤自己的身体，保全自己的天性。<br>上天给予了人身体，但是人却用自己的好恶发表意见来争论，这是伤害自己天性的行为；做人应该顺势自然，不过人执着于自己的好恶，保持自己的身心健康。</p>
]]></content>
      <categories>
        <category>庄子</category>
      </categories>
  </entry>
  <entry>
    <title>应帝王</title>
    <url>/2024/11/08/TyporaNotes/Typora_Zhuangzi/%E5%BA%94%E5%B8%9D%E7%8E%8B/</url>
    <content><![CDATA[<h1 id="应帝王"><a href="#应帝王" class="headerlink" title="应帝王"></a>应帝王</h1><p>一、纯真质朴，不以技巧。<br>二、制定法式应以百姓之心为心，不以独裁者之心为心。因为鸟兽尚且知道避灾，何况人呢？<br>三、心如明镜，不将不迎。</p>
<p>帝王</p>
<p>一、纯真质朴，不以技巧。<br>二、制定法式应以百姓之心为心，不以独裁者之心为心。因为鸟兽尚且知道避灾，何况人呢？<br>三、心如明镜，不将不迎。# 应帝王</p>
<p>一、纯真质朴，不以技巧。<br>二、制定法式应以百姓之心为心，不以独裁者之心为心。因为鸟兽尚且知道避灾，何况人呢？<br>三、心如明镜，不将不迎。</p>
<p>帝王</p>
<p>一、纯真质朴，不以技巧。<br>二、制定法式应以百姓之心为心，不以独裁者之心为心。因为鸟兽尚且知道避灾，何况人呢？<br>三、心如明镜，不将不迎。</p>
]]></content>
      <categories>
        <category>庄子</category>
      </categories>
  </entry>
  <entry>
    <title>齐物论</title>
    <url>/2024/11/08/TyporaNotes/Typora_Zhuangzi/%E9%BD%90%E7%89%A9%E8%AE%BA/</url>
    <content><![CDATA[<h1 id="齐物论"><a href="#齐物论" class="headerlink" title="齐物论"></a>齐物论</h1><p> 精神平等：</p>
<p>一、丧我、三籁<br>二、百家争鸣中，人们的争执现状。<br>三、破除成见的方法：空明之心  。<br>凡事皆有两面，正反、是非、大小，但若是一昧用这些概念去对待事情，那么人们的争论就无始无终，没有穷尽了。不如以空明之心，去观照事物的实况。<br>四、事物的本质或许是相同的，但若是想搞判断一个事物，则需要找出与其有差异的另一个事物，二者进行对比， 才能更好地搞清楚二者的差别。<br>已而不知其然，谓之道。是以圣人和之以是非而休乎天钧,是之谓两行。<br>滑疑之耀，圣人之所图也。<br>五、不要执着于绝对性，要注意绝对性与相对性的统一。<br>不要执着于对立，要在对立与统一中把握事物。<br>轻言辩而重体悟，探究道中潜藏的光明，做到知行合一。<br>六、太阳的光芒一般，不偏不倚，包容万物；人的德行应该像太阳的光芒一般，不拘泥于一角，放眼整体，包容万物。<br>成难于其易，为大于其细，众人熙熙攘攘，圣人浑朴相安，应顺从自然之道。人们之间的争辩这是这样。<br>七、跳出五行去看，自己到底是庄周还是蝴蝶。物论</p>
<p> 精神平等：</p>
<p>一、丧我、三籁<br>二、百家争鸣中，人们的争执现状。<br>三、破除成见的方法：空明之心  。<br>凡事皆有两面，正反、是非、大小，但若是一昧用这些概念去对待事情，那么人们的争论就无始无终，没有穷尽了。不如以空明之心，去观照事物的实况。<br>四、事物的本质或许是相同的，但若是想搞判断一个事物，则需要找出与其有差异的另一个事物，二者进行对比， 才能更好地搞清楚二者的差别。<br>已而不知其然，谓之道。是以圣人和之以是非而休乎天钧,是之谓两行。<br>滑疑之耀，圣人之所图也。<br>五、不要执着于绝对性，要注意绝对性与相对性的统一。<br>不要执着于对立，要在对立与统一中把握事物。<br>轻言辩而重体悟，探究道中潜藏的光明，做到知行合一。<br>六、太阳的光芒一般，不偏不倚，包容万物；人的德行应该像太阳的光芒一般，不拘泥于一角，放眼整体，包容万物。<br>成难于其易，为大于其细，众人熙熙攘攘，圣人浑朴相安，应顺从自然之道。人们之间的争辩这是这样。<br>七、跳出五行去看，自己到底是庄周还是蝴蝶。# 齐物论</p>
<p> 精神平等：</p>
<p>一、丧我、三籁<br>二、百家争鸣中，人们的争执现状。<br>三、破除成见的方法：空明之心  。<br>凡事皆有两面，正反、是非、大小，但若是一昧用这些概念去对待事情，那么人们的争论就无始无终，没有穷尽了。不如以空明之心，去观照事物的实况。<br>四、事物的本质或许是相同的，但若是想搞判断一个事物，则需要找出与其有差异的另一个事物，二者进行对比， 才能更好地搞清楚二者的差别。<br>已而不知其然，谓之道。是以圣人和之以是非而休乎天钧,是之谓两行。<br>滑疑之耀，圣人之所图也。<br>五、不要执着于绝对性，要注意绝对性与相对性的统一。<br>不要执着于对立，要在对立与统一中把握事物。<br>轻言辩而重体悟，探究道中潜藏的光明，做到知行合一。<br>六、太阳的光芒一般，不偏不倚，包容万物；人的德行应该像太阳的光芒一般，不拘泥于一角，放眼整体，包容万物。<br>成难于其易，为大于其细，众人熙熙攘攘，圣人浑朴相安，应顺从自然之道。人们之间的争辩这是这样。<br>七、跳出五行去看，自己到底是庄周还是蝴蝶。物论</p>
<p> 精神平等：</p>
<p>一、丧我、三籁<br>二、百家争鸣中，人们的争执现状。<br>三、破除成见的方法：空明之心  。<br>凡事皆有两面，正反、是非、大小，但若是一昧用这些概念去对待事情，那么人们的争论就无始无终，没有穷尽了。不如以空明之心，去观照事物的实况。<br>四、事物的本质或许是相同的，但若是想搞判断一个事物，则需要找出与其有差异的另一个事物，二者进行对比， 才能更好地搞清楚二者的差别。<br>已而不知其然，谓之道。是以圣人和之以是非而休乎天钧,是之谓两行。<br>滑疑之耀，圣人之所图也。<br>五、不要执着于绝对性，要注意绝对性与相对性的统一。<br>不要执着于对立，要在对立与统一中把握事物。<br>轻言辩而重体悟，探究道中潜藏的光明，做到知行合一。<br>六、太阳的光芒一般，不偏不倚，包容万物；人的德行应该像太阳的光芒一般，不拘泥于一角，放眼整体，包容万物。<br>成难于其易，为大于其细，众人熙熙攘攘，圣人浑朴相安，应顺从自然之道。人们之间的争辩这是这样。<br>七、跳出五行去看，自己到底是庄周还是蝴蝶。</p>
]]></content>
      <categories>
        <category>庄子</category>
      </categories>
  </entry>
  <entry>
    <title>AOP七大术语</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/AOP%E4%B8%83%E5%A4%A7%E6%9C%AF%E8%AF%AD/</url>
    <content><![CDATA[<h1 id="AOP七大术语"><a href="#AOP七大术语" class="headerlink" title="AOP七大术语"></a>AOP七大术语</h1><p><img src="/./../../TyporaImage/Spring/image-20240918213641038.png" alt="image-20240918213641038"></p>
<h2 id="1-切面（Aspect）"><a href="#1-切面（Aspect）" class="headerlink" title="1.切面（Aspect）"></a>1.切面（Aspect）</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>切面是模块化的横切关注点。它将与业务逻辑无关的功能集中在一个独立的模块中，比如日志记录、事务管理等。</p>
<p>也就是切点+通知。</p>
<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>切面定义了横切关注点如何应用于程序的不同部分。</p>
<h2 id="2-连接点（Join-Point）"><a href="#2-连接点（Join-Point）" class="headerlink" title="2.连接点（Join Point）"></a>2.连接点（Join Point）</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>连接点是程序中可以插入切面的特定点。通常，方法的调用、对象的初始化等都可以作为连接点。</p>
<h3 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h3><p>连接点是潜在的切入位置，AOP 通过连接点识别程序中的横切点。</p>
<h2 id="3-切点（Pointcut）"><a href="#3-切点（Pointcut）" class="headerlink" title="3.切点（Pointcut）"></a>3.切点（Pointcut）</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>切点定义了在哪些连接点上应用切面。它通过匹配规则，筛选出适合应用横切关注点的连接点。</p>
<h3 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h3><p>切点决定了切面在哪些地方生效，类似于过滤器的功能。</p>
<h2 id="4-通知（Advice）"><a href="#4-通知（Advice）" class="headerlink" title="4.通知（Advice）"></a>4.通知（Advice）</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>通知是在连接点处执行的具体动作，它定义了切面逻辑。常见的通知类型有“前置通知”、“后置通知”和“异常通知”等。</p>
<h3 id="作用-3"><a href="#作用-3" class="headerlink" title="作用"></a>作用</h3><p>通知实现了横切关注点的具体逻辑，在特定条件下触发执行。</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918213432748.png" alt="image-20240918213432748"></p>
<h2 id="5-织入（Weaving）"><a href="#5-织入（Weaving）" class="headerlink" title="5.织入（Weaving）"></a>5.织入（Weaving）</h2><h3 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h3><p>织入是将切面代码与目标业务逻辑代码组合在一起的过程。织入可以发生在编译时、类加载时或运行时。</p>
<h3 id="作用-4"><a href="#作用-4" class="headerlink" title="作用"></a>作用</h3><p>通过织入，横切关注点可以在不修改业务代码的情况下被应用到系统中。</p>
<h2 id="6-目标对象（Target-Object）"><a href="#6-目标对象（Target-Object）" class="headerlink" title="6.目标对象（Target Object）"></a>6.目标对象（Target Object）</h2><h3 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h3><p>目标对象是包含实际业务逻辑的对象，代表系统中要执行的核心功能模块。例如，处理订单的服务对象就是一个目标对象。</p>
<h3 id="作用-5"><a href="#作用-5" class="headerlink" title="作用"></a>作用</h3><p>目标对象执行具体的业务逻辑，但并不包含横切关注点相关的代码，如日志记录、事务管理等。</p>
<h2 id="7-代理对象（Proxy-Object）"><a href="#7-代理对象（Proxy-Object）" class="headerlink" title="7.代理对象（Proxy Object）"></a>7.代理对象（Proxy Object）</h2><h3 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h3><p>代理对象是对目标对象的一种包装，通过代理对象来控制对目标对象方法的调用。代理对象能够在调用目标对象方法前后插入横切逻辑（如日志、权限验证）。</p>
<h3 id="作用-6"><a href="#作用-6" class="headerlink" title="作用"></a>作用</h3><p>代理对象在不修改目标对象的情况下，添加了横切逻辑的功能，从而实现 AOP 的织入。术语</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918213641038.png" alt="image-20240918213641038"></p>
<h2 id="1-切面（Aspect）-1"><a href="#1-切面（Aspect）-1" class="headerlink" title="1.切面（Aspect）"></a>1.切面（Aspect）</h2><h3 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h3><p>切面是模块化的横切关注点。它将与业务逻辑无关的功能集中在一个独立的模块中，比如日志记录、事务管理等。</p>
<p>也就是切点+通知。</p>
<h3 id="作用-7"><a href="#作用-7" class="headerlink" title="作用"></a>作用</h3><p>切面定义了横切关注点如何应用于程序的不同部分。</p>
<h2 id="2-连接点（Join-Point）-1"><a href="#2-连接点（Join-Point）-1" class="headerlink" title="2.连接点（Join Point）"></a>2.连接点（Join Point）</h2><h3 id="定义-8"><a href="#定义-8" class="headerlink" title="定义"></a>定义</h3><p>连接点是程序中可以插入切面的特定点。通常，方法的调用、对象的初始化等都可以作为连接点。</p>
<h3 id="作用-8"><a href="#作用-8" class="headerlink" title="作用"></a>作用</h3><p>连接点是潜在的切入位置，AOP 通过连接点识别程序中的横切点。</p>
<h2 id="3-切点（Pointcut）-1"><a href="#3-切点（Pointcut）-1" class="headerlink" title="3.切点（Pointcut）"></a>3.切点（Pointcut）</h2><h3 id="定义-9"><a href="#定义-9" class="headerlink" title="定义"></a>定义</h3><p>切点定义了在哪些连接点上应用切面。它通过匹配规则，筛选出适合应用横切关注点的连接点。</p>
<h3 id="作用-9"><a href="#作用-9" class="headerlink" title="作用"></a>作用</h3><p>切点决定了切面在哪些地方生效，类似于过滤器的功能。</p>
<h2 id="4-通知（Advice）-1"><a href="#4-通知（Advice）-1" class="headerlink" title="4.通知（Advice）"></a>4.通知（Advice）</h2><h3 id="定义-10"><a href="#定义-10" class="headerlink" title="定义"></a>定义</h3><p>通知是在连接点处执行的具体动作，它定义了切面逻辑。常见的通知类型有“前置通知”、“后置通知”和“异常通知”等。</p>
<h3 id="作用-10"><a href="#作用-10" class="headerlink" title="作用"></a>作用</h3><p>通知实现了横切关注点的具体逻辑，在特定条件下触发执行。</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918213432748.png" alt="image-20240918213432748"></p>
<h2 id="5-织入（Weaving）-1"><a href="#5-织入（Weaving）-1" class="headerlink" title="5.织入（Weaving）"></a>5.织入（Weaving）</h2><h3 id="定义-11"><a href="#定义-11" class="headerlink" title="定义"></a>定义</h3><p>织入是将切面代码与目标业务逻辑代码组合在一起的过程。织入可以发生在编译时、类加载时或运行时。</p>
<h3 id="作用-11"><a href="#作用-11" class="headerlink" title="作用"></a>作用</h3><p>通过织入，横切关注点可以在不修改业务代码的情况下被应用到系统中。</p>
<h2 id="6-目标对象（Target-Object）-1"><a href="#6-目标对象（Target-Object）-1" class="headerlink" title="6.目标对象（Target Object）"></a>6.目标对象（Target Object）</h2><h3 id="定义-12"><a href="#定义-12" class="headerlink" title="定义"></a>定义</h3><p>目标对象是包含实际业务逻辑的对象，代表系统中要执行的核心功能模块。例如，处理订单的服务对象就是一个目标对象。</p>
<h3 id="作用-12"><a href="#作用-12" class="headerlink" title="作用"></a>作用</h3><p>目标对象执行具体的业务逻辑，但并不包含横切关注点相关的代码，如日志记录、事务管理等。</p>
<h2 id="7-代理对象（Proxy-Object）-1"><a href="#7-代理对象（Proxy-Object）-1" class="headerlink" title="7.代理对象（Proxy Object）"></a>7.代理对象（Proxy Object）</h2><h3 id="定义-13"><a href="#定义-13" class="headerlink" title="定义"></a>定义</h3><p>代理对象是对目标对象的一种包装，通过代理对象来控制对目标对象方法的调用。代理对象能够在调用目标对象方法前后插入横切逻辑（如日志、权限验证）。</p>
<h3 id="作用-13"><a href="#作用-13" class="headerlink" title="作用"></a>作用</h3><p>代理对象在不修改目标对象的情况下，添加了横切逻辑的功能，从而实现 AOP 的织入。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>AOP安全日志</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/AOP%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<h1 id="AOP安全日志"><a href="#AOP安全日志" class="headerlink" title="AOP安全日志"></a>AOP安全日志</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>AOP安全日志是指利用AOP技术，在程序执行过程中拦截安全相关的操作（如登录、权限验证、敏感操作）并记录日志，帮助监控和审计系统的安全性。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>提高系统的安全性，通过记录安全操作的日志，可以跟踪和审计用户的行为，及时发现潜在的安全威胁或违规操作。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>AOP在程序运行时通过代理机制动态拦截特定的安全操作，并在操作执行前后插入日志记录逻辑。日志内容通常包括操作的用户、时间、目标资源、操作结果等。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-编写目标对象、目标方法"><a href="#1-编写目标对象、目标方法" class="headerlink" title="1.编写目标对象、目标方法"></a>1.编写目标对象、目标方法</h3><p><img src="/./../../TyporaImage/Spring/image-20240924102943834.png" alt="image-20240924102943834"></p>
<p><img src="/./../../TyporaImage/Spring/image-20240924102958241.png" alt="image-20240924102958241"></p>
<h3 id="2-编写安全切面"><a href="#2-编写安全切面" class="headerlink" title="2.编写安全切面"></a>2.编写安全切面</h3><p><img src="/./../../TyporaImage/Spring/image-20240924103034801.png" alt="image-20240924103034801"></p>
<h3 id="3-添加注解"><a href="#3-添加注解" class="headerlink" title="3.添加注解"></a>3.添加注解</h3><p><img src="/./../../TyporaImage/Spring/image-20240924103057183.png" alt="image-20240924103057183"></p>
<p><img src="/./../../TyporaImage/Spring/image-20240924103108996.png" alt="image-20240924103108996"></p>
<p><img src="/./../../TyporaImage/Spring/image-20240924103134751.png" alt="image-20240924103134751"></p>
<h3 id="4-spring文件中配置"><a href="#4-spring文件中配置" class="headerlink" title="4.spring文件中配置"></a>4.spring文件中配置</h3><p><img src="/./../../TyporaImage/Spring/image-20240924103211635.png" alt="image-20240924103211635"></p>
<h3 id="5-测试"><a href="#5-测试" class="headerlink" title="5.测试"></a>5.测试</h3><p><img src="/./../../TyporaImage/Spring/image-20240924103233682.png" alt="image-20240924103233682">日志</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>AOP安全日志是指利用AOP技术，在程序执行过程中拦截安全相关的操作（如登录、权限验证、敏感操作）并记录日志，帮助监控和审计系统的安全性。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>提高系统的安全性，通过记录安全操作的日志，可以跟踪和审计用户的行为，及时发现潜在的安全威胁或违规操作。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>AOP在程序运行时通过代理机制动态拦截特定的安全操作，并在操作执行前后插入日志记录逻辑。日志内容通常包括操作的用户、时间、目标资源、操作结果等。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-编写目标对象、目标方法-1"><a href="#1-编写目标对象、目标方法-1" class="headerlink" title="1.编写目标对象、目标方法"></a>1.编写目标对象、目标方法</h3><p><img src="/./../../TyporaImage/Spring/image-20240924102943834.png" alt="image-20240924102943834"></p>
<p><img src="/./../../TyporaImage/Spring/image-20240924102958241.png" alt="image-20240924102958241"></p>
<h3 id="2-编写安全切面-1"><a href="#2-编写安全切面-1" class="headerlink" title="2.编写安全切面"></a>2.编写安全切面</h3><p><img src="/./../../TyporaImage/Spring/image-20240924103034801.png" alt="image-20240924103034801"></p>
<h3 id="3-添加注解-1"><a href="#3-添加注解-1" class="headerlink" title="3.添加注解"></a>3.添加注解</h3><p><img src="/./../../TyporaImage/Spring/image-20240924103057183.png" alt="image-20240924103057183"></p>
<p><img src="/./../../TyporaImage/Spring/image-20240924103108996.png" alt="image-20240924103108996"></p>
<p><img src="/./../../TyporaImage/Spring/image-20240924103134751.png" alt="image-20240924103134751"></p>
<h3 id="4-spring文件中配置-1"><a href="#4-spring文件中配置-1" class="headerlink" title="4.spring文件中配置"></a>4.spring文件中配置</h3><p><img src="/./../../TyporaImage/Spring/image-20240924103211635.png" alt="image-20240924103211635"></p>
<h3 id="5-测试-1"><a href="#5-测试-1" class="headerlink" title="5.测试"></a>5.测试</h3><p><img src="/./../../TyporaImage/Spring/image-20240924103233682.png" alt="image-20240924103233682"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>AOP实现-基于XML方式</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/AOP%E5%AE%9E%E7%8E%B0-%E5%9F%BA%E4%BA%8EXML%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="全部基于XML文件的开发"><a href="#全部基于XML文件的开发" class="headerlink" title="全部基于XML文件的开发"></a>全部基于XML文件的开发</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-在pom文件中引入依赖"><a href="#1-在pom文件中引入依赖" class="headerlink" title="1.在pom文件中引入依赖"></a>1.在pom文件中引入依赖</h3><h3 id="2-编写需要的类"><a href="#2-编写需要的类" class="headerlink" title="2.编写需要的类"></a>2.编写需要的类</h3><h3 id="3-在spring-xml文件中。"><a href="#3-在spring-xml文件中。" class="headerlink" title="3.在spring.xml文件中。"></a>3.在spring.xml文件中。</h3><h4 id="①将编写的类全部纳入springIOC管理"><a href="#①将编写的类全部纳入springIOC管理" class="headerlink" title="①将编写的类全部纳入springIOC管理"></a>①将编写的类全部纳入springIOC管理</h4><p><img src="/./../../TyporaImage/Spring/image-20240920172649549.png" alt="image-20240920172649549"></p>
<h4 id="②配置AOP"><a href="#②配置AOP" class="headerlink" title="②配置AOP"></a>②配置AOP</h4><p><img src="/./../../TyporaImage/Spring/image-20240920172806170.png" alt="image-20240920172806170"></p>
<p>开发</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-在pom文件中引入依赖-1"><a href="#1-在pom文件中引入依赖-1" class="headerlink" title="1.在pom文件中引入依赖"></a>1.在pom文件中引入依赖</h3><h3 id="2-编写需要的类-1"><a href="#2-编写需要的类-1" class="headerlink" title="2.编写需要的类"></a>2.编写需要的类</h3><h3 id="3-在spring-xml文件中。-1"><a href="#3-在spring-xml文件中。-1" class="headerlink" title="3.在spring.xml文件中。"></a>3.在spring.xml文件中。</h3><h4 id="①将编写的类全部纳入springIOC管理-1"><a href="#①将编写的类全部纳入springIOC管理-1" class="headerlink" title="①将编写的类全部纳入springIOC管理"></a>①将编写的类全部纳入springIOC管理</h4><p><img src="/./../../TyporaImage/Spring/image-20240920172649549.png" alt="image-20240920172649549"></p>
<h4 id="②配置AOP-1"><a href="#②配置AOP-1" class="headerlink" title="②配置AOP"></a>②配置AOP</h4><p><img src="/./../../TyporaImage/Spring/image-20240920172806170.png" alt="image-20240920172806170"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>AOP的使用-基于注解</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/AOP%E7%9A%84%E4%BD%BF%E7%94%A8-%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="AOP的使用"><a href="#AOP的使用" class="headerlink" title="AOP的使用"></a>AOP的使用</h1><h2 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h2><h3 id="1-引入依赖"><a href="#1-引入依赖" class="headerlink" title="1.引入依赖"></a>1.引入依赖</h3><p><img src="/./../../TyporaImage/Spring/image-20240919211411256.png" alt="image-20240919211411256"></p>
<h3 id="2-配置spring的xml文件。"><a href="#2-配置spring的xml文件。" class="headerlink" title="2.配置spring的xml文件。"></a>2.配置spring的xml文件。</h3><p><img src="/./../../TyporaImage/Spring/image-20240919211444201.png" alt="image-20240919211444201"></p>
<h2 id="二、正式使用"><a href="#二、正式使用" class="headerlink" title="二、正式使用"></a>二、正式使用</h2><h3 id="1-编写目标类与目标方法。纳入spring容器管理"><a href="#1-编写目标类与目标方法。纳入spring容器管理" class="headerlink" title="1.编写目标类与目标方法。纳入spring容器管理"></a>1.编写目标类与目标方法。纳入spring容器管理</h3><h3 id="2-编写切面。纳入spring容器管理"><a href="#2-编写切面。纳入spring容器管理" class="headerlink" title="2.编写切面。纳入spring容器管理"></a>2.编写切面。纳入spring容器管理</h3><h3 id="3-spring-xml文件，添加组件扫描的代码。"><a href="#3-spring-xml文件，添加组件扫描的代码。" class="headerlink" title="3.spring.xml文件，添加组件扫描的代码。"></a>3.spring.xml文件，添加组件扫描的代码。</h3><h3 id="4-在切面中，编写通知（即增强代码），再添加通知注解用来标识切点。-记得标识切面类-。"><a href="#4-在切面中，编写通知（即增强代码），再添加通知注解用来标识切点。-记得标识切面类-。" class="headerlink" title="4.在切面中，编写通知（即增强代码），再添加通知注解用来标识切点。 记得标识切面类  。"></a>4.在切面中，编写通知（即增强代码），再添加通知注解用来标识切点。 记得标识切面类  。</h3><p><img src="/./../../TyporaImage/Spring/image-20240919212909556.png" alt="image-20240919212909556"></p>
<h3 id="5-spring-xml文件中，添加开启自动代理的配置。"><a href="#5-spring-xml文件中，添加开启自动代理的配置。" class="headerlink" title="5.spring.xml文件中，添加开启自动代理的配置。"></a>5.spring.xml文件中，添加开启自动代理的配置。</h3><p><img src="/./../../TyporaImage/Spring/image-20240919213012991.png" alt="image-20240919213012991"></p>
<h3 id="6-客户端编写程序，开始运行。"><a href="#6-客户端编写程序，开始运行。" class="headerlink" title="6.客户端编写程序，开始运行。"></a>6.客户端编写程序，开始运行。</h3><p>使用</p>
<h2 id="一、准备-1"><a href="#一、准备-1" class="headerlink" title="一、准备"></a>一、准备</h2><h3 id="1-引入依赖-1"><a href="#1-引入依赖-1" class="headerlink" title="1.引入依赖"></a>1.引入依赖</h3><p><img src="/./../../TyporaImage/Spring/image-20240919211411256.png" alt="image-20240919211411256"></p>
<h3 id="2-配置spring的xml文件。-1"><a href="#2-配置spring的xml文件。-1" class="headerlink" title="2.配置spring的xml文件。"></a>2.配置spring的xml文件。</h3><p><img src="/./../../TyporaImage/Spring/image-20240919211444201.png" alt="image-20240919211444201"></p>
<h2 id="二、正式使用-1"><a href="#二、正式使用-1" class="headerlink" title="二、正式使用"></a>二、正式使用</h2><h3 id="1-编写目标类与目标方法。纳入spring容器管理-1"><a href="#1-编写目标类与目标方法。纳入spring容器管理-1" class="headerlink" title="1.编写目标类与目标方法。纳入spring容器管理"></a>1.编写目标类与目标方法。纳入spring容器管理</h3><h3 id="2-编写切面。纳入spring容器管理-1"><a href="#2-编写切面。纳入spring容器管理-1" class="headerlink" title="2.编写切面。纳入spring容器管理"></a>2.编写切面。纳入spring容器管理</h3><h3 id="3-spring-xml文件，添加组件扫描的代码。-1"><a href="#3-spring-xml文件，添加组件扫描的代码。-1" class="headerlink" title="3.spring.xml文件，添加组件扫描的代码。"></a>3.spring.xml文件，添加组件扫描的代码。</h3><h3 id="4-在切面中，编写通知（即增强代码），再添加通知注解用来标识切点。-记得标识切面类-。-1"><a href="#4-在切面中，编写通知（即增强代码），再添加通知注解用来标识切点。-记得标识切面类-。-1" class="headerlink" title="4.在切面中，编写通知（即增强代码），再添加通知注解用来标识切点。 记得标识切面类  。"></a>4.在切面中，编写通知（即增强代码），再添加通知注解用来标识切点。 记得标识切面类  。</h3><p><img src="/./../../TyporaImage/Spring/image-20240919212909556.png" alt="image-20240919212909556"></p>
<h3 id="5-spring-xml文件中，添加开启自动代理的配置。-1"><a href="#5-spring-xml文件中，添加开启自动代理的配置。-1" class="headerlink" title="5.spring.xml文件中，添加开启自动代理的配置。"></a>5.spring.xml文件中，添加开启自动代理的配置。</h3><p><img src="/./../../TyporaImage/Spring/image-20240919213012991.png" alt="image-20240919213012991"></p>
<h3 id="6-客户端编写程序，开始运行。-1"><a href="#6-客户端编写程序，开始运行。-1" class="headerlink" title="6.客户端编写程序，开始运行。"></a>6.客户端编写程序，开始运行。</h3>]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>AOP概念</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/AOP%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h1 id="AOP概念（面向切面编程，Aspect-Oriented-Programming）"><a href="#AOP概念（面向切面编程，Aspect-Oriented-Programming）" class="headerlink" title="AOP概念（面向切面编程，Aspect-Oriented Programming）"></a>AOP概念（面向切面编程，Aspect-Oriented Programming）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>AOP 是一种编程范式，通过将跨越多个模块的关注点（如日志、事务处理、安全）分离出来，简化代码的维护和管理。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.切面（Aspect）：定义横切关注点的模块。<br>2.连接点（Join Point）：程序执行中的特定点，可以插入切面逻辑。<br>3.通知（Advice）：在连接点处执行的具体逻辑，包括前置通知、后置通知、环绕通知等。<br>4.切入点（Pointcut）：定义连接点的表达式，用于指定哪些连接点需要通知的逻辑。<br>5.目标对象（Target Object）：被切面织入的对象。<br>6.织入（Weaving）：将切面逻辑与目标对象的代码结合的过程。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.切面 → 通知 → 连接点 → 目标对象<br>2.切入点 → 连接点</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-前置通知（Before-Advice）"><a href="#1-前置通知（Before-Advice）" class="headerlink" title="1.前置通知（Before Advice）"></a>1.前置通知（Before Advice）</h3><p>在目标方法执行前执行。</p>
<h3 id="2-后置通知（After-Advice）"><a href="#2-后置通知（After-Advice）" class="headerlink" title="2.后置通知（After Advice）"></a>2.后置通知（After Advice）</h3><p>在目标方法执行后执行。</p>
<h3 id="3-环绕通知（Around-Advice）"><a href="#3-环绕通知（Around-Advice）" class="headerlink" title="3.环绕通知（Around Advice）"></a>3.环绕通知（Around Advice）</h3><p>在目标方法执行前后都可以执行。</p>
<h3 id="4-异常通知（After-Throwing-Advice）"><a href="#4-异常通知（After-Throwing-Advice）" class="headerlink" title="4.异常通知（After Throwing Advice）"></a>4.异常通知（After Throwing Advice）</h3><p>在目标方法抛出异常时执行。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>提高代码的模块化：将横切关注点与核心业务逻辑分开。<br>增强代码的可维护性：便于修改和扩展跨模块功能。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>AOP 通过在运行时动态地将切面逻辑插入到目标代码中来实现。g）</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>AOP 是一种编程范式，通过将跨越多个模块的关注点（如日志、事务处理、安全）分离出来，简化代码的维护和管理。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.切面（Aspect）：定义横切关注点的模块。<br>2.连接点（Join Point）：程序执行中的特定点，可以插入切面逻辑。<br>3.通知（Advice）：在连接点处执行的具体逻辑，包括前置通知、后置通知、环绕通知等。<br>4.切入点（Pointcut）：定义连接点的表达式，用于指定哪些连接点需要通知的逻辑。<br>5.目标对象（Target Object）：被切面织入的对象。<br>6.织入（Weaving）：将切面逻辑与目标对象的代码结合的过程。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.切面 → 通知 → 连接点 → 目标对象<br>2.切入点 → 连接点</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-前置通知（Before-Advice）-1"><a href="#1-前置通知（Before-Advice）-1" class="headerlink" title="1.前置通知（Before Advice）"></a>1.前置通知（Before Advice）</h3><p>在目标方法执行前执行。</p>
<h3 id="2-后置通知（After-Advice）-1"><a href="#2-后置通知（After-Advice）-1" class="headerlink" title="2.后置通知（After Advice）"></a>2.后置通知（After Advice）</h3><p>在目标方法执行后执行。</p>
<h3 id="3-环绕通知（Around-Advice）-1"><a href="#3-环绕通知（Around-Advice）-1" class="headerlink" title="3.环绕通知（Around Advice）"></a>3.环绕通知（Around Advice）</h3><p>在目标方法执行前后都可以执行。</p>
<h3 id="4-异常通知（After-Throwing-Advice）-1"><a href="#4-异常通知（After-Throwing-Advice）-1" class="headerlink" title="4.异常通知（After Throwing Advice）"></a>4.异常通知（After Throwing Advice）</h3><p>在目标方法抛出异常时执行。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>提高代码的模块化：将横切关注点与核心业务逻辑分开。<br>增强代码的可维护性：便于修改和扩展跨模块功能。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>AOP 通过在运行时动态地将切面逻辑插入到目标代码中来实现。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>AOP编程式事务的使用</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/AOP%E7%BC%96%E7%A8%8B%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="AOP编程式事务的使用"><a href="#AOP编程式事务的使用" class="headerlink" title="AOP编程式事务的使用"></a>AOP编程式事务的使用</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-引入依赖和修改spring-xml文件"><a href="#1-引入依赖和修改spring-xml文件" class="headerlink" title="1.引入依赖和修改spring.xml文件"></a>1.引入依赖和修改spring.xml文件</h3><p><img src="/./../../TyporaImage/Spring/image-20240923210233117.png" alt="image-20240923210233117"></p>
<h3 id="2-编写业务类和事务类"><a href="#2-编写业务类和事务类" class="headerlink" title="2.编写业务类和事务类"></a>2.编写业务类和事务类</h3><h4 id="业务类："><a href="#业务类：" class="headerlink" title="业务类："></a>业务类：</h4><p><img src="/./../../TyporaImage/Spring/image-20240923210151783.png" alt="image-20240923210151783"></p>
<p><img src="/./../../TyporaImage/Spring/image-20240923210134511.png" alt="image-20240923210134511"></p>
<h4 id="事务："><a href="#事务：" class="headerlink" title="事务："></a>事务：</h4><p><img src="/./../../TyporaImage/Spring/image-20240923210123210.png" alt="image-20240923210123210"></p>
<h3 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h3><p><img src="/./../../TyporaImage/Spring/image-20240923210301811.png" alt="image-20240923210301811">使用</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-引入依赖和修改spring-xml文件-1"><a href="#1-引入依赖和修改spring-xml文件-1" class="headerlink" title="1.引入依赖和修改spring.xml文件"></a>1.引入依赖和修改spring.xml文件</h3><p><img src="/./../../TyporaImage/Spring/image-20240923210233117.png" alt="image-20240923210233117"></p>
<h3 id="2-编写业务类和事务类-1"><a href="#2-编写业务类和事务类-1" class="headerlink" title="2.编写业务类和事务类"></a>2.编写业务类和事务类</h3><h4 id="业务类：-1"><a href="#业务类：-1" class="headerlink" title="业务类："></a>业务类：</h4><p><img src="/./../../TyporaImage/Spring/image-20240923210151783.png" alt="image-20240923210151783"></p>
<p><img src="/./../../TyporaImage/Spring/image-20240923210134511.png" alt="image-20240923210134511"></p>
<h4 id="事务：-1"><a href="#事务：-1" class="headerlink" title="事务："></a>事务：</h4><p><img src="/./../../TyporaImage/Spring/image-20240923210123210.png" alt="image-20240923210123210"></p>
<h3 id="3-测试-1"><a href="#3-测试-1" class="headerlink" title="3.测试"></a>3.测试</h3><p><img src="/./../../TyporaImage/Spring/image-20240923210301811.png" alt="image-20240923210301811"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>AOP编程式事务解决方案</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/AOP%E7%BC%96%E7%A8%8B%E5%BC%8F%E4%BA%8B%E5%8A%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<h1 id="AOP编程式事务"><a href="#AOP编程式事务" class="headerlink" title="AOP编程式事务"></a>AOP编程式事务</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>AOP编程式事务是结合面向切面编程技术，通过切面定义事务的管理逻辑，在业务方法执行前后插入事务控制，简化事务管理与业务逻辑的耦合。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.切面（Aspect）：包含了事务管理的逻辑，比如在方法执行之前开启事务，成功后提交，异常时回滚。<br>2.切点（Pointcut）：定义在哪些业务方法上应用事务管理。<br>3.通知（Advice）：具体的事务管理逻辑，通常为前置通知（开启事务）、后置通知（提交或回滚事务）。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>通过配置或注解，定义事务切面的匹配规则（如针对某个类或方法的事务控制），将事务逻辑编织到程序的执行流中。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.基于注解的AOP事务管理（如Spring中的@Transactional注解）<br>2.基于XML配置的AOP事务管理（早期Spring中常用）</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过AOP简化事务管理，使事务逻辑和业务逻辑解耦，提升代码的可维护性、模块化程度和可复用性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>AOP在运行时拦截方法调用，动态插入事务控制代码，使事务管理在不影响业务代码的情况下自动生效。事务</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>AOP编程式事务是结合面向切面编程技术，通过切面定义事务的管理逻辑，在业务方法执行前后插入事务控制，简化事务管理与业务逻辑的耦合。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.切面（Aspect）：包含了事务管理的逻辑，比如在方法执行之前开启事务，成功后提交，异常时回滚。<br>2.切点（Pointcut）：定义在哪些业务方法上应用事务管理。<br>3.通知（Advice）：具体的事务管理逻辑，通常为前置通知（开启事务）、后置通知（提交或回滚事务）。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>通过配置或注解，定义事务切面的匹配规则（如针对某个类或方法的事务控制），将事务逻辑编织到程序的执行流中。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.基于注解的AOP事务管理（如Spring中的@Transactional注解）<br>2.基于XML配置的AOP事务管理（早期Spring中常用）</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>通过AOP简化事务管理，使事务逻辑和业务逻辑解耦，提升代码的可维护性、模块化程度和可复用性。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>AOP在运行时拦截方法调用，动态插入事务控制代码，使事务管理在不影响业务代码的情况下自动生效。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>Bean生命周期-七步</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/Bean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F-%E4%B8%83%E6%AD%A5/</url>
    <content><![CDATA[<h1 id="Bean生命周期-七步"><a href="#Bean生命周期-七步" class="headerlink" title="Bean生命周期-七步"></a>Bean生命周期-七步</h1><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../../TyporaImage/Spring/image-20240808203331251.png" alt="image-20240808203331251"></p>
<p><img src="/../../TyporaImage/Spring/image-20240808202836591.png" alt="image-20240808202836591"></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-编写相关的类"><a href="#1-编写相关的类" class="headerlink" title="1.编写相关的类"></a>1.编写相关的类</h3><h3 id="2-设置spring配置文件"><a href="#2-设置spring配置文件" class="headerlink" title="2.设置spring配置文件"></a>2.设置spring配置文件</h3><h3 id="七步"><a href="#七步" class="headerlink" title="七步"></a><img src="/../../TyporaImage/Spring/image-20240808203106645.png" alt="image-20240808203106645">七步</h3><h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../../TyporaImage/Spring/image-20240808203331251.png" alt="image-20240808203331251"></p>
<p><img src="/../../TyporaImage/Spring/image-20240808202836591.png" alt="image-20240808202836591"></p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-编写相关的类-1"><a href="#1-编写相关的类-1" class="headerlink" title="1.编写相关的类"></a>1.编写相关的类</h3><h3 id="2-设置spring配置文件-1"><a href="#2-设置spring配置文件-1" class="headerlink" title="2.设置spring配置文件"></a>2.设置spring配置文件</h3><h3 id=""><a href="#" class="headerlink" title=""></a><img src="/../../TyporaImage/Spring/image-20240808203106645.png" alt="image-20240808203106645"></h3>]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>Bean生命周期-五步</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/Bean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F-%E4%BA%94%E6%AD%A5/</url>
    <content><![CDATA[<h1 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Bean生命周期指的是在Spring框架中，一个Bean从创建到销毁的整个过程，包含了Bean的实例化、属性注入、初始化、以及销毁等多个步骤。Spring提供了一套机制和钩子方法来控制和管理Bean的整个生命周期。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-实例化（Instantiation）"><a href="#1-实例化（Instantiation）" class="headerlink" title="1.实例化（Instantiation）"></a>1.实例化（Instantiation）</h3><p>Spring容器根据Bean的定义（通常在XML配置文件或注解中定义）创建一个Bean的实例。</p>
<h3 id="2-属性注入（Dependency-Injection）"><a href="#2-属性注入（Dependency-Injection）" class="headerlink" title="2.属性注入（Dependency Injection）"></a>2.属性注入（Dependency Injection）</h3><p>在实例化后，Spring容器会根据配置为Bean注入所需的依赖（通过构造函数、setter方法、或注解等）。</p>
<h3 id="3-初始化（Initialization）"><a href="#3-初始化（Initialization）" class="headerlink" title="3.初始化（Initialization）"></a>3.初始化（Initialization）</h3><p>在依赖注入完成后，Spring容器会调用任何配置的初始化方法，允许Bean在正式使用前进行一些自定义初始化操作。</p>
<h3 id="4-使用（Usage）"><a href="#4-使用（Usage）" class="headerlink" title="4.使用（Usage）"></a>4.使用（Usage）</h3><p>Bean被Spring容器管理并且可以被应用程序使用。</p>
<h3 id="5-销毁（Destruction）"><a href="#5-销毁（Destruction）" class="headerlink" title="5.销毁（Destruction）"></a>5.销毁（Destruction）</h3><p>当Bean的作用域结束或Spring容器关闭时，容器会调用Bean的销毁方法，释放资源并进行清理。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../../TyporaImage/Spring/image-20240808170238090.png" alt="image-20240808170238090"></p>
<p>Bean的生命周期可以通过实现特定的接口或配置特定的方法来控制：</p>
<h3 id="1-InitializingBean接口"><a href="#1-InitializingBean接口" class="headerlink" title="1.InitializingBean接口"></a>1.InitializingBean接口</h3><p>提供了afterPropertiesSet()方法，用于自定义初始化逻辑。</p>
<h3 id="2-DisposableBean接口"><a href="#2-DisposableBean接口" class="headerlink" title="2.DisposableBean接口"></a>2.DisposableBean接口</h3><p>提供了destroy()方法，用于自定义销毁逻辑。</p>
<h3 id="3-注解-PostConstruct和-PreDestroy"><a href="#3-注解-PostConstruct和-PreDestroy" class="headerlink" title="3.注解@PostConstruct和@PreDestroy"></a>3.注解@PostConstruct和@PreDestroy</h3><p>分别用于定义初始化和销毁方法。</p>
<h3 id="4-XML配置或-Bean注解的initMethod和destroyMethod属性"><a href="#4-XML配置或-Bean注解的initMethod和destroyMethod属性" class="headerlink" title="4.XML配置或@Bean注解的initMethod和destroyMethod属性"></a>4.XML配置或@Bean注解的initMethod和destroyMethod属性</h3><p>可以配置初始化和销毁方法。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>Bean生命周期管理的主要目的是让开发者能够精确控制Bean的创建、初始化、使用以及销毁过程，从而确保Bean能够正确地初始化资源，并在不再需要时释放资源，避免内存泄漏或资源浪费。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>Spring通过依赖注入（Dependency Injection）和AOP（Aspect-Oriented Programming）来管理Bean的生命周期。Spring容器根据Bean的配置信息，在适当的时机调用对应的生命周期方法。这一过程通常包括以下几个步骤：</p>
<p>1.实例化：使用反射机制创建Bean实例。<br>2.依赖注入：通过构造函数、setter方法或注解注入依赖。<br>3.初始化：在依赖注入完成后调用自定义的初始化方法。<br>4.销毁：容器关闭时调用自定义的销毁方法。周期</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Bean生命周期指的是在Spring框架中，一个Bean从创建到销毁的整个过程，包含了Bean的实例化、属性注入、初始化、以及销毁等多个步骤。Spring提供了一套机制和钩子方法来控制和管理Bean的整个生命周期。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-实例化（Instantiation）-1"><a href="#1-实例化（Instantiation）-1" class="headerlink" title="1.实例化（Instantiation）"></a>1.实例化（Instantiation）</h3><p>Spring容器根据Bean的定义（通常在XML配置文件或注解中定义）创建一个Bean的实例。</p>
<h3 id="2-属性注入（Dependency-Injection）-1"><a href="#2-属性注入（Dependency-Injection）-1" class="headerlink" title="2.属性注入（Dependency Injection）"></a>2.属性注入（Dependency Injection）</h3><p>在实例化后，Spring容器会根据配置为Bean注入所需的依赖（通过构造函数、setter方法、或注解等）。</p>
<h3 id="3-初始化（Initialization）-1"><a href="#3-初始化（Initialization）-1" class="headerlink" title="3.初始化（Initialization）"></a>3.初始化（Initialization）</h3><p>在依赖注入完成后，Spring容器会调用任何配置的初始化方法，允许Bean在正式使用前进行一些自定义初始化操作。</p>
<h3 id="4-使用（Usage）-1"><a href="#4-使用（Usage）-1" class="headerlink" title="4.使用（Usage）"></a>4.使用（Usage）</h3><p>Bean被Spring容器管理并且可以被应用程序使用。</p>
<h3 id="5-销毁（Destruction）-1"><a href="#5-销毁（Destruction）-1" class="headerlink" title="5.销毁（Destruction）"></a>5.销毁（Destruction）</h3><p>当Bean的作用域结束或Spring容器关闭时，容器会调用Bean的销毁方法，释放资源并进行清理。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../../TyporaImage/Spring/image-20240808170238090.png" alt="image-20240808170238090"></p>
<p>Bean的生命周期可以通过实现特定的接口或配置特定的方法来控制：</p>
<h3 id="1-InitializingBean接口-1"><a href="#1-InitializingBean接口-1" class="headerlink" title="1.InitializingBean接口"></a>1.InitializingBean接口</h3><p>提供了afterPropertiesSet()方法，用于自定义初始化逻辑。</p>
<h3 id="2-DisposableBean接口-1"><a href="#2-DisposableBean接口-1" class="headerlink" title="2.DisposableBean接口"></a>2.DisposableBean接口</h3><p>提供了destroy()方法，用于自定义销毁逻辑。</p>
<h3 id="3-注解-PostConstruct和-PreDestroy-1"><a href="#3-注解-PostConstruct和-PreDestroy-1" class="headerlink" title="3.注解@PostConstruct和@PreDestroy"></a>3.注解@PostConstruct和@PreDestroy</h3><p>分别用于定义初始化和销毁方法。</p>
<h3 id="4-XML配置或-Bean注解的initMethod和destroyMethod属性-1"><a href="#4-XML配置或-Bean注解的initMethod和destroyMethod属性-1" class="headerlink" title="4.XML配置或@Bean注解的initMethod和destroyMethod属性"></a>4.XML配置或@Bean注解的initMethod和destroyMethod属性</h3><p>可以配置初始化和销毁方法。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>Bean生命周期管理的主要目的是让开发者能够精确控制Bean的创建、初始化、使用以及销毁过程，从而确保Bean能够正确地初始化资源，并在不再需要时释放资源，避免内存泄漏或资源浪费。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>Spring通过依赖注入（Dependency Injection）和AOP（Aspect-Oriented Programming）来管理Bean的生命周期。Spring容器根据Bean的配置信息，在适当的时机调用对应的生命周期方法。这一过程通常包括以下几个步骤：</p>
<p>1.实例化：使用反射机制创建Bean实例。<br>2.依赖注入：通过构造函数、setter方法或注解注入依赖。<br>3.初始化：在依赖注入完成后调用自定义的初始化方法。<br>4.销毁：容器关闭时调用自定义的销毁方法。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>Bean生命周期-十步</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/Bean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F-%E5%8D%81%E6%AD%A5/</url>
    <content><![CDATA[<h1 id="Bean生命周期-十步"><a href="#Bean生命周期-十步" class="headerlink" title="Bean生命周期-十步"></a>Bean生命周期-十步</h1><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../../TyporaImage/Spring/image-20240808203636263.png" alt="image-20240808203636263"></p>
<h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p>1.实现相关接口，编写其方法</p>
<p>2.运行即可</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p><img src="/../../TyporaImage/Spring/image-20240808203544632.png" alt="image-20240808203544632"></p>
<h3 id="2-与作用域的关系"><a href="#2-与作用域的关系" class="headerlink" title="2.与作用域的关系"></a>2.与作用域的关系</h3><p>除了单例模式，其他只负责8步。</p>
<p><img src="/../../TyporaImage/Spring/image-20240808205945811.png" alt="image-20240808205945811">十步</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../../TyporaImage/Spring/image-20240808203636263.png" alt="image-20240808203636263"></p>
<h2 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h2><p>1.实现相关接口，编写其方法</p>
<p>2.运行即可</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1."></a>1.</h3><p><img src="/../../TyporaImage/Spring/image-20240808203544632.png" alt="image-20240808203544632"></p>
<h3 id="2-与作用域的关系-1"><a href="#2-与作用域的关系-1" class="headerlink" title="2.与作用域的关系"></a>2.与作用域的关系</h3><p>除了单例模式，其他只负责8步。</p>
<p><img src="/../../TyporaImage/Spring/image-20240808205945811.png" alt="image-20240808205945811"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/</url>
    <content><![CDATA[<h1 id="Bean的作用域"><a href="#Bean的作用域" class="headerlink" title="Bean的作用域"></a>Bean的作用域</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>在Spring框架中，Bean的作用域（Scope）定义了Bean的生命周期和可见性。作用域决定了一个Bean实例在Spring容器中的存在时间，以及每次请求该Bean时是否返回相同的实例。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-单例（Singleton）"><a href="#1-单例（Singleton）" class="headerlink" title="1.单例（Singleton）"></a>1.单例（Singleton）</h3><p>Spring容器中仅创建一个Bean实例，并在整个应用程序生命周期内共享这个实例。</p>
<h3 id="2-原型（Prototype）"><a href="#2-原型（Prototype）" class="headerlink" title="2.原型（Prototype）"></a>2.原型（Prototype）</h3><p>每次请求时创建一个新的Bean实例。</p>
<h3 id="3-请求（Request）"><a href="#3-请求（Request）" class="headerlink" title="3.请求（Request）"></a>3.请求（Request）</h3><p>在Web应用中，每个HTTP请求创建一个Bean实例，并在请求结束后销毁。</p>
<h3 id="4-会话（Session）"><a href="#4-会话（Session）" class="headerlink" title="4.会话（Session）"></a>4.会话（Session）</h3><p>在Web应用中，每个HTTP会话创建一个Bean实例，并在会话结束后销毁。</p>
<h3 id="5-应用程序（Application）"><a href="#5-应用程序（Application）" class="headerlink" title="5.应用程序（Application）"></a>5.应用程序（Application）</h3><p>在Web应用中，整个ServletContext范围内共享一个Bean实例。</p>
<h3 id="6-WebSocket"><a href="#6-WebSocket" class="headerlink" title="6.WebSocket"></a>6.WebSocket</h3><p>在WebSocket会话中共享一个Bean实例。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>通过注解或XML配置指定Bean的作用域。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.单例作用域：@Scope(“singleton”)或默认值。<br>2.原型作用域：@Scope(“prototype”)。<br>3.Web作用域：@Scope(“request”)、@Scope(“session”)、@Scope(“application”)、@Scope(“websocket”)。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过定义Bean的作用域，Spring框架能够有效地管理Bean的生命周期和作用范围，以满足不同应用场景的需求。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过配置Bean的作用域，Spring IoC容器在创建和管理Bean实例时遵循相应的作用域规则。例如，Singleton作用域意味着容器中只有一个共享实例，而Prototype作用域则意味着每次请求都会创建一个新的实例。</p>
]]></content>
  </entry>
  <entry>
    <title>Bean的实例化</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/Bean%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96/</url>
    <content><![CDATA[<h1 id="Bean的实例化"><a href="#Bean的实例化" class="headerlink" title="Bean的实例化"></a>Bean的实例化</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.通过构造方法</p>
<p>2.通过简单工厂模式</p>
<p>3.通过factory-bean实例化</p>
<p>4.通过FactoryBean接口实例化</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-通过构造方法"><a href="#1-通过构造方法" class="headerlink" title="1.通过构造方法"></a>1.通过构造方法</h3><p>引入pom依赖，配置sprig文件。</p>
<h3 id="2-通过简单工厂模式"><a href="#2-通过简单工厂模式" class="headerlink" title="2.通过简单工厂模式"></a>2.通过简单工厂模式</h3><p>1.写好相关的工厂类</p>
<p><img src="/../../TyporaImage/Spring/image-20240808155313780.png" alt="image-20240808155313780"></p>
<p>2.在spring中配置bean</p>
<p><img src="/../../TyporaImage/Spring/image-20240808155117882.png" alt="image-20240808155117882"></p>
<h3 id="3-通过factory-bean实例化"><a href="#3-通过factory-bean实例化" class="headerlink" title="3.通过factory-bean实例化"></a>3.通过factory-bean实例化</h3><p>1.创建工厂方法模式相关代码</p>
<p>2.配置spring文件</p>
<p><img src="/../../TyporaImage/Spring/image-20240808160204154.png" alt="image-20240808160204154"></p>
<h3 id="4-通过FactoryBean接口实例化"><a href="#4-通过FactoryBean接口实例化" class="headerlink" title="4.通过FactoryBean接口实例化"></a>4.通过FactoryBean接口实例化</h3><p>其实就是第三个方式的简化版</p>
<p>1.在工厂bean类继承FactoryBean接口。</p>
<p><img src="/../../TyporaImage/Spring/image-20240808162213520.png" alt="image-20240808162213520"></p>
<p>2.配置spring文件即可</p>
<p><img src="/../../TyporaImage/Spring/image-20240808162238132.png" alt="image-20240808162238132"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><strong>BeanFactory</strong>：这是一个接口，用于管理Spring应用中的所有Bean。它是Spring IoC容器的核心，负责Bean的创建、配置、依赖注入和生命周期管理。</p>
<p><strong>FactoryBean</strong>：这是一个特殊的Bean，它用于创建其他Bean。通过实现<code>FactoryBean</code>接口，你可以自定义Bean的实例化逻辑。FactoryBean本身不是最终使用的Bean，而是用于生成和配置其他Bean的工具。<br>例化</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.通过构造方法</p>
<p>2.通过简单工厂模式</p>
<p>3.通过factory-bean实例化</p>
<p>4.通过FactoryBean接口实例化</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-通过构造方法-1"><a href="#1-通过构造方法-1" class="headerlink" title="1.通过构造方法"></a>1.通过构造方法</h3><p>引入pom依赖，配置sprig文件。</p>
<h3 id="2-通过简单工厂模式-1"><a href="#2-通过简单工厂模式-1" class="headerlink" title="2.通过简单工厂模式"></a>2.通过简单工厂模式</h3><p>1.写好相关的工厂类</p>
<p><img src="/../../TyporaImage/Spring/image-20240808155313780.png" alt="image-20240808155313780"></p>
<p>2.在spring中配置bean</p>
<p><img src="/../../TyporaImage/Spring/image-20240808155117882.png" alt="image-20240808155117882"></p>
<h3 id="3-通过factory-bean实例化-1"><a href="#3-通过factory-bean实例化-1" class="headerlink" title="3.通过factory-bean实例化"></a>3.通过factory-bean实例化</h3><p>1.创建工厂方法模式相关代码</p>
<p>2.配置spring文件</p>
<p><img src="/../../TyporaImage/Spring/image-20240808160204154.png" alt="image-20240808160204154"></p>
<h3 id="4-通过FactoryBean接口实例化-1"><a href="#4-通过FactoryBean接口实例化-1" class="headerlink" title="4.通过FactoryBean接口实例化"></a>4.通过FactoryBean接口实例化</h3><p>其实就是第三个方式的简化版</p>
<p>1.在工厂bean类继承FactoryBean接口。</p>
<p><img src="/../../TyporaImage/Spring/image-20240808162213520.png" alt="image-20240808162213520"></p>
<p>2.配置spring文件即可</p>
<p><img src="/../../TyporaImage/Spring/image-20240808162238132.png" alt="image-20240808162238132"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><strong>BeanFactory</strong>：这是一个接口，用于管理Spring应用中的所有Bean。它是Spring IoC容器的核心，负责Bean的创建、配置、依赖注入和生命周期管理。</p>
<p><strong>FactoryBean</strong>：这是一个特殊的Bean，它用于创建其他Bean。通过实现<code>FactoryBean</code>接口，你可以自定义Bean的实例化逻辑。FactoryBean本身不是最终使用的Bean，而是用于生成和配置其他Bean的工具。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>Bean的循环依赖</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/Bean%E7%9A%84%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96/</url>
    <content><![CDATA[<h1 id="Bean的循环依赖"><a href="#Bean的循环依赖" class="headerlink" title="Bean的循环依赖"></a>Bean的循环依赖</h1><p>你中有我，我中有你</p>
<h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><h3 id="1-set注入"><a href="#1-set注入" class="headerlink" title="1.set注入"></a>1.set注入</h3><p>没有问题，因为每一种类型的对象只有一个。</p>
<p><img src="/../../TyporaImage/Spring/image-20240809095418655.png" alt="image-20240809095418655"></p>
<h3 id="2-构造注入"><a href="#2-构造注入" class="headerlink" title="2.构造注入"></a>2.构造注入</h3><p>有问题，无法解决。</p>
<h2 id="多例模式"><a href="#多例模式" class="headerlink" title="多例模式"></a>多例模式</h2><h3 id="1-set注入-1"><a href="#1-set注入-1" class="headerlink" title="1.set注入"></a>1.set注入</h3><h4 id="两个Bean对象的scope都是prototype："><a href="#两个Bean对象的scope都是prototype：" class="headerlink" title="两个Bean对象的scope都是prototype："></a>两个Bean对象的scope都是prototype：</h4><p>存在问题，会出现当前的Bean创建中异常。</p>
<h4 id="一个是singleton一个是prototype："><a href="#一个是singleton一个是prototype：" class="headerlink" title="一个是singleton一个是prototype："></a>一个是singleton一个是prototype：</h4><p>没问题</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h2 id="只能解决set-singleton模式"><a href="#只能解决set-singleton模式" class="headerlink" title="只能解决set+singleton模式"></a>只能解决set+singleton模式</h2><p>基本原理</p>
<p>1.先创建Bean对象，此时属性为空</p>
<p>2.曝光Bean的工厂</p>
<p>3.从一级缓存取对象，不行就二级、三级。如果从三级取到了bean对象，会放到二级缓存。</p>
<p><img src="/../../TyporaImage/Spring/image-20240809103009200.png" alt="image-20240809103009200"></p>
<p>依赖</p>
<p>你中有我，我中有你</p>
<h2 id="单例模式-1"><a href="#单例模式-1" class="headerlink" title="单例模式"></a>单例模式</h2><h3 id="1-set注入-2"><a href="#1-set注入-2" class="headerlink" title="1.set注入"></a>1.set注入</h3><p>没有问题，因为每一种类型的对象只有一个。</p>
<p><img src="/../../TyporaImage/Spring/image-20240809095418655.png" alt="image-20240809095418655"></p>
<h3 id="2-构造注入-1"><a href="#2-构造注入-1" class="headerlink" title="2.构造注入"></a>2.构造注入</h3><p>有问题，无法解决。</p>
<h2 id="多例模式-1"><a href="#多例模式-1" class="headerlink" title="多例模式"></a>多例模式</h2><h3 id="1-set注入-3"><a href="#1-set注入-3" class="headerlink" title="1.set注入"></a>1.set注入</h3><h4 id="两个Bean对象的scope都是prototype：-1"><a href="#两个Bean对象的scope都是prototype：-1" class="headerlink" title="两个Bean对象的scope都是prototype："></a>两个Bean对象的scope都是prototype：</h4><p>存在问题，会出现当前的Bean创建中异常。</p>
<h4 id="一个是singleton一个是prototype：-1"><a href="#一个是singleton一个是prototype：-1" class="headerlink" title="一个是singleton一个是prototype："></a>一个是singleton一个是prototype：</h4><p>没问题</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h2 id="只能解决set-singleton模式-1"><a href="#只能解决set-singleton模式-1" class="headerlink" title="只能解决set+singleton模式"></a>只能解决set+singleton模式</h2><p>基本原理</p>
<p>1.先创建Bean对象，此时属性为空</p>
<p>2.曝光Bean的工厂</p>
<p>3.从一级缓存取对象，不行就二级、三级。如果从三级取到了bean对象，会放到二级缓存。</p>
<p><img src="/../../TyporaImage/Spring/image-20240809103009200.png" alt="image-20240809103009200"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>CGLIB动态代理</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/CGLIB%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h1 id="CGLIB动态代理"><a href="#CGLIB动态代理" class="headerlink" title="CGLIB动态代理"></a>CGLIB动态代理</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.创建字节码增强器对象。</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918211210960.png" alt="image-20240918211210960"></p>
<p>2.设置目标类。 </p>
<p><img src="/./../../TyporaImage/Spring/image-20240918211159753.png" alt="image-20240918211159753"></p>
<p>3.设置回调。  这部分用来设置增强代码，在CGLIB中这个部分叫MethodInterceptor。</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918211303150.png" alt="image-20240918211303150"></p>
<p>4.调用代理对象的代理方法。</p>
<p>PS：</p>
<p>JDK高于8的可能出问题，需要在在Add VM options中配置两个参数。</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918211506395.png" alt="image-20240918211506395"><br>代理</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.创建字节码增强器对象。</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918211210960.png" alt="image-20240918211210960"></p>
<p>2.设置目标类。 </p>
<p><img src="/./../../TyporaImage/Spring/image-20240918211159753.png" alt="image-20240918211159753"></p>
<p>3.设置回调。  这部分用来设置增强代码，在CGLIB中这个部分叫MethodInterceptor。</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918211303150.png" alt="image-20240918211303150"></p>
<p>4.调用代理对象的代理方法。</p>
<p>PS：</p>
<p>JDK高于8的可能出问题，需要在在Add VM options中配置两个参数。</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918211506395.png" alt="image-20240918211506395"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/GoF23%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="23种设计模式"><a href="#23种设计模式" class="headerlink" title="23种设计模式"></a>23种设计模式</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>设计模式（Design Patterns）是软件开发中面临的常见问题的可复用解决方案。这些模式是经过总结和优化的最佳实践，用于提高代码的可维护性、可重用性和可扩展性。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-模式名称"><a href="#1-模式名称" class="headerlink" title="1.模式名称"></a>1.模式名称</h3><p>设计模式的简洁名称，便于讨论和使用。</p>
<h3 id="2-问题"><a href="#2-问题" class="headerlink" title="2.问题"></a>2.问题</h3><p>设计模式解决的特定问题及其上下文。</p>
<h3 id="3-解决方案"><a href="#3-解决方案" class="headerlink" title="3.解决方案"></a>3.解决方案</h3><p>解决问题的核心设计和实现方式。</p>
<h3 id="4-效果"><a href="#4-效果" class="headerlink" title="4.效果"></a>4.效果</h3><p>应用该设计模式后的结果和优缺点。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>设计模式可以通过类图、对象图和描述文字来展示其结构和参与者之间的关系。</p>
<p>1.类图：展示类和接口及其关系。<br>2.对象图：展示对象在运行时的实例及其关系。<br>3.描述文字：详细描述模式的目的、适用范围和实现细节。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>设计模式根据其用途和适用范围分为三大类：</p>
<h3 id="创建型模式：对象的创建方式"><a href="#创建型模式：对象的创建方式" class="headerlink" title="创建型模式：对象的创建方式"></a>创建型模式：对象的创建方式</h3><p>1.单例模式（Singleton）<br>2.工厂方法模式（Factory Method）<br>3.抽象工厂模式（Abstract Factory）<br>4.建造者模式（Builder）<br>5.原型模式（Prototype）</p>
<h3 id="结构型模式：对象和类的组合"><a href="#结构型模式：对象和类的组合" class="headerlink" title="结构型模式：对象和类的组合"></a>结构型模式：对象和类的组合</h3><p>1.适配器模式（Adapter）<br>2.桥接模式（Bridge）<br>3.组合模式（Composite）<br>4.装饰器模式（Decorator）<br>5.外观模式（Facade）<br>6.享元模式（Flyweight）<br>7.代理模式（Proxy）</p>
<h3 id="行为型模式：对象之间的交互方式"><a href="#行为型模式：对象之间的交互方式" class="headerlink" title="行为型模式：对象之间的交互方式"></a>行为型模式：对象之间的交互方式</h3><p>1.责任链模式（Chain of Responsibility）<br>2.命令模式（Command）<br>3.解释器模式（Interpreter）<br>4.迭代器模式（Iterator）<br>5.中介者模式（Mediator）<br>6.备忘录模式（Memento）<br>7.观察者模式（Observer）<br>8.状态模式（State）<br>9.策略模式（Strategy）<br>10模板方法模式（Template Method）<br>11.访问者模式（Visitor）</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>设计模式的主要目的是提供经过验证的解决方案，帮助开发者在不同情境下设计出高质量的软件系统。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>设计模式通过总结软件开发中的最佳实践，提供了系统化的方法来解决特定的设计问题。它们通过描述类和对象之间的关系和交互方式，指导开发者构建灵活和高效的系统。</p>
]]></content>
  </entry>
  <entry>
    <title>GoF之代理模式</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/GoF%E4%B9%8B%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>代理模式是一种设计模式，它通过代理对象来间接地访问目标对象，通常用于提供额外的控制、性能优化、日志记录等功能。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-Subject（抽象主题类）"><a href="#1-Subject（抽象主题类）" class="headerlink" title="1.Subject（抽象主题类）"></a>1.Subject（抽象主题类）</h3><p>声明了目标对象和代理对象的共同接口，这样客户端就可以使用代理来代替目标对象。</p>
<h3 id="2-RealSubject（真实主题类）"><a href="#2-RealSubject（真实主题类）" class="headerlink" title="2.RealSubject（真实主题类）"></a>2.RealSubject（真实主题类）</h3><p>定义了代理类所代表的真实对象。</p>
<h3 id="3-Proxy（代理类）"><a href="#3-Proxy（代理类）" class="headerlink" title="3.Proxy（代理类）"></a>3.Proxy（代理类）</h3><p>持有对真实主题对象的引用，负责在需要时创建并使用真实主题对象。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>代理类和真实对象类均实现相同的接口或继承相同的抽象类，代理类将对真实对象的访问进行控制。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.远程代理（Remote Proxy）：为位于不同地址空间的对象提供本地代表。<br>2.虚代理（Virtual Proxy）：根据需要创建开销很大的对象，通过代理控制对真实对象的访问。<br>3.保护代理（Protection Proxy）：控制对原始对象的访问，主要用于对象有不同访问权限时。<br>4.智能引用（Smart Reference）：在访问对象时执行一些附加操作，例如计数、日志记录等。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>控制访问真实对象或在访问前后增加额外的操作。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过在真实对象前增加一层代理对象，将直接访问真实对象的行为封装起来，以便可以在访问行为中添加额外的操作。模式</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>代理模式是一种设计模式，它通过代理对象来间接地访问目标对象，通常用于提供额外的控制、性能优化、日志记录等功能。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-Subject（抽象主题类）-1"><a href="#1-Subject（抽象主题类）-1" class="headerlink" title="1.Subject（抽象主题类）"></a>1.Subject（抽象主题类）</h3><p>声明了目标对象和代理对象的共同接口，这样客户端就可以使用代理来代替目标对象。</p>
<h3 id="2-RealSubject（真实主题类）-1"><a href="#2-RealSubject（真实主题类）-1" class="headerlink" title="2.RealSubject（真实主题类）"></a>2.RealSubject（真实主题类）</h3><p>定义了代理类所代表的真实对象。</p>
<h3 id="3-Proxy（代理类）-1"><a href="#3-Proxy（代理类）-1" class="headerlink" title="3.Proxy（代理类）"></a>3.Proxy（代理类）</h3><p>持有对真实主题对象的引用，负责在需要时创建并使用真实主题对象。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>代理类和真实对象类均实现相同的接口或继承相同的抽象类，代理类将对真实对象的访问进行控制。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.远程代理（Remote Proxy）：为位于不同地址空间的对象提供本地代表。<br>2.虚代理（Virtual Proxy）：根据需要创建开销很大的对象，通过代理控制对真实对象的访问。<br>3.保护代理（Protection Proxy）：控制对原始对象的访问，主要用于对象有不同访问权限时。<br>4.智能引用（Smart Reference）：在访问对象时执行一些附加操作，例如计数、日志记录等。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>控制访问真实对象或在访问前后增加额外的操作。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过在真实对象前增加一层代理对象，将直接访问真实对象的行为封装起来，以便可以在访问行为中添加额外的操作。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>IOC全注解式开发</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/IOC%E5%85%A8%E6%B3%A8%E8%A7%A3%E5%BC%8F%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="全注解式开发"><a href="#全注解式开发" class="headerlink" title="全注解式开发"></a>全注解式开发</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>IOC全注解式开发是指在软件开发过程中，通过注解的方式来配置和管理组件之间的依赖关系，代替传统的XML配置，从而实现控制反转。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-注解"><a href="#1-注解" class="headerlink" title="1.注解"></a>1.注解</h3><p>用于标记类、方法、字段等，指示IOC容器如何管理和注入依赖。</p>
<h3 id="2-IOC容器"><a href="#2-IOC容器" class="headerlink" title="2.IOC容器"></a>2.IOC容器</h3><p>负责管理应用中的Bean并控制对象的生命周期和依赖注入。</p>
<h3 id="3-自动装配"><a href="#3-自动装配" class="headerlink" title="3.自动装配"></a>3.自动装配</h3><p>通过注解实现组件的自动装配，如@Autowired、@Resource。</p>
<h3 id="4-配置类"><a href="#4-配置类" class="headerlink" title="4.配置类"></a>4.配置类</h3><p>使用@Configuration注解标记的类，用于替代XML文件来定义Bean和配置应用上下文。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-类级注解"><a href="#1-类级注解" class="headerlink" title="1.类级注解"></a>1.类级注解</h3><p>如@Component、@Service、@Repository等，用于定义Bean。</p>
<h3 id="2-方法级注解"><a href="#2-方法级注解" class="headerlink" title="2.方法级注解"></a>2.方法级注解</h3><p>如@Bean，用于在配置类中定义方法返回的对象作为Bean。</p>
<h3 id="3-字段或构造函数注解"><a href="#3-字段或构造函数注解" class="headerlink" title="3.字段或构造函数注解"></a>3.字段或构造函数注解</h3><p>如@Autowired，用于注入依赖。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.自动装配注解：@Autowired、@Qualifier、@Resource。<br>2.组件扫描注解：@ComponentScan。<br>3.配置注解：@Configuration、@Bean。<br>4.生命周期管理注解：@PostConstruct、@PreDestroy。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过全注解方式简化配置，减少XML配置文件的复杂性，提高代码的可读性和维护性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>IOC全注解式开发通过使用注解，使得开发者只需在代码中添加注解，就可以让IOC容器自动管理对象的创建、注入和生命周期，从而实现依赖的反转控制。开发</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>IOC全注解式开发是指在软件开发过程中，通过注解的方式来配置和管理组件之间的依赖关系，代替传统的XML配置，从而实现控制反转。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-注解-1"><a href="#1-注解-1" class="headerlink" title="1.注解"></a>1.注解</h3><p>用于标记类、方法、字段等，指示IOC容器如何管理和注入依赖。</p>
<h3 id="2-IOC容器-1"><a href="#2-IOC容器-1" class="headerlink" title="2.IOC容器"></a>2.IOC容器</h3><p>负责管理应用中的Bean并控制对象的生命周期和依赖注入。</p>
<h3 id="3-自动装配-1"><a href="#3-自动装配-1" class="headerlink" title="3.自动装配"></a>3.自动装配</h3><p>通过注解实现组件的自动装配，如@Autowired、@Resource。</p>
<h3 id="4-配置类-1"><a href="#4-配置类-1" class="headerlink" title="4.配置类"></a>4.配置类</h3><p>使用@Configuration注解标记的类，用于替代XML文件来定义Bean和配置应用上下文。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-类级注解-1"><a href="#1-类级注解-1" class="headerlink" title="1.类级注解"></a>1.类级注解</h3><p>如@Component、@Service、@Repository等，用于定义Bean。</p>
<h3 id="2-方法级注解-1"><a href="#2-方法级注解-1" class="headerlink" title="2.方法级注解"></a>2.方法级注解</h3><p>如@Bean，用于在配置类中定义方法返回的对象作为Bean。</p>
<h3 id="3-字段或构造函数注解-1"><a href="#3-字段或构造函数注解-1" class="headerlink" title="3.字段或构造函数注解"></a>3.字段或构造函数注解</h3><p>如@Autowired，用于注入依赖。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.自动装配注解：@Autowired、@Qualifier、@Resource。<br>2.组件扫描注解：@ComponentScan。<br>3.配置注解：@Configuration、@Bean。<br>4.生命周期管理注解：@PostConstruct、@PreDestroy。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>通过全注解方式简化配置，减少XML配置文件的复杂性，提高代码的可读性和维护性。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>IOC全注解式开发通过使用注解，使得开发者只需在代码中添加注解，就可以让IOC容器自动管理对象的创建、注入和生命周期，从而实现依赖的反转控制。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>JDK动态代理invoke方法</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86invoke%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="invoke方法"><a href="#invoke方法" class="headerlink" title="invoke方法"></a>invoke方法</h1><p><img src="/./../../TyporaImage/Spring/image-20240918205318044.png" alt="image-20240918205318044"></p>
<p>方法</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918205318044.png" alt="image-20240918205318044"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>JDK动态代理的3个参数</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E7%9A%843%E4%B8%AA%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<h1 id="JDK动态代理的3个参数"><a href="#JDK动态代理的3个参数" class="headerlink" title="JDK动态代理的3个参数"></a>JDK动态代理的3个参数</h1><h2 id="3个参数："><a href="#3个参数：" class="headerlink" title="3个参数："></a>3个参数：</h2><p>1.目标类的类加载器</p>
<p>2.目标类的接口   </p>
<p>3.调用处理器 。这个部分写增强代码</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918204823160.png" alt="image-20240918204823160"></p>
<p><img src="/./../../TyporaImage/Spring/image-20240918205145728.png" alt="image-20240918205145728">参数</p>
<h2 id="3个参数：-1"><a href="#3个参数：-1" class="headerlink" title="3个参数："></a>3个参数：</h2><p>1.目标类的类加载器</p>
<p>2.目标类的接口   </p>
<p>3.调用处理器 。这个部分写增强代码</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918204823160.png" alt="image-20240918204823160"></p>
<p><img src="/./../../TyporaImage/Spring/image-20240918205145728.png" alt="image-20240918205145728"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/Set%E6%B3%A8%E5%85%A5-%E5%86%85%E9%83%A8Bean%E5%92%8C%E5%A4%96%E9%83%A8Bean/</url>
    <content><![CDATA[<h1 id="内部Bean和外部Bean"><a href="#内部Bean和外部Bean" class="headerlink" title="内部Bean和外部Bean"></a>内部Bean和外部Bean</h1><h2 id="内部Bean"><a href="#内部Bean" class="headerlink" title="内部Bean"></a>内部Bean</h2><p>在property标签中，嵌套bean标签。</p>
<p><img src="/../../TyporaImage/Spring/image-20240807162507747.png" alt="image-20240807162507747"></p>
<h2 id="外部Bean（常用）"><a href="#外部Bean（常用）" class="headerlink" title="外部Bean（常用）"></a>外部Bean（常用）</h2><p>先声明，再通过ref引用。</p>
<p><img src="/../../TyporaImage/Spring/image-20240807162426584.png" alt="image-20240807162426584"></p>
]]></content>
  </entry>
  <entry>
    <title>Spring事务</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/Spring%E4%BA%8B%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="Spring事务"><a href="#Spring事务" class="headerlink" title="Spring事务"></a>Spring事务</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Spring对事务的支持是指Spring框架提供了一套简洁灵活的编程模型，用于在Java应用程序中管理事务。Spring通过抽象化底层事务管理API，使开发者能够更方便地在不同的持久化技术（如JDBC、JPA、Hibernate等）中实现事务控制。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.事务管理器（Transaction Manager）：Spring的核心组件，负责协调事务的开始、提交和回滚。<br>2.事务注解：例如@Transactional注解，用于声明事务性行为。<br>3.事务传播机制：定义事务如何在方法之间传播（例如，当前事务如何与另一个事务交互）。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-编程式事务管理：通过代码显式地管理事务边界。"><a href="#1-编程式事务管理：通过代码显式地管理事务边界。" class="headerlink" title="1.编程式事务管理：通过代码显式地管理事务边界。"></a>1.编程式事务管理：通过代码显式地管理事务边界。</h3><h3 id="2-声明式事务管理："><a href="#2-声明式事务管理：" class="headerlink" title="2.声明式事务管理："></a>2.声明式事务管理：</h3><p>①基于注解方式</p>
<p>②基于XML配置方式</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.局部事务：仅限于单个数据库操作或资源。<br>2.全局事务：涉及多个资源（如多个数据库或消息队列）的事务。</p>
<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>Spring事务支持可以在各种持久化层中提供数据的一致性，简化了事务管理代码，减少开发复杂度。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>Spring对事务的支持旨在简化事务管理，提供声明式编程方式，以便开发者可以专注于业务逻辑，而不用关心底层的事务管理实现。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>Spring使用AOP（面向切面编程）来实现声明式事务管理。通过拦截方法调用，Spring在方法调用前后管理事务边界，控制事务的开始、提交或回滚。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-声明式事务管理"><a href="#1-声明式事务管理" class="headerlink" title="1.声明式事务管理"></a>1.声明式事务管理</h3><p>在业务方法上使用@Transactional注解即可。</p>
<h3 id="2-编程式事务管理"><a href="#2-编程式事务管理" class="headerlink" title="2.编程式事务管理"></a>2.编程式事务管理</h3><p>通过TransactionTemplate或PlatformTransactionManager接口进行显式事务管理。事务</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Spring对事务的支持是指Spring框架提供了一套简洁灵活的编程模型，用于在Java应用程序中管理事务。Spring通过抽象化底层事务管理API，使开发者能够更方便地在不同的持久化技术（如JDBC、JPA、Hibernate等）中实现事务控制。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.事务管理器（Transaction Manager）：Spring的核心组件，负责协调事务的开始、提交和回滚。<br>2.事务注解：例如@Transactional注解，用于声明事务性行为。<br>3.事务传播机制：定义事务如何在方法之间传播（例如，当前事务如何与另一个事务交互）。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-编程式事务管理：通过代码显式地管理事务边界。-1"><a href="#1-编程式事务管理：通过代码显式地管理事务边界。-1" class="headerlink" title="1.编程式事务管理：通过代码显式地管理事务边界。"></a>1.编程式事务管理：通过代码显式地管理事务边界。</h3><h3 id="2-声明式事务管理：-1"><a href="#2-声明式事务管理：-1" class="headerlink" title="2.声明式事务管理："></a>2.声明式事务管理：</h3><p>①基于注解方式</p>
<p>②基于XML配置方式</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.局部事务：仅限于单个数据库操作或资源。<br>2.全局事务：涉及多个资源（如多个数据库或消息队列）的事务。</p>
<h2 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h2><p>Spring事务支持可以在各种持久化层中提供数据的一致性，简化了事务管理代码，减少开发复杂度。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>Spring对事务的支持旨在简化事务管理，提供声明式编程方式，以便开发者可以专注于业务逻辑，而不用关心底层的事务管理实现。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>Spring使用AOP（面向切面编程）来实现声明式事务管理。通过拦截方法调用，Spring在方法调用前后管理事务边界，控制事务的开始、提交或回滚。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-声明式事务管理-1"><a href="#1-声明式事务管理-1" class="headerlink" title="1.声明式事务管理"></a>1.声明式事务管理</h3><p>在业务方法上使用@Transactional注解即可。</p>
<h3 id="2-编程式事务管理-1"><a href="#2-编程式事务管理-1" class="headerlink" title="2.编程式事务管理"></a>2.编程式事务管理</h3><p>通过TransactionTemplate或PlatformTransactionManager接口进行显式事务管理。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>Spring概念</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/Spring%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h1 id="Spring概念"><a href="#Spring概念" class="headerlink" title="Spring概念"></a>Spring概念</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Spring 是一个开源的 Java 应用程序框架，旨在简化企业级应用程序的开发。它提供了全面的基础设施支持，使开发者可以专注于应用程序的业务逻辑，而不必处理繁琐的基础设施代码。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-核心容器（Core-Container）"><a href="#1-核心容器（Core-Container）" class="headerlink" title="1.核心容器（Core Container）"></a>1.核心容器（Core Container）</h3><p>包括 Spring 核心模块、上下文模块、Bean 工厂等，提供 IoC 和 DI 功能。</p>
<h3 id="2-数据访问-集成（Data-Access-Integration）"><a href="#2-数据访问-集成（Data-Access-Integration）" class="headerlink" title="2.数据访问&#x2F;集成（Data Access&#x2F;Integration）"></a>2.数据访问&#x2F;集成（Data Access&#x2F;Integration）</h3><p>包括 JDBC、ORM、OXM、JMS 和事务模块，简化数据库访问和事务管理。</p>
<h3 id="3-Web-模块（Web-Module）"><a href="#3-Web-模块（Web-Module）" class="headerlink" title="3.Web 模块（Web Module）"></a>3.Web 模块（Web Module）</h3><p>包括 Web、Servlet、WebSocket 和 WebMVC 模块，支持构建 Web 应用程序和 RESTful 服务。</p>
<h3 id="4-面向切面编程（AOP）"><a href="#4-面向切面编程（AOP）" class="headerlink" title="4.面向切面编程（AOP）"></a>4.面向切面编程（AOP）</h3><p>包括 AOP 模块和 AspectJ 集成，支持声明式事务管理、日志记录等。</p>
<h3 id="5-测试模块（Test-Module）"><a href="#5-测试模块（Test-Module）" class="headerlink" title="5.测试模块（Test Module）"></a>5.测试模块（Test Module）</h3><p>包括 JUnit 和 TestNG 支持，提供集成测试功能。</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>包括消息、任务调度等模块。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>层次结构：</p>
<p>Spring 框架的各个模块按层次结构组织，核心容器在底层，上层依赖于底层模块。</p>
<p><img src="/../../TyporaImage/Spring/image-20240805162524957.png" alt="image-20240805162524957"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-核心容器"><a href="#1-核心容器" class="headerlink" title="1.核心容器"></a>1.核心容器</h3><p>Spring Core、Spring Context、Spring Beans。</p>
<h3 id="2-数据访问和集成"><a href="#2-数据访问和集成" class="headerlink" title="2.数据访问和集成"></a>2.数据访问和集成</h3><p>Spring JDBC、Spring ORM、Spring OXM。</p>
<h3 id="3-Web-模块"><a href="#3-Web-模块" class="headerlink" title="3.Web 模块"></a>3.Web 模块</h3><p>Spring Web、Spring MVC、Spring WebSocket。</p>
<h3 id="4-面向切面编程"><a href="#4-面向切面编程" class="headerlink" title="4.面向切面编程"></a>4.面向切面编程</h3><p>Spring AOP、Spring Aspects。</p>
<h3 id="5-测试模块"><a href="#5-测试模块" class="headerlink" title="5.测试模块"></a>5.测试模块</h3><p>Spring Test。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><h3 id="1-简化开发"><a href="#1-简化开发" class="headerlink" title="1.简化开发"></a>1.简化开发</h3><p>通过提供全面的基础设施支持，简化企业级应用程序的开发。</p>
<h3 id="2-解耦合"><a href="#2-解耦合" class="headerlink" title="2.解耦合"></a>2.解耦合</h3><p>通过依赖注入和控制反转，实现组件之间的松耦合。</p>
<h3 id="3-增强测试性"><a href="#3-增强测试性" class="headerlink" title="3.增强测试性"></a>3.增强测试性</h3><p>通过支持依赖注入和模拟，方便单元测试和集成测试。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>Spring 框架通过 IoC 容器管理对象的生命周期和依赖关系，通过 AOP 提供横切关注点的支持。概念</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Spring 是一个开源的 Java 应用程序框架，旨在简化企业级应用程序的开发。它提供了全面的基础设施支持，使开发者可以专注于应用程序的业务逻辑，而不必处理繁琐的基础设施代码。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-核心容器（Core-Container）-1"><a href="#1-核心容器（Core-Container）-1" class="headerlink" title="1.核心容器（Core Container）"></a>1.核心容器（Core Container）</h3><p>包括 Spring 核心模块、上下文模块、Bean 工厂等，提供 IoC 和 DI 功能。</p>
<h3 id="2-数据访问-集成（Data-Access-Integration）-1"><a href="#2-数据访问-集成（Data-Access-Integration）-1" class="headerlink" title="2.数据访问&#x2F;集成（Data Access&#x2F;Integration）"></a>2.数据访问&#x2F;集成（Data Access&#x2F;Integration）</h3><p>包括 JDBC、ORM、OXM、JMS 和事务模块，简化数据库访问和事务管理。</p>
<h3 id="3-Web-模块（Web-Module）-1"><a href="#3-Web-模块（Web-Module）-1" class="headerlink" title="3.Web 模块（Web Module）"></a>3.Web 模块（Web Module）</h3><p>包括 Web、Servlet、WebSocket 和 WebMVC 模块，支持构建 Web 应用程序和 RESTful 服务。</p>
<h3 id="4-面向切面编程（AOP）-1"><a href="#4-面向切面编程（AOP）-1" class="headerlink" title="4.面向切面编程（AOP）"></a>4.面向切面编程（AOP）</h3><p>包括 AOP 模块和 AspectJ 集成，支持声明式事务管理、日志记录等。</p>
<h3 id="5-测试模块（Test-Module）-1"><a href="#5-测试模块（Test-Module）-1" class="headerlink" title="5.测试模块（Test Module）"></a>5.测试模块（Test Module）</h3><p>包括 JUnit 和 TestNG 支持，提供集成测试功能。</p>
<h3 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h3><p>包括消息、任务调度等模块。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>层次结构：</p>
<p>Spring 框架的各个模块按层次结构组织，核心容器在底层，上层依赖于底层模块。</p>
<p><img src="/../../TyporaImage/Spring/image-20240805162524957.png" alt="image-20240805162524957"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-核心容器-1"><a href="#1-核心容器-1" class="headerlink" title="1.核心容器"></a>1.核心容器</h3><p>Spring Core、Spring Context、Spring Beans。</p>
<h3 id="2-数据访问和集成-1"><a href="#2-数据访问和集成-1" class="headerlink" title="2.数据访问和集成"></a>2.数据访问和集成</h3><p>Spring JDBC、Spring ORM、Spring OXM。</p>
<h3 id="3-Web-模块-1"><a href="#3-Web-模块-1" class="headerlink" title="3.Web 模块"></a>3.Web 模块</h3><p>Spring Web、Spring MVC、Spring WebSocket。</p>
<h3 id="4-面向切面编程-1"><a href="#4-面向切面编程-1" class="headerlink" title="4.面向切面编程"></a>4.面向切面编程</h3><p>Spring AOP、Spring Aspects。</p>
<h3 id="5-测试模块-1"><a href="#5-测试模块-1" class="headerlink" title="5.测试模块"></a>5.测试模块</h3><p>Spring Test。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><h3 id="1-简化开发-1"><a href="#1-简化开发-1" class="headerlink" title="1.简化开发"></a>1.简化开发</h3><p>通过提供全面的基础设施支持，简化企业级应用程序的开发。</p>
<h3 id="2-解耦合-1"><a href="#2-解耦合-1" class="headerlink" title="2.解耦合"></a>2.解耦合</h3><p>通过依赖注入和控制反转，实现组件之间的松耦合。</p>
<h3 id="3-增强测试性-1"><a href="#3-增强测试性-1" class="headerlink" title="3.增强测试性"></a>3.增强测试性</h3><p>通过支持依赖注入和模拟，方便单元测试和集成测试。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>Spring 框架通过 IoC 容器管理对象的生命周期和依赖关系，通过 AOP 提供横切关注点的支持。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>invoke方法的3个参数</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/invoke%E6%96%B9%E6%B3%95%E7%9A%843%E4%B8%AA%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<h1 id="invoke方法的3个参数与返回值"><a href="#invoke方法的3个参数与返回值" class="headerlink" title="invoke方法的3个参数与返回值"></a>invoke方法的3个参数与返回值</h1><h2 id="三个参数"><a href="#三个参数" class="headerlink" title="三个参数"></a>三个参数</h2><p><img src="/./../../TyporaImage/Spring/image-20240918205504013.png" alt="image-20240918205504013"></p>
<p>第二个参数可以用来调用目标对象的目标方法：</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918205701493.png" alt="image-20240918205701493"></p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><p>需要在invoke方法内的return时，注意返回想要的结果。</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918210603305.png" alt="image-20240918210603305"></p>
<p>回值</p>
<h2 id="三个参数-1"><a href="#三个参数-1" class="headerlink" title="三个参数"></a>三个参数</h2><p><img src="/./../../TyporaImage/Spring/image-20240918205504013.png" alt="image-20240918205504013"></p>
<p>第二个参数可以用来调用目标对象的目标方法：</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918205701493.png" alt="image-20240918205701493"></p>
<h2 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h2><p>需要在invoke方法内的return时，注意返回想要的结果。</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918210603305.png" alt="image-20240918210603305"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/c%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E6%B3%A8%E5%85%A5-%E5%9F%BA%E4%BA%8E%E6%9E%84%E9%80%A0%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h1 id="c命名空间注入"><a href="#c命名空间注入" class="headerlink" title="c命名空间注入"></a>c命名空间注入</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-在spring配置文件头部添加p命名空间"><a href="#1-在spring配置文件头部添加p命名空间" class="headerlink" title="1.在spring配置文件头部添加p命名空间"></a>1.在spring配置文件头部添加p命名空间</h3><p><img src="/../../TyporaImage/Spring/image-20240807170628675.png" alt="image-20240807170628675"></p>
<h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><h3 id="①下标方式"><a href="#①下标方式" class="headerlink" title="①下标方式"></a>①下标方式</h3><p><img src="/../../TyporaImage/Spring/image-20240807170713839.png" alt="image-20240807170713839"></p>
<h3 id="②参数名方式"><a href="#②参数名方式" class="headerlink" title="②参数名方式"></a>②参数名方式</h3><p><img src="/../../TyporaImage/Spring/image-20240807170758782.png" alt="image-20240807170758782"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/p%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E6%B3%A8%E5%85%A5-%E5%9F%BA%E4%BA%8Eset%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h1 id="p命名空间注入"><a href="#p命名空间注入" class="headerlink" title="p命名空间注入"></a>p命名空间注入</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-在spring配置文件头部添加p命名空间"><a href="#1-在spring配置文件头部添加p命名空间" class="headerlink" title="1.在spring配置文件头部添加p命名空间"></a>1.在spring配置文件头部添加p命名空间</h3><p><img src="/../../TyporaImage/Spring/image-20240807170324136.png" alt="image-20240807170324136"></p>
<h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><p><img src="/../../TyporaImage/Spring/image-20240807170507901.png" alt="image-20240807170507901"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/set%E6%B3%A8%E5%85%A5-List%E5%92%8CSet%E9%9B%86%E5%90%88%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h1 id="List和Set注入"><a href="#List和Set注入" class="headerlink" title="List和Set注入"></a>List和Set注入</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-简单类型"><a href="#1-简单类型" class="headerlink" title="1.简单类型"></a>1.简单类型</h3><p><img src="/../../TyporaImage/Spring/image-20240807164852273.png" alt="image-20240807164852273"></p>
<p>2.非简单类型</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/set%E6%B3%A8%E5%85%A5-Map%E5%92%8CProperties%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h1 id="Map和Properties注入"><a href="#Map和Properties注入" class="headerlink" title="Map和Properties注入"></a>Map和Properties注入</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><h4 id="1-简单类型。通过map标签嵌套entry标签来实现"><a href="#1-简单类型。通过map标签嵌套entry标签来实现" class="headerlink" title="1.简单类型。通过map标签嵌套entry标签来实现"></a>1.简单类型。通过map标签嵌套entry标签来实现</h4><p><img src="/../../TyporaImage/Spring/image-20240807165128608.png" alt="image-20240807165128608"></p>
<h4 id="2-非简单类型。通过key-ref与value-ref属性来配置。"><a href="#2-非简单类型。通过key-ref与value-ref属性来配置。" class="headerlink" title="2.非简单类型。通过key-ref与value-ref属性来配置。"></a>2.非简单类型。通过key-ref与value-ref属性来配置。</h4><p><img src="/../../TyporaImage/Spring/image-20240807165217300.png" alt="image-20240807165217300"></p>
<h3 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h3><h4 id=""><a href="#" class="headerlink" title=""></a><img src="/../../TyporaImage/Spring/image-20240807165427547.png" alt="image-20240807165427547"></h4><p>PS：key和value只能是字符串格式</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/set%E6%B3%A8%E5%85%A5-null%E5%92%8C%E7%A9%BA%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h1 id="null和空字符串"><a href="#null和空字符串" class="headerlink" title="null和空字符串"></a>null和空字符串</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="null"><a href="#null" class="headerlink" title="null"></a>null</h3><h4 id="1-不给属性注入，默认就是null。"><a href="#1-不给属性注入，默认就是null。" class="headerlink" title="1.不给属性注入，默认就是null。"></a>1.不给属性注入，默认就是null。</h4><h4 id="2-手动注入null标签。"><a href="#2-手动注入null标签。" class="headerlink" title="2.手动注入null标签。"></a>2.手动注入null标签。</h4><p><img src="/../../TyporaImage/Spring/image-20240807165700655.png" alt="image-20240807165700655"></p>
<h3 id="空字符串"><a href="#空字符串" class="headerlink" title="空字符串"></a>空字符串</h3><h4 id="1-注入空字符串"><a href="#1-注入空字符串" class="headerlink" title="1.注入空字符串"></a>1.注入空字符串</h4><p><img src="/../../TyporaImage/Spring/image-20240807165834911.png" alt="image-20240807165834911"></p>
<h2 id="2-手动注入value标签"><a href="#2-手动注入value标签" class="headerlink" title="2.手动注入value标签"></a>2.手动注入value标签</h2><p><img src="/../../TyporaImage/Spring/image-20240807165821933.png" alt="image-20240807165821933"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/set%E6%B3%A8%E5%85%A5-%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/</url>
    <content><![CDATA[<h1 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-将特殊字符替换成转义字符"><a href="#1-将特殊字符替换成转义字符" class="headerlink" title="1.将特殊字符替换成转义字符"></a>1.将特殊字符替换成转义字符</h3><p><img src="/../../TyporaImage/Spring/image-20240807165949205.png" alt="image-20240807165949205"></p>
<h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用&lt;![CDATA[]&gt;"></a>2.使用&lt;![CDATA[]&gt;</h3><p><img src="/../../TyporaImage/Spring/image-20240807170106967.png" alt="image-20240807170106967"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/set%E6%B3%A8%E5%85%A5-%E6%95%B0%E7%BB%84%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h1 id="数组注入"><a href="#数组注入" class="headerlink" title="数组注入"></a>数组注入</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-当数组中的元素是简单类型，可以用array标签嵌套value标签。"><a href="#1-当数组中的元素是简单类型，可以用array标签嵌套value标签。" class="headerlink" title="1.当数组中的元素是简单类型，可以用array标签嵌套value标签。"></a>1.当数组中的元素是简单类型，可以用array标签嵌套value标签。</h3><p><img src="/../../TyporaImage/Spring/image-20240807164445462.png" alt="image-20240807164445462"></p>
<h3 id="2-非简单类型时，先配置相关对象bean，再配置数组"><a href="#2-非简单类型时，先配置相关对象bean，再配置数组" class="headerlink" title="2.非简单类型时，先配置相关对象bean，再配置数组"></a>2.非简单类型时，先配置相关对象bean，再配置数组</h3><h4 id="配置相关对象"><a href="#配置相关对象" class="headerlink" title="配置相关对象"></a>配置相关对象</h4><p><img src="/../../TyporaImage/Spring/image-20240807164600975.png" alt="image-20240807164600975"></p>
<h4 id="配置数组"><a href="#配置数组" class="headerlink" title="配置数组"></a>配置数组</h4><p><img src="/../../TyporaImage/Spring/image-20240807164641637.png" alt="image-20240807164641637"></p>
<p><img src="/../../TyporaImage/Spring/image-20240807164658296.png" alt="image-20240807164658296"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/set%E6%B3%A8%E5%85%A5-%E7%AE%80%E5%8D%95%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="简单类型"><a href="#简单类型" class="headerlink" title="简单类型"></a>简单类型</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>在Spring框架中，简单类型（Simple Type）指的是基本数据类型及其包装类，以及一些特定的标准类，这些类型通常在依赖注入和数据绑定过程中被直接处理和转换。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-基本数据类型"><a href="#1-基本数据类型" class="headerlink" title="1.基本数据类型"></a>1.基本数据类型</h3><p>如int、long、double、boolean等。</p>
<h3 id="2-包装类"><a href="#2-包装类" class="headerlink" title="2.包装类"></a>2.包装类</h3><p>如Integer、Long、Double、Boolean等。</p>
<h3 id="3-字符串"><a href="#3-字符串" class="headerlink" title="3.字符串"></a>3.字符串</h3><p>如String。</p>
<h3 id="4-日期和时间类型"><a href="#4-日期和时间类型" class="headerlink" title="4.日期和时间类型"></a>4.日期和时间类型</h3><p>如java.util.Date、java.time.LocalDate、java.time.LocalDateTime等。</p>
<h3 id="5-其他常用类型"><a href="#5-其他常用类型" class="headerlink" title="5.其他常用类型"></a>5.其他常用类型</h3><p>如java.math.BigInteger、java.math.BigDecimal等。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-基本数据类型-1"><a href="#1-基本数据类型-1" class="headerlink" title="1.基本数据类型"></a>1.基本数据类型</h3><p>如int、char。</p>
<h3 id="2-包装类和其他类"><a href="#2-包装类和其他类" class="headerlink" title="2.包装类和其他类"></a>2.包装类和其他类</h3><p>如Integer、String、Date等。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.基本类型Java原生的基本数据类型。<br>2.包装类型：对应基本数据类型的包装类。<br>3.字符串类型：String。<br>4.日期和时间类型：Date、LocalDate、LocalDateTime等。<br>5.数值类型：BigInteger、BigDecimal等。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>配置spring文件，通过value进行注入数据</p>
<p><img src="/../../TyporaImage/Spring/image-20240807163301509.png" alt="image-20240807163301509"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.Date，这个简单类型，一般当做非简单类型来使用。</p>
<p>虽然是简单类型，但是需要采用特定的格式，这个格式一般人记不住。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/set%E6%B3%A8%E5%85%A5-%E7%BA%A7%E8%81%94%E5%B1%9E%E6%80%A7%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h1 id="级联属性注入"><a href="#级联属性注入" class="headerlink" title="级联属性注入"></a>级联属性注入</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>级联属性注入（Cascading Property Injection）是指在Spring框架中，通过依赖注入将一个Bean注入到另一个Bean中，同时这些被注入的Bean也可以继续注入其他Bean，从而形成一种级联的注入方式。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-顶级Bean"><a href="#1-顶级Bean" class="headerlink" title="1.顶级Bean"></a>1.顶级Bean</h3><p>直接定义在配置文件或注解中的Bean。</p>
<h3 id="2-依赖Bean"><a href="#2-依赖Bean" class="headerlink" title="2.依赖Bean"></a>2.依赖Bean</h3><p>被注入到顶级Bean中的其他Bean。</p>
<h3 id="3-级联Bean"><a href="#3-级联Bean" class="headerlink" title="3.级联Bean"></a>3.级联Bean</h3><p>进一步注入到依赖Bean中的Bean。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>通过配置文件或注解，逐级定义和注入Bean。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.构造函数注入：通过构造函数进行级联注入。<br>2.Setter方法注入：通过Setter方法进行级联注入。<br>3.字段注入：通过字段直接注入。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过级联注入，简化复杂对象的创建和管理，促进对象之间的解耦和模块化，提高代码的可维护性和可扩展性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>在Spring容器启动时，根据配置文件或注解定义的依赖关系，自动创建和注入Bean。每个Bean可以包含其他Bean，形成级联注入的链条。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.提供get方法。级联的属性必须提供一个get方法，且配置的顺序不可以颠倒。</p>
<p>2.配置spring.xml文件</p>
<p><img src="/../../TyporaImage/Spring/image-20240807164206413.png" alt="image-20240807164206413"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/util%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h1 id="util命名空间注入"><a href="#util命名空间注入" class="headerlink" title="util命名空间注入"></a>util命名空间注入</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>util命名空间注入是Spring框架中一种特殊的XML配置命名空间，用于简化常见的配置任务，例如定义集合（List、Set、Map）、属性文件和常量值等。它提供了一种简洁的方式来配置复杂的数据结构和常量，使得配置文件更易读、更易维护。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-集合"><a href="#1-集合" class="headerlink" title="1.集合"></a>1.集合</h3><p>包括util:list、util:set、util:map等，用于定义集合类型的Bean。</p>
<h3 id="2-属性"><a href="#2-属性" class="headerlink" title="2.属性"></a>2.属性</h3><p>包括util:properties，用于定义属性文件。</p>
<h3 id="3-常量"><a href="#3-常量" class="headerlink" title="3.常量"></a>3.常量</h3><p>包括util:constant，用于定义常量值。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>基于XML的配置形式，通过引入util命名空间并使用相应的标签进行配置。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.集合配置：配置列表、集合和映射等集合类型。<br>2.属性配置：配置属性文件和键值对。<br>3.常量配置：配置静态常量值。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>简化配置文件的编写，减少冗余代码，提高配置的可读性和可维护性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过XML命名空间引入util命名空间，并使用相应的标签来定义集合、属性和常量。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-配置spring-xml文件的头部，引入util命名空间"><a href="#1-配置spring-xml文件的头部，引入util命名空间" class="headerlink" title="1.配置spring.xml文件的头部，引入util命名空间"></a>1.配置spring.xml文件的头部，引入util命名空间</h3><p><img src="/../../TyporaImage/Spring/image-20240807195431282.png" alt="image-20240807195431282"></p>
<h3 id="2-使用（配置复用）"><a href="#2-使用（配置复用）" class="headerlink" title="2.使用（配置复用）"></a>2.使用（配置复用）</h3><p><img src="/../../TyporaImage/Spring/image-20240807195526631.png" alt="image-20240807195526631"></p>
]]></content>
  </entry>
  <entry>
    <title>spring对Junit的支持</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/spring%E5%AF%B9Junit%E7%9A%84%E6%94%AF%E6%8C%81/</url>
    <content><![CDATA[<h1 id="对Junit的支持"><a href="#对Junit的支持" class="headerlink" title="对Junit的支持"></a>对Junit的支持</h1><h2 id="1-spring6对junit4与5都提供支持"><a href="#1-spring6对junit4与5都提供支持" class="headerlink" title="1.spring6对junit4与5都提供支持"></a>1.spring6对junit4与5都提供支持</h2><h2 id="2-对junit4的支持"><a href="#2-对junit4的支持" class="headerlink" title="2.对junit4的支持"></a>2.对junit4的支持</h2><p>需要在pom文件中引入相关依赖</p>
<p><img src="/./../../TyporaImage/Spring/image-20240924212208252.png" alt="image-20240924212208252"></p>
<h2 id="3-对junit5的支持"><a href="#3-对junit5的支持" class="headerlink" title="3.对junit5的支持"></a>3.对junit5的支持</h2><p><img src="/./../../TyporaImage/Spring/image-20240924212334823.png" alt="image-20240924212334823"></p>
<h2 id="4-这两种方式可以省略applicationcontext的创建。"><a href="#4-这两种方式可以省略applicationcontext的创建。" class="headerlink" title="4.这两种方式可以省略applicationcontext的创建。"></a>4.这两种方式可以省略applicationcontext的创建。</h2><p><img src="/./../../TyporaImage/Spring/image-20240924212713937.png" alt="image-20240924212713937">支持</p>
<h2 id="1-spring6对junit4与5都提供支持-1"><a href="#1-spring6对junit4与5都提供支持-1" class="headerlink" title="1.spring6对junit4与5都提供支持"></a>1.spring6对junit4与5都提供支持</h2><h2 id="2-对junit4的支持-1"><a href="#2-对junit4的支持-1" class="headerlink" title="2.对junit4的支持"></a>2.对junit4的支持</h2><p>需要在pom文件中引入相关依赖</p>
<p><img src="/./../../TyporaImage/Spring/image-20240924212208252.png" alt="image-20240924212208252"></p>
<h2 id="3-对junit5的支持-1"><a href="#3-对junit5的支持-1" class="headerlink" title="3.对junit5的支持"></a>3.对junit5的支持</h2><p><img src="/./../../TyporaImage/Spring/image-20240924212334823.png" alt="image-20240924212334823"></p>
<h2 id="4-这两种方式可以省略applicationcontext的创建。-1"><a href="#4-这两种方式可以省略applicationcontext的创建。-1" class="headerlink" title="4.这两种方式可以省略applicationcontext的创建。"></a>4.这两种方式可以省略applicationcontext的创建。</h2><p><img src="/./../../TyporaImage/Spring/image-20240924212713937.png" alt="image-20240924212713937"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>三大读问题</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E4%B8%89%E5%A4%A7%E8%AF%BB%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="三大读问题"><a href="#三大读问题" class="headerlink" title="三大读问题"></a>三大读问题</h1><h2 id="脏读"><a href="#脏读" class="headerlink" title="脏读"></a>脏读</h2><p>事务A读取到事务B尚未提交的修改数据，如果事务B回滚，事务A读取的数据就是错误的。</p>
<h2 id="不可重复读"><a href="#不可重复读" class="headerlink" title="不可重复读"></a>不可重复读</h2><p>事务A在读取某一数据后，事务B对该数据进行了修改或删除，导致事务A再次读取时，数据发生了变化。</p>
<h2 id="幻读"><a href="#幻读" class="headerlink" title="幻读"></a>幻读</h2><p>事务A读取某一范围内的数据时，事务B向该范围内插入了新数据，导致事务A再次读取时，数据行数发生了变化。问题</p>
<h2 id="脏读-1"><a href="#脏读-1" class="headerlink" title="脏读"></a>脏读</h2><p>事务A读取到事务B尚未提交的修改数据，如果事务B回滚，事务A读取的数据就是错误的。</p>
<h2 id="不可重复读-1"><a href="#不可重复读-1" class="headerlink" title="不可重复读"></a>不可重复读</h2><p>事务A在读取某一数据后，事务B对该数据进行了修改或删除，导致事务A再次读取时，数据发生了变化。</p>
<h2 id="幻读-1"><a href="#幻读-1" class="headerlink" title="幻读"></a>幻读</h2><p>事务A读取某一范围内的数据时，事务B向该范围内插入了新数据，导致事务A再次读取时，数据行数发生了变化。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>事务异常时回滚与不回滚</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E4%BA%8B%E5%8A%A1%E5%BC%82%E5%B8%B8%E6%97%B6%E5%9B%9E%E6%BB%9A%E4%B8%8E%E4%B8%8D%E5%9B%9E%E6%BB%9A/</url>
    <content><![CDATA[<h1 id="回滚与不回滚"><a href="#回滚与不回滚" class="headerlink" title="回滚与不回滚"></a>回滚与不回滚</h1><h2 id="一、指定异常时回滚"><a href="#一、指定异常时回滚" class="headerlink" title="一、指定异常时回滚"></a>一、指定异常时回滚</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>设置rollbackfor属性即可</p>
<p><img src="/./../../TyporaImage/Spring/image-20240924163538694.png" alt="image-20240924163538694"></p>
<h2 id="二、指定异常时不回滚"><a href="#二、指定异常时不回滚" class="headerlink" title="二、指定异常时不回滚"></a>二、指定异常时不回滚</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p>设置noRollbackfor属性即可</p>
<p><img src="/./../../TyporaImage/Spring/image-20240924163719416.png" alt="image-20240924163719416"></p>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>回滚</p>
<h2 id="一、指定异常时回滚-1"><a href="#一、指定异常时回滚-1" class="headerlink" title="一、指定异常时回滚"></a>一、指定异常时回滚</h2><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p>设置rollbackfor属性即可</p>
<p><img src="/./../../TyporaImage/Spring/image-20240924163538694.png" alt="image-20240924163538694"></p>
<h2 id="二、指定异常时不回滚-1"><a href="#二、指定异常时不回滚-1" class="headerlink" title="二、指定异常时不回滚"></a>二、指定异常时不回滚</h2><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><p>设置noRollbackfor属性即可</p>
<p><img src="/./../../TyporaImage/Spring/image-20240924163719416.png" alt="image-20240924163719416"></p>
<h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3>]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>事务管理器接口-spring事务</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8%E6%8E%A5%E5%8F%A3-spring%E4%BA%8B%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="事务管理器接口"><a href="#事务管理器接口" class="headerlink" title="事务管理器接口"></a>事务管理器接口</h1><p><img src="/./../../TyporaImage/Spring/image-20240924105250532.png" alt="image-20240924105250532"></p>
<p>接口</p>
<p><img src="/./../../TyporaImage/Spring/image-20240924105250532.png" alt="image-20240924105250532"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>事务超时</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E4%BA%8B%E5%8A%A1%E8%B6%85%E6%97%B6/</url>
    <content><![CDATA[<h1 id="事务超时"><a href="#事务超时" class="headerlink" title="事务超时"></a>事务超时</h1><h2 id="1-超时时间的计算，是指最后一条DML语句执行之前的时间。"><a href="#1-超时时间的计算，是指最后一条DML语句执行之前的时间。" class="headerlink" title="1.超时时间的计算，是指最后一条DML语句执行之前的时间。"></a>1.超时时间的计算，是指最后一条DML语句执行之前的时间。</h2><p>如果最后一条DML语句后面有许多业务逻辑代码，那么这些代码的执行时间不计入超时时间。</p>
<p>比如：</p>
<p><img src="/./../../TyporaImage/Spring/image-20240924163012233.png" alt="image-20240924163012233"></p>
<p>超时</p>
<h2 id="1-超时时间的计算，是指最后一条DML语句执行之前的时间。-1"><a href="#1-超时时间的计算，是指最后一条DML语句执行之前的时间。-1" class="headerlink" title="1.超时时间的计算，是指最后一条DML语句执行之前的时间。"></a>1.超时时间的计算，是指最后一条DML语句执行之前的时间。</h2><p>如果最后一条DML语句后面有许多业务逻辑代码，那么这些代码的执行时间不计入超时时间。</p>
<p>比如：</p>
<p><img src="/./../../TyporaImage/Spring/image-20240924163012233.png" alt="image-20240924163012233"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>事务隔离级别</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/</url>
    <content><![CDATA[<h1 id="事务隔离级别"><a href="#事务隔离级别" class="headerlink" title="事务隔离级别"></a>事务隔离级别</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>事务的隔离级别是数据库管理系统（DBMS）用来定义不同事务之间可见性的机制，用于控制并发操作时的数据一致性问题。通过设置隔离级别，可以决定一个事务是否能够看到其他事务未提交的更改或是正在进行的操作。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>SQL标准定义了四个主要的事务隔离级别，分别是：</p>
<p>1.未提交读 (READ UNCOMMITTED)：事务可以读取其他未提交事务的数据。<br>2.已提交读 (READ COMMITTED)：事务只能读取已提交的数据，不能读取未提交事务的修改。<br>3.可重复读 (REPEATABLE READ)：事务可以多次读取相同的数据，保证在同一个事务内读取的数据是一致的。  MySQL默认。<br>4.可串行化 (SERIALIZABLE)：最高级别，所有事务被强制排序执行，完全隔离。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>四个级别逐渐增强隔离性，代价是降低并发性能。隔离级别越高，数据库处理事务的能力会有所下降，但数据一致性会更好。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>解决事务并发访问数据库时出现的脏读、不可重复读和幻读等问题，保证数据一致性和系统稳定性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过锁机制和版本控制，来控制事务之间的数据可见性。隔离级别越高，系统对事务之间的相互影响控制越严密。级别</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>事务的隔离级别是数据库管理系统（DBMS）用来定义不同事务之间可见性的机制，用于控制并发操作时的数据一致性问题。通过设置隔离级别，可以决定一个事务是否能够看到其他事务未提交的更改或是正在进行的操作。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>SQL标准定义了四个主要的事务隔离级别，分别是：</p>
<p>1.未提交读 (READ UNCOMMITTED)：事务可以读取其他未提交事务的数据。<br>2.已提交读 (READ COMMITTED)：事务只能读取已提交的数据，不能读取未提交事务的修改。<br>3.可重复读 (REPEATABLE READ)：事务可以多次读取相同的数据，保证在同一个事务内读取的数据是一致的。  MySQL默认。<br>4.可串行化 (SERIALIZABLE)：最高级别，所有事务被强制排序执行，完全隔离。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>四个级别逐渐增强隔离性，代价是降低并发性能。隔离级别越高，数据库处理事务的能力会有所下降，但数据一致性会更好。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>解决事务并发访问数据库时出现的脏读、不可重复读和幻读等问题，保证数据一致性和系统稳定性。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过锁机制和版本控制，来控制事务之间的数据可见性。隔离级别越高，系统对事务之间的相互影响控制越严密。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>传播行为的使用</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E4%BC%A0%E6%92%AD%E8%A1%8C%E4%B8%BA%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="传播行为的使用"><a href="#传播行为的使用" class="headerlink" title="传播行为的使用"></a>传播行为的使用</h1><h2 id="1-在-Transactional注解中添加相关的属性"><a href="#1-在-Transactional注解中添加相关的属性" class="headerlink" title="1.在@Transactional注解中添加相关的属性"></a>1.在@Transactional注解中添加相关的属性</h2><p><img src="/./../../TyporaImage/Spring/image-20240924111152561.png" alt="image-20240924111152561"></p>
<h2 id="2-开始正常使用即可"><a href="#2-开始正常使用即可" class="headerlink" title="2.开始正常使用即可"></a>2.开始正常使用即可</h2><p>使用</p>
<h2 id="1-在-Transactional注解中添加相关的属性-1"><a href="#1-在-Transactional注解中添加相关的属性-1" class="headerlink" title="1.在@Transactional注解中添加相关的属性"></a>1.在@Transactional注解中添加相关的属性</h2><p><img src="/./../../TyporaImage/Spring/image-20240924111152561.png" alt="image-20240924111152561"></p>
<h2 id="2-开始正常使用即可-1"><a href="#2-开始正常使用即可-1" class="headerlink" title="2.开始正常使用即可"></a>2.开始正常使用即可</h2>]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>传播行为-Spring事务</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E4%BC%A0%E6%92%AD%E8%A1%8C%E4%B8%BA-Spring%E4%BA%8B%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="传播行为"><a href="#传播行为" class="headerlink" title="传播行为"></a>传播行为</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Spring中的传播行为（Propagation）是指当一个事务性方法调用另一个事务性方法时，事务如何传播和处理的策略。传播行为定义了一个方法应该如何参与现有的事务，或者是否应该启动新的事务。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>Spring支持多种传播行为，最常见的包括：<br>1.REQUIRED：如果当前存在事务，则加入该事务；如果没有事务，则创建一个新事务。<br>2.REQUIRES_NEW：总是创建一个新事务，当前事务（如果存在）将被挂起。<br>3.SUPPORTS：如果当前存在事务，则加入；如果没有事务，则以非事务方式执行。<br>4.NOT_SUPPORTED：总是以非事务方式执行，如果存在事务，则将其挂起。<br>5.MANDATORY：必须在一个现有事务中运行，如果没有现有事务则抛出异常。<br>6.NEVER：不能在事务中运行，如果当前存在事务则抛出异常。<br>7.NESTED：如果当前存在事务，则创建一个嵌套事务；如果没有事务，则与REQUIRED相同。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>不同的传播行为表示事务在执行链中的关系，有的需要新建事务，有的依赖现有事务。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>传播行为根据是否需要新建事务、依赖现有事务或者完全脱离事务环境</p>
<p>分为创建事务型、加入事务型、非事务型。</p>
<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>传播行为决定了在不同场景下如何控制事务的开启、挂起或结束，从而保证数据的一致性和事务的正确性。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>传播行为的目的是确保在复杂的事务环境中，事务方法的调用能够按照预期的方式执行，尤其是在嵌套调用、并发调用或者分布式调用中确保事务的一致性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>传播行为通过控制事务的开启、挂起或合并，实现了事务边界的灵活控制。</p>
<p>行为</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Spring中的传播行为（Propagation）是指当一个事务性方法调用另一个事务性方法时，事务如何传播和处理的策略。传播行为定义了一个方法应该如何参与现有的事务，或者是否应该启动新的事务。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>Spring支持多种传播行为，最常见的包括：<br>1.REQUIRED：如果当前存在事务，则加入该事务；如果没有事务，则创建一个新事务。<br>2.REQUIRES_NEW：总是创建一个新事务，当前事务（如果存在）将被挂起。<br>3.SUPPORTS：如果当前存在事务，则加入；如果没有事务，则以非事务方式执行。<br>4.NOT_SUPPORTED：总是以非事务方式执行，如果存在事务，则将其挂起。<br>5.MANDATORY：必须在一个现有事务中运行，如果没有现有事务则抛出异常。<br>6.NEVER：不能在事务中运行，如果当前存在事务则抛出异常。<br>7.NESTED：如果当前存在事务，则创建一个嵌套事务；如果没有事务，则与REQUIRED相同。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>不同的传播行为表示事务在执行链中的关系，有的需要新建事务，有的依赖现有事务。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>传播行为根据是否需要新建事务、依赖现有事务或者完全脱离事务环境</p>
<p>分为创建事务型、加入事务型、非事务型。</p>
<h2 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h2><p>传播行为决定了在不同场景下如何控制事务的开启、挂起或结束，从而保证数据的一致性和事务的正确性。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>传播行为的目的是确保在复杂的事务环境中，事务方法的调用能够按照预期的方式执行，尤其是在嵌套调用、并发调用或者分布式调用中确保事务的一致性。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>传播行为通过控制事务的开启、挂起或合并，实现了事务边界的灵活控制。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E4%BD%9C%E7%94%A8%E5%9F%9F-scope%E5%85%B6%E4%BB%96%E9%80%89%E9%A1%B9/</url>
    <content><![CDATA[<h1 id="scope其他选项"><a href="#scope其他选项" class="headerlink" title="scope其他选项"></a>scope其他选项</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-在pom文件中，引入相关的框架依赖"><a href="#1-在pom文件中，引入相关的框架依赖" class="headerlink" title="1.在pom文件中，引入相关的框架依赖"></a>1.在pom文件中，引入相关的框架依赖</h3><p>比如引入web框架</p>
<p><img src="/../../TyporaImage/Spring/image-20240807202813655.png" alt="image-20240807202813655"></p>
<h3 id="2-填写相关的属性值"><a href="#2-填写相关的属性值" class="headerlink" title="2.填写相关的属性值"></a>2.填写相关的属性值</h3><p>这时就出现了其他选项</p>
<p><img src="/../../TyporaImage/Spring/image-20240807202836249.png" alt="image-20240807202836249"></p>
]]></content>
  </entry>
  <entry>
    <title>全注解开发-基于注解</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%85%A8%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91-%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="全注解开发"><a href="#全注解开发" class="headerlink" title="全注解开发"></a>全注解开发</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-通过-Configuration来替代spring-xml文件；-ComponentScan替代xml文件中的组件扫描；通过另一个注解来配置动态代理机制。"><a href="#1-通过-Configuration来替代spring-xml文件；-ComponentScan替代xml文件中的组件扫描；通过另一个注解来配置动态代理机制。" class="headerlink" title="1.通过@Configuration来替代spring.xml文件；@ComponentScan替代xml文件中的组件扫描；通过另一个注解来配置动态代理机制。"></a>1.通过@Configuration来替代spring.xml文件；@ComponentScan替代xml文件中的组件扫描；通过另一个注解来配置动态代理机制。</h3><p><img src="/./../../TyporaImage/Spring/image-20240920172119763.png" alt="image-20240920172119763"></p>
<h3 id="2-客户端开始测试"><a href="#2-客户端开始测试" class="headerlink" title="2.客户端开始测试"></a>2.客户端开始测试</h3><p>开发</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-通过-Configuration来替代spring-xml文件；-ComponentScan替代xml文件中的组件扫描；通过另一个注解来配置动态代理机制。-1"><a href="#1-通过-Configuration来替代spring-xml文件；-ComponentScan替代xml文件中的组件扫描；通过另一个注解来配置动态代理机制。-1" class="headerlink" title="1.通过@Configuration来替代spring.xml文件；@ComponentScan替代xml文件中的组件扫描；通过另一个注解来配置动态代理机制。"></a>1.通过@Configuration来替代spring.xml文件；@ComponentScan替代xml文件中的组件扫描；通过另一个注解来配置动态代理机制。</h3><p><img src="/./../../TyporaImage/Spring/image-20240920172119763.png" alt="image-20240920172119763"></p>
<h3 id="2-客户端开始测试-1"><a href="#2-客户端开始测试-1" class="headerlink" title="2.客户端开始测试"></a>2.客户端开始测试</h3>]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E4%BD%9C%E7%94%A8%E5%9F%9F-%E5%8D%95%E4%BE%8B%E5%92%8C%E5%A4%9A%E4%BE%8B/</url>
    <content><![CDATA[<h1 id="单例和多例作用域"><a href="#单例和多例作用域" class="headerlink" title="单例和多例作用域"></a>单例和多例作用域</h1><h2 id="使用方法（默认就是单例作用域）"><a href="#使用方法（默认就是单例作用域）" class="headerlink" title="使用方法（默认就是单例作用域）"></a>使用方法（默认就是单例作用域）</h2><p>在scope属性里面选择</p>
<p><img src="/../../TyporaImage/Spring/image-20240807202409495.png" alt="image-20240807202409495"></p>
]]></content>
  </entry>
  <entry>
    <title>全注解式开发-事务</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%85%A8%E6%B3%A8%E8%A7%A3%E5%BC%8F%E5%BC%80%E5%8F%91-%E4%BA%8B%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="事务的全注解式开发"><a href="#事务的全注解式开发" class="headerlink" title="事务的全注解式开发"></a>事务的全注解式开发</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-编写一个特殊的类，添加上相关的注解以替代spring-xml文件"><a href="#1-编写一个特殊的类，添加上相关的注解以替代spring-xml文件" class="headerlink" title="1.编写一个特殊的类，添加上相关的注解以替代spring.xml文件"></a>1.编写一个特殊的类，添加上相关的注解以替代spring.xml文件</h3><p><img src="/./../../TyporaImage/Spring/image-20240924173118053.png" alt="image-20240924173118053"></p>
<h3 id="2-在类中编写spring文件中的bean对象"><a href="#2-在类中编写spring文件中的bean对象" class="headerlink" title="2.在类中编写spring文件中的bean对象"></a>2.在类中编写spring文件中的bean对象</h3><p><img src="/./../../TyporaImage/Spring/image-20240924173323383.png" alt="image-20240924173323383"></p>
<h3 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h3><p><img src="/./../../TyporaImage/Spring/image-20240924173403222.png" alt="image-20240924173403222">开发</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-编写一个特殊的类，添加上相关的注解以替代spring-xml文件-1"><a href="#1-编写一个特殊的类，添加上相关的注解以替代spring-xml文件-1" class="headerlink" title="1.编写一个特殊的类，添加上相关的注解以替代spring.xml文件"></a>1.编写一个特殊的类，添加上相关的注解以替代spring.xml文件</h3><p><img src="/./../../TyporaImage/Spring/image-20240924173118053.png" alt="image-20240924173118053"></p>
<h3 id="2-在类中编写spring文件中的bean对象-1"><a href="#2-在类中编写spring文件中的bean对象-1" class="headerlink" title="2.在类中编写spring文件中的bean对象"></a>2.在类中编写spring文件中的bean对象</h3><p><img src="/./../../TyporaImage/Spring/image-20240924173323383.png" alt="image-20240924173323383"></p>
<h3 id="3-测试-1"><a href="#3-测试-1" class="headerlink" title="3.测试"></a>3.测试</h3><p><img src="/./../../TyporaImage/Spring/image-20240924173403222.png" alt="image-20240924173403222"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E4%BD%9C%E7%94%A8%E5%9F%9F-%E8%87%AA%E5%AE%9A%E4%B9%89scope/</url>
    <content><![CDATA[<h1 id="自定义scope"><a href="#自定义scope" class="headerlink" title="自定义scope"></a>自定义scope</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../../TyporaImage/Spring/image-20240807202929243.png" alt="image-20240807202929243"></p>
<h3 id="1-用内置的scope，直接到spring文件中添加配置"><a href="#1-用内置的scope，直接到spring文件中添加配置" class="headerlink" title="1.用内置的scope，直接到spring文件中添加配置"></a>1.用内置的scope，直接到spring文件中添加配置</h3><p><img src="/../../TyporaImage/Spring/image-20240807203315055.png" alt="image-20240807203315055"></p>
<h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><p><img src="/../../TyporaImage/Spring/image-20240807203346431.png" alt="image-20240807203346431"></p>
]]></content>
  </entry>
  <entry>
    <title>依赖注入</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h1 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>依赖注入（Dependency Injection, DI）是一种设计模式，用于实现对象之间的依赖关系。它允许将对象的依赖关系在外部进行定义，从而解耦对象及其依赖项，提升代码的可维护性和可测试性。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-依赖"><a href="#1-依赖" class="headerlink" title="1.依赖"></a>1.依赖</h3><p>一个对象所依赖的另一个对象。</p>
<h3 id="2-注入器"><a href="#2-注入器" class="headerlink" title="2.注入器"></a>2.注入器</h3><p>负责将依赖注入到对象中的组件或框架。</p>
<h3 id="3-客户端"><a href="#3-客户端" class="headerlink" title="3.客户端"></a>3.客户端</h3><p>依赖注入的接收者，即需要依赖的对象。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-构造函数注入"><a href="#1-构造函数注入" class="headerlink" title="1.构造函数注入"></a>1.构造函数注入</h3><p>依赖通过构造函数传递。</p>
<h3 id="2-设值方法注入"><a href="#2-设值方法注入" class="headerlink" title="2.设值方法注入"></a>2.设值方法注入</h3><p>依赖通过设值方法（setter）传递。</p>
<h3 id="3-接口注入"><a href="#3-接口注入" class="headerlink" title="3.接口注入"></a>3.接口注入</h3><p>依赖通过接口传递。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-手动注入"><a href="#1-手动注入" class="headerlink" title="1.手动注入"></a>1.手动注入</h3><p>开发人员手动管理和注入依赖。</p>
<h3 id="2-自动注入"><a href="#2-自动注入" class="headerlink" title="2.自动注入"></a>2.自动注入</h3><p>使用依赖注入框架（如Spring）自动管理和注入依赖。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过依赖注入来解耦对象及其依赖项，提高代码的可维护性和可测试性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>对象不自己创建依赖，而是通过外部注入这些依赖。对象的创建和依赖关系的管理由外部容器（如Spring容器）负责。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-set注入"><a href="#1-set注入" class="headerlink" title="1.set注入"></a>1.set注入</h3><p>①必须提供set方法，且这个方法以set开头。前三个字母不能随便写，必须是“set”。</p>
<p>②在Spring.xml中配置bean</p>
<h3 id="2-构造注入"><a href="#2-构造注入" class="headerlink" title="2.构造注入"></a>2.构造注入</h3><p>①提供构造方法</p>
<p>②spring.xml中配置</p>
<p>指定参数位置</p>
<p><img src="/../../TyporaImage/Spring/image-20240807162219164.png" alt="image-20240807162219164"></p>
<p>类型匹配</p>
<p><img src="/../../TyporaImage/Spring/image-20240807162243477.png" alt="image-20240807162243477">注入</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>依赖注入（Dependency Injection, DI）是一种设计模式，用于实现对象之间的依赖关系。它允许将对象的依赖关系在外部进行定义，从而解耦对象及其依赖项，提升代码的可维护性和可测试性。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-依赖-1"><a href="#1-依赖-1" class="headerlink" title="1.依赖"></a>1.依赖</h3><p>一个对象所依赖的另一个对象。</p>
<h3 id="2-注入器-1"><a href="#2-注入器-1" class="headerlink" title="2.注入器"></a>2.注入器</h3><p>负责将依赖注入到对象中的组件或框架。</p>
<h3 id="3-客户端-1"><a href="#3-客户端-1" class="headerlink" title="3.客户端"></a>3.客户端</h3><p>依赖注入的接收者，即需要依赖的对象。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-构造函数注入-1"><a href="#1-构造函数注入-1" class="headerlink" title="1.构造函数注入"></a>1.构造函数注入</h3><p>依赖通过构造函数传递。</p>
<h3 id="2-设值方法注入-1"><a href="#2-设值方法注入-1" class="headerlink" title="2.设值方法注入"></a>2.设值方法注入</h3><p>依赖通过设值方法（setter）传递。</p>
<h3 id="3-接口注入-1"><a href="#3-接口注入-1" class="headerlink" title="3.接口注入"></a>3.接口注入</h3><p>依赖通过接口传递。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-手动注入-1"><a href="#1-手动注入-1" class="headerlink" title="1.手动注入"></a>1.手动注入</h3><p>开发人员手动管理和注入依赖。</p>
<h3 id="2-自动注入-1"><a href="#2-自动注入-1" class="headerlink" title="2.自动注入"></a>2.自动注入</h3><p>使用依赖注入框架（如Spring）自动管理和注入依赖。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>通过依赖注入来解耦对象及其依赖项，提高代码的可维护性和可测试性。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>对象不自己创建依赖，而是通过外部注入这些依赖。对象的创建和依赖关系的管理由外部容器（如Spring容器）负责。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-set注入-1"><a href="#1-set注入-1" class="headerlink" title="1.set注入"></a>1.set注入</h3><p>①必须提供set方法，且这个方法以set开头。前三个字母不能随便写，必须是“set”。</p>
<p>②在Spring.xml中配置bean</p>
<h3 id="2-构造注入-1"><a href="#2-构造注入-1" class="headerlink" title="2.构造注入"></a>2.构造注入</h3><p>①提供构造方法</p>
<p>②spring.xml中配置</p>
<p>指定参数位置</p>
<p><img src="/../../TyporaImage/Spring/image-20240807162219164.png" alt="image-20240807162219164"></p>
<p>类型匹配</p>
<p><img src="/../../TyporaImage/Spring/image-20240807162243477.png" alt="image-20240807162243477"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>切点表达式-基于注解</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%88%87%E7%82%B9%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="基于注解的切点表达式"><a href="#基于注解的切点表达式" class="headerlink" title="基于注解的切点表达式"></a>基于注解的切点表达式</h1><p>1.修改切点表达式可以实现固定的方法增强</p>
<p>2.修改公式里面的类的表达式，可以触及到其他的类。</p>
<p>达式</p>
<p>1.修改切点表达式可以实现固定的方法增强</p>
<p>2.修改公式里面的类的表达式，可以触及到其他的类。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>切点表达式</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%88%87%E7%82%B9%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="切点表达式"><a href="#切点表达式" class="headerlink" title="切点表达式"></a>切点表达式</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>切点表达式是用于匹配连接点（如方法调用、构造函数执行等）的一种表达式语言。通过切点表达式，AOP 框架能够判断在哪些特定的代码位置插入横切关注点的逻辑。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.切点签名：用于指定方法的名称、类、包路径等信息，用来匹配特定的连接点。</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918214111310.png" alt="image-20240918214111310"></p>
<p><img src="/./../../TyporaImage/Spring/image-20240918214132545.png" alt="image-20240918214132545"></p>
<p>2.逻辑操作符：可以通过 &amp;&amp;、||、! 等逻辑操作符组合多个切点条件。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/./../../TyporaImage/Spring/image-20240918214027405.png" alt="image-20240918214027405"></p>
<p> 切点表达式通常由包名、类名、方法名等元素组成，配合通配符和条件限制，灵活地筛选出程序中需要织入的连接点。例如：execution(* com.example.service.<em>.</em>(..))。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.执行表达式（execution）：最常用的切点表达式，匹配方法执行的连接点。例如，匹配某个包下所有类的所有方法。<br>2.调用表达式（call）：匹配方法调用的连接点。<br>3.初始化表达式（init）：匹配类构造函数的调用。<br>4.字段获取&#x2F;设置表达式（get&#x2F;set）：匹配属性的读取和写入操作。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过切点表达式，可以灵活控制切面应用的范围，确保横切关注点只在需要的地方生效，避免不必要的性能开销和代码复杂性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>切点表达式就像一个过滤器，通过模式匹配的方式筛选出符合条件的连接点，在这些连接点上执行切面逻辑。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="①定义切面"><a href="#①定义切面" class="headerlink" title="①定义切面"></a>①定义切面</h3><p>在切面中使用 @Pointcut 注解或在配置文件中定义切点表达式。</p>
<h3 id="②指定切入点"><a href="#②指定切入点" class="headerlink" title="②指定切入点"></a>②指定切入点</h3><p>使用 execution、within 等表达式来指定切入点。例如：<br>execution(* com.example.service.<em>.</em>(..))：匹配 com.example.service 包下的所有类中的所有方法。<br>within(com.example.service..*)：匹配 com.example.service 包及其子包中的所有类。</p>
<h3 id="③逻辑操作符"><a href="#③逻辑操作符" class="headerlink" title="③逻辑操作符"></a>③逻辑操作符</h3><p>可以通过 &amp;&amp;、||、! 组合多个切点条件，形成更复杂的匹配逻辑。</p>
<p>达式</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>切点表达式是用于匹配连接点（如方法调用、构造函数执行等）的一种表达式语言。通过切点表达式，AOP 框架能够判断在哪些特定的代码位置插入横切关注点的逻辑。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.切点签名：用于指定方法的名称、类、包路径等信息，用来匹配特定的连接点。</p>
<p><img src="/./../../TyporaImage/Spring/image-20240918214111310.png" alt="image-20240918214111310"></p>
<p><img src="/./../../TyporaImage/Spring/image-20240918214132545.png" alt="image-20240918214132545"></p>
<p>2.逻辑操作符：可以通过 &amp;&amp;、||、! 等逻辑操作符组合多个切点条件。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/./../../TyporaImage/Spring/image-20240918214027405.png" alt="image-20240918214027405"></p>
<p> 切点表达式通常由包名、类名、方法名等元素组成，配合通配符和条件限制，灵活地筛选出程序中需要织入的连接点。例如：execution(* com.example.service.<em>.</em>(..))。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.执行表达式（execution）：最常用的切点表达式，匹配方法执行的连接点。例如，匹配某个包下所有类的所有方法。<br>2.调用表达式（call）：匹配方法调用的连接点。<br>3.初始化表达式（init）：匹配类构造函数的调用。<br>4.字段获取&#x2F;设置表达式（get&#x2F;set）：匹配属性的读取和写入操作。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>通过切点表达式，可以灵活控制切面应用的范围，确保横切关注点只在需要的地方生效，避免不必要的性能开销和代码复杂性。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>切点表达式就像一个过滤器，通过模式匹配的方式筛选出符合条件的连接点，在这些连接点上执行切面逻辑。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="①定义切面-1"><a href="#①定义切面-1" class="headerlink" title="①定义切面"></a>①定义切面</h3><p>在切面中使用 @Pointcut 注解或在配置文件中定义切点表达式。</p>
<h3 id="②指定切入点-1"><a href="#②指定切入点-1" class="headerlink" title="②指定切入点"></a>②指定切入点</h3><p>使用 execution、within 等表达式来指定切入点。例如：<br>execution(* com.example.service.<em>.</em>(..))：匹配 com.example.service 包下的所有类中的所有方法。<br>within(com.example.service..*)：匹配 com.example.service 包及其子包中的所有类。</p>
<h3 id="③逻辑操作符-1"><a href="#③逻辑操作符-1" class="headerlink" title="③逻辑操作符"></a>③逻辑操作符</h3><p>可以通过 &amp;&amp;、||、! 组合多个切点条件，形成更复杂的匹配逻辑。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>切面的顺序--基于注解</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%88%87%E9%9D%A2%E7%9A%84%E9%A1%BA%E5%BA%8F--%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="切面顺序"><a href="#切面顺序" class="headerlink" title="切面顺序"></a>切面顺序</h1><h2 id="通过-Order注解进行排序"><a href="#通过-Order注解进行排序" class="headerlink" title="通过@Order注解进行排序"></a>通过@Order注解进行排序</h2><p><img src="/./../../TyporaImage/Spring/image-20240920170941390.png" alt="image-20240920170941390"></p>
<p>数字越小，优先级越高<br>顺序</p>
<h2 id="通过-Order注解进行排序-1"><a href="#通过-Order注解进行排序-1" class="headerlink" title="通过@Order注解进行排序"></a>通过@Order注解进行排序</h2><p><img src="/./../../TyporaImage/Spring/image-20240920170941390.png" alt="image-20240920170941390"></p>
<p>数字越小，优先级越高</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>动态代理</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h1 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>动态代理是一种设计模式，通过在运行时创建代理对象来控制对原始对象的访问，而不是在编译时就确定代理类。动态代理可以在不修改原始对象的前提下，动态地为对象添加功能，代理类的生成和方法的调用都是在运行时完成的。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-原始对象（目标对象）"><a href="#1-原始对象（目标对象）" class="headerlink" title="1.原始对象（目标对象）"></a>1.原始对象（目标对象）</h3><p>实际执行业务逻辑的对象。</p>
<h3 id="2-代理对象"><a href="#2-代理对象" class="headerlink" title="2.代理对象"></a>2.代理对象</h3><p>在运行时动态生成，控制对原始对象的访问，并可以在调用原始对象的方法之前或之后添加额外的操作。</p>
<h3 id="3-接口"><a href="#3-接口" class="headerlink" title="3.接口"></a>3.接口</h3><p>代理对象和原始对象通常实现相同的接口。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-InvocationHandler"><a href="#1-InvocationHandler" class="headerlink" title="1.InvocationHandler"></a>1.InvocationHandler</h3><p>一个接口，用于定义代理对象在调用方法时的处理方式。</p>
<h3 id="2-Proxy类"><a href="#2-Proxy类" class="headerlink" title="2.Proxy类"></a>2.Proxy类</h3><p>Java中的Proxy类，用于动态生成代理对象。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.JDK动态代理：基于接口的动态代理。原始对象必须实现一个或多个<strong>接口</strong>。</p>
<p>2.CGLIB代理：基于类的动态代理。通过生成原始对象子类的方式实现代理，适用于没有实现接口的类。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>动态代理通过在运行时生成代理对象，可以在不修改原始对象代码的情况下添加功能，如日志记录、事务管理、权限控制等。相比静态代理，它更加灵活，可以应对接口和实现类在开发过程中的变化。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>动态代理在运行时根据原始对象的接口生成代理类，并在代理类中通过反射机制调用原始对象的方法，同时可以在方法调用前后插入自定义的逻辑。代理</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>动态代理是一种设计模式，通过在运行时创建代理对象来控制对原始对象的访问，而不是在编译时就确定代理类。动态代理可以在不修改原始对象的前提下，动态地为对象添加功能，代理类的生成和方法的调用都是在运行时完成的。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-原始对象（目标对象）-1"><a href="#1-原始对象（目标对象）-1" class="headerlink" title="1.原始对象（目标对象）"></a>1.原始对象（目标对象）</h3><p>实际执行业务逻辑的对象。</p>
<h3 id="2-代理对象-1"><a href="#2-代理对象-1" class="headerlink" title="2.代理对象"></a>2.代理对象</h3><p>在运行时动态生成，控制对原始对象的访问，并可以在调用原始对象的方法之前或之后添加额外的操作。</p>
<h3 id="3-接口-1"><a href="#3-接口-1" class="headerlink" title="3.接口"></a>3.接口</h3><p>代理对象和原始对象通常实现相同的接口。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-InvocationHandler-1"><a href="#1-InvocationHandler-1" class="headerlink" title="1.InvocationHandler"></a>1.InvocationHandler</h3><p>一个接口，用于定义代理对象在调用方法时的处理方式。</p>
<h3 id="2-Proxy类-1"><a href="#2-Proxy类-1" class="headerlink" title="2.Proxy类"></a>2.Proxy类</h3><p>Java中的Proxy类，用于动态生成代理对象。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.JDK动态代理：基于接口的动态代理。原始对象必须实现一个或多个<strong>接口</strong>。</p>
<p>2.CGLIB代理：基于类的动态代理。通过生成原始对象子类的方式实现代理，适用于没有实现接口的类。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>动态代理通过在运行时生成代理对象，可以在不修改原始对象代码的情况下添加功能，如日志记录、事务管理、权限控制等。相比静态代理，它更加灵活，可以应对接口和实现类在开发过程中的变化。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>动态代理在运行时根据原始对象的接口生成代理类，并在代理类中通过反射机制调用原始对象的方法，同时可以在方法调用前后插入自定义的逻辑。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>反射机制</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<h1 id="反射机制"><a href="#反射机制" class="headerlink" title="反射机制"></a>反射机制</h1><h2 id="四要素"><a href="#四要素" class="headerlink" title="四要素"></a>四要素</h2><p>1.调用对象</p>
<p>2.方法</p>
<p>3.参数</p>
<p>4.返回值</p>
<p><img src="/../../TyporaImage/Spring/image-20240809161723288.png" alt="image-20240809161723288"><br>机制</p>
<h2 id="四要素-1"><a href="#四要素-1" class="headerlink" title="四要素"></a>四要素</h2><p>1.调用对象</p>
<p>2.方法</p>
<p>3.参数</p>
<p>4.返回值</p>
<p><img src="/../../TyporaImage/Spring/image-20240809161723288.png" alt="image-20240809161723288"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>只读事务启动优化策略</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%8F%AA%E8%AF%BB%E4%BA%8B%E5%8A%A1%E5%90%AF%E5%8A%A8%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5/</url>
    <content><![CDATA[<h1 id="只读事务启动优化策略"><a href="#只读事务启动优化策略" class="headerlink" title="只读事务启动优化策略"></a>只读事务启动优化策略</h1><p><img src="/./../../TyporaImage/Spring/image-20240924163148813.png" alt="image-20240924163148813"></p>
<p>如果设置了只读，那么无法进行增删改操作。</p>
<p>策略</p>
<p><img src="/./../../TyporaImage/Spring/image-20240924163148813.png" alt="image-20240924163148813"></p>
<p>如果设置了只读，那么无法进行增删改操作。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%90%AF%E7%94%A8log4j2%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<h1 id="log4j2日志框架"><a href="#log4j2日志框架" class="headerlink" title="log4j2日志框架"></a>log4j2日志框架</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>1.在pom中引入依赖</p>
<p>2.类的根路径下提供log4j2.xml文件</p>
<h3 id="获取日志记录器对象"><a href="#获取日志记录器对象" class="headerlink" title="获取日志记录器对象"></a>获取日志记录器对象</h3><p>1.创建日志记录器对象</p>
<p>2.记录日志，根据不同级别来输出日志</p>
<p><img src="/../../TyporaImage/Spring/image-20240807161117566.png" alt="image-20240807161117566"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%9F%BA%E4%BA%8EXML%E7%9A%84%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D-byName/</url>
    <content><![CDATA[<h1 id="byName自动装配（基于set方法）"><a href="#byName自动装配（基于set方法）" class="headerlink" title="byName自动装配（基于set方法）"></a>byName自动装配（基于set方法）</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-在引用bean里面设置autowire属性"><a href="#1-在引用bean里面设置autowire属性" class="headerlink" title="1.在引用bean里面设置autowire属性"></a>1.在引用bean里面设置autowire属性</h3><h3 id="2-被引用bean的id填写：set方法名去掉set，剩下的单词小写"><a href="#2-被引用bean的id填写：set方法名去掉set，剩下的单词小写" class="headerlink" title="2.被引用bean的id填写：set方法名去掉set，剩下的单词小写"></a>2.被引用bean的id填写：set方法名去掉set，剩下的单词小写</h3><p><img src="/../../TyporaImage/Spring/image-20240807195759135.png" alt="image-20240807195759135"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%9F%BA%E4%BA%8EXML%E7%9A%84%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D-byType/</url>
    <content><![CDATA[<h1 id="自动装配byType（基于set方法）"><a href="#自动装配byType（基于set方法）" class="headerlink" title="自动装配byType（基于set方法）"></a>自动装配byType（基于set方法）</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../../TyporaImage/Spring/image-20240807200521872.png" alt="image-20240807200521872"></p>
]]></content>
  </entry>
  <entry>
    <title>声明式事务-XML实现</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E5%8A%A1-XML%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="XML实现方式-事务"><a href="#XML实现方式-事务" class="headerlink" title="XML实现方式-事务"></a>XML实现方式-事务</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>先引入相关的依赖，配置相关的spring命名空间。</p>
<h3 id="1-在spring-xml中配置事务管理器"><a href="#1-在spring-xml中配置事务管理器" class="headerlink" title="1.在spring.xml中配置事务管理器"></a>1.在spring.xml中配置事务管理器</h3><h3 id="2-配置通知"><a href="#2-配置通知" class="headerlink" title="2.配置通知"></a>2.配置通知</h3><p><img src="/./../../TyporaImage/Spring/image-20240924174227325.png" alt="image-20240924174227325"></p>
<h3 id="3-配置切面"><a href="#3-配置切面" class="headerlink" title="3.配置切面"></a>3.配置切面</h3><p><img src="/./../../TyporaImage/Spring/image-20240924174319165.png" alt="image-20240924174319165"></p>
<h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h3><p><img src="/./../../TyporaImage/Spring/image-20240924174434007.png" alt="image-20240924174434007"></p>
<p>事务</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>先引入相关的依赖，配置相关的spring命名空间。</p>
<h3 id="1-在spring-xml中配置事务管理器-1"><a href="#1-在spring-xml中配置事务管理器-1" class="headerlink" title="1.在spring.xml中配置事务管理器"></a>1.在spring.xml中配置事务管理器</h3><h3 id="2-配置通知-1"><a href="#2-配置通知-1" class="headerlink" title="2.配置通知"></a>2.配置通知</h3><p><img src="/./../../TyporaImage/Spring/image-20240924174227325.png" alt="image-20240924174227325"></p>
<h3 id="3-配置切面-1"><a href="#3-配置切面-1" class="headerlink" title="3.配置切面"></a>3.配置切面</h3><p><img src="/./../../TyporaImage/Spring/image-20240924174319165.png" alt="image-20240924174319165"></p>
<h3 id="4-测试-1"><a href="#4-测试-1" class="headerlink" title="4.测试"></a>4.测试</h3><p><img src="/./../../TyporaImage/Spring/image-20240924174434007.png" alt="image-20240924174434007"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>将自己new对象纳入Spring管理</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%B0%86%E8%87%AA%E5%B7%B1new%E5%AF%B9%E8%B1%A1%E7%BA%B3%E5%85%A5Spring%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h1 id="new方式纳入spring管理"><a href="#new方式纳入spring管理" class="headerlink" title="new方式纳入spring管理"></a>new方式纳入spring管理</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../../TyporaImage/Spring/image-20240808210111686.png" alt="image-20240808210111686"></p>
<h3 id="1-自己创建一个对象"><a href="#1-自己创建一个对象" class="headerlink" title="1.自己创建一个对象"></a>1.自己创建一个对象</h3><h3 id="2-通过相关方法纳入管理"><a href="#2-通过相关方法纳入管理" class="headerlink" title="2.通过相关方法纳入管理"></a>2.通过相关方法纳入管理</h3><h3 id="3-从spring容器中获取已经纳入管理的对象管理"><a href="#3-从spring容器中获取已经纳入管理的对象管理" class="headerlink" title="3.从spring容器中获取已经纳入管理的对象管理"></a>3.从spring容器中获取已经纳入管理的对象管理</h3><h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../../TyporaImage/Spring/image-20240808210111686.png" alt="image-20240808210111686"></p>
<h3 id="1-自己创建一个对象-1"><a href="#1-自己创建一个对象-1" class="headerlink" title="1.自己创建一个对象"></a>1.自己创建一个对象</h3><h3 id="2-通过相关方法纳入管理-1"><a href="#2-通过相关方法纳入管理-1" class="headerlink" title="2.通过相关方法纳入管理"></a>2.通过相关方法纳入管理</h3><h3 id="3-从spring容器中获取已经纳入管理的对象"><a href="#3-从spring容器中获取已经纳入管理的对象" class="headerlink" title="3.从spring容器中获取已经纳入管理的对象"></a>3.从spring容器中获取已经纳入管理的对象</h3>]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>工厂方法模式</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="工厂方法模式"><a href="#工厂方法模式" class="headerlink" title="工厂方法模式"></a>工厂方法模式</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>工厂方法模式是一种设计模式，它提供一个创建对象的接口，让子类决定实例化哪个具体类。其目的是通过定义一个创建对象的接口来实现对象的创建，而不是直接通过 new 操作来实例化对象。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-抽象产品（Product）"><a href="#1-抽象产品（Product）" class="headerlink" title="1.抽象产品（Product）"></a>1.抽象产品（Product）</h3><p>定义了产品的接口。</p>
<h3 id="2-具体产品（ConcreteProduct）"><a href="#2-具体产品（ConcreteProduct）" class="headerlink" title="2.具体产品（ConcreteProduct）"></a>2.具体产品（ConcreteProduct）</h3><p>实现了抽象产品接口。</p>
<h3 id="3-抽象工厂（Creator）"><a href="#3-抽象工厂（Creator）" class="headerlink" title="3.抽象工厂（Creator）"></a>3.抽象工厂（Creator）</h3><p>声明了返回产品对象的工厂方法。</p>
<h3 id="4-具体工厂（ConcreteCreator）"><a href="#4-具体工厂（ConcreteCreator）" class="headerlink" title="4.具体工厂（ConcreteCreator）"></a>4.具体工厂（ConcreteCreator）</h3><p>实现了工厂方法，返回具体产品实例。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>工厂方法模式主要有以下两种变体：</p>
<p>1.普通工厂方法模式：只有一个工厂类，所有产品的实例化都由这个工厂类负责。<br>2.多工厂方法模式：每个产品有一个独立的工厂类，各个工厂类负责各自产品的实例化。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>1.使得一个类的实例化延迟到其子类，解决了对象创建时的依赖问题。<br>2.提高代码的灵活性和可维护性，通过工厂方法可以轻松地扩展新的产品类。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>工厂方法模式通过定义一个工厂接口，让子类去实现这个接口并返回具体的产品对象。这样，当需要创建某个产品对象时，客户端只需调用工厂接口，而不需要直接依赖具体的产品类。</p>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>模式</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>工厂方法模式是一种设计模式，它提供一个创建对象的接口，让子类决定实例化哪个具体类。其目的是通过定义一个创建对象的接口来实现对象的创建，而不是直接通过 new 操作来实例化对象。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-抽象产品（Product）-1"><a href="#1-抽象产品（Product）-1" class="headerlink" title="1.抽象产品（Product）"></a>1.抽象产品（Product）</h3><p>定义了产品的接口。</p>
<h3 id="2-具体产品（ConcreteProduct）-1"><a href="#2-具体产品（ConcreteProduct）-1" class="headerlink" title="2.具体产品（ConcreteProduct）"></a>2.具体产品（ConcreteProduct）</h3><p>实现了抽象产品接口。</p>
<h3 id="3-抽象工厂（Creator）-1"><a href="#3-抽象工厂（Creator）-1" class="headerlink" title="3.抽象工厂（Creator）"></a>3.抽象工厂（Creator）</h3><p>声明了返回产品对象的工厂方法。</p>
<h3 id="4-具体工厂（ConcreteCreator）-1"><a href="#4-具体工厂（ConcreteCreator）-1" class="headerlink" title="4.具体工厂（ConcreteCreator）"></a>4.具体工厂（ConcreteCreator）</h3><p>实现了工厂方法，返回具体产品实例。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>工厂方法模式主要有以下两种变体：</p>
<p>1.普通工厂方法模式：只有一个工厂类，所有产品的实例化都由这个工厂类负责。<br>2.多工厂方法模式：每个产品有一个独立的工厂类，各个工厂类负责各自产品的实例化。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>1.使得一个类的实例化延迟到其子类，解决了对象创建时的依赖问题。<br>2.提高代码的灵活性和可维护性，通过工厂方法可以轻松地扩展新的产品类。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>工厂方法模式通过定义一个工厂接口，让子类去实现这个接口并返回具体的产品对象。这样，当需要创建某个产品对象时，客户端只需调用工厂接口，而不需要直接依赖具体的产品类。</p>
<h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2>]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>工厂模式（Factory Pattern）是一种创建型设计模式，它定义了一个用于创建对象的接口，但由子类决定要实例化的类是哪一个。这样使得一个类的实例化延迟到其子类。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-工厂接口（或抽象工厂类）"><a href="#1-工厂接口（或抽象工厂类）" class="headerlink" title="1.工厂接口（或抽象工厂类）"></a>1.工厂接口（或抽象工厂类）</h3><p>定义创建对象的方法。</p>
<h3 id="2-具体工厂类"><a href="#2-具体工厂类" class="headerlink" title="2.具体工厂类"></a>2.具体工厂类</h3><p>实现工厂接口，负责创建具体的产品对象。</p>
<h3 id="3-产品接口（或抽象产品类）"><a href="#3-产品接口（或抽象产品类）" class="headerlink" title="3.产品接口（或抽象产品类）"></a>3.产品接口（或抽象产品类）</h3><p>定义产品的公共接口。</p>
<h3 id="4-具体产品类"><a href="#4-具体产品类" class="headerlink" title="4.具体产品类"></a>4.具体产品类</h3><p>实现产品接口，定义具体产品的行为。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.工厂接口：Factory</p>
<p>2.具体工厂类：ConcreteFactory1, ConcreteFactory2</p>
<p>3.产品接口：Product</p>
<p>4.具体产品类：ConcreteProduct1, ConcreteProduct2</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-简单工厂模式"><a href="#1-简单工厂模式" class="headerlink" title="1.简单工厂模式"></a>1.简单工厂模式</h3><p>由一个工厂类决定创建哪一种产品实例，客户端通过向工厂传递参数来获得特定的产品对象。</p>
<h3 id="2-工厂方法模式"><a href="#2-工厂方法模式" class="headerlink" title="2.工厂方法模式"></a>2.工厂方法模式</h3><p>定义一个创建对象的接口，但让子类决定实例化哪一个类。</p>
<h3 id="3-抽象工厂模式"><a href="#3-抽象工厂模式" class="headerlink" title="3.抽象工厂模式"></a>3.抽象工厂模式</h3><p>提供一个创建一系列相关或互相依赖对象的接口，而无需指定它们具体的类。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>减少代码的耦合性，提供对象创建的灵活性和扩展性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过定义工厂接口来创建产品对象，使客户端只需与工厂接口交互，而不需直接实例化具体产品类。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E5%BC%95%E5%85%A5%E5%A4%96%E9%83%A8%E7%9A%84%E5%B1%9E%E6%80%A7%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="外部属性配置文件"><a href="#外部属性配置文件" class="headerlink" title="外部属性配置文件"></a>外部属性配置文件</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-修改xml头部文件，引入context命名空间"><a href="#1-修改xml头部文件，引入context命名空间" class="headerlink" title="1.修改xml头部文件，引入context命名空间"></a>1.修改xml头部文件，引入context命名空间</h3><h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><p><img src="/../../TyporaImage/Spring/image-20240807200947552.png" alt="image-20240807200947552"></p>
]]></content>
  </entry>
  <entry>
    <title>所有通知类型-基于注解</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E6%89%80%E6%9C%89%E9%80%9A%E7%9F%A5%E7%B1%BB%E5%9E%8B-%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="所有通知的类型"><a href="#所有通知的类型" class="headerlink" title="所有通知的类型"></a>所有通知的类型</h1><h2 id="通知的类型"><a href="#通知的类型" class="headerlink" title="通知的类型"></a>通知的类型</h2><p><img src="/./../../TyporaImage/Spring/image-20240919213546252.png" alt="image-20240919213546252"></p>
<h2 id="通知的触发顺序"><a href="#通知的触发顺序" class="headerlink" title="通知的触发顺序"></a>通知的触发顺序</h2><h3 id="正常触发："><a href="#正常触发：" class="headerlink" title="正常触发："></a>正常触发：</h3><p>1.前环绕通知</p>
<p>2.前置</p>
<p>3.后置</p>
<p>4.后环绕</p>
<h3 id="异常触发："><a href="#异常触发：" class="headerlink" title="异常触发："></a>异常触发：</h3><p>1.前环绕</p>
<p>2.前置</p>
<p>3.异常</p>
<p>4.最终</p>
<p>类型</p>
<h2 id="通知的类型-1"><a href="#通知的类型-1" class="headerlink" title="通知的类型"></a>通知的类型</h2><p><img src="/./../../TyporaImage/Spring/image-20240919213546252.png" alt="image-20240919213546252"></p>
<h2 id="通知的触发顺序-1"><a href="#通知的触发顺序-1" class="headerlink" title="通知的触发顺序"></a>通知的触发顺序</h2><h3 id="正常触发：-1"><a href="#正常触发：-1" class="headerlink" title="正常触发："></a>正常触发：</h3><p>1.前环绕通知</p>
<p>2.前置</p>
<p>3.后置</p>
<p>4.后环绕</p>
<h3 id="异常触发：-1"><a href="#异常触发：-1" class="headerlink" title="异常触发："></a>异常触发：</h3><p>1.前环绕</p>
<p>2.前置</p>
<p>3.异常</p>
<p>4.最终</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>横切关注点</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E6%A8%AA%E5%88%87%E5%85%B3%E6%B3%A8%E7%82%B9/</url>
    <content><![CDATA[<h1 id="横切关注点"><a href="#横切关注点" class="headerlink" title="横切关注点"></a>横切关注点</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>横切关注点指的是那些在系统的多个模块中都会出现的、与核心业务逻辑无关的功能性需求。这些关注点通常是系统的非功能性需求，例如日志记录、事务管理、安全性、缓存、异常处理等。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.核心业务逻辑：系统的主要功能模块，通常是面向特定业务需求的，如订单处理、用户管理等。<br>2.横切关注点：与业务无关但广泛存在的需求，如性能监控、鉴权机制等，贯穿系统多个模块。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p> 横切关注点通常并不直接参与业务流程，但它的逻辑散布在业务代码的多个地方，导致代码耦合。结构上，横切关注点可能以方法调用、拦截器或配置文件的形式存在。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-功能性横切关注点"><a href="#1-功能性横切关注点" class="headerlink" title="1.功能性横切关注点"></a>1.功能性横切关注点</h3><p>例如事务管理、异常处理等，属于功能性的横切需求。</p>
<h3 id="2-非功能性横切关注点"><a href="#2-非功能性横切关注点" class="headerlink" title="2.非功能性横切关注点"></a>2.非功能性横切关注点</h3><p>如安全性、日志、性能监控等，与系统功能无关，但确保系统正常运行。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>减少系统中重复的、分散的逻辑，使系统代码更加清晰和易维护，并提供一种集中管理这些关注点的方式。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>横切关注点是那些在系统多个部分都需要执行的功能，例如日志记录可以在每个重要操作前后记录信息。注点</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>横切关注点指的是那些在系统的多个模块中都会出现的、与核心业务逻辑无关的功能性需求。这些关注点通常是系统的非功能性需求，例如日志记录、事务管理、安全性、缓存、异常处理等。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.核心业务逻辑：系统的主要功能模块，通常是面向特定业务需求的，如订单处理、用户管理等。<br>2.横切关注点：与业务无关但广泛存在的需求，如性能监控、鉴权机制等，贯穿系统多个模块。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p> 横切关注点通常并不直接参与业务流程，但它的逻辑散布在业务代码的多个地方，导致代码耦合。结构上，横切关注点可能以方法调用、拦截器或配置文件的形式存在。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-功能性横切关注点-1"><a href="#1-功能性横切关注点-1" class="headerlink" title="1.功能性横切关注点"></a>1.功能性横切关注点</h3><p>例如事务管理、异常处理等，属于功能性的横切需求。</p>
<h3 id="2-非功能性横切关注点-1"><a href="#2-非功能性横切关注点-1" class="headerlink" title="2.非功能性横切关注点"></a>2.非功能性横切关注点</h3><p>如安全性、日志、性能监控等，与系统功能无关，但确保系统正常运行。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>减少系统中重复的、分散的逻辑，使系统代码更加清晰和易维护，并提供一种集中管理这些关注点的方式。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>横切关注点是那些在系统多个部分都需要执行的功能，例如日志记录可以在每个重要操作前后记录信息。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>泛型</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E6%B3%9B%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>泛型（Generics）是Java中的一种语言特性，允许在类、接口和方法中使用类型参数，从而使代码能够处理多种类型而无需重复编写代码。泛型提供了类型的参数化，使得代码在编译时可以检查类型安全性。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-类型参数"><a href="#1-类型参数" class="headerlink" title="1.类型参数"></a>1.类型参数</h3><p>泛型定义中使用的符号，用于表示未知的类型，通常使用大写字母，如T、E、K、V等。例如：</p>
<p>T：Type，表示一个通用的类型。<br>E：Element，表示集合中的元素类型。<br>K：Key，表示键的类型。<br>V：Value，表示值的类型。</p>
<h3 id="2-泛型类"><a href="#2-泛型类" class="headerlink" title="2.泛型类"></a>2.泛型类</h3><p>使用泛型的类，例如List<T>，Map&lt;K, V&gt;等。</p>
<h3 id="3-泛型接口"><a href="#3-泛型接口" class="headerlink" title="3.泛型接口"></a>3.泛型接口</h3><p>使用泛型的接口，例如Comparable<T>。</p>
<h3 id="4-泛型方法"><a href="#4-泛型方法" class="headerlink" title="4.泛型方法"></a>4.泛型方法</h3><p>使用泛型的类方法，例如public <T> void print(T t)。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>泛型可以应用于类、接口和方法：</p>
<h3 id="1-泛型类"><a href="#1-泛型类" class="headerlink" title="1.泛型类"></a>1.泛型类</h3><p>允许类处理不同的数据类型。</p>
<h3 id="2-泛型接口"><a href="#2-泛型接口" class="headerlink" title="2.泛型接口"></a>2.泛型接口</h3><p>允许接口中的方法使用泛型类型。</p>
<h3 id="3-泛型方法"><a href="#3-泛型方法" class="headerlink" title="3.泛型方法"></a>3.泛型方法</h3><p>在方法声明中引入类型参数。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>1.类型安全：泛型在编译时提供类型检查，减少了运行时错误。<br>2.代码重用：通过泛型，代码可以处理多种类型而无需重复编写，增强了代码的通用性。<br>3.可读性：泛型使得代码更具表达性，明确了变量和方法的类型。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>泛型的基本原理是通过类型参数化来实现代码的灵活性。编译器在编译时会对泛型代码进行类型检查，并在必要时进行类型擦除，将泛型类型替换为实际的对象类型（通常是Object）。泛型</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>泛型（Generics）是Java中的一种语言特性，允许在类、接口和方法中使用类型参数，从而使代码能够处理多种类型而无需重复编写代码。泛型提供了类型的参数化，使得代码在编译时可以检查类型安全性。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-类型参数-1"><a href="#1-类型参数-1" class="headerlink" title="1.类型参数"></a>1.类型参数</h3><p>泛型定义中使用的符号，用于表示未知的类型，通常使用大写字母，如T、E、K、V等。例如：</p>
<p>T：Type，表示一个通用的类型。<br>E：Element，表示集合中的元素类型。<br>K：Key，表示键的类型。<br>V：Value，表示值的类型。</p>
<h3 id="2-泛型类-1"><a href="#2-泛型类-1" class="headerlink" title="2.泛型类"></a>2.泛型类</h3><p>使用泛型的类，例如List<T>，Map&lt;K, V&gt;等。</p>
<h3 id="3-泛型接口-1"><a href="#3-泛型接口-1" class="headerlink" title="3.泛型接口"></a>3.泛型接口</h3><p>使用泛型的接口，例如Comparable<T>。</p>
<h3 id="4-泛型方法-1"><a href="#4-泛型方法-1" class="headerlink" title="4.泛型方法"></a>4.泛型方法</h3><p>使用泛型的类方法，例如public <T> void print(T t)。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>泛型可以应用于类、接口和方法：</p>
<h3 id="1-泛型类-1"><a href="#1-泛型类-1" class="headerlink" title="1.泛型类"></a>1.泛型类</h3><p>允许类处理不同的数据类型。</p>
<h3 id="2-泛型接口-1"><a href="#2-泛型接口-1" class="headerlink" title="2.泛型接口"></a>2.泛型接口</h3><p>允许接口中的方法使用泛型类型。</p>
<h3 id="3-泛型方法-1"><a href="#3-泛型方法-1" class="headerlink" title="3.泛型方法"></a>3.泛型方法</h3><p>在方法声明中引入类型参数。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>1.类型安全：泛型在编译时提供类型检查，减少了运行时错误。<br>2.代码重用：通过泛型，代码可以处理多种类型而无需重复编写，增强了代码的通用性。<br>3.可读性：泛型使得代码更具表达性，明确了变量和方法的类型。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>泛型的基本原理是通过类型参数化来实现代码的灵活性。编译器在编译时会对泛型代码进行类型检查，并在必要时进行类型擦除，将泛型类型替换为实际的对象类型（通常是Object）。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>注入Date-FactoryBean</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E6%B3%A8%E5%85%A5Date-FactoryBean/</url>
    <content><![CDATA[<h1 id="注入Date"><a href="#注入Date" class="headerlink" title="注入Date"></a>注入Date</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-创建FactoryBean工厂类，实现接口"><a href="#1-创建FactoryBean工厂类，实现接口" class="headerlink" title="1.创建FactoryBean工厂类，实现接口"></a>1.创建FactoryBean工厂类，实现接口</h3><p><img src="/../../TyporaImage/Spring/image-20240808165421212.png" alt="image-20240808165421212"></p>
<h3 id="2-配置相关spring文件"><a href="#2-配置相关spring文件" class="headerlink" title="2.配置相关spring文件"></a>2.配置相关spring文件</h3><p><img src="/../../TyporaImage/Spring/image-20240808165822844.png" alt="image-20240808165822844"></p>
<h3 id="3-在测试类中使用相关类"><a href="#3-在测试类中使用相关类" class="headerlink" title="3.在测试类中使用相关类"></a>3.在测试类中使用相关类</h3><p><img src="/../../TyporaImage/Spring/image-20240808165831460.png" alt="image-20240808165831460">te</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-创建FactoryBean工厂类，实现接口-1"><a href="#1-创建FactoryBean工厂类，实现接口-1" class="headerlink" title="1.创建FactoryBean工厂类，实现接口"></a>1.创建FactoryBean工厂类，实现接口</h3><p><img src="/../../TyporaImage/Spring/image-20240808165421212.png" alt="image-20240808165421212"></p>
<h3 id="2-配置相关spring文件-1"><a href="#2-配置相关spring文件-1" class="headerlink" title="2.配置相关spring文件"></a>2.配置相关spring文件</h3><p><img src="/../../TyporaImage/Spring/image-20240808165822844.png" alt="image-20240808165822844"></p>
<h3 id="3-在测试类中使用相关类-1"><a href="#3-在测试类中使用相关类-1" class="headerlink" title="3.在测试类中使用相关类"></a>3.在测试类中使用相关类</h3><p><img src="/../../TyporaImage/Spring/image-20240808165831460.png" alt="image-20240808165831460"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>注解行为-注解方式</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E6%B3%A8%E8%A7%A3%E8%A1%8C%E4%B8%BA-%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="注解行为"><a href="#注解行为" class="headerlink" title="注解行为"></a>注解行为</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-spring-xml中配置事务管理器"><a href="#1-spring-xml中配置事务管理器" class="headerlink" title="1.spring.xml中配置事务管理器"></a>1.spring.xml中配置事务管理器</h3><p><img src="/./../../TyporaImage/Spring/image-20240924105015072.png" alt="image-20240924105015072"></p>
<h3 id="2-添加命名空间"><a href="#2-添加命名空间" class="headerlink" title="2.添加命名空间"></a>2.添加命名空间</h3><p><img src="/./../../TyporaImage/Spring/image-20240924105033644.png" alt="image-20240924105033644"></p>
<h3 id="3-开启事务注解驱动器"><a href="#3-开启事务注解驱动器" class="headerlink" title="3.开启事务注解驱动器"></a>3.开启事务注解驱动器</h3><p><img src="/./../../TyporaImage/Spring/image-20240924105106156.png" alt="image-20240924105106156"></p>
<h3 id="4-将想要开启事务的类或者方法加上注解。"><a href="#4-将想要开启事务的类或者方法加上注解。" class="headerlink" title="4.将想要开启事务的类或者方法加上注解。"></a>4.将想要开启事务的类或者方法加上注解。</h3><p><img src="/./../../TyporaImage/Spring/image-20240924110134427.png" alt="image-20240924110134427">行为</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-spring-xml中配置事务管理器-1"><a href="#1-spring-xml中配置事务管理器-1" class="headerlink" title="1.spring.xml中配置事务管理器"></a>1.spring.xml中配置事务管理器</h3><p><img src="/./../../TyporaImage/Spring/image-20240924105015072.png" alt="image-20240924105015072"></p>
<h3 id="2-添加命名空间-1"><a href="#2-添加命名空间-1" class="headerlink" title="2.添加命名空间"></a>2.添加命名空间</h3><p><img src="/./../../TyporaImage/Spring/image-20240924105033644.png" alt="image-20240924105033644"></p>
<h3 id="3-开启事务注解驱动器-1"><a href="#3-开启事务注解驱动器-1" class="headerlink" title="3.开启事务注解驱动器"></a>3.开启事务注解驱动器</h3><p><img src="/./../../TyporaImage/Spring/image-20240924105106156.png" alt="image-20240924105106156"></p>
<h3 id="4-将想要开启事务的类或者方法加上注解。-1"><a href="#4-将想要开启事务的类或者方法加上注解。-1" class="headerlink" title="4.将想要开启事务的类或者方法加上注解。"></a>4.将想要开启事务的类或者方法加上注解。</h3><p><img src="/./../../TyporaImage/Spring/image-20240924110134427.png" alt="image-20240924110134427"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>相关知识点</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    <content><![CDATA[<h1 id="1-OCP原则"><a href="#1-OCP原则" class="headerlink" title="1.OCP原则"></a>1.OCP原则</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>OCP（Open-Closed Principle，开闭原则）是面向对象设计中的一条重要原则，指的是一个软件实体应当对扩展开放，对修改关闭。简单来说，应该能够通过增加新的代码来扩展功能，而不必修改已有的代码。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-开放（Open）"><a href="#1-开放（Open）" class="headerlink" title="1.开放（Open）"></a>1.开放（Open）</h3><p>系统应该是开放的，允许在不修改现有代码的情况下添加新的功能。</p>
<h3 id="2-关闭（Closed）"><a href="#2-关闭（Closed）" class="headerlink" title="2.关闭（Closed）"></a>2.关闭（Closed）</h3><p>系统应该是关闭的，不允许对现有的代码进行修改，防止引入新的错误。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-接口和抽象类"><a href="#1-接口和抽象类" class="headerlink" title="1.接口和抽象类"></a>1.接口和抽象类</h3><p>使用接口或抽象类定义系统的核心功能。</p>
<h3 id="2-实现类"><a href="#2-实现类" class="headerlink" title="2.实现类"></a>2.实现类</h3><p>通过实现接口或继承抽象类来扩展系统的功能。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>提高软件系统的可扩展性和可维护性，减少由于代码修改引入的错误。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过设计系统的模块化和使用抽象来实现对扩展开放、对修改关闭。</p>
<h1 id="2-依赖倒置原则（DIP）"><a href="#2-依赖倒置原则（DIP）" class="headerlink" title="2.依赖倒置原则（DIP）"></a>2.依赖倒置原则（DIP）</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>依赖倒置原则（Dependency Inversion Principle, DIP）是面向对象设计中的一条重要原则，指的是高层模块不应该依赖于低层模块，二者都应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-高层模块"><a href="#1-高层模块" class="headerlink" title="1.高层模块"></a>1.高层模块</h3><p>通常是业务逻辑层，负责完成系统的主要功能。</p>
<h3 id="2-低层模块"><a href="#2-低层模块" class="headerlink" title="2.低层模块"></a>2.低层模块</h3><p>通常是实现细节层，负责具体的实现任务。</p>
<h3 id="3-抽象"><a href="#3-抽象" class="headerlink" title="3.抽象"></a>3.抽象</h3><p>接口或抽象类，定义模块之间的契约或协议。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-接口-抽象类"><a href="#1-接口-抽象类" class="headerlink" title="1.接口&#x2F;抽象类"></a>1.接口&#x2F;抽象类</h3><p>定义高层模块和低层模块的交互契约。</p>
<h3 id="2-依赖注入"><a href="#2-依赖注入" class="headerlink" title="2.依赖注入"></a>2.依赖注入</h3><p>通过构造函数、属性或接口注入具体实现。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>减少系统模块之间的耦合，使系统更具灵活性和可维护性，并且更容易进行单元测试。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过依赖于抽象（如接口或抽象类），实现模块之间的松耦合。</p>
<h1 id="3-控制反转（思想）"><a href="#3-控制反转（思想）" class="headerlink" title="3.控制反转（思想）"></a>3.控制反转（思想）</h1><h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>控制反转（IoC）是一种设计思想，通过将对象的创建和依赖关系的管理权从对象本身反转给外部容器来实现组件之间的解耦。这种设计思想使得组件之间的依赖关系更加松散，提高了系统的可维护性和灵活性。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-依赖"><a href="#1-依赖" class="headerlink" title="1.依赖"></a>1.依赖</h3><p>组件或类所需要的外部资源或服务。</p>
<h3 id="2-IoC-容器"><a href="#2-IoC-容器" class="headerlink" title="2.IoC 容器"></a>2.IoC 容器</h3><p>负责创建对象并注入其所需依赖的外部管理机制。</p>
<h3 id="3-依赖注入"><a href="#3-依赖注入" class="headerlink" title="3.依赖注入"></a>3.依赖注入</h3><p>IoC 的一种具体实现方式，将依赖注入到对象中。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-传统控制"><a href="#1-传统控制" class="headerlink" title="1.传统控制"></a>1.传统控制</h3><p>对象自行创建和管理其依赖。</p>
<h3 id="2-控制反转"><a href="#2-控制反转" class="headerlink" title="2.控制反转"></a>2.控制反转</h3><p>对象依赖的创建和管理由外部容器负责。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-依赖注入（Dependency-Injection-DI）"><a href="#1-依赖注入（Dependency-Injection-DI）" class="headerlink" title="1.依赖注入（Dependency Injection, DI）"></a>1.依赖注入（Dependency Injection, DI）</h3><p>构造函数注入、属性注入、方法注入。</p>
<h3 id="2-依赖查找（Dependency-Lookup）"><a href="#2-依赖查找（Dependency-Lookup）" class="headerlink" title="2.依赖查找（Dependency Lookup）"></a>2.依赖查找（Dependency Lookup）</h3><p>对象主动从容器中查找和获取依赖。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><h3 id="1-解耦"><a href="#1-解耦" class="headerlink" title="1.解耦"></a>1.解耦</h3><p>减少类与类之间的直接依赖，增加代码的可维护性和灵活性。</p>
<h3 id="2-可测试性"><a href="#2-可测试性" class="headerlink" title="2.可测试性"></a>2.可测试性</h3><p>通过依赖注入，使得依赖对象可以被轻松替换为测试替身，方便单元测试。</p>
<h3 id="3-重用性"><a href="#3-重用性" class="headerlink" title="3.重用性"></a>3.重用性</h3><p>通过将依赖的管理交给外部容器，使得类更加通用和易于复用。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p>对象的创建和依赖关系由外部容器管理，组件不再自行管理其依赖对象。</p>
<h1 id="4-根路径"><a href="#4-根路径" class="headerlink" title="4.根路径"></a>4.根路径</h1><h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>根路径（Root Path）：指文件系统或URL中最高级别的目录。它是所有文件和子目录的起点，位于文件系统层次结构的顶层。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.文件系统中的根路径通常表示为 &#x2F;（在 Unix 和类 Unix 系统中，如 Linux、macOS）或 C:\（在 Windows 系统中）。<br>2.URL 中的根路径通常指的是一个网站的起始位置，例如 <a href="https://www.example.com/%E3%80%82">https://www.example.com/。</a></p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-在文件系统中"><a href="#1-在文件系统中" class="headerlink" title="1.在文件系统中"></a>1.在文件系统中</h3><p>根路径包含所有文件和子目录。</p>
<h3 id="2-在-URL-中"><a href="#2-在-URL-中" class="headerlink" title="2.在 URL 中"></a>2.在 URL 中</h3><p>根路径指向网站的主页或主目录。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-文件系统根路径"><a href="#1-文件系统根路径" class="headerlink" title="1.文件系统根路径"></a>1.文件系统根路径</h3><p>如 &#x2F;（Unix 系统）和 C:\（Windows 系统）。</p>
<h3 id="2-URL-根路径"><a href="#2-URL-根路径" class="headerlink" title="2.URL 根路径"></a>2.URL 根路径</h3><p>如 <a href="https://www.example.com/%E3%80%82">https://www.example.com/。</a></p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>1.提供一个统一的起点，组织和管理所有文件和目录。<br>2.在网络环境中，定义资源访问的基础路径。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p>根路径在文件系统中是最高级的目录，所有其他目录和文件都从此路径派生。在 URL 中，根路径是访问网站内容的基础起点。</p>
<h1 id="5-类的根路径"><a href="#5-类的根路径" class="headerlink" title="5.类的根路径"></a>5.类的根路径</h1><h2 id="定"><a href="#定" class="headerlink" title="定"></a>定</h2><p>类的根路径（Class Path）是Java虚拟机（JVM）和Java编译器用来查找类文件（.class）的路径集合。它指定了JVM和编译器在运行和编译Java程序时应该搜索的目录和JAR文件位置。</p>
<h2 id="组成部分-4"><a href="#组成部分-4" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p>包含.class文件的文件夹。</p>
<h3 id="JAR文件"><a href="#JAR文件" class="headerlink" title="JAR文件"></a>JAR文件</h3><p>Java归档文件，包含多个.class文件和相关资源。</p>
<h3 id="ZIP文件"><a href="#ZIP文件" class="headerlink" title="ZIP文件"></a>ZIP文件</h3><p>类似于JAR文件的压缩文件。</p>
<h3 id="资源文件"><a href="#资源文件" class="headerlink" title="资源文件"></a>资源文件</h3><p>资源文件类路径中可以包含其他类型的文件，如配置文件、图像文件等。</p>
<h2 id="结构形式-4"><a href="#结构形式-4" class="headerlink" title="结构形式"></a>结构形式</h2><p>类路径可以包含多个路径，这些路径用系统特定的分隔符分开（Windows系统用分号;，Unix系统用冒号:）。例如：</p>
<p>.;lib&#x2F;foo.jar;lib&#x2F;bar&#x2F;</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-系统类路径"><a href="#1-系统类路径" class="headerlink" title="1.系统类路径"></a>1.系统类路径</h3><p>由Java运行时环境（JRE）默认包含的路径，通常包含标准Java类库。</p>
<h3 id="2-用户类路径"><a href="#2-用户类路径" class="headerlink" title="2.用户类路径"></a>2.用户类路径</h3><p>用户或开发人员指定的包含应用程序类文件和资源的路径。</p>
<h2 id="目的-4"><a href="#目的-4" class="headerlink" title="目的"></a>目的</h2><p>提供一个机制，使得JVM和编译器能够在正确的位置查找和加载所需的类文件和资源，确保Java程序能正常运行。</p>
<h2 id="基本原理-4"><a href="#基本原理-4" class="headerlink" title="基本原理"></a>基本原理</h2><p>当JVM启动时，或者当Java编译器编译代码时，它会根据类路径搜索目录和JAR文件来找到所需的.class文件和资源文件。如果在指定的类路径中找不到所需的类文件，JVM会抛出ClassNotFoundException或NoClassDefFoundError。原则</p>
<h2 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h2><p>OCP（Open-Closed Principle，开闭原则）是面向对象设计中的一条重要原则，指的是一个软件实体应当对扩展开放，对修改关闭。简单来说，应该能够通过增加新的代码来扩展功能，而不必修改已有的代码。</p>
<h2 id="组成部分-5"><a href="#组成部分-5" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-开放（Open）-1"><a href="#1-开放（Open）-1" class="headerlink" title="1.开放（Open）"></a>1.开放（Open）</h3><p>系统应该是开放的，允许在不修改现有代码的情况下添加新的功能。</p>
<h3 id="2-关闭（Closed）-1"><a href="#2-关闭（Closed）-1" class="headerlink" title="2.关闭（Closed）"></a>2.关闭（Closed）</h3><p>系统应该是关闭的，不允许对现有的代码进行修改，防止引入新的错误。</p>
<h2 id="结构形式-5"><a href="#结构形式-5" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-接口和抽象类-1"><a href="#1-接口和抽象类-1" class="headerlink" title="1.接口和抽象类"></a>1.接口和抽象类</h3><p>使用接口或抽象类定义系统的核心功能。</p>
<h3 id="2-实现类-1"><a href="#2-实现类-1" class="headerlink" title="2.实现类"></a>2.实现类</h3><p>通过实现接口或继承抽象类来扩展系统的功能。</p>
<h2 id="目的-5"><a href="#目的-5" class="headerlink" title="目的"></a>目的</h2><p>提高软件系统的可扩展性和可维护性，减少由于代码修改引入的错误。</p>
<h2 id="基本原理-5"><a href="#基本原理-5" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过设计系统的模块化和使用抽象来实现对扩展开放、对修改关闭。</p>
<h1 id="2-依赖倒置原则（DIP）-1"><a href="#2-依赖倒置原则（DIP）-1" class="headerlink" title="2.依赖倒置原则（DIP）"></a>2.依赖倒置原则（DIP）</h1><h2 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h2><p>依赖倒置原则（Dependency Inversion Principle, DIP）是面向对象设计中的一条重要原则，指的是高层模块不应该依赖于低层模块，二者都应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。</p>
<h2 id="组成部分-6"><a href="#组成部分-6" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-高层模块-1"><a href="#1-高层模块-1" class="headerlink" title="1.高层模块"></a>1.高层模块</h3><p>通常是业务逻辑层，负责完成系统的主要功能。</p>
<h3 id="2-低层模块-1"><a href="#2-低层模块-1" class="headerlink" title="2.低层模块"></a>2.低层模块</h3><p>通常是实现细节层，负责具体的实现任务。</p>
<h3 id="3-抽象-1"><a href="#3-抽象-1" class="headerlink" title="3.抽象"></a>3.抽象</h3><p>接口或抽象类，定义模块之间的契约或协议。</p>
<h2 id="结构形式-6"><a href="#结构形式-6" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-接口-抽象类-1"><a href="#1-接口-抽象类-1" class="headerlink" title="1.接口&#x2F;抽象类"></a>1.接口&#x2F;抽象类</h3><p>定义高层模块和低层模块的交互契约。</p>
<h3 id="2-依赖注入-1"><a href="#2-依赖注入-1" class="headerlink" title="2.依赖注入"></a>2.依赖注入</h3><p>通过构造函数、属性或接口注入具体实现。</p>
<h2 id="目的-6"><a href="#目的-6" class="headerlink" title="目的"></a>目的</h2><p>减少系统模块之间的耦合，使系统更具灵活性和可维护性，并且更容易进行单元测试。</p>
<h2 id="基本原理-6"><a href="#基本原理-6" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过依赖于抽象（如接口或抽象类），实现模块之间的松耦合。</p>
<h1 id="3-控制反转（思想）-1"><a href="#3-控制反转（思想）-1" class="headerlink" title="3.控制反转（思想）"></a>3.控制反转（思想）</h1><h2 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h2><p>控制反转（IoC）是一种设计思想，通过将对象的创建和依赖关系的管理权从对象本身反转给外部容器来实现组件之间的解耦。这种设计思想使得组件之间的依赖关系更加松散，提高了系统的可维护性和灵活性。</p>
<h2 id="组成部分-7"><a href="#组成部分-7" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-依赖-1"><a href="#1-依赖-1" class="headerlink" title="1.依赖"></a>1.依赖</h3><p>组件或类所需要的外部资源或服务。</p>
<h3 id="2-IoC-容器-1"><a href="#2-IoC-容器-1" class="headerlink" title="2.IoC 容器"></a>2.IoC 容器</h3><p>负责创建对象并注入其所需依赖的外部管理机制。</p>
<h3 id="3-依赖注入-1"><a href="#3-依赖注入-1" class="headerlink" title="3.依赖注入"></a>3.依赖注入</h3><p>IoC 的一种具体实现方式，将依赖注入到对象中。</p>
<h2 id="结构形式-7"><a href="#结构形式-7" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-传统控制-1"><a href="#1-传统控制-1" class="headerlink" title="1.传统控制"></a>1.传统控制</h3><p>对象自行创建和管理其依赖。</p>
<h3 id="2-控制反转-1"><a href="#2-控制反转-1" class="headerlink" title="2.控制反转"></a>2.控制反转</h3><p>对象依赖的创建和管理由外部容器负责。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-依赖注入（Dependency-Injection-DI）-1"><a href="#1-依赖注入（Dependency-Injection-DI）-1" class="headerlink" title="1.依赖注入（Dependency Injection, DI）"></a>1.依赖注入（Dependency Injection, DI）</h3><p>构造函数注入、属性注入、方法注入。</p>
<h3 id="2-依赖查找（Dependency-Lookup）-1"><a href="#2-依赖查找（Dependency-Lookup）-1" class="headerlink" title="2.依赖查找（Dependency Lookup）"></a>2.依赖查找（Dependency Lookup）</h3><p>对象主动从容器中查找和获取依赖。</p>
<h2 id="目的-7"><a href="#目的-7" class="headerlink" title="目的"></a>目的</h2><h3 id="1-解耦-1"><a href="#1-解耦-1" class="headerlink" title="1.解耦"></a>1.解耦</h3><p>减少类与类之间的直接依赖，增加代码的可维护性和灵活性。</p>
<h3 id="2-可测试性-1"><a href="#2-可测试性-1" class="headerlink" title="2.可测试性"></a>2.可测试性</h3><p>通过依赖注入，使得依赖对象可以被轻松替换为测试替身，方便单元测试。</p>
<h3 id="3-重用性-1"><a href="#3-重用性-1" class="headerlink" title="3.重用性"></a>3.重用性</h3><p>通过将依赖的管理交给外部容器，使得类更加通用和易于复用。</p>
<h2 id="基本原理-7"><a href="#基本原理-7" class="headerlink" title="基本原理"></a>基本原理</h2><p>对象的创建和依赖关系由外部容器管理，组件不再自行管理其依赖对象。</p>
<h1 id="4-根路径-1"><a href="#4-根路径-1" class="headerlink" title="4.根路径"></a>4.根路径</h1><h2 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h2><p>根路径（Root Path）：指文件系统或URL中最高级别的目录。它是所有文件和子目录的起点，位于文件系统层次结构的顶层。</p>
<h2 id="组成部分-8"><a href="#组成部分-8" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.文件系统中的根路径通常表示为 &#x2F;（在 Unix 和类 Unix 系统中，如 Linux、macOS）或 C:\（在 Windows 系统中）。<br>2.URL 中的根路径通常指的是一个网站的起始位置，例如 <a href="https://www.example.com/%E3%80%82">https://www.example.com/。</a></p>
<h2 id="结构形式-8"><a href="#结构形式-8" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-在文件系统中-1"><a href="#1-在文件系统中-1" class="headerlink" title="1.在文件系统中"></a>1.在文件系统中</h3><p>根路径包含所有文件和子目录。</p>
<h3 id="2-在-URL-中-1"><a href="#2-在-URL-中-1" class="headerlink" title="2.在 URL 中"></a>2.在 URL 中</h3><p>根路径指向网站的主页或主目录。</p>
<h2 id="分类-4"><a href="#分类-4" class="headerlink" title="分类"></a>分类</h2><h3 id="1-文件系统根路径-1"><a href="#1-文件系统根路径-1" class="headerlink" title="1.文件系统根路径"></a>1.文件系统根路径</h3><p>如 &#x2F;（Unix 系统）和 C:\（Windows 系统）。</p>
<h3 id="2-URL-根路径-1"><a href="#2-URL-根路径-1" class="headerlink" title="2.URL 根路径"></a>2.URL 根路径</h3><p>如 <a href="https://www.example.com/%E3%80%82">https://www.example.com/。</a></p>
<h2 id="目的-8"><a href="#目的-8" class="headerlink" title="目的"></a>目的</h2><p>1.提供一个统一的起点，组织和管理所有文件和目录。<br>2.在网络环境中，定义资源访问的基础路径。</p>
<h2 id="基本原理-8"><a href="#基本原理-8" class="headerlink" title="基本原理"></a>基本原理</h2><p>根路径在文件系统中是最高级的目录，所有其他目录和文件都从此路径派生。在 URL 中，根路径是访问网站内容的基础起点。</p>
<h1 id="5-类的根路径-1"><a href="#5-类的根路径-1" class="headerlink" title="5.类的根路径"></a>5.类的根路径</h1><h2 id="定-1"><a href="#定-1" class="headerlink" title="定"></a>定</h2><p>类的根路径（Class Path）是Java虚拟机（JVM）和Java编译器用来查找类文件（.class）的路径集合。它指定了JVM和编译器在运行和编译Java程序时应该搜索的目录和JAR文件位置。</p>
<h2 id="组成部分-9"><a href="#组成部分-9" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="目录-1"><a href="#目录-1" class="headerlink" title="目录"></a>目录</h3><p>包含.class文件的文件夹。</p>
<h3 id="JAR文件-1"><a href="#JAR文件-1" class="headerlink" title="JAR文件"></a>JAR文件</h3><p>Java归档文件，包含多个.class文件和相关资源。</p>
<h3 id="ZIP文件-1"><a href="#ZIP文件-1" class="headerlink" title="ZIP文件"></a>ZIP文件</h3><p>类似于JAR文件的压缩文件。</p>
<h3 id="资源文件-1"><a href="#资源文件-1" class="headerlink" title="资源文件"></a>资源文件</h3><p>资源文件类路径中可以包含其他类型的文件，如配置文件、图像文件等。</p>
<h2 id="结构形式-9"><a href="#结构形式-9" class="headerlink" title="结构形式"></a>结构形式</h2><p>类路径可以包含多个路径，这些路径用系统特定的分隔符分开（Windows系统用分号;，Unix系统用冒号:）。例如：</p>
<p>.;lib&#x2F;foo.jar;lib&#x2F;bar&#x2F;</p>
<h2 id="分类-5"><a href="#分类-5" class="headerlink" title="分类"></a>分类</h2><h3 id="1-系统类路径-1"><a href="#1-系统类路径-1" class="headerlink" title="1.系统类路径"></a>1.系统类路径</h3><p>由Java运行时环境（JRE）默认包含的路径，通常包含标准Java类库。</p>
<h3 id="2-用户类路径-1"><a href="#2-用户类路径-1" class="headerlink" title="2.用户类路径"></a>2.用户类路径</h3><p>用户或开发人员指定的包含应用程序类文件和资源的路径。</p>
<h2 id="目的-9"><a href="#目的-9" class="headerlink" title="目的"></a>目的</h2><p>提供一个机制，使得JVM和编译器能够在正确的位置查找和加载所需的类文件和资源，确保Java程序能正常运行。</p>
<h2 id="基本原理-9"><a href="#基本原理-9" class="headerlink" title="基本原理"></a>基本原理</h2><p>当JVM启动时，或者当Java编译器编译代码时，它会根据类路径搜索目录和JAR文件来找到所需的.class文件和资源文件。如果在指定的类路径中找不到所需的类文件，JVM会抛出ClassNotFoundException或NoClassDefFoundError。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>第一章-Spring启示录</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E7%AC%AC%E4%B8%80%E7%AB%A0-Spring%E5%90%AF%E7%A4%BA%E5%BD%95/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>简单工厂模式</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="简单工厂模式"><a href="#简单工厂模式" class="headerlink" title="简单工厂模式"></a>简单工厂模式</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>简单工厂模式是一种创建型设计模式，它定义了一个工厂类，用来创建某种类型的对象，而不是由客户端代码直接创建对象。简单工厂模式通过专门的工厂类来创建对象，客户端只需要告诉工厂需要什么类型的对象，工厂就会根据需求返回相应的实例。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-工厂类（Factory-Class）"><a href="#1-工厂类（Factory-Class）" class="headerlink" title="1.工厂类（Factory Class）"></a>1.工厂类（Factory Class）</h3><p>负责创建产品对象的工厂类。</p>
<h3 id="2-抽象产品类（Abstract-Product-Class）"><a href="#2-抽象产品类（Abstract-Product-Class）" class="headerlink" title="2.抽象产品类（Abstract Product Class）"></a>2.抽象产品类（Abstract Product Class）</h3><p>工厂类所创建的产品的抽象基类或接口。</p>
<h3 id="3-具体产品类（Concrete-Product-Class）"><a href="#3-具体产品类（Concrete-Product-Class）" class="headerlink" title="3.具体产品类（Concrete Product Class）"></a>3.具体产品类（Concrete Product Class）</h3><p>实现或继承抽象产品类的具体产品。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.客户端通过调用工厂类的方法来获取具体产品对象。<br>2.工厂类根据传入的参数，决定创建哪个具体产品对象。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过一个工厂类来负责创建对象，简化客户端代码，减少代码的重复，提高代码的可维护性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>工厂类根据传入的参数（例如字符串或枚举），选择创建某个具体的产品对象，并返回该对象。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.编写抽象接口</p>
<p>2.创建具体类，继承这个接口</p>
<p>3.创建工厂类，创建get方法负责实现具体类的创建。</p>
<p>4.通过工厂类得到想要的具体类。</p>
<p>模式</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>简单工厂模式是一种创建型设计模式，它定义了一个工厂类，用来创建某种类型的对象，而不是由客户端代码直接创建对象。简单工厂模式通过专门的工厂类来创建对象，客户端只需要告诉工厂需要什么类型的对象，工厂就会根据需求返回相应的实例。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-工厂类（Factory-Class）-1"><a href="#1-工厂类（Factory-Class）-1" class="headerlink" title="1.工厂类（Factory Class）"></a>1.工厂类（Factory Class）</h3><p>负责创建产品对象的工厂类。</p>
<h3 id="2-抽象产品类（Abstract-Product-Class）-1"><a href="#2-抽象产品类（Abstract-Product-Class）-1" class="headerlink" title="2.抽象产品类（Abstract Product Class）"></a>2.抽象产品类（Abstract Product Class）</h3><p>工厂类所创建的产品的抽象基类或接口。</p>
<h3 id="3-具体产品类（Concrete-Product-Class）-1"><a href="#3-具体产品类（Concrete-Product-Class）-1" class="headerlink" title="3.具体产品类（Concrete Product Class）"></a>3.具体产品类（Concrete Product Class）</h3><p>实现或继承抽象产品类的具体产品。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.客户端通过调用工厂类的方法来获取具体产品对象。<br>2.工厂类根据传入的参数，决定创建哪个具体产品对象。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>通过一个工厂类来负责创建对象，简化客户端代码，减少代码的重复，提高代码的可维护性。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>工厂类根据传入的参数（例如字符串或枚举），选择创建某个具体的产品对象，并返回该对象。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.编写抽象接口</p>
<p>2.创建具体类，继承这个接口</p>
<p>3.创建工厂类，创建get方法负责实现具体类的创建。</p>
<p>4.通过工厂类得到想要的具体类。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>连接点-基于注解</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E8%BF%9E%E6%8E%A5%E7%82%B9-%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="连接点"><a href="#连接点" class="headerlink" title="连接点"></a>连接点</h1><h4 id="通过连接点，可以获得目标方法的签名（方法的具体信息，即名字等。）"><a href="#通过连接点，可以获得目标方法的签名（方法的具体信息，即名字等。）" class="headerlink" title="通过连接点，可以获得目标方法的签名（方法的具体信息，即名字等。）"></a>通过连接点，可以获得目标方法的签名（方法的具体信息，即名字等。）</h4><p><img src="/./../../TyporaImage/Spring/image-20240920171747174.png" alt="image-20240920171747174"></p>
<p>接点</p>
<h4 id="通过连接点，可以获得目标方法的签名（方法的具体信息，即名字等。）-1"><a href="#通过连接点，可以获得目标方法的签名（方法的具体信息，即名字等。）-1" class="headerlink" title="通过连接点，可以获得目标方法的签名（方法的具体信息，即名字等。）"></a>通过连接点，可以获得目标方法的签名（方法的具体信息，即名字等。）</h4><p><img src="/./../../TyporaImage/Spring/image-20240920171747174.png" alt="image-20240920171747174"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>通用切点-基于注解</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E9%80%9A%E7%94%A8%E5%88%87%E7%82%B9-%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="通用切点"><a href="#通用切点" class="headerlink" title="通用切点"></a>通用切点</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-用注解设置方法为通用切点。-Pointcut"><a href="#1-用注解设置方法为通用切点。-Pointcut" class="headerlink" title="1.用注解设置方法为通用切点。@Pointcut"></a>1.用注解设置方法为通用切点。@Pointcut</h3><p><img src="/./../../TyporaImage/Spring/image-20240920171202207.png" alt="image-20240920171202207"></p>
<h3 id="2-将通知的注解里面的切点表达式，替换为方法名即可。"><a href="#2-将通知的注解里面的切点表达式，替换为方法名即可。" class="headerlink" title="2.将通知的注解里面的切点表达式，替换为方法名即可。"></a>2.将通知的注解里面的切点表达式，替换为方法名即可。</h3><h4 id="替换前："><a href="#替换前：" class="headerlink" title="替换前："></a>替换前：</h4><p><img src="/./../../TyporaImage/Spring/image-20240920171409158.png" alt="image-20240920171409158"></p>
<h4 id="替换后："><a href="#替换后：" class="headerlink" title="替换后："></a>替换后：</h4><p><img src="/./../../TyporaImage/Spring/image-20240920171423566.png" alt="image-20240920171423566">切点</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-用注解设置方法为通用切点。-Pointcut-1"><a href="#1-用注解设置方法为通用切点。-Pointcut-1" class="headerlink" title="1.用注解设置方法为通用切点。@Pointcut"></a>1.用注解设置方法为通用切点。@Pointcut</h3><p><img src="/./../../TyporaImage/Spring/image-20240920171202207.png" alt="image-20240920171202207"></p>
<h3 id="2-将通知的注解里面的切点表达式，替换为方法名即可。-1"><a href="#2-将通知的注解里面的切点表达式，替换为方法名即可。-1" class="headerlink" title="2.将通知的注解里面的切点表达式，替换为方法名即可。"></a>2.将通知的注解里面的切点表达式，替换为方法名即可。</h3><h4 id="替换前：-1"><a href="#替换前：-1" class="headerlink" title="替换前："></a>替换前：</h4><p><img src="/./../../TyporaImage/Spring/image-20240920171409158.png" alt="image-20240920171409158"></p>
<h4 id="替换后：-1"><a href="#替换后：-1" class="headerlink" title="替换后："></a>替换后：</h4><p><img src="/./../../TyporaImage/Spring/image-20240920171423566.png" alt="image-20240920171423566"></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>静态代理</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E9%9D%99%E6%80%81%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h1 id="静态代理"><a href="#静态代理" class="headerlink" title="静态代理"></a>静态代理</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>静态代理是一种设计模式，通过在不改变原始对象的情况下，使用代理对象来控制对原始对象的访问。代理类在编译时就已经确定，客户端调用代理对象的方法时，实际是调用了代理对象的方法，代理对象再去调用原始对象的方法。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.原始对象（委托类）：实际执行业务逻辑的对象。<br>2.代理对象：负责控制访问原始对象，并可在调用原始对象之前或之后添加额外的操作。<br>3.接口：代理对象与原始对象通常实现相同的接口，这样代理对象可以对外界隐藏原始对象的具体实现。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="代理类："><a href="#代理类：" class="headerlink" title="代理类："></a>代理类：</h3><p>实现了与原始对象相同的接口，并在其方法中调用原始对象的对应方法。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过代理类控制对原始对象的访问，可以添加额外功能，如权限控制、日志记录、性能监控等，而不需要修改原始对象的代码。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>代理类通过实现与原始对象相同的接口，在方法中调用原始对象的对应方法，从而在不改变原始对象的情况下增强其功能。代理</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>静态代理是一种设计模式，通过在不改变原始对象的情况下，使用代理对象来控制对原始对象的访问。代理类在编译时就已经确定，客户端调用代理对象的方法时，实际是调用了代理对象的方法，代理对象再去调用原始对象的方法。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.原始对象（委托类）：实际执行业务逻辑的对象。<br>2.代理对象：负责控制访问原始对象，并可在调用原始对象之前或之后添加额外的操作。<br>3.接口：代理对象与原始对象通常实现相同的接口，这样代理对象可以对外界隐藏原始对象的具体实现。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="代理类：-1"><a href="#代理类：-1" class="headerlink" title="代理类："></a>代理类：</h3><p>实现了与原始对象相同的接口，并在其方法中调用原始对象的对应方法。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>通过代理类控制对原始对象的访问，可以添加额外功能，如权限控制、日志记录、性能监控等，而不需要修改原始对象的代码。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>代理类通过实现与原始对象相同的接口，在方法中调用原始对象的对应方法，从而在不改变原始对象的情况下增强其功能。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>面向切面编程</title>
    <url>/2024/11/08/TyporaNotes/Typora_Spring/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="面向切面编程"><a href="#面向切面编程" class="headerlink" title="面向切面编程"></a>面向切面编程</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>面向切面编程是一种用于分离系统不同关注点的编程范式，特别适用于处理横切关注点（cross-cutting concerns），如日志记录、安全性、事务管理等。这些横切关注点通常会分散在多个模块中，难以集中管理和维护。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.切面（Aspect）：包含横切关注点的模块。<br>2.连接点（Join Point）：程序中可插入横切逻辑的具体位置，比如方法的调用、对象的创建。<br>3.切入点（Pointcut）：定义了在什么条件下执行切面。<br>4.通知（Advice）：横切关注点的具体实现，通常是在连接点处执行的代码。<br>5.织入（Weaving）：将切面代码与主业务逻辑代码组合在一起的过程，通常在编译时、加载时或运行时进行。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p> 面向切面编程以模块化的方式表达，其中核心结构为切面（Aspect），切入点（Pointcut）定义了切面作用的范围，通知（Advice）实现了具体功能。织入（Weaving）是实现这一逻辑的技术步骤。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态织入"><a href="#1-静态织入" class="headerlink" title="1.静态织入"></a>1.静态织入</h3><p>在编译时将切面代码嵌入到主代码中。</p>
<h3 id="2-动态织入"><a href="#2-动态织入" class="headerlink" title="2.动态织入"></a>2.动态织入</h3><p>在运行时根据切入点将切面代码动态插入主代码执行中。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>解决横切关注点导致的代码冗余和耦合问题，提升代码的模块化和可维护性。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过定义连接点和切入点，将切面逻辑插入到程序执行的某些特定位置，以实现对横切关注点的集中控制。编程</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>面向切面编程是一种用于分离系统不同关注点的编程范式，特别适用于处理横切关注点（cross-cutting concerns），如日志记录、安全性、事务管理等。这些横切关注点通常会分散在多个模块中，难以集中管理和维护。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.切面（Aspect）：包含横切关注点的模块。<br>2.连接点（Join Point）：程序中可插入横切逻辑的具体位置，比如方法的调用、对象的创建。<br>3.切入点（Pointcut）：定义了在什么条件下执行切面。<br>4.通知（Advice）：横切关注点的具体实现，通常是在连接点处执行的代码。<br>5.织入（Weaving）：将切面代码与主业务逻辑代码组合在一起的过程，通常在编译时、加载时或运行时进行。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p> 面向切面编程以模块化的方式表达，其中核心结构为切面（Aspect），切入点（Pointcut）定义了切面作用的范围，通知（Advice）实现了具体功能。织入（Weaving）是实现这一逻辑的技术步骤。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态织入-1"><a href="#1-静态织入-1" class="headerlink" title="1.静态织入"></a>1.静态织入</h3><p>在编译时将切面代码嵌入到主代码中。</p>
<h3 id="2-动态织入-1"><a href="#2-动态织入-1" class="headerlink" title="2.动态织入"></a>2.动态织入</h3><p>在运行时根据切入点将切面代码动态插入主代码执行中。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>解决横切关注点导致的代码冗余和耦合问题，提升代码的模块化和可维护性。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p>通过定义连接点和切入点，将切面逻辑插入到程序执行的某些特定位置，以实现对横切关注点的集中控制。</p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>Controller配置</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/Controller%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="Controller配置"><a href="#Controller配置" class="headerlink" title="Controller配置"></a>Controller配置</h1><h2 id="1-非注解开发"><a href="#1-非注解开发" class="headerlink" title="1.非注解开发"></a>1.非注解开发</h2><h3 id="①配置pom文件"><a href="#①配置pom文件" class="headerlink" title="①配置pom文件"></a>①配置pom文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>Springmvc-01<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>springmvc-02-hellomvc<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>Springmvc-03-annotation<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>springmvc-04-controller<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 导入依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="②配置web文件"><a href="#②配置web文件" class="headerlink" title="②配置web文件"></a>②配置web文件</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241101111840287.png" alt="image-20241101111840287"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="③配置web文件中引用的spring文件"><a href="#③配置web文件中引用的spring文件" class="headerlink" title="③配置web文件中引用的spring文件"></a>③配置web文件中引用的spring文件</h3><h3 id="比如上图中得分springmvc-servlet-xml"><a href="#比如上图中得分springmvc-servlet-xml" class="headerlink" title="比如上图中得分springmvc-servlet.xml"></a>比如上图中得分springmvc-servlet.xml</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241101111923213.png" alt="image-20241101111923213"></p>
<p>配置视图解析器,与想要执行的bean即可</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描包，让指定包下的注解生效,由IOC容器统一管理 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;context:component-scan base-package=&quot;com.atguigu.controller&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &amp;lt;!&amp;ndash; 让Spring MVC不处理静态资源 &amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;mvc:default-servlet-handler /&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    &lt;mvc:annotation-driven /&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 前缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 后缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;/t1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.controller.Controller&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="④编写bean对应的类"><a href="#④编写bean对应的类" class="headerlink" title="④编写bean对应的类"></a>④编写bean对应的类</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241101112006359.png" alt="image-20241101112006359"></p>
<p>mv.setViewName设置的是跳转的页面.</p>
<h2 id="2-注解式开发"><a href="#2-注解式开发" class="headerlink" title="2.注解式开发"></a>2.注解式开发</h2><p>①配置pom,web,spring的xml文件</p>
<p>②在类上面编写@Controller表示控制器.@ResultMappering来手动设置访问路径.</p>
<p><img src="/./../../TyporaImage/SpringMVC/image-20241101112435308.png" alt="image-20241101112435308"></p>
<p>配置</p>
<h2 id="1-非注解开发-1"><a href="#1-非注解开发-1" class="headerlink" title="1.非注解开发"></a>1.非注解开发</h2><h3 id="①配置pom文件-1"><a href="#①配置pom文件-1" class="headerlink" title="①配置pom文件"></a>①配置pom文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>Springmvc-01<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>springmvc-02-hellomvc<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>Springmvc-03-annotation<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>springmvc-04-controller<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 导入依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="②配置web文件-1"><a href="#②配置web文件-1" class="headerlink" title="②配置web文件"></a>②配置web文件</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241101111840287.png" alt="image-20241101111840287"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="③配置web文件中引用的spring文件-1"><a href="#③配置web文件中引用的spring文件-1" class="headerlink" title="③配置web文件中引用的spring文件"></a>③配置web文件中引用的spring文件</h3><h3 id="比如上图中得分springmvc-servlet-xml-1"><a href="#比如上图中得分springmvc-servlet-xml-1" class="headerlink" title="比如上图中得分springmvc-servlet.xml"></a>比如上图中得分springmvc-servlet.xml</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241101111923213.png" alt="image-20241101111923213"></p>
<p>配置视图解析器,与想要执行的bean即可</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描包，让指定包下的注解生效,由IOC容器统一管理 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;context:component-scan base-package=&quot;com.atguigu.controller&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &amp;lt;!&amp;ndash; 让Spring MVC不处理静态资源 &amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;mvc:default-servlet-handler /&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    &lt;mvc:annotation-driven /&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 前缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 后缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;/t1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.controller.Controller&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="④编写bean对应的类-1"><a href="#④编写bean对应的类-1" class="headerlink" title="④编写bean对应的类"></a>④编写bean对应的类</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241101112006359.png" alt="image-20241101112006359"></p>
<p>mv.setViewName设置的是跳转的页面.</p>
<h2 id="2-注解式开发-1"><a href="#2-注解式开发-1" class="headerlink" title="2.注解式开发"></a>2.注解式开发</h2><p>①配置pom,web,spring的xml文件</p>
<p>②在类上面编写@Controller表示控制器.@ResultMappering来手动设置访问路径.</p>
<p><img src="/./../../TyporaImage/SpringMVC/image-20241101112435308.png" alt="image-20241101112435308"></p>
]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>FastJSON使用</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/FastJSON%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="FastJosn"><a href="#FastJosn" class="headerlink" title="FastJosn"></a>FastJosn</h1><h2 id="1-配置依赖"><a href="#1-配置依赖" class="headerlink" title="1.配置依赖"></a>1.配置依赖</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.2.75&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-使用javason方法"><a href="#2-使用javason方法" class="headerlink" title="2.使用javason方法"></a>2.使用javason方法</h2><p>1.toJSON</p>
<p>2.toJSONString</p>
<p>3.toJavaObject</p>
<p>sn</p>
<h2 id="1-配置依赖-1"><a href="#1-配置依赖-1" class="headerlink" title="1.配置依赖"></a>1.配置依赖</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.2.75&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-使用javason方法-1"><a href="#2-使用javason方法-1" class="headerlink" title="2.使用javason方法"></a>2.使用javason方法</h2><p>1.toJSON</p>
<p>2.toJSONString</p>
<p>3.toJavaObject</p>
]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>JSON简介</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/JSON%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="JSON简介"><a href="#JSON简介" class="headerlink" title="JSON简介"></a>JSON简介</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>JSON(JavaScript Object Notation, JS 对象标记) 是一种轻量级的数据交换格式.</p>
<p> 对象表示为键值对，数据由逗号分隔.花括号保存对象,方括号保存数组 .</p>
<h2 id="与JavaScript关系"><a href="#与JavaScript关系" class="headerlink" title="与JavaScript关系"></a>与JavaScript关系</h2><p>JSON 是 JavaScript 对象的字符串表示法，它使用文本表示一个 JS 对象的信息，本质是一个字符串。</p>
<h2 id="JSON与JavaScript相互转换"><a href="#JSON与JavaScript相互转换" class="headerlink" title="JSON与JavaScript相互转换"></a>JSON与JavaScript相互转换</h2><p>1.从JSON字符串转换为JavaScript 对象，使用 JSON.parse() 方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">var</span> <span class="variable">obj</span> <span class="operator">=</span> JSON.parse(<span class="string">&#x27;&#123;&quot;a&quot;: &quot;Hello&quot;, &quot;b&quot;: &quot;World&quot;&#125;&#x27;</span>);</span><br><span class="line"><span class="comment">// 结果是 &#123;a: &#x27;Hello&#x27;, b: &#x27;World&#x27;&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2.从JavaScript 对象转换为JSON字符串，使用 JSON.stringify() 方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">var</span> <span class="variable">json</span> <span class="operator">=</span> JSON.stringify(&#123;a: <span class="string">&#x27;Hello&#x27;</span>, b: <span class="string">&#x27;World&#x27;</span>&#125;);</span><br><span class="line"><span class="comment">// 结果是 &#x27;&#123;&quot;a&quot;: &quot;Hello&quot;, &quot;b&quot;: &quot;World&quot;&#125;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>简介</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>JSON(JavaScript Object Notation, JS 对象标记) 是一种轻量级的数据交换格式.</p>
<p> 对象表示为键值对，数据由逗号分隔.花括号保存对象,方括号保存数组 .</p>
<h2 id="与JavaScript关系-1"><a href="#与JavaScript关系-1" class="headerlink" title="与JavaScript关系"></a>与JavaScript关系</h2><p>JSON 是 JavaScript 对象的字符串表示法，它使用文本表示一个 JS 对象的信息，本质是一个字符串。</p>
<h2 id="JSON与JavaScript相互转换-1"><a href="#JSON与JavaScript相互转换-1" class="headerlink" title="JSON与JavaScript相互转换"></a>JSON与JavaScript相互转换</h2><p>1.从JSON字符串转换为JavaScript 对象，使用 JSON.parse() 方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">var</span> <span class="variable">obj</span> <span class="operator">=</span> JSON.parse(<span class="string">&#x27;&#123;&quot;a&quot;: &quot;Hello&quot;, &quot;b&quot;: &quot;World&quot;&#125;&#x27;</span>);</span><br><span class="line"><span class="comment">// 结果是 &#123;a: &#x27;Hello&#x27;, b: &#x27;World&#x27;&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2.从JavaScript 对象转换为JSON字符串，使用 JSON.stringify() 方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">var</span> <span class="variable">json</span> <span class="operator">=</span> JSON.stringify(&#123;a: <span class="string">&#x27;Hello&#x27;</span>, b: <span class="string">&#x27;World&#x27;</span>&#125;);</span><br><span class="line"><span class="comment">// 结果是 &#x27;&#123;&quot;a&quot;: &quot;Hello&quot;, &quot;b&quot;: &quot;World&quot;&#125;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>Jackson使用</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/Jackson%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="Jackson使用"><a href="#Jackson使用" class="headerlink" title="Jackson使用"></a>Jackson使用</h1><h2 id="1-配置pom文件"><a href="#1-配置pom文件" class="headerlink" title="1.配置pom文件"></a>1.配置pom文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.12.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-配置web-xml"><a href="#2-配置web-xml" class="headerlink" title="2.配置web.xml"></a>2.配置web.xml</h2> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--1.注册servlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--通过初始化参数指定SpringMVC配置文件的位置，进行关联--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 启动顺序，数字越小，启动越早 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--所有请求都会被springmvc拦截 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3-配置springmvc-servlet-xml"><a href="#3-配置springmvc-servlet-xml" class="headerlink" title="3.配置springmvc-servlet.xml"></a>3.配置springmvc-servlet.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描指定的包，下面所有注解类交给IOC容器管理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.github.subei.controller&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 前缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 后缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="4-使用"><a href="#4-使用" class="headerlink" title="4.使用"></a>4.使用</h2><h2 id="PS"><a href="#PS" class="headerlink" title="PS:"></a>PS:</h2><h3 id="乱码问题解决"><a href="#乱码问题解决" class="headerlink" title="乱码问题解决"></a>乱码问题解决</h3><h4 id="方式①"><a href="#方式①" class="headerlink" title="方式①"></a>方式①</h4><p>配置RequestMapping的produces属性</p>
<p><img src="/./../../TyporaImage/SpringMVC/image-20241106111805744.png" alt="image-20241106111805744"></p>
<h4 id="方式②"><a href="#方式②" class="headerlink" title="方式②"></a>方式②</h4><p>配置spring文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- JSON乱码问题 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;objectMapper&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;failOnEmptyBeans&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>使用</p>
<h2 id="1-配置pom文件-1"><a href="#1-配置pom文件-1" class="headerlink" title="1.配置pom文件"></a>1.配置pom文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.12.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-配置web-xml-1"><a href="#2-配置web-xml-1" class="headerlink" title="2.配置web.xml"></a>2.配置web.xml</h2> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--1.注册servlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--通过初始化参数指定SpringMVC配置文件的位置，进行关联--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 启动顺序，数字越小，启动越早 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--所有请求都会被springmvc拦截 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3-配置springmvc-servlet-xml-1"><a href="#3-配置springmvc-servlet-xml-1" class="headerlink" title="3.配置springmvc-servlet.xml"></a>3.配置springmvc-servlet.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描指定的包，下面所有注解类交给IOC容器管理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.github.subei.controller&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 前缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 后缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="4-使用-1"><a href="#4-使用-1" class="headerlink" title="4.使用"></a>4.使用</h2><h2 id="PS-1"><a href="#PS-1" class="headerlink" title="PS:"></a>PS:</h2><h3 id="乱码问题解决-1"><a href="#乱码问题解决-1" class="headerlink" title="乱码问题解决"></a>乱码问题解决</h3><h4 id="方式①-1"><a href="#方式①-1" class="headerlink" title="方式①"></a>方式①</h4><p>配置RequestMapping的produces属性</p>
<p><img src="/./../../TyporaImage/SpringMVC/image-20241106111805744.png" alt="image-20241106111805744"></p>
<h4 id="方式②-1"><a href="#方式②-1" class="headerlink" title="方式②"></a>方式②</h4><p>配置spring文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- JSON乱码问题 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;objectMapper&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;failOnEmptyBeans&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>RestFul风格</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/RestFul%E9%A3%8E%E6%A0%BC/</url>
    <content><![CDATA[<h1 id="RestFul风格"><a href="#RestFul风格" class="headerlink" title="RestFul风格"></a>RestFul风格</h1><p><img src="/./../../TyporaImage/SpringMVC/image-20241103151454676.png" alt="image-20241103151454676"></p>
<h2 id="1-在变量上面添加相应的注解"><a href="#1-在变量上面添加相应的注解" class="headerlink" title="1.在变量上面添加相应的注解"></a>1.在变量上面添加相应的注解</h2><h2 id="2-在路径映射上面添加变量的取值符号"><a href="#2-在路径映射上面添加变量的取值符号" class="headerlink" title="2.在路径映射上面添加变量的取值符号"></a>2.在路径映射上面添加变量的取值符号</h2><p>风格</p>
<p><img src="/./../../TyporaImage/SpringMVC/image-20241103151454676.png" alt="image-20241103151454676"></p>
<h2 id="1-在变量上面添加相应的注解-1"><a href="#1-在变量上面添加相应的注解-1" class="headerlink" title="1.在变量上面添加相应的注解"></a>1.在变量上面添加相应的注解</h2><h2 id="2-在路径映射上面添加变量的取值符号-1"><a href="#2-在路径映射上面添加变量的取值符号-1" class="headerlink" title="2.在路径映射上面添加变量的取值符号"></a>2.在路径映射上面添加变量的取值符号</h2>]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>SSM整合-Mybatis</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/SSM%E6%95%B4%E5%90%88-Mybatis/</url>
    <content><![CDATA[<h1 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h1><h2 id="1-数据库配置文件-database-properties"><a href="#1-数据库配置文件-database-properties" class="headerlink" title="1.数据库配置文件 database.properties"></a>1.数据库配置文件 <strong>database.properties</strong></h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="comment"># 如果使用的是MySQL8.0+,增加一个时区的配置。</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/ssmbuild?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">root</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-IDEA关联数据库"><a href="#2-IDEA关联数据库" class="headerlink" title="2.IDEA关联数据库"></a>2.IDEA关联数据库</h2><h2 id="3-编写MyBatis的核心配置文件"><a href="#3-编写MyBatis的核心配置文件" class="headerlink" title="3.编写MyBatis的核心配置文件"></a>3.编写MyBatis的核心配置文件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.github.subei.pojo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.github.subei.dao.BookMapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="4-编写数据库对应的实体类-使用lombok插件"><a href="#4-编写数据库对应的实体类-使用lombok插件" class="headerlink" title="4.编写数据库对应的实体类,使用lombok插件."></a>4.编写数据库对应的实体类,使用lombok插件.</h2><h2 id="5-编写Dao层的-Mapper接口！"><a href="#5-编写Dao层的-Mapper接口！" class="headerlink" title="5.编写Dao层的 Mapper接口！"></a>5.编写Dao层的 Mapper接口！</h2><h2 id="6-编写接口对应的Mapper-xml-文件。需要导入MyBatis的包；"><a href="#6-编写接口对应的Mapper-xml-文件。需要导入MyBatis的包；" class="headerlink" title="6.编写接口对应的Mapper.xml 文件。需要导入MyBatis的包；"></a>6.编写接口对应的Mapper.xml 文件。需要导入MyBatis的包；</h2><h2 id="7-编写Service层的接口和实现类"><a href="#7-编写Service层的接口和实现类" class="headerlink" title="7.编写Service层的接口和实现类"></a>7.编写Service层的接口和实现类</h2><p>is</p>
<h2 id="1-数据库配置文件-database-properties-1"><a href="#1-数据库配置文件-database-properties-1" class="headerlink" title="1.数据库配置文件 database.properties"></a>1.数据库配置文件 <strong>database.properties</strong></h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="comment"># 如果使用的是MySQL8.0+,增加一个时区的配置。</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/ssmbuild?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">root</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-IDEA关联数据库-1"><a href="#2-IDEA关联数据库-1" class="headerlink" title="2.IDEA关联数据库"></a>2.IDEA关联数据库</h2><h2 id="3-编写MyBatis的核心配置文件-1"><a href="#3-编写MyBatis的核心配置文件-1" class="headerlink" title="3.编写MyBatis的核心配置文件"></a>3.编写MyBatis的核心配置文件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.github.subei.pojo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.github.subei.dao.BookMapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="4-编写数据库对应的实体类-使用lombok插件-1"><a href="#4-编写数据库对应的实体类-使用lombok插件-1" class="headerlink" title="4.编写数据库对应的实体类,使用lombok插件."></a>4.编写数据库对应的实体类,使用lombok插件.</h2><h2 id="5-编写Dao层的-Mapper接口！-1"><a href="#5-编写Dao层的-Mapper接口！-1" class="headerlink" title="5.编写Dao层的 Mapper接口！"></a>5.编写Dao层的 Mapper接口！</h2><h2 id="6-编写接口对应的Mapper-xml-文件。需要导入MyBatis的包；-1"><a href="#6-编写接口对应的Mapper-xml-文件。需要导入MyBatis的包；-1" class="headerlink" title="6.编写接口对应的Mapper.xml 文件。需要导入MyBatis的包；"></a>6.编写接口对应的Mapper.xml 文件。需要导入MyBatis的包；</h2><h2 id="7-编写Service层的接口和实现类-1"><a href="#7-编写Service层的接口和实现类-1" class="headerlink" title="7.编写Service层的接口和实现类"></a>7.编写Service层的接口和实现类</h2>]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>SSM整合-Spring</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/SSM%E6%95%B4%E5%90%88-Spring/</url>
    <content><![CDATA[<h1 id="SSM整合Spring层"><a href="#SSM整合Spring层" class="headerlink" title="SSM整合Spring层"></a>SSM整合Spring层</h1><p>g层</p>
]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>SpringMVC原理</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/SpringMVC%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="MVC原理"><a href="#MVC原理" class="headerlink" title="MVC原理"></a>MVC原理</h1><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/./../../TyporaImage/SpringMVC/image-20241031163642349.png" alt="image-20241031163642349"></p>
<p><img src="/./../../TyporaImage/SpringMVC/image-20241031163717251.png" alt="image-20241031163717251"></p>
<p><img src="/./../../TyporaImage/SpringMVC/image-20241031163801184.png" alt="image-20241031163801184"></p>
<h2 id="自我理解"><a href="#自我理解" class="headerlink" title="自我理解:"></a>自我理解:</h2><p><img src="/./../../TyporaImage/SpringMVC/image-20241031172534966.png" alt="image-20241031172534966"></p>
<h3 id="1-发出的命令会首先通过处理器映射器-通过bean的id映射到对应的class"><a href="#1-发出的命令会首先通过处理器映射器-通过bean的id映射到对应的class" class="headerlink" title="1.发出的命令会首先通过处理器映射器,通过bean的id映射到对应的class"></a>1.发出的命令会首先通过处理器映射器,通过bean的id映射到对应的class</h3><h3 id="2-适配器执行对应的class中的逻辑-并返回mv"><a href="#2-适配器执行对应的class中的逻辑-并返回mv" class="headerlink" title="2.适配器执行对应的class中的逻辑,并返回mv."></a>2.适配器执行对应的class中的逻辑,并返回mv.</h3><h3 id="3-视图解析器找到想要渲染的视图-然后渲染并展示"><a href="#3-视图解析器找到想要渲染的视图-然后渲染并展示" class="headerlink" title="3.视图解析器找到想要渲染的视图,然后渲染并展示"></a>3.视图解析器找到想要渲染的视图,然后渲染并展示</h3><p>原理</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/./../../TyporaImage/SpringMVC/image-20241031163642349.png" alt="image-20241031163642349"></p>
<p><img src="/./../../TyporaImage/SpringMVC/image-20241031163717251.png" alt="image-20241031163717251"></p>
<p><img src="/./../../TyporaImage/SpringMVC/image-20241031163801184.png" alt="image-20241031163801184"></p>
<h2 id="自我理解-1"><a href="#自我理解-1" class="headerlink" title="自我理解:"></a>自我理解:</h2><p><img src="/./../../TyporaImage/SpringMVC/image-20241031172534966.png" alt="image-20241031172534966"></p>
<h3 id="1-发出的命令会首先通过处理器映射器-通过bean的id映射到对应的class-1"><a href="#1-发出的命令会首先通过处理器映射器-通过bean的id映射到对应的class-1" class="headerlink" title="1.发出的命令会首先通过处理器映射器,通过bean的id映射到对应的class"></a>1.发出的命令会首先通过处理器映射器,通过bean的id映射到对应的class</h3><h3 id="2-适配器执行对应的class中的逻辑-并返回mv-1"><a href="#2-适配器执行对应的class中的逻辑-并返回mv-1" class="headerlink" title="2.适配器执行对应的class中的逻辑,并返回mv."></a>2.适配器执行对应的class中的逻辑,并返回mv.</h3><h3 id="3-视图解析器找到想要渲染的视图-然后渲染并展示-1"><a href="#3-视图解析器找到想要渲染的视图-然后渲染并展示-1" class="headerlink" title="3.视图解析器找到想要渲染的视图,然后渲染并展示"></a>3.视图解析器找到想要渲染的视图,然后渲染并展示</h3>]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>SpringMVC简介</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/SpringMVC%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h1><p><img src="/./../../TyporaImage/SpringMVC/image-20241030222154937.png" alt="image-20241030222154937"></p>
<p>VC</p>
<p><img src="/./../../TyporaImage/SpringMVC/image-20241030222154937.png" alt="image-20241030222154937"></p>
]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>乱码问题解决</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h1 id="乱码问题解决"><a href="#乱码问题解决" class="headerlink" title="乱码问题解决"></a>乱码问题解决</h1><h2 id="一般的解决思路"><a href="#一般的解决思路" class="headerlink" title="一般的解决思路"></a>一般的解决思路</h2><p>1.Request</p>
<p>2.过滤器</p>
<p>3.修改post到get</p>
<p>4.springmvc自带的过滤器</p>
<p>5.修改tomcat文件</p>
<p>6.拦截器路径设置为&#x2F;*</p>
<h2 id="PS-最后的办法"><a href="#PS-最后的办法" class="headerlink" title="PS:最后的办法"></a>PS:最后的办法</h2><h3 id="①一个强大的自定义过滤器"><a href="#①一个强大的自定义过滤器" class="headerlink" title="①一个强大的自定义过滤器"></a>①一个强大的自定义过滤器</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 自己的包路径;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequestWrapper;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解决get和post请求 全部乱码的过滤器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GenericEncodingFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="comment">// 处理response的字符编码</span></span><br><span class="line">        HttpServletResponse myResponse=(HttpServletResponse) response;</span><br><span class="line">        myResponse.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转型为与协议相关对象</span></span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">httpServletRequest</span> <span class="operator">=</span> (HttpServletRequest) request;</span><br><span class="line">        <span class="comment">// 对request包装增强</span></span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">myrequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRequest</span>(httpServletRequest);</span><br><span class="line">        chain.doFilter(myrequest, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义request对象，HttpServletRequest的包装类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyRequest</span> <span class="keyword">extends</span> <span class="title class_">HttpServletRequestWrapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> HttpServletRequest request;</span><br><span class="line">    <span class="comment">// 是否编码的标记</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> hasEncode;</span><br><span class="line">    <span class="comment">// 定义一个可以传入HttpServletRequest对象的构造函数，以便对其进行装饰</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyRequest</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(request);<span class="comment">// super必须写</span></span><br><span class="line">        <span class="built_in">this</span>.request = request;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对需要增强方法 进行覆盖</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map <span class="title function_">getParameterMap</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 先获得请求方式</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">method</span> <span class="operator">=</span> request.getMethod();</span><br><span class="line">        <span class="keyword">if</span> (method.equalsIgnoreCase(<span class="string">&quot;post&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">// post请求</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 处理post乱码</span></span><br><span class="line">                request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> request.getParameterMap();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method.equalsIgnoreCase(<span class="string">&quot;get&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">// get请求</span></span><br><span class="line">            Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">            <span class="keyword">if</span> (!hasEncode) &#123; <span class="comment">// 确保get手动编码逻辑只运行一次</span></span><br><span class="line">                <span class="keyword">for</span> (String parameterName : parameterMap.keySet()) &#123;</span><br><span class="line">                    String[] values = parameterMap.get(parameterName);</span><br><span class="line">                    <span class="keyword">if</span> (values != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; values.length; i++) &#123;</span><br><span class="line">                            <span class="keyword">try</span> &#123;</span><br><span class="line">                                <span class="comment">// 处理get乱码</span></span><br><span class="line">                                values[i] = <span class="keyword">new</span> <span class="title class_">String</span>(values[i]</span><br><span class="line">                                        .getBytes(<span class="string">&quot;ISO-8859-1&quot;</span>), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                            &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">                                e.printStackTrace();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                hasEncode = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> parameterMap;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getParameterMap();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取一个值</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getParameter</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = getParameterMap();</span><br><span class="line">        String[] values = parameterMap.get(name);</span><br><span class="line">        <span class="keyword">if</span> (values == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> values[<span class="number">0</span>]; <span class="comment">// 取回参数的第一个值</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取所有值</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String[] getParameterValues(String name) &#123;</span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = getParameterMap();</span><br><span class="line">        String[] values = parameterMap.get(name);</span><br><span class="line">        <span class="keyword">return</span> values;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="②在web-xml中配置这个过滤器"><a href="#②在web-xml中配置这个过滤器" class="headerlink" title="②在web.xml中配置这个过滤器"></a>②在web.xml中配置这个过滤器</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241103173136683.png" alt="image-20241103173136683"></p>
<p>解决</p>
<h2 id="一般的解决思路-1"><a href="#一般的解决思路-1" class="headerlink" title="一般的解决思路"></a>一般的解决思路</h2><p>1.Request</p>
<p>2.过滤器</p>
<p>3.修改post到get</p>
<p>4.springmvc自带的过滤器</p>
<p>5.修改tomcat文件</p>
<p>6.拦截器路径设置为&#x2F;*</p>
<h2 id="PS-最后的办法-1"><a href="#PS-最后的办法-1" class="headerlink" title="PS:最后的办法"></a>PS:最后的办法</h2><h3 id="①一个强大的自定义过滤器-1"><a href="#①一个强大的自定义过滤器-1" class="headerlink" title="①一个强大的自定义过滤器"></a>①一个强大的自定义过滤器</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 自己的包路径;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequestWrapper;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解决get和post请求 全部乱码的过滤器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GenericEncodingFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="comment">// 处理response的字符编码</span></span><br><span class="line">        HttpServletResponse myResponse=(HttpServletResponse) response;</span><br><span class="line">        myResponse.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转型为与协议相关对象</span></span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">httpServletRequest</span> <span class="operator">=</span> (HttpServletRequest) request;</span><br><span class="line">        <span class="comment">// 对request包装增强</span></span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">myrequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRequest</span>(httpServletRequest);</span><br><span class="line">        chain.doFilter(myrequest, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义request对象，HttpServletRequest的包装类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyRequest</span> <span class="keyword">extends</span> <span class="title class_">HttpServletRequestWrapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> HttpServletRequest request;</span><br><span class="line">    <span class="comment">// 是否编码的标记</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> hasEncode;</span><br><span class="line">    <span class="comment">// 定义一个可以传入HttpServletRequest对象的构造函数，以便对其进行装饰</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyRequest</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(request);<span class="comment">// super必须写</span></span><br><span class="line">        <span class="built_in">this</span>.request = request;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对需要增强方法 进行覆盖</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map <span class="title function_">getParameterMap</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 先获得请求方式</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">method</span> <span class="operator">=</span> request.getMethod();</span><br><span class="line">        <span class="keyword">if</span> (method.equalsIgnoreCase(<span class="string">&quot;post&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">// post请求</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 处理post乱码</span></span><br><span class="line">                request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> request.getParameterMap();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method.equalsIgnoreCase(<span class="string">&quot;get&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">// get请求</span></span><br><span class="line">            Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">            <span class="keyword">if</span> (!hasEncode) &#123; <span class="comment">// 确保get手动编码逻辑只运行一次</span></span><br><span class="line">                <span class="keyword">for</span> (String parameterName : parameterMap.keySet()) &#123;</span><br><span class="line">                    String[] values = parameterMap.get(parameterName);</span><br><span class="line">                    <span class="keyword">if</span> (values != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; values.length; i++) &#123;</span><br><span class="line">                            <span class="keyword">try</span> &#123;</span><br><span class="line">                                <span class="comment">// 处理get乱码</span></span><br><span class="line">                                values[i] = <span class="keyword">new</span> <span class="title class_">String</span>(values[i]</span><br><span class="line">                                        .getBytes(<span class="string">&quot;ISO-8859-1&quot;</span>), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                            &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">                                e.printStackTrace();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                hasEncode = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> parameterMap;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getParameterMap();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取一个值</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getParameter</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = getParameterMap();</span><br><span class="line">        String[] values = parameterMap.get(name);</span><br><span class="line">        <span class="keyword">if</span> (values == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> values[<span class="number">0</span>]; <span class="comment">// 取回参数的第一个值</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取所有值</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String[] getParameterValues(String name) &#123;</span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = getParameterMap();</span><br><span class="line">        String[] values = parameterMap.get(name);</span><br><span class="line">        <span class="keyword">return</span> values;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="②在web-xml中配置这个过滤器-1"><a href="#②在web-xml中配置这个过滤器-1" class="headerlink" title="②在web.xml中配置这个过滤器"></a>②在web.xml中配置这个过滤器</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241103173136683.png" alt="image-20241103173136683"></p>
]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>接受请求参数和数据回显</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/%E6%8E%A5%E5%8F%97%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E5%92%8C%E6%95%B0%E6%8D%AE%E5%9B%9E%E6%98%BE/</url>
    <content><![CDATA[<h1 id="请求参数接收与回显"><a href="#请求参数接收与回显" class="headerlink" title="请求参数接收与回显"></a>请求参数接收与回显</h1><h2 id="接收"><a href="#接收" class="headerlink" title="接收"></a>接收</h2><p><img src="/./../../TyporaImage/SpringMVC/image-20241103162047186.png" alt="image-20241103162047186"></p>
<p>可以通过@RequestParam来自己定义url中的参数名称</p>
<h2 id="数据回显"><a href="#数据回显" class="headerlink" title="数据回显"></a>数据回显</h2><h3 id="1-通过ModelAndView"><a href="#1-通过ModelAndView" class="headerlink" title="1.通过ModelAndView"></a>1.通过ModelAndView</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241103162835114.png" alt="image-20241103162835114"></p>
<h3 id="2-ModelMap"><a href="#2-ModelMap" class="headerlink" title="2.ModelMap"></a>2.ModelMap</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241103162853163.png" alt="image-20241103162853163"></p>
<h3 id="3-Model"><a href="#3-Model" class="headerlink" title="3.Model"></a>3.Model</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241103162905225.png" alt="image-20241103162905225">回显</p>
<h2 id="接收-1"><a href="#接收-1" class="headerlink" title="接收"></a>接收</h2><p><img src="/./../../TyporaImage/SpringMVC/image-20241103162047186.png" alt="image-20241103162047186"></p>
<p>可以通过@RequestParam来自己定义url中的参数名称</p>
<h2 id="数据回显-1"><a href="#数据回显-1" class="headerlink" title="数据回显"></a>数据回显</h2><h3 id="1-通过ModelAndView-1"><a href="#1-通过ModelAndView-1" class="headerlink" title="1.通过ModelAndView"></a>1.通过ModelAndView</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241103162835114.png" alt="image-20241103162835114"></p>
<h3 id="2-ModelMap-1"><a href="#2-ModelMap-1" class="headerlink" title="2.ModelMap"></a>2.ModelMap</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241103162853163.png" alt="image-20241103162853163"></p>
<h3 id="3-Model-1"><a href="#3-Model-1" class="headerlink" title="3.Model"></a>3.Model</h3><p><img src="/./../../TyporaImage/SpringMVC/image-20241103162905225.png" alt="image-20241103162905225"></p>
]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>学习过程</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<p>1.回顾</p>
<p>2.2.</p>
]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>相关知识点</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    <content><![CDATA[<p>1.<img src="/./../../TyporaImage/SpringMVC/image-20241030222351903.png" alt="image-20241030222351903"></p>
<p>2.不能运行,可能不是代码出问题,而是环境有问题.</p>
<p>这个时候看看jar包有没有引入</p>
<p>2.不能运行,可能不是代码出问题,而是环境有问题.</p>
<p>这个时候看看jar包有没有引入</p>
]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>重定向和转发</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E8%BD%AC%E5%8F%91/</url>
    <content><![CDATA[<h1 id="转发和重定向"><a href="#转发和重定向" class="headerlink" title="转发和重定向"></a>转发和重定向</h1><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><h2 id="1-没有视图解析器"><a href="#1-没有视图解析器" class="headerlink" title="1.没有视图解析器"></a>1.没有视图解析器</h2><h3 id="转发"><a href="#转发" class="headerlink" title="转发"></a>转发</h3><p>return后面加资源的全限定类名</p>
<p><img src="/./../../TyporaImage/SpringMVC/image-20241103154607124.png" alt="image-20241103154607124"></p>
<h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@RequestMapping(&quot;/add/test2&quot;)</span><br><span class="line">public String test3() &#123;</span><br><span class="line">    return &quot;redirect:/test&quot;; // 重定向到 /test 路径</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 处理 /test 路径的方法</span><br><span class="line">@RequestMapping(&quot;/test&quot;)</span><br><span class="line">public String showTestPage() &#123;</span><br><span class="line">    return &quot;/WEB-INF/jsp/test.jsp&quot;; // 返回逻辑视图名，视图解析器将处理后缀</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因为SpringMVC重定向是URL,所以不能直接到jsp文件.所以采用这个方式</p>
<h2 id="2-有视图解析器"><a href="#2-有视图解析器" class="headerlink" title="2.有视图解析器"></a>2.有视图解析器</h2><h3 id="转发-1"><a href="#转发-1" class="headerlink" title="转发"></a>转发</h3><p>不写了,都知道</p>
<h3 id="重定向-1"><a href="#重定向-1" class="headerlink" title="重定向"></a>重定向</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@RequestMapping(&quot;/add/test2&quot;)</span><br><span class="line">public String test3() &#123;</span><br><span class="line">    return &quot;redirect:/test&quot;; // 重定向到 /test 路径</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 处理 /test 路径的方法</span><br><span class="line">@RequestMapping(&quot;/test&quot;)</span><br><span class="line">public String showTestPage() &#123;</span><br><span class="line">    return &quot;test&quot;; // 返回逻辑视图名，视图解析器将处理后缀</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到有了视图解析器,需要写的部分少了很多.</p>
<p>定向</p>
<h2 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h2><h2 id="1-没有视图解析器-1"><a href="#1-没有视图解析器-1" class="headerlink" title="1.没有视图解析器"></a>1.没有视图解析器</h2><h3 id="转发-2"><a href="#转发-2" class="headerlink" title="转发"></a>转发</h3><p>return后面加资源的全限定类名</p>
<p><img src="/./../../TyporaImage/SpringMVC/image-20241103154607124.png" alt="image-20241103154607124"></p>
<h3 id="重定向-2"><a href="#重定向-2" class="headerlink" title="重定向"></a>重定向</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@RequestMapping(&quot;/add/test2&quot;)</span><br><span class="line">public String test3() &#123;</span><br><span class="line">    return &quot;redirect:/test&quot;; // 重定向到 /test 路径</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 处理 /test 路径的方法</span><br><span class="line">@RequestMapping(&quot;/test&quot;)</span><br><span class="line">public String showTestPage() &#123;</span><br><span class="line">    return &quot;/WEB-INF/jsp/test.jsp&quot;; // 返回逻辑视图名，视图解析器将处理后缀</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因为SpringMVC重定向是URL,所以不能直接到jsp文件.所以采用这个方式</p>
<h2 id="2-有视图解析器-1"><a href="#2-有视图解析器-1" class="headerlink" title="2.有视图解析器"></a>2.有视图解析器</h2><h3 id="转发-3"><a href="#转发-3" class="headerlink" title="转发"></a>转发</h3><p>不写了,都知道</p>
<h3 id="重定向-3"><a href="#重定向-3" class="headerlink" title="重定向"></a>重定向</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@RequestMapping(&quot;/add/test2&quot;)</span><br><span class="line">public String test3() &#123;</span><br><span class="line">    return &quot;redirect:/test&quot;; // 重定向到 /test 路径</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 处理 /test 路径的方法</span><br><span class="line">@RequestMapping(&quot;/test&quot;)</span><br><span class="line">public String showTestPage() &#123;</span><br><span class="line">    return &quot;test&quot;; // 返回逻辑视图名，视图解析器将处理后缀</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到有了视图解析器,需要写的部分少了很多.</p>
]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>项目流程</title>
    <url>/2024/11/08/TyporaNotes/Typora_SpringMVC/%E9%A1%B9%E7%9B%AE%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<p>1.需求</p>
<p>2.设计数据库</p>
<p>3.业务</p>
<p>4.前端</p>
<p>2.设计数据库</p>
<p>3.业务</p>
<p>4.前端</p>
]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
  </entry>
  <entry>
    <title>AT&amp;T格式与Intel格式</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/AT&amp;T%E6%A0%BC%E5%BC%8F%E4%B8%8EIntel%E6%A0%BC%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="AT-T格式与Intel格式"><a href="#AT-T格式与Intel格式" class="headerlink" title="AT&amp;T格式与Intel格式"></a>AT&amp;T格式与Intel格式</h1><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135635234.png" alt="image-20240629135635234"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135722334.png" alt="image-20240629135722334">格式</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135635234.png" alt="image-20240629135635234"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135722334.png" alt="image-20240629135722334"># AT&amp;T格式与Intel格式</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135635234.png" alt="image-20240629135635234"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135722334.png" alt="image-20240629135722334">格式</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135635234.png" alt="image-20240629135635234"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135722334.png" alt="image-20240629135722334"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>BCD码</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/BCD%E7%A0%81/</url>
    <content><![CDATA[<h1 id="BCD码（Binary-Coded-Decimal）"><a href="#BCD码（Binary-Coded-Decimal）" class="headerlink" title="BCD码（Binary-Coded Decimal）"></a>BCD码（Binary-Coded Decimal）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>BCD码（二进制编码的十进制）是一种数字编码方式，它使用四位二进制数来表示一位十进制数。BCD码主要用于数字电路和计算机系统中，以便于实现数字的显示和计算。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>BCD码由四位二进制数组成，每一位二进制数的取值范围是0到1。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>BCD码的结构形式是将十进制数的每一位分别转换成对应的四位二进制数。例如，十进制数9的BCD码是1001。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>根据其编码方式的不同：</p>
<h3 id="1-分为有权BCD码"><a href="#1-分为有权BCD码" class="headerlink" title="1.分为有权BCD码"></a>1.分为有权BCD码</h3><p>有权BCD码包括8421码、5421码等</p>
<h3 id="2-无权BCD码"><a href="#2-无权BCD码" class="headerlink" title="2.无权BCD码"></a>2.无权BCD码</h3><p>而无权BCD码包括余3码、格雷码等。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>BCD码的主要特征是使用四位二进制数来表示一位十进制数，便于数字的显示和计算。</p>
<h1 id="8421码"><a href="#8421码" class="headerlink" title="8421码"></a>8421码</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>8421码是一种有权重的BCD（二进制编码的十进制）码，也称为8421BCD码。在这种编码方式中，每一位二进制数的权重分别对应8、4、2、1，因此得名8421码。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>8421码由四位二进制数组成，每一位的权重分别是8、4、2、1。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>8421码的结构形式是将十进制数的每一位转换成对应的四位二进制数。例如，十进制数9的8421码是1001。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624180514771.png" alt="image-20240624180514771"></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>使用8421码时，需要将十进制数的每一位转换成对应的四位二进制数。在计算过程中，需要对8421码进行适当的处理，以保持其表示的是十进制数。</p>
<p>如果没有定义，那么直接加上二进制的6。</p>
<h1 id="余三码"><a href="#余三码" class="headerlink" title="余三码"></a>余三码</h1><p>在8421码上的基础上，加上二进制的3.</p>
<h1 id="2421码"><a href="#2421码" class="headerlink" title="2421码"></a>2421码</h1><h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624180639660.png" alt="image-20240624180639660"></p>
<p>0-4，采用首位为0的编码。</p>
<p>5-9，采用首位为1的编码。</p>
<p>l）</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>BCD码（二进制编码的十进制）是一种数字编码方式，它使用四位二进制数来表示一位十进制数。BCD码主要用于数字电路和计算机系统中，以便于实现数字的显示和计算。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>BCD码由四位二进制数组成，每一位二进制数的取值范围是0到1。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>BCD码的结构形式是将十进制数的每一位分别转换成对应的四位二进制数。例如，十进制数9的BCD码是1001。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>根据其编码方式的不同：</p>
<h3 id="1-分为有权BCD码-1"><a href="#1-分为有权BCD码-1" class="headerlink" title="1.分为有权BCD码"></a>1.分为有权BCD码</h3><p>有权BCD码包括8421码、5421码等</p>
<h3 id="2-无权BCD码-1"><a href="#2-无权BCD码-1" class="headerlink" title="2.无权BCD码"></a>2.无权BCD码</h3><p>而无权BCD码包括余3码、格雷码等。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>BCD码的主要特征是使用四位二进制数来表示一位十进制数，便于数字的显示和计算。</p>
<h1 id="8421码-1"><a href="#8421码-1" class="headerlink" title="8421码"></a>8421码</h1><h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>8421码是一种有权重的BCD（二进制编码的十进制）码，也称为8421BCD码。在这种编码方式中，每一位二进制数的权重分别对应8、4、2、1，因此得名8421码。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>8421码由四位二进制数组成，每一位的权重分别是8、4、2、1。</p>
<h2 id="结构形式-4"><a href="#结构形式-4" class="headerlink" title="结构形式"></a>结构形式</h2><p>8421码的结构形式是将十进制数的每一位转换成对应的四位二进制数。例如，十进制数9的8421码是1001。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624180514771.png" alt="image-20240624180514771"></p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>使用8421码时，需要将十进制数的每一位转换成对应的四位二进制数。在计算过程中，需要对8421码进行适当的处理，以保持其表示的是十进制数。</p>
<p>如果没有定义，那么直接加上二进制的6。</p>
<h1 id="余三码-1"><a href="#余三码-1" class="headerlink" title="余三码"></a>余三码</h1><p>在8421码上的基础上，加上二进制的3.</p>
<h1 id="2421码-1"><a href="#2421码-1" class="headerlink" title="2421码"></a>2421码</h1><h2 id="结构形式-5"><a href="#结构形式-5" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624180639660.png" alt="image-20240624180639660"></p>
<p>0-4，采用首位为0的编码。</p>
<p>5-9，采用首位为1的编码。# BCD码（Binary-Coded Decimal）</p>
<h2 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h2><p>BCD码（二进制编码的十进制）是一种数字编码方式，它使用四位二进制数来表示一位十进制数。BCD码主要用于数字电路和计算机系统中，以便于实现数字的显示和计算。</p>
<h2 id="组成部分-4"><a href="#组成部分-4" class="headerlink" title="组成部分"></a>组成部分</h2><p>BCD码由四位二进制数组成，每一位二进制数的取值范围是0到1。</p>
<h2 id="结构形式-6"><a href="#结构形式-6" class="headerlink" title="结构形式"></a>结构形式</h2><p>BCD码的结构形式是将十进制数的每一位分别转换成对应的四位二进制数。例如，十进制数9的BCD码是1001。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>根据其编码方式的不同：</p>
<h3 id="1-分为有权BCD码-2"><a href="#1-分为有权BCD码-2" class="headerlink" title="1.分为有权BCD码"></a>1.分为有权BCD码</h3><p>有权BCD码包括8421码、5421码等</p>
<h3 id="2-无权BCD码-2"><a href="#2-无权BCD码-2" class="headerlink" title="2.无权BCD码"></a>2.无权BCD码</h3><p>而无权BCD码包括余3码、格雷码等。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>BCD码的主要特征是使用四位二进制数来表示一位十进制数，便于数字的显示和计算。</p>
<h1 id="8421码-2"><a href="#8421码-2" class="headerlink" title="8421码"></a>8421码</h1><h2 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h2><p>8421码是一种有权重的BCD（二进制编码的十进制）码，也称为8421BCD码。在这种编码方式中，每一位二进制数的权重分别对应8、4、2、1，因此得名8421码。</p>
<h2 id="组成部分-5"><a href="#组成部分-5" class="headerlink" title="组成部分"></a>组成部分</h2><p>8421码由四位二进制数组成，每一位的权重分别是8、4、2、1。</p>
<h2 id="结构形式-7"><a href="#结构形式-7" class="headerlink" title="结构形式"></a>结构形式</h2><p>8421码的结构形式是将十进制数的每一位转换成对应的四位二进制数。例如，十进制数9的8421码是1001。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624180514771.png" alt="image-20240624180514771"></p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>使用8421码时，需要将十进制数的每一位转换成对应的四位二进制数。在计算过程中，需要对8421码进行适当的处理，以保持其表示的是十进制数。</p>
<p>如果没有定义，那么直接加上二进制的6。</p>
<h1 id="余三码-2"><a href="#余三码-2" class="headerlink" title="余三码"></a>余三码</h1><p>在8421码上的基础上，加上二进制的3.</p>
<h1 id="2421码-2"><a href="#2421码-2" class="headerlink" title="2421码"></a>2421码</h1><h2 id="结构形式-8"><a href="#结构形式-8" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624180639660.png" alt="image-20240624180639660"></p>
<p>0-4，采用首位为0的编码。</p>
<p>5-9，采用首位为1的编码。</p>
<p>l）</p>
<h2 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h2><p>BCD码（二进制编码的十进制）是一种数字编码方式，它使用四位二进制数来表示一位十进制数。BCD码主要用于数字电路和计算机系统中，以便于实现数字的显示和计算。</p>
<h2 id="组成部分-6"><a href="#组成部分-6" class="headerlink" title="组成部分"></a>组成部分</h2><p>BCD码由四位二进制数组成，每一位二进制数的取值范围是0到1。</p>
<h2 id="结构形式-9"><a href="#结构形式-9" class="headerlink" title="结构形式"></a>结构形式</h2><p>BCD码的结构形式是将十进制数的每一位分别转换成对应的四位二进制数。例如，十进制数9的BCD码是1001。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>根据其编码方式的不同：</p>
<h3 id="1-分为有权BCD码-3"><a href="#1-分为有权BCD码-3" class="headerlink" title="1.分为有权BCD码"></a>1.分为有权BCD码</h3><p>有权BCD码包括8421码、5421码等</p>
<h3 id="2-无权BCD码-3"><a href="#2-无权BCD码-3" class="headerlink" title="2.无权BCD码"></a>2.无权BCD码</h3><p>而无权BCD码包括余3码、格雷码等。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>BCD码的主要特征是使用四位二进制数来表示一位十进制数，便于数字的显示和计算。</p>
<h1 id="8421码-3"><a href="#8421码-3" class="headerlink" title="8421码"></a>8421码</h1><h2 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h2><p>8421码是一种有权重的BCD（二进制编码的十进制）码，也称为8421BCD码。在这种编码方式中，每一位二进制数的权重分别对应8、4、2、1，因此得名8421码。</p>
<h2 id="组成部分-7"><a href="#组成部分-7" class="headerlink" title="组成部分"></a>组成部分</h2><p>8421码由四位二进制数组成，每一位的权重分别是8、4、2、1。</p>
<h2 id="结构形式-10"><a href="#结构形式-10" class="headerlink" title="结构形式"></a>结构形式</h2><p>8421码的结构形式是将十进制数的每一位转换成对应的四位二进制数。例如，十进制数9的8421码是1001。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624180514771.png" alt="image-20240624180514771"></p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>使用8421码时，需要将十进制数的每一位转换成对应的四位二进制数。在计算过程中，需要对8421码进行适当的处理，以保持其表示的是十进制数。</p>
<p>如果没有定义，那么直接加上二进制的6。</p>
<h1 id="余三码-3"><a href="#余三码-3" class="headerlink" title="余三码"></a>余三码</h1><p>在8421码上的基础上，加上二进制的3.</p>
<h1 id="2421码-3"><a href="#2421码-3" class="headerlink" title="2421码"></a>2421码</h1><h2 id="结构形式-11"><a href="#结构形式-11" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624180639660.png" alt="image-20240624180639660"></p>
<p>0-4，采用首位为0的编码。</p>
<p>5-9，采用首位为1的编码。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>CISC和RISC</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/CISC%E5%92%8CRISC/</url>
    <content><![CDATA[<h1 id="CISC和RISC"><a href="#CISC和RISC" class="headerlink" title="CISC和RISC"></a>CISC和RISC</h1><h2 id="基本了解"><a href="#基本了解" class="headerlink" title="基本了解"></a>基本了解</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140435196.png" alt="image-20240629140435196"></p>
<h2 id="二者的对比"><a href="#二者的对比" class="headerlink" title="二者的对比"></a>二者的对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140458393.png" alt="image-20240629140458393">SC</p>
<h2 id="基本了解-1"><a href="#基本了解-1" class="headerlink" title="基本了解"></a>基本了解</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140435196.png" alt="image-20240629140435196"></p>
<h2 id="二者的对比-1"><a href="#二者的对比-1" class="headerlink" title="二者的对比"></a>二者的对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140458393.png" alt="image-20240629140458393"># CISC和RISC</p>
<h2 id="基本了解-2"><a href="#基本了解-2" class="headerlink" title="基本了解"></a>基本了解</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140435196.png" alt="image-20240629140435196"></p>
<h2 id="二者的对比-2"><a href="#二者的对比-2" class="headerlink" title="二者的对比"></a>二者的对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140458393.png" alt="image-20240629140458393">SC</p>
<h2 id="基本了解-3"><a href="#基本了解-3" class="headerlink" title="基本了解"></a>基本了解</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140435196.png" alt="image-20240629140435196"></p>
<h2 id="二者的对比-3"><a href="#二者的对比-3" class="headerlink" title="二者的对比"></a>二者的对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140458393.png" alt="image-20240629140458393"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>Cache</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/Cache/</url>
    <content><![CDATA[<h1 id="Cache-的基本概念和基本原理"><a href="#Cache-的基本概念和基本原理" class="headerlink" title="Cache 的基本概念和基本原理"></a>Cache 的基本概念和基本原理</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Cache（缓存）是一种存储技术，用于临时存储频繁访问的数据或指令，以便快速访问。它是位于CPU和主内存之间的一种小容量但非常快速的存储器。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-Cache存储器"><a href="#1-Cache存储器" class="headerlink" title="1.Cache存储器"></a>1.Cache存储器</h3><p>用于存储数据或指令的物理存储区域。</p>
<h3 id="2-Cache控制器"><a href="#2-Cache控制器" class="headerlink" title="2.Cache控制器"></a>2.Cache控制器</h3><p>管理Cache的存储和检索操作。</p>
<h3 id="3-Cache标签"><a href="#3-Cache标签" class="headerlink" title="3.Cache标签"></a>3.Cache标签</h3><p>用于标识存储在Cache中的数据或指令的来源和位置。</p>
<h3 id="4-替换策略"><a href="#4-替换策略" class="headerlink" title="4.替换策略"></a>4.替换策略</h3><p>决定当Cache满时，哪些数据或指令应该被替换的算法。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>Cache通常采用层次结构，分为L1、L2、L3等不同级别，其中L1 Cache速度最快但容量最小，L3 Cache速度较慢但容量较大。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-直接映射Cache"><a href="#1-直接映射Cache" class="headerlink" title="1.直接映射Cache"></a>1.直接映射Cache</h3><p>每个主存块只能映射到Cache中的一个特定位置。</p>
<h3 id="2-组相联Cache"><a href="#2-组相联Cache" class="headerlink" title="2.组相联Cache"></a>2.组相联Cache</h3><p>主存块可以映射到Cache中的一组位置中的任意一个</p>
<h3 id="3-全相联Cache"><a href="#3-全相联Cache" class="headerlink" title="3.全相联Cache"></a>3.全相联Cache</h3><p>主存块可以映射到Cache中的任意位置。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>Cache的主要特点是快速访问、小容量和高成本</p>
<h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628102032017.png" alt="image-20240628102032017"></p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="局部性原理"><a href="#局部性原理" class="headerlink" title="局部性原理"></a>局部性原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628101915976.png" alt="image-20240628101915976"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.主存和Cache之间通过<strong>块</strong>为单位进行数据交换</p>
<p>2.块可以被拆分成<strong>块号和块内地址</strong>原理</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Cache（缓存）是一种存储技术，用于临时存储频繁访问的数据或指令，以便快速访问。它是位于CPU和主内存之间的一种小容量但非常快速的存储器。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-Cache存储器-1"><a href="#1-Cache存储器-1" class="headerlink" title="1.Cache存储器"></a>1.Cache存储器</h3><p>用于存储数据或指令的物理存储区域。</p>
<h3 id="2-Cache控制器-1"><a href="#2-Cache控制器-1" class="headerlink" title="2.Cache控制器"></a>2.Cache控制器</h3><p>管理Cache的存储和检索操作。</p>
<h3 id="3-Cache标签-1"><a href="#3-Cache标签-1" class="headerlink" title="3.Cache标签"></a>3.Cache标签</h3><p>用于标识存储在Cache中的数据或指令的来源和位置。</p>
<h3 id="4-替换策略-1"><a href="#4-替换策略-1" class="headerlink" title="4.替换策略"></a>4.替换策略</h3><p>决定当Cache满时，哪些数据或指令应该被替换的算法。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>Cache通常采用层次结构，分为L1、L2、L3等不同级别，其中L1 Cache速度最快但容量最小，L3 Cache速度较慢但容量较大。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-直接映射Cache-1"><a href="#1-直接映射Cache-1" class="headerlink" title="1.直接映射Cache"></a>1.直接映射Cache</h3><p>每个主存块只能映射到Cache中的一个特定位置。</p>
<h3 id="2-组相联Cache-1"><a href="#2-组相联Cache-1" class="headerlink" title="2.组相联Cache"></a>2.组相联Cache</h3><p>主存块可以映射到Cache中的一组位置中的任意一个</p>
<h3 id="3-全相联Cache-1"><a href="#3-全相联Cache-1" class="headerlink" title="3.全相联Cache"></a>3.全相联Cache</h3><p>主存块可以映射到Cache中的任意位置。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>Cache的主要特点是快速访问、小容量和高成本</p>
<h2 id="性能分析-1"><a href="#性能分析-1" class="headerlink" title="性能分析"></a>性能分析</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628102032017.png" alt="image-20240628102032017"></p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="局部性原理-1"><a href="#局部性原理-1" class="headerlink" title="局部性原理"></a>局部性原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628101915976.png" alt="image-20240628101915976"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.主存和Cache之间通过<strong>块</strong>为单位进行数据交换</p>
<p>2.块可以被拆分成<strong>块号和块内地址</strong># Cache 的基本概念和基本原理</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>Cache（缓存）是一种存储技术，用于临时存储频繁访问的数据或指令，以便快速访问。它是位于CPU和主内存之间的一种小容量但非常快速的存储器。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-Cache存储器-2"><a href="#1-Cache存储器-2" class="headerlink" title="1.Cache存储器"></a>1.Cache存储器</h3><p>用于存储数据或指令的物理存储区域。</p>
<h3 id="2-Cache控制器-2"><a href="#2-Cache控制器-2" class="headerlink" title="2.Cache控制器"></a>2.Cache控制器</h3><p>管理Cache的存储和检索操作。</p>
<h3 id="3-Cache标签-2"><a href="#3-Cache标签-2" class="headerlink" title="3.Cache标签"></a>3.Cache标签</h3><p>用于标识存储在Cache中的数据或指令的来源和位置。</p>
<h3 id="4-替换策略-2"><a href="#4-替换策略-2" class="headerlink" title="4.替换策略"></a>4.替换策略</h3><p>决定当Cache满时，哪些数据或指令应该被替换的算法。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>Cache通常采用层次结构，分为L1、L2、L3等不同级别，其中L1 Cache速度最快但容量最小，L3 Cache速度较慢但容量较大。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-直接映射Cache-2"><a href="#1-直接映射Cache-2" class="headerlink" title="1.直接映射Cache"></a>1.直接映射Cache</h3><p>每个主存块只能映射到Cache中的一个特定位置。</p>
<h3 id="2-组相联Cache-2"><a href="#2-组相联Cache-2" class="headerlink" title="2.组相联Cache"></a>2.组相联Cache</h3><p>主存块可以映射到Cache中的一组位置中的任意一个</p>
<h3 id="3-全相联Cache-2"><a href="#3-全相联Cache-2" class="headerlink" title="3.全相联Cache"></a>3.全相联Cache</h3><p>主存块可以映射到Cache中的任意位置。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>Cache的主要特点是快速访问、小容量和高成本</p>
<h2 id="性能分析-2"><a href="#性能分析-2" class="headerlink" title="性能分析"></a>性能分析</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628102032017.png" alt="image-20240628102032017"></p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="局部性原理-2"><a href="#局部性原理-2" class="headerlink" title="局部性原理"></a>局部性原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628101915976.png" alt="image-20240628101915976"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.主存和Cache之间通过<strong>块</strong>为单位进行数据交换</p>
<p>2.块可以被拆分成<strong>块号和块内地址</strong>原理</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>Cache（缓存）是一种存储技术，用于临时存储频繁访问的数据或指令，以便快速访问。它是位于CPU和主内存之间的一种小容量但非常快速的存储器。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-Cache存储器-3"><a href="#1-Cache存储器-3" class="headerlink" title="1.Cache存储器"></a>1.Cache存储器</h3><p>用于存储数据或指令的物理存储区域。</p>
<h3 id="2-Cache控制器-3"><a href="#2-Cache控制器-3" class="headerlink" title="2.Cache控制器"></a>2.Cache控制器</h3><p>管理Cache的存储和检索操作。</p>
<h3 id="3-Cache标签-3"><a href="#3-Cache标签-3" class="headerlink" title="3.Cache标签"></a>3.Cache标签</h3><p>用于标识存储在Cache中的数据或指令的来源和位置。</p>
<h3 id="4-替换策略-3"><a href="#4-替换策略-3" class="headerlink" title="4.替换策略"></a>4.替换策略</h3><p>决定当Cache满时，哪些数据或指令应该被替换的算法。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>Cache通常采用层次结构，分为L1、L2、L3等不同级别，其中L1 Cache速度最快但容量最小，L3 Cache速度较慢但容量较大。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-直接映射Cache-3"><a href="#1-直接映射Cache-3" class="headerlink" title="1.直接映射Cache"></a>1.直接映射Cache</h3><p>每个主存块只能映射到Cache中的一个特定位置。</p>
<h3 id="2-组相联Cache-3"><a href="#2-组相联Cache-3" class="headerlink" title="2.组相联Cache"></a>2.组相联Cache</h3><p>主存块可以映射到Cache中的一组位置中的任意一个</p>
<h3 id="3-全相联Cache-3"><a href="#3-全相联Cache-3" class="headerlink" title="3.全相联Cache"></a>3.全相联Cache</h3><p>主存块可以映射到Cache中的任意位置。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>Cache的主要特点是快速访问、小容量和高成本</p>
<h2 id="性能分析-3"><a href="#性能分析-3" class="headerlink" title="性能分析"></a>性能分析</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628102032017.png" alt="image-20240628102032017"></p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="局部性原理-3"><a href="#局部性原理-3" class="headerlink" title="局部性原理"></a>局部性原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628101915976.png" alt="image-20240628101915976"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.主存和Cache之间通过<strong>块</strong>为单位进行数据交换</p>
<p>2.块可以被拆分成<strong>块号和块内地址</strong></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>Cache和主存的映射方式</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/Cache%E5%92%8C%E4%B8%BB%E5%AD%98%E7%9A%84%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="映射方式"><a href="#映射方式" class="headerlink" title="映射方式"></a>映射方式</h1><h2 id="全相联映射"><a href="#全相联映射" class="headerlink" title="全相联映射"></a>全相联映射</h2><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103105190.png" alt="image-20240628103105190"></p>
<h2 id="直接映射"><a href="#直接映射" class="headerlink" title="直接映射"></a>直接映射</h2><h3 id="块号的计算方式"><a href="#块号的计算方式" class="headerlink" title="块号的计算方式"></a>块号的计算方式</h3><p>主存对应的cache 块号&#x3D;主存块号%cache总块号</p>
<h3 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103448416.png" alt="image-20240628103448416"></p>
<h2 id="组相联映射"><a href="#组相联映射" class="headerlink" title="组相联映射"></a>组相联映射</h2><h3 id="块号的计算方式-1"><a href="#块号的计算方式-1" class="headerlink" title="块号的计算方式"></a>块号的计算方式</h3><p>主存对应的cache 块号&#x3D;主存块号%cache分组数</p>
<h3 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103543416.png" alt="image-20240628103543416"></p>
<p>方式</p>
<h2 id="全相联映射-1"><a href="#全相联映射-1" class="headerlink" title="全相联映射"></a>全相联映射</h2><h3 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103105190.png" alt="image-20240628103105190"></p>
<h2 id="直接映射-1"><a href="#直接映射-1" class="headerlink" title="直接映射"></a>直接映射</h2><h3 id="块号的计算方式-2"><a href="#块号的计算方式-2" class="headerlink" title="块号的计算方式"></a>块号的计算方式</h3><p>主存对应的cache 块号&#x3D;主存块号%cache总块号</p>
<h3 id="基本原理-4"><a href="#基本原理-4" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103448416.png" alt="image-20240628103448416"></p>
<h2 id="组相联映射-1"><a href="#组相联映射-1" class="headerlink" title="组相联映射"></a>组相联映射</h2><h3 id="块号的计算方式-3"><a href="#块号的计算方式-3" class="headerlink" title="块号的计算方式"></a>块号的计算方式</h3><p>主存对应的cache 块号&#x3D;主存块号%cache分组数</p>
<h3 id="基本原理-5"><a href="#基本原理-5" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103543416.png" alt="image-20240628103543416"># 映射方式</p>
<h2 id="全相联映射-2"><a href="#全相联映射-2" class="headerlink" title="全相联映射"></a>全相联映射</h2><h3 id="基本原理-6"><a href="#基本原理-6" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103105190.png" alt="image-20240628103105190"></p>
<h2 id="直接映射-2"><a href="#直接映射-2" class="headerlink" title="直接映射"></a>直接映射</h2><h3 id="块号的计算方式-4"><a href="#块号的计算方式-4" class="headerlink" title="块号的计算方式"></a>块号的计算方式</h3><p>主存对应的cache 块号&#x3D;主存块号%cache总块号</p>
<h3 id="基本原理-7"><a href="#基本原理-7" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103448416.png" alt="image-20240628103448416"></p>
<h2 id="组相联映射-2"><a href="#组相联映射-2" class="headerlink" title="组相联映射"></a>组相联映射</h2><h3 id="块号的计算方式-5"><a href="#块号的计算方式-5" class="headerlink" title="块号的计算方式"></a>块号的计算方式</h3><p>主存对应的cache 块号&#x3D;主存块号%cache分组数</p>
<h3 id="基本原理-8"><a href="#基本原理-8" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103543416.png" alt="image-20240628103543416"></p>
<p>方式</p>
<h2 id="全相联映射-3"><a href="#全相联映射-3" class="headerlink" title="全相联映射"></a>全相联映射</h2><h3 id="基本原理-9"><a href="#基本原理-9" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103105190.png" alt="image-20240628103105190"></p>
<h2 id="直接映射-3"><a href="#直接映射-3" class="headerlink" title="直接映射"></a>直接映射</h2><h3 id="块号的计算方式-6"><a href="#块号的计算方式-6" class="headerlink" title="块号的计算方式"></a>块号的计算方式</h3><p>主存对应的cache 块号&#x3D;主存块号%cache总块号</p>
<h3 id="基本原理-10"><a href="#基本原理-10" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103448416.png" alt="image-20240628103448416"></p>
<h2 id="组相联映射-3"><a href="#组相联映射-3" class="headerlink" title="组相联映射"></a>组相联映射</h2><h3 id="块号的计算方式-7"><a href="#块号的计算方式-7" class="headerlink" title="块号的计算方式"></a>块号的计算方式</h3><p>主存对应的cache 块号&#x3D;主存块号%cache分组数</p>
<h3 id="基本原理-11"><a href="#基本原理-11" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103543416.png" alt="image-20240628103543416"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>Cache写策略</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/Cache%E5%86%99%E7%AD%96%E7%95%A5/</url>
    <content><![CDATA[<h1 id="Cache写策略"><a href="#Cache写策略" class="headerlink" title="Cache写策略"></a>Cache写策略</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>Cache写策略是指在计算机系统中，当处理器对缓存中的数据进行写操作时，如何将数据写入缓存和主存储器的方法。不同的写策略在性能和数据一致性方面有所不同。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-写直达（Write-Through）"><a href="#1-写直达（Write-Through）" class="headerlink" title="1.写直达（Write-Through）"></a>1.写直达（Write-Through）</h3><p>每次写操作同时更新缓存和主存储器。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628105539742.png" alt="image-20240628105539742"></p>
<h3 id="2-写回（Write-Back）"><a href="#2-写回（Write-Back）" class="headerlink" title="2.写回（Write-Back）"></a>2.写回（Write-Back）</h3><p>写操作只更新Cache，主存储器的数据<strong>在cache行被替换时才更新。</strong></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628105416077.png" alt="image-20240628105416077"></p>
<h3 id="3-写分配（Write-Allocate）"><a href="#3-写分配（Write-Allocate）" class="headerlink" title="3.写分配（Write-Allocate）"></a>3.写分配（Write-Allocate）</h3><p>写操作发生未命中时，将该数据块从主存储器载入Cache后再进行写操作。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628105958825.png" alt="image-20240628105958825"></p>
<h3 id="4-非写分配（No-Write-Allocate）"><a href="#4-非写分配（No-Write-Allocate）" class="headerlink" title="4.非写分配（No-Write-Allocate）"></a>4.非写分配（No-Write-Allocate）</h3><p>写操作发生未命中时，直接将数据写入主存储器，而不加载到缓存中。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628110119332.png" alt="image-20240628110119332"></p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-写直达策略"><a href="#1-写直达策略" class="headerlink" title="1.写直达策略"></a>1.写直达策略</h3><p>缓存和主存储器保持同步更新。</p>
<h3 id="2-写回策略"><a href="#2-写回策略" class="headerlink" title="2.写回策略"></a>2.写回策略</h3><p>缓存更新快，主存储器延迟更新。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-写命中"><a href="#1-写命中" class="headerlink" title="1.写命中"></a>1.写命中</h3><h4 id="写直达（Write-Through）和写回（Write-Back）"><a href="#写直达（Write-Through）和写回（Write-Back）" class="headerlink" title="写直达（Write-Through）和写回（Write-Back）"></a>写直达（Write-Through）和写回（Write-Back）</h4><h3 id="2-写未命中"><a href="#2-写未命中" class="headerlink" title="2.写未命中"></a>2.写未命中</h3><h4 id="写分配（Write-Allocate）和非写分配（No-Write-Allocate）"><a href="#写分配（Write-Allocate）和非写分配（No-Write-Allocate）" class="headerlink" title="写分配（Write-Allocate）和非写分配（No-Write-Allocate）"></a>写分配（Write-Allocate）和非写分配（No-Write-Allocate）</h4><h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.写直达：简单实现，数据一致性高，但写操作速度较慢。</p>
<p>2.写回：写操作速度快，但数据一致性管理复杂。</p>
<p>3.写分配：适用于数据高重用性场景。</p>
<p>4.非写分配：适用于数据低重用性场景。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-多级Cache"><a href="#1-多级Cache" class="headerlink" title="1.多级Cache"></a>1.多级Cache</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628110209436.png" alt="image-20240628110209436"></p>
<p>策略</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>Cache写策略是指在计算机系统中，当处理器对缓存中的数据进行写操作时，如何将数据写入缓存和主存储器的方法。不同的写策略在性能和数据一致性方面有所不同。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-写直达（Write-Through）-1"><a href="#1-写直达（Write-Through）-1" class="headerlink" title="1.写直达（Write-Through）"></a>1.写直达（Write-Through）</h3><p>每次写操作同时更新缓存和主存储器。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628105539742.png" alt="image-20240628105539742"></p>
<h3 id="2-写回（Write-Back）-1"><a href="#2-写回（Write-Back）-1" class="headerlink" title="2.写回（Write-Back）"></a>2.写回（Write-Back）</h3><p>写操作只更新Cache，主存储器的数据<strong>在cache行被替换时才更新。</strong></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628105416077.png" alt="image-20240628105416077"></p>
<h3 id="3-写分配（Write-Allocate）-1"><a href="#3-写分配（Write-Allocate）-1" class="headerlink" title="3.写分配（Write-Allocate）"></a>3.写分配（Write-Allocate）</h3><p>写操作发生未命中时，将该数据块从主存储器载入Cache后再进行写操作。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628105958825.png" alt="image-20240628105958825"></p>
<h3 id="4-非写分配（No-Write-Allocate）-1"><a href="#4-非写分配（No-Write-Allocate）-1" class="headerlink" title="4.非写分配（No-Write-Allocate）"></a>4.非写分配（No-Write-Allocate）</h3><p>写操作发生未命中时，直接将数据写入主存储器，而不加载到缓存中。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628110119332.png" alt="image-20240628110119332"></p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-写直达策略-1"><a href="#1-写直达策略-1" class="headerlink" title="1.写直达策略"></a>1.写直达策略</h3><p>缓存和主存储器保持同步更新。</p>
<h3 id="2-写回策略-1"><a href="#2-写回策略-1" class="headerlink" title="2.写回策略"></a>2.写回策略</h3><p>缓存更新快，主存储器延迟更新。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-写命中-1"><a href="#1-写命中-1" class="headerlink" title="1.写命中"></a>1.写命中</h3><h4 id="写直达（Write-Through）和写回（Write-Back）-1"><a href="#写直达（Write-Through）和写回（Write-Back）-1" class="headerlink" title="写直达（Write-Through）和写回（Write-Back）"></a>写直达（Write-Through）和写回（Write-Back）</h4><h3 id="2-写未命中-1"><a href="#2-写未命中-1" class="headerlink" title="2.写未命中"></a>2.写未命中</h3><h4 id="写分配（Write-Allocate）和非写分配（No-Write-Allocate）-1"><a href="#写分配（Write-Allocate）和非写分配（No-Write-Allocate）-1" class="headerlink" title="写分配（Write-Allocate）和非写分配（No-Write-Allocate）"></a>写分配（Write-Allocate）和非写分配（No-Write-Allocate）</h4><h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.写直达：简单实现，数据一致性高，但写操作速度较慢。</p>
<p>2.写回：写操作速度快，但数据一致性管理复杂。</p>
<p>3.写分配：适用于数据高重用性场景。</p>
<p>4.非写分配：适用于数据低重用性场景。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-多级Cache-1"><a href="#1-多级Cache-1" class="headerlink" title="1.多级Cache"></a>1.多级Cache</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628110209436.png" alt="image-20240628110209436"># Cache写策略</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>Cache写策略是指在计算机系统中，当处理器对缓存中的数据进行写操作时，如何将数据写入缓存和主存储器的方法。不同的写策略在性能和数据一致性方面有所不同。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-写直达（Write-Through）-2"><a href="#1-写直达（Write-Through）-2" class="headerlink" title="1.写直达（Write-Through）"></a>1.写直达（Write-Through）</h3><p>每次写操作同时更新缓存和主存储器。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628105539742.png" alt="image-20240628105539742"></p>
<h3 id="2-写回（Write-Back）-2"><a href="#2-写回（Write-Back）-2" class="headerlink" title="2.写回（Write-Back）"></a>2.写回（Write-Back）</h3><p>写操作只更新Cache，主存储器的数据<strong>在cache行被替换时才更新。</strong></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628105416077.png" alt="image-20240628105416077"></p>
<h3 id="3-写分配（Write-Allocate）-2"><a href="#3-写分配（Write-Allocate）-2" class="headerlink" title="3.写分配（Write-Allocate）"></a>3.写分配（Write-Allocate）</h3><p>写操作发生未命中时，将该数据块从主存储器载入Cache后再进行写操作。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628105958825.png" alt="image-20240628105958825"></p>
<h3 id="4-非写分配（No-Write-Allocate）-2"><a href="#4-非写分配（No-Write-Allocate）-2" class="headerlink" title="4.非写分配（No-Write-Allocate）"></a>4.非写分配（No-Write-Allocate）</h3><p>写操作发生未命中时，直接将数据写入主存储器，而不加载到缓存中。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628110119332.png" alt="image-20240628110119332"></p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-写直达策略-2"><a href="#1-写直达策略-2" class="headerlink" title="1.写直达策略"></a>1.写直达策略</h3><p>缓存和主存储器保持同步更新。</p>
<h3 id="2-写回策略-2"><a href="#2-写回策略-2" class="headerlink" title="2.写回策略"></a>2.写回策略</h3><p>缓存更新快，主存储器延迟更新。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-写命中-2"><a href="#1-写命中-2" class="headerlink" title="1.写命中"></a>1.写命中</h3><h4 id="写直达（Write-Through）和写回（Write-Back）-2"><a href="#写直达（Write-Through）和写回（Write-Back）-2" class="headerlink" title="写直达（Write-Through）和写回（Write-Back）"></a>写直达（Write-Through）和写回（Write-Back）</h4><h3 id="2-写未命中-2"><a href="#2-写未命中-2" class="headerlink" title="2.写未命中"></a>2.写未命中</h3><h4 id="写分配（Write-Allocate）和非写分配（No-Write-Allocate）-2"><a href="#写分配（Write-Allocate）和非写分配（No-Write-Allocate）-2" class="headerlink" title="写分配（Write-Allocate）和非写分配（No-Write-Allocate）"></a>写分配（Write-Allocate）和非写分配（No-Write-Allocate）</h4><h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.写直达：简单实现，数据一致性高，但写操作速度较慢。</p>
<p>2.写回：写操作速度快，但数据一致性管理复杂。</p>
<p>3.写分配：适用于数据高重用性场景。</p>
<p>4.非写分配：适用于数据低重用性场景。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-多级Cache-2"><a href="#1-多级Cache-2" class="headerlink" title="1.多级Cache"></a>1.多级Cache</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628110209436.png" alt="image-20240628110209436"></p>
<p>策略</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>Cache写策略是指在计算机系统中，当处理器对缓存中的数据进行写操作时，如何将数据写入缓存和主存储器的方法。不同的写策略在性能和数据一致性方面有所不同。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-写直达（Write-Through）-3"><a href="#1-写直达（Write-Through）-3" class="headerlink" title="1.写直达（Write-Through）"></a>1.写直达（Write-Through）</h3><p>每次写操作同时更新缓存和主存储器。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628105539742.png" alt="image-20240628105539742"></p>
<h3 id="2-写回（Write-Back）-3"><a href="#2-写回（Write-Back）-3" class="headerlink" title="2.写回（Write-Back）"></a>2.写回（Write-Back）</h3><p>写操作只更新Cache，主存储器的数据<strong>在cache行被替换时才更新。</strong></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628105416077.png" alt="image-20240628105416077"></p>
<h3 id="3-写分配（Write-Allocate）-3"><a href="#3-写分配（Write-Allocate）-3" class="headerlink" title="3.写分配（Write-Allocate）"></a>3.写分配（Write-Allocate）</h3><p>写操作发生未命中时，将该数据块从主存储器载入Cache后再进行写操作。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628105958825.png" alt="image-20240628105958825"></p>
<h3 id="4-非写分配（No-Write-Allocate）-3"><a href="#4-非写分配（No-Write-Allocate）-3" class="headerlink" title="4.非写分配（No-Write-Allocate）"></a>4.非写分配（No-Write-Allocate）</h3><p>写操作发生未命中时，直接将数据写入主存储器，而不加载到缓存中。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628110119332.png" alt="image-20240628110119332"></p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-写直达策略-3"><a href="#1-写直达策略-3" class="headerlink" title="1.写直达策略"></a>1.写直达策略</h3><p>缓存和主存储器保持同步更新。</p>
<h3 id="2-写回策略-3"><a href="#2-写回策略-3" class="headerlink" title="2.写回策略"></a>2.写回策略</h3><p>缓存更新快，主存储器延迟更新。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-写命中-3"><a href="#1-写命中-3" class="headerlink" title="1.写命中"></a>1.写命中</h3><h4 id="写直达（Write-Through）和写回（Write-Back）-3"><a href="#写直达（Write-Through）和写回（Write-Back）-3" class="headerlink" title="写直达（Write-Through）和写回（Write-Back）"></a>写直达（Write-Through）和写回（Write-Back）</h4><h3 id="2-写未命中-3"><a href="#2-写未命中-3" class="headerlink" title="2.写未命中"></a>2.写未命中</h3><h4 id="写分配（Write-Allocate）和非写分配（No-Write-Allocate）-3"><a href="#写分配（Write-Allocate）和非写分配（No-Write-Allocate）-3" class="headerlink" title="写分配（Write-Allocate）和非写分配（No-Write-Allocate）"></a>写分配（Write-Allocate）和非写分配（No-Write-Allocate）</h4><h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.写直达：简单实现，数据一致性高，但写操作速度较慢。</p>
<p>2.写回：写操作速度快，但数据一致性管理复杂。</p>
<p>3.写分配：适用于数据高重用性场景。</p>
<p>4.非写分配：适用于数据低重用性场景。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-多级Cache-3"><a href="#1-多级Cache-3" class="headerlink" title="1.多级Cache"></a>1.多级Cache</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628110209436.png" alt="image-20240628110209436"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>Cache替换算法</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/Cache%E6%9B%BF%E6%8D%A2%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h1 id="Cache替换算法"><a href="#Cache替换算法" class="headerlink" title="Cache替换算法"></a>Cache替换算法</h1><p>替换算法只会作用于<strong>全相联映射</strong>和<strong>组相联映射</strong></p>
<h2 id="随机算法"><a href="#随机算法" class="headerlink" title="随机算法"></a>随机算法</h2><h3 id="基本原理（毫无规律）"><a href="#基本原理（毫无规律）" class="headerlink" title="基本原理（毫无规律）"></a>基本原理（毫无规律）</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103826937.png" alt="image-20240628103826937"></p>
<h2 id="先进先出算法（FIFO）"><a href="#先进先出算法（FIFO）" class="headerlink" title="先进先出算法（FIFO）"></a>先进先出算法（FIFO）</h2><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103931757.png" alt="image-20240628103931757"></p>
<h2 id="近期最少使用算法（LRU，Least-Recently-Used）"><a href="#近期最少使用算法（LRU，Least-Recently-Used）" class="headerlink" title="近期最少使用算法（LRU，Least Recently Used）"></a>近期最少使用算法（LRU，Least Recently Used）</h2><h3 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628104341089.png" alt="image-20240628104341089"></p>
<h2 id="最不经常使用（LFU，Least-Frequently-Used）"><a href="#最不经常使用（LFU，Least-Frequently-Used）" class="headerlink" title="最不经常使用（LFU，Least Frequently Used）"></a>最不经常使用（LFU，Least Frequently Used）</h2><h3 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628104811063.png" alt="image-20240628104811063"></p>
<p>算法</p>
<p>替换算法只会作用于<strong>全相联映射</strong>和<strong>组相联映射</strong></p>
<h2 id="随机算法-1"><a href="#随机算法-1" class="headerlink" title="随机算法"></a>随机算法</h2><h3 id="基本原理（毫无规律）-1"><a href="#基本原理（毫无规律）-1" class="headerlink" title="基本原理（毫无规律）"></a>基本原理（毫无规律）</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103826937.png" alt="image-20240628103826937"></p>
<h2 id="先进先出算法（FIFO）-1"><a href="#先进先出算法（FIFO）-1" class="headerlink" title="先进先出算法（FIFO）"></a>先进先出算法（FIFO）</h2><h3 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103931757.png" alt="image-20240628103931757"></p>
<h2 id="近期最少使用算法（LRU，Least-Recently-Used）-1"><a href="#近期最少使用算法（LRU，Least-Recently-Used）-1" class="headerlink" title="近期最少使用算法（LRU，Least Recently Used）"></a>近期最少使用算法（LRU，Least Recently Used）</h2><h3 id="基本原理-4"><a href="#基本原理-4" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628104341089.png" alt="image-20240628104341089"></p>
<h2 id="最不经常使用（LFU，Least-Frequently-Used）-1"><a href="#最不经常使用（LFU，Least-Frequently-Used）-1" class="headerlink" title="最不经常使用（LFU，Least Frequently Used）"></a>最不经常使用（LFU，Least Frequently Used）</h2><h3 id="基本原理-5"><a href="#基本原理-5" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628104811063.png" alt="image-20240628104811063"># Cache替换算法</p>
<p>替换算法只会作用于<strong>全相联映射</strong>和<strong>组相联映射</strong></p>
<h2 id="随机算法-2"><a href="#随机算法-2" class="headerlink" title="随机算法"></a>随机算法</h2><h3 id="基本原理（毫无规律）-2"><a href="#基本原理（毫无规律）-2" class="headerlink" title="基本原理（毫无规律）"></a>基本原理（毫无规律）</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103826937.png" alt="image-20240628103826937"></p>
<h2 id="先进先出算法（FIFO）-2"><a href="#先进先出算法（FIFO）-2" class="headerlink" title="先进先出算法（FIFO）"></a>先进先出算法（FIFO）</h2><h3 id="基本原理-6"><a href="#基本原理-6" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103931757.png" alt="image-20240628103931757"></p>
<h2 id="近期最少使用算法（LRU，Least-Recently-Used）-2"><a href="#近期最少使用算法（LRU，Least-Recently-Used）-2" class="headerlink" title="近期最少使用算法（LRU，Least Recently Used）"></a>近期最少使用算法（LRU，Least Recently Used）</h2><h3 id="基本原理-7"><a href="#基本原理-7" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628104341089.png" alt="image-20240628104341089"></p>
<h2 id="最不经常使用（LFU，Least-Frequently-Used）-2"><a href="#最不经常使用（LFU，Least-Frequently-Used）-2" class="headerlink" title="最不经常使用（LFU，Least Frequently Used）"></a>最不经常使用（LFU，Least Frequently Used）</h2><h3 id="基本原理-8"><a href="#基本原理-8" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628104811063.png" alt="image-20240628104811063"></p>
<p>算法</p>
<p>替换算法只会作用于<strong>全相联映射</strong>和<strong>组相联映射</strong></p>
<h2 id="随机算法-3"><a href="#随机算法-3" class="headerlink" title="随机算法"></a>随机算法</h2><h3 id="基本原理（毫无规律）-3"><a href="#基本原理（毫无规律）-3" class="headerlink" title="基本原理（毫无规律）"></a>基本原理（毫无规律）</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103826937.png" alt="image-20240628103826937"></p>
<h2 id="先进先出算法（FIFO）-3"><a href="#先进先出算法（FIFO）-3" class="headerlink" title="先进先出算法（FIFO）"></a>先进先出算法（FIFO）</h2><h3 id="基本原理-9"><a href="#基本原理-9" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628103931757.png" alt="image-20240628103931757"></p>
<h2 id="近期最少使用算法（LRU，Least-Recently-Used）-3"><a href="#近期最少使用算法（LRU，Least-Recently-Used）-3" class="headerlink" title="近期最少使用算法（LRU，Least Recently Used）"></a>近期最少使用算法（LRU，Least Recently Used）</h2><h3 id="基本原理-10"><a href="#基本原理-10" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628104341089.png" alt="image-20240628104341089"></p>
<h2 id="最不经常使用（LFU，Least-Frequently-Used）-3"><a href="#最不经常使用（LFU，Least-Frequently-Used）-3" class="headerlink" title="最不经常使用（LFU，Least Frequently Used）"></a>最不经常使用（LFU，Least Frequently Used）</h2><h3 id="基本原理-11"><a href="#基本原理-11" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628104811063.png" alt="image-20240628104811063"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>IEEE754</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/IEEE754/</url>
    <content><![CDATA[<h1 id="IEEE754"><a href="#IEEE754" class="headerlink" title="IEEE754"></a>IEEE754</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>IEEE 754标准是由IEEE（电气和电子工程师协会）制定的浮点数运算标准，定义了二进制和十进制浮点数的格式及其运算规则，确保在不同计算机系统和平台上的一致性。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>IEEE 754标准主要包含两部分：单精度（32位）和双精度（64位）浮点数的表示方法。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>一个浮点数通常由三部分组成。其中，指数部分采用偏移量表示，尾数部分采用隐藏位技术。</p>
<p>1.符号位</p>
<p>2.指数部分</p>
<p>3.尾数部分</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626172753421.png" alt="image-20240626172753421"></p>
<p>①单精度浮点数（32位）</p>
<p>符号位（1位）：表示数值的正负。</p>
<p>阶码（8位）：表示指数。</p>
<p>尾数（23位）：表示有效数字（小数部分）。</p>
<p>②双精度浮点数（64位）</p>
<p>符号位（1位）：表示数值的正负。</p>
<p>阶码（11位）：表示指数。</p>
<p>尾数（52位）：表示有效数字（小数部分）。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626174743254.png" alt="image-20240626174743254"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>单精度和双精度是IEEE 754标准的两种主要分类。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>IEEE 754标准的主要特征包括标准化、可扩展性、精确度可控等。</p>
<p>54</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>IEEE 754标准是由IEEE（电气和电子工程师协会）制定的浮点数运算标准，定义了二进制和十进制浮点数的格式及其运算规则，确保在不同计算机系统和平台上的一致性。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>IEEE 754标准主要包含两部分：单精度（32位）和双精度（64位）浮点数的表示方法。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>一个浮点数通常由三部分组成。其中，指数部分采用偏移量表示，尾数部分采用隐藏位技术。</p>
<p>1.符号位</p>
<p>2.指数部分</p>
<p>3.尾数部分</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626172753421.png" alt="image-20240626172753421"></p>
<p>①单精度浮点数（32位）</p>
<p>符号位（1位）：表示数值的正负。</p>
<p>阶码（8位）：表示指数。</p>
<p>尾数（23位）：表示有效数字（小数部分）。</p>
<p>②双精度浮点数（64位）</p>
<p>符号位（1位）：表示数值的正负。</p>
<p>阶码（11位）：表示指数。</p>
<p>尾数（52位）：表示有效数字（小数部分）。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626174743254.png" alt="image-20240626174743254"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>单精度和双精度是IEEE 754标准的两种主要分类。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>IEEE 754标准的主要特征包括标准化、可扩展性、精确度可控等。# IEEE754</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>IEEE 754标准是由IEEE（电气和电子工程师协会）制定的浮点数运算标准，定义了二进制和十进制浮点数的格式及其运算规则，确保在不同计算机系统和平台上的一致性。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>IEEE 754标准主要包含两部分：单精度（32位）和双精度（64位）浮点数的表示方法。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>一个浮点数通常由三部分组成。其中，指数部分采用偏移量表示，尾数部分采用隐藏位技术。</p>
<p>1.符号位</p>
<p>2.指数部分</p>
<p>3.尾数部分</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626172753421.png" alt="image-20240626172753421"></p>
<p>①单精度浮点数（32位）</p>
<p>符号位（1位）：表示数值的正负。</p>
<p>阶码（8位）：表示指数。</p>
<p>尾数（23位）：表示有效数字（小数部分）。</p>
<p>②双精度浮点数（64位）</p>
<p>符号位（1位）：表示数值的正负。</p>
<p>阶码（11位）：表示指数。</p>
<p>尾数（52位）：表示有效数字（小数部分）。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626174743254.png" alt="image-20240626174743254"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>单精度和双精度是IEEE 754标准的两种主要分类。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>IEEE 754标准的主要特征包括标准化、可扩展性、精确度可控等。</p>
<p>54</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>IEEE 754标准是由IEEE（电气和电子工程师协会）制定的浮点数运算标准，定义了二进制和十进制浮点数的格式及其运算规则，确保在不同计算机系统和平台上的一致性。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>IEEE 754标准主要包含两部分：单精度（32位）和双精度（64位）浮点数的表示方法。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>一个浮点数通常由三部分组成。其中，指数部分采用偏移量表示，尾数部分采用隐藏位技术。</p>
<p>1.符号位</p>
<p>2.指数部分</p>
<p>3.尾数部分</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626172753421.png" alt="image-20240626172753421"></p>
<p>①单精度浮点数（32位）</p>
<p>符号位（1位）：表示数值的正负。</p>
<p>阶码（8位）：表示指数。</p>
<p>尾数（23位）：表示有效数字（小数部分）。</p>
<p>②双精度浮点数（64位）</p>
<p>符号位（1位）：表示数值的正负。</p>
<p>阶码（11位）：表示指数。</p>
<p>尾数（52位）：表示有效数字（小数部分）。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626174743254.png" alt="image-20240626174743254"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>单精度和双精度是IEEE 754标准的两种主要分类。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>IEEE 754标准的主要特征包括标准化、可扩展性、精确度可控等。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>C语言强制类型转换</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/C%E8%AF%AD%E8%A8%80%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<h1 id="C的强制类型转换"><a href="#C的强制类型转换" class="headerlink" title="C的强制类型转换"></a>C的强制类型转换</h1><h2 id="无符号数与有符号数："><a href="#无符号数与有符号数：" class="headerlink" title="无符号数与有符号数："></a>无符号数与有符号数：</h2><p>不改变数据内容，但是改变解释方式</p>
<h2 id="长整数变短整数"><a href="#长整数变短整数" class="headerlink" title="长整数变短整数"></a>长整数变短整数</h2><p>高位截断，低位保留</p>
<h2 id="短整数变长整数"><a href="#短整数变长整数" class="headerlink" title="短整数变长整数"></a>短整数变长整数</h2><p>符号扩展</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="符号扩展"><a href="#符号扩展" class="headerlink" title="符号扩展"></a>符号扩展</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>符号扩展（Sign Extension）是一种在计算机中处理数字表示的技术，特别是在扩展数字的位数时保持其符号不变的过程中使用。</p>
<h4 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h4><p>符号扩展涉及到数字的二进制表示，包括符号位和数值位。</p>
<h4 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h4><p>在符号扩展中，通常将原始数字的符号位复制到新扩展的位中，以保持数字的符号不变。</p>
<h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p>符号扩展通常用于整数表示，特别是在需要将数字从较小的位数扩展到较大的位数时。</p>
<h4 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h4><p>符号扩展的主要特征是保持数字的符号不变，同时增加其表示的位数。转换</p>
<h2 id="无符号数与有符号数：-1"><a href="#无符号数与有符号数：-1" class="headerlink" title="无符号数与有符号数："></a>无符号数与有符号数：</h2><p>不改变数据内容，但是改变解释方式</p>
<h2 id="长整数变短整数-1"><a href="#长整数变短整数-1" class="headerlink" title="长整数变短整数"></a>长整数变短整数</h2><p>高位截断，低位保留</p>
<h2 id="短整数变长整数-1"><a href="#短整数变长整数-1" class="headerlink" title="短整数变长整数"></a>短整数变长整数</h2><p>符号扩展</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="符号扩展-1"><a href="#符号扩展-1" class="headerlink" title="符号扩展"></a>符号扩展</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p>符号扩展（Sign Extension）是一种在计算机中处理数字表示的技术，特别是在扩展数字的位数时保持其符号不变的过程中使用。</p>
<h4 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h4><p>符号扩展涉及到数字的二进制表示，包括符号位和数值位。</p>
<h4 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h4><p>在符号扩展中，通常将原始数字的符号位复制到新扩展的位中，以保持数字的符号不变。</p>
<h4 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h4><p>符号扩展通常用于整数表示，特别是在需要将数字从较小的位数扩展到较大的位数时。</p>
<h4 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h4><p>符号扩展的主要特征是保持数字的符号不变，同时增加其表示的位数。# C的强制类型转换</p>
<h2 id="无符号数与有符号数：-2"><a href="#无符号数与有符号数：-2" class="headerlink" title="无符号数与有符号数："></a>无符号数与有符号数：</h2><p>不改变数据内容，但是改变解释方式</p>
<h2 id="长整数变短整数-2"><a href="#长整数变短整数-2" class="headerlink" title="长整数变短整数"></a>长整数变短整数</h2><p>高位截断，低位保留</p>
<h2 id="短整数变长整数-2"><a href="#短整数变长整数-2" class="headerlink" title="短整数变长整数"></a>短整数变长整数</h2><p>符号扩展</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="符号扩展-2"><a href="#符号扩展-2" class="headerlink" title="符号扩展"></a>符号扩展</h3><h4 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h4><p>符号扩展（Sign Extension）是一种在计算机中处理数字表示的技术，特别是在扩展数字的位数时保持其符号不变的过程中使用。</p>
<h4 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h4><p>符号扩展涉及到数字的二进制表示，包括符号位和数值位。</p>
<h4 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h4><p>在符号扩展中，通常将原始数字的符号位复制到新扩展的位中，以保持数字的符号不变。</p>
<h4 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h4><p>符号扩展通常用于整数表示，特别是在需要将数字从较小的位数扩展到较大的位数时。</p>
<h4 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h4><p>符号扩展的主要特征是保持数字的符号不变，同时增加其表示的位数。转换</p>
<h2 id="无符号数与有符号数：-3"><a href="#无符号数与有符号数：-3" class="headerlink" title="无符号数与有符号数："></a>无符号数与有符号数：</h2><p>不改变数据内容，但是改变解释方式</p>
<h2 id="长整数变短整数-3"><a href="#长整数变短整数-3" class="headerlink" title="长整数变短整数"></a>长整数变短整数</h2><p>高位截断，低位保留</p>
<h2 id="短整数变长整数-3"><a href="#短整数变长整数-3" class="headerlink" title="短整数变长整数"></a>短整数变长整数</h2><p>符号扩展</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="符号扩展-3"><a href="#符号扩展-3" class="headerlink" title="符号扩展"></a>符号扩展</h3><h4 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h4><p>符号扩展（Sign Extension）是一种在计算机中处理数字表示的技术，特别是在扩展数字的位数时保持其符号不变的过程中使用。</p>
<h4 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h4><p>符号扩展涉及到数字的二进制表示，包括符号位和数值位。</p>
<h4 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h4><p>在符号扩展中，通常将原始数字的符号位复制到新扩展的位中，以保持数字的符号不变。</p>
<h4 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h4><p>符号扩展通常用于整数表示，特别是在需要将数字从较小的位数扩展到较大的位数时。</p>
<h4 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h4><p>符号扩展的主要特征是保持数字的符号不变，同时增加其表示的位数。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>三码之间的特性对比</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E4%B8%89%E7%A0%81%E4%B9%8B%E9%97%B4%E7%9A%84%E7%89%B9%E6%80%A7%E5%AF%B9%E6%AF%94/</url>
    <content><![CDATA[<h1 id="特性对比"><a href="#特性对比" class="headerlink" title="特性对比"></a>特性对比</h1><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625165623842.png" alt="image-20240625165623842"></p>
<p>对比</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625165623842.png" alt="image-20240625165623842"># 特性对比</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625165623842.png" alt="image-20240625165623842"></p>
<p>对比</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625165623842.png" alt="image-20240625165623842"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>SRAM和DRAM</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/SRAM%E5%92%8CDRAM/</url>
    <content><![CDATA[<h1 id="DRAM"><a href="#DRAM" class="headerlink" title="DRAM"></a>DRAM</h1><h2 id="刷新"><a href="#刷新" class="headerlink" title="刷新"></a>刷新</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>DRAM（Dynamic Random Access Memory，动态随机存取存储器）刷新是指定期重新充电DRAM存储单元的过程，以维持存储在其中的数据。</p>
<h3 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h3><p>DRAM的刷新通常是在整个存储器阵列上以行或列为单位进行的。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627161314630.png" alt="image-20240627161314630"></p>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>1.分散刷新</p>
<p>2.集中刷新</p>
<p>3.异步刷新</p>
<h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><p>DRAM需要定期刷新以保持数据，这是其与静态随机存取存储器（SRAM）的主要区别。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="栅极电容："><a href="#栅极电容：" class="headerlink" title="栅极电容："></a>栅极电容：</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160644061.png" alt="image-20240627160644061"></p>
<h1 id="SRAM"><a href="#SRAM" class="headerlink" title="SRAM"></a>SRAM</h1><h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="双稳态触发器："><a href="#双稳态触发器：" class="headerlink" title="双稳态触发器："></a>双稳态触发器：</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160833079.png" alt="image-20240627160833079"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.两个基本原件的对比</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160931702.png" alt="image-20240627160931702"></p>
<p>2.DRAM的地址线复用技术</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627161447691.png" alt="image-20240627161447691">AM</p>
<h2 id="刷新-1"><a href="#刷新-1" class="headerlink" title="刷新"></a>刷新</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>DRAM（Dynamic Random Access Memory，动态随机存取存储器）刷新是指定期重新充电DRAM存储单元的过程，以维持存储在其中的数据。</p>
<h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h3><p>DRAM的刷新通常是在整个存储器阵列上以行或列为单位进行的。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627161314630.png" alt="image-20240627161314630"></p>
<h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><p>1.分散刷新</p>
<p>2.集中刷新</p>
<p>3.异步刷新</p>
<h3 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h3><p>DRAM需要定期刷新以保持数据，这是其与静态随机存取存储器（SRAM）的主要区别。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="栅极电容：-1"><a href="#栅极电容：-1" class="headerlink" title="栅极电容："></a>栅极电容：</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160644061.png" alt="image-20240627160644061"></p>
<h1 id="SRAM-1"><a href="#SRAM-1" class="headerlink" title="SRAM"></a>SRAM</h1><h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="双稳态触发器：-1"><a href="#双稳态触发器：-1" class="headerlink" title="双稳态触发器："></a>双稳态触发器：</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160833079.png" alt="image-20240627160833079"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.两个基本原件的对比</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160931702.png" alt="image-20240627160931702"></p>
<p>2.DRAM的地址线复用技术</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627161447691.png" alt="image-20240627161447691"># DRAM</p>
<h2 id="刷新-2"><a href="#刷新-2" class="headerlink" title="刷新"></a>刷新</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>DRAM（Dynamic Random Access Memory，动态随机存取存储器）刷新是指定期重新充电DRAM存储单元的过程，以维持存储在其中的数据。</p>
<h3 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h3><p>DRAM的刷新通常是在整个存储器阵列上以行或列为单位进行的。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627161314630.png" alt="image-20240627161314630"></p>
<h3 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h3><p>1.分散刷新</p>
<p>2.集中刷新</p>
<p>3.异步刷新</p>
<h3 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h3><p>DRAM需要定期刷新以保持数据，这是其与静态随机存取存储器（SRAM）的主要区别。</p>
<h2 id="基本原理-4"><a href="#基本原理-4" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="栅极电容：-2"><a href="#栅极电容：-2" class="headerlink" title="栅极电容："></a>栅极电容：</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160644061.png" alt="image-20240627160644061"></p>
<h1 id="SRAM-2"><a href="#SRAM-2" class="headerlink" title="SRAM"></a>SRAM</h1><h2 id="基本原理-5"><a href="#基本原理-5" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="双稳态触发器：-2"><a href="#双稳态触发器：-2" class="headerlink" title="双稳态触发器："></a>双稳态触发器：</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160833079.png" alt="image-20240627160833079"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.两个基本原件的对比</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160931702.png" alt="image-20240627160931702"></p>
<p>2.DRAM的地址线复用技术</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627161447691.png" alt="image-20240627161447691">AM</p>
<h2 id="刷新-3"><a href="#刷新-3" class="headerlink" title="刷新"></a>刷新</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>DRAM（Dynamic Random Access Memory，动态随机存取存储器）刷新是指定期重新充电DRAM存储单元的过程，以维持存储在其中的数据。</p>
<h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h3><p>DRAM的刷新通常是在整个存储器阵列上以行或列为单位进行的。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627161314630.png" alt="image-20240627161314630"></p>
<h3 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h3><p>1.分散刷新</p>
<p>2.集中刷新</p>
<p>3.异步刷新</p>
<h3 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h3><p>DRAM需要定期刷新以保持数据，这是其与静态随机存取存储器（SRAM）的主要区别。</p>
<h2 id="基本原理-6"><a href="#基本原理-6" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="栅极电容：-3"><a href="#栅极电容：-3" class="headerlink" title="栅极电容："></a>栅极电容：</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160644061.png" alt="image-20240627160644061"></p>
<h1 id="SRAM-3"><a href="#SRAM-3" class="headerlink" title="SRAM"></a>SRAM</h1><h2 id="基本原理-7"><a href="#基本原理-7" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="双稳态触发器：-3"><a href="#双稳态触发器：-3" class="headerlink" title="双稳态触发器："></a>双稳态触发器：</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160833079.png" alt="image-20240627160833079"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.两个基本原件的对比</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160931702.png" alt="image-20240627160931702"></p>
<p>2.DRAM的地址线复用技术</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627161447691.png" alt="image-20240627161447691"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>主存储器和CPU的链接</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E4%B8%BB%E5%AD%98%E5%82%A8%E5%99%A8%E5%92%8CCPU%E7%9A%84%E9%93%BE%E6%8E%A5/</url>
    <content><![CDATA[<h1 id="主存储器和CPU的连接"><a href="#主存储器和CPU的连接" class="headerlink" title="主存储器和CPU的连接"></a>主存储器和CPU的连接</h1><h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><img src="../TyporaImage/计算机组成原理图片/image-20240627164506131.png" alt="image-20240627164506131" style="zoom:150%;" />

<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627164538183.png" alt="image-20240627164538183"></p>
<h2 id="位扩展"><a href="#位扩展" class="headerlink" title="位扩展"></a>位扩展</h2><h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171600923.png" alt="image-20240627171600923"></p>
<h2 id="字扩展"><a href="#字扩展" class="headerlink" title="字扩展"></a>字扩展</h2><h3 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171652164.png" alt="image-20240627171652164"></p>
<h2 id="字位同时扩展"><a href="#字位同时扩展" class="headerlink" title="字位同时扩展"></a>字位同时扩展</h2><h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171721237.png" alt="image-20240627171721237"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-译码器"><a href="#1-译码器" class="headerlink" title="1.译码器"></a>1.译码器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171808558.png" alt="image-20240627171808558"><br>连接</p>
<h2 id="结构形式-4"><a href="#结构形式-4" class="headerlink" title="结构形式"></a>结构形式</h2><img src="../TyporaImage/计算机组成原理图片/image-20240627164506131.png" alt="image-20240627164506131" style="zoom:150%;" />

<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627164538183.png" alt="image-20240627164538183"></p>
<h2 id="位扩展-1"><a href="#位扩展-1" class="headerlink" title="位扩展"></a>位扩展</h2><h3 id="结构形式-5"><a href="#结构形式-5" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171600923.png" alt="image-20240627171600923"></p>
<h2 id="字扩展-1"><a href="#字扩展-1" class="headerlink" title="字扩展"></a>字扩展</h2><h3 id="结构形式-6"><a href="#结构形式-6" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171652164.png" alt="image-20240627171652164"></p>
<h2 id="字位同时扩展-1"><a href="#字位同时扩展-1" class="headerlink" title="字位同时扩展"></a>字位同时扩展</h2><h3 id="结构形式-7"><a href="#结构形式-7" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171721237.png" alt="image-20240627171721237"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-译码器-1"><a href="#1-译码器-1" class="headerlink" title="1.译码器"></a>1.译码器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171808558.png" alt="image-20240627171808558"># 主存储器和CPU的连接</p>
<h2 id="结构形式-8"><a href="#结构形式-8" class="headerlink" title="结构形式"></a>结构形式</h2><img src="../TyporaImage/计算机组成原理图片/image-20240627164506131.png" alt="image-20240627164506131" style="zoom:150%;" />

<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627164538183.png" alt="image-20240627164538183"></p>
<h2 id="位扩展-2"><a href="#位扩展-2" class="headerlink" title="位扩展"></a>位扩展</h2><h3 id="结构形式-9"><a href="#结构形式-9" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171600923.png" alt="image-20240627171600923"></p>
<h2 id="字扩展-2"><a href="#字扩展-2" class="headerlink" title="字扩展"></a>字扩展</h2><h3 id="结构形式-10"><a href="#结构形式-10" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171652164.png" alt="image-20240627171652164"></p>
<h2 id="字位同时扩展-2"><a href="#字位同时扩展-2" class="headerlink" title="字位同时扩展"></a>字位同时扩展</h2><h3 id="结构形式-11"><a href="#结构形式-11" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171721237.png" alt="image-20240627171721237"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-译码器-2"><a href="#1-译码器-2" class="headerlink" title="1.译码器"></a>1.译码器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171808558.png" alt="image-20240627171808558"><br>连接</p>
<h2 id="结构形式-12"><a href="#结构形式-12" class="headerlink" title="结构形式"></a>结构形式</h2><img src="../TyporaImage/计算机组成原理图片/image-20240627164506131.png" alt="image-20240627164506131" style="zoom:150%;" />

<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627164538183.png" alt="image-20240627164538183"></p>
<h2 id="位扩展-3"><a href="#位扩展-3" class="headerlink" title="位扩展"></a>位扩展</h2><h3 id="结构形式-13"><a href="#结构形式-13" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171600923.png" alt="image-20240627171600923"></p>
<h2 id="字扩展-3"><a href="#字扩展-3" class="headerlink" title="字扩展"></a>字扩展</h2><h3 id="结构形式-14"><a href="#结构形式-14" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171652164.png" alt="image-20240627171652164"></p>
<h2 id="字位同时扩展-3"><a href="#字位同时扩展-3" class="headerlink" title="字位同时扩展"></a>字位同时扩展</h2><h3 id="结构形式-15"><a href="#结构形式-15" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171721237.png" alt="image-20240627171721237"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-译码器-3"><a href="#1-译码器-3" class="headerlink" title="1.译码器"></a>1.译码器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627171808558.png" alt="image-20240627171808558"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>主存储器的基本组成</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E4%B8%BB%E5%AD%98%E5%82%A8%E5%99%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%84%E6%88%90/</url>
    <content><![CDATA[<h1 id="主存储器"><a href="#主存储器" class="headerlink" title="主存储器"></a>主存储器</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>主存储器（Primary Memory），也称为内存储器（Internal Memory）或随机存取存储器（RAM），是计算机中用于临时存储数据和指令的部分，直接与中央处理器（CPU）交互。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-存储单元"><a href="#1-存储单元" class="headerlink" title="1.存储单元"></a>1.存储单元</h3><p>构成存储器的基本单元，每个单元都有一个唯一的地址。</p>
<h3 id="2-数据总线"><a href="#2-数据总线" class="headerlink" title="2.数据总线"></a>2.数据总线</h3><p>用于在CPU和存储器之间传输数据。</p>
<h3 id="3-地址总线"><a href="#3-地址总线" class="headerlink" title="3.地址总线"></a>3.地址总线</h3><p>用于传输存储单元的地址信息。</p>
<h3 id="4-控制总线"><a href="#4-控制总线" class="headerlink" title="4.控制总线"></a>4.控制总线</h3><p>用于传输控制信号，如读&#x2F;写命令。</p>
<h3 id="5-控制单元"><a href="#5-控制单元" class="headerlink" title="5.控制单元"></a>5.控制单元</h3><p>管理存储器的操作，如数据读取和写入。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>主存储器通常以线性数组的形式组织，每个存储单元都可以通过其地址直接访问。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>主存储器主要包括随机存取存储器（RAM）和只读存储器（ROM）。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>主存储器具有快速访问速度，但通常容量有限，且易失性（断电后数据丢失）。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627155859300.png" alt="image-20240627155859300"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627155958764.png" alt="image-20240627155958764"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160052987.png" alt="image-20240627160052987"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-寻址"><a href="#1-寻址" class="headerlink" title="1.寻址"></a>1.寻址</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160407587.png" alt="image-20240627160407587">储器</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>主存储器（Primary Memory），也称为内存储器（Internal Memory）或随机存取存储器（RAM），是计算机中用于临时存储数据和指令的部分，直接与中央处理器（CPU）交互。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-存储单元-1"><a href="#1-存储单元-1" class="headerlink" title="1.存储单元"></a>1.存储单元</h3><p>构成存储器的基本单元，每个单元都有一个唯一的地址。</p>
<h3 id="2-数据总线-1"><a href="#2-数据总线-1" class="headerlink" title="2.数据总线"></a>2.数据总线</h3><p>用于在CPU和存储器之间传输数据。</p>
<h3 id="3-地址总线-1"><a href="#3-地址总线-1" class="headerlink" title="3.地址总线"></a>3.地址总线</h3><p>用于传输存储单元的地址信息。</p>
<h3 id="4-控制总线-1"><a href="#4-控制总线-1" class="headerlink" title="4.控制总线"></a>4.控制总线</h3><p>用于传输控制信号，如读&#x2F;写命令。</p>
<h3 id="5-控制单元-1"><a href="#5-控制单元-1" class="headerlink" title="5.控制单元"></a>5.控制单元</h3><p>管理存储器的操作，如数据读取和写入。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>主存储器通常以线性数组的形式组织，每个存储单元都可以通过其地址直接访问。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>主存储器主要包括随机存取存储器（RAM）和只读存储器（ROM）。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>主存储器具有快速访问速度，但通常容量有限，且易失性（断电后数据丢失）。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627155859300.png" alt="image-20240627155859300"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627155958764.png" alt="image-20240627155958764"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160052987.png" alt="image-20240627160052987"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-寻址-1"><a href="#1-寻址-1" class="headerlink" title="1.寻址"></a>1.寻址</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160407587.png" alt="image-20240627160407587"># 主存储器</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>主存储器（Primary Memory），也称为内存储器（Internal Memory）或随机存取存储器（RAM），是计算机中用于临时存储数据和指令的部分，直接与中央处理器（CPU）交互。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-存储单元-2"><a href="#1-存储单元-2" class="headerlink" title="1.存储单元"></a>1.存储单元</h3><p>构成存储器的基本单元，每个单元都有一个唯一的地址。</p>
<h3 id="2-数据总线-2"><a href="#2-数据总线-2" class="headerlink" title="2.数据总线"></a>2.数据总线</h3><p>用于在CPU和存储器之间传输数据。</p>
<h3 id="3-地址总线-2"><a href="#3-地址总线-2" class="headerlink" title="3.地址总线"></a>3.地址总线</h3><p>用于传输存储单元的地址信息。</p>
<h3 id="4-控制总线-2"><a href="#4-控制总线-2" class="headerlink" title="4.控制总线"></a>4.控制总线</h3><p>用于传输控制信号，如读&#x2F;写命令。</p>
<h3 id="5-控制单元-2"><a href="#5-控制单元-2" class="headerlink" title="5.控制单元"></a>5.控制单元</h3><p>管理存储器的操作，如数据读取和写入。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>主存储器通常以线性数组的形式组织，每个存储单元都可以通过其地址直接访问。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>主存储器主要包括随机存取存储器（RAM）和只读存储器（ROM）。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>主存储器具有快速访问速度，但通常容量有限，且易失性（断电后数据丢失）。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627155859300.png" alt="image-20240627155859300"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627155958764.png" alt="image-20240627155958764"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160052987.png" alt="image-20240627160052987"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-寻址-2"><a href="#1-寻址-2" class="headerlink" title="1.寻址"></a>1.寻址</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160407587.png" alt="image-20240627160407587">储器</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>主存储器（Primary Memory），也称为内存储器（Internal Memory）或随机存取存储器（RAM），是计算机中用于临时存储数据和指令的部分，直接与中央处理器（CPU）交互。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-存储单元-3"><a href="#1-存储单元-3" class="headerlink" title="1.存储单元"></a>1.存储单元</h3><p>构成存储器的基本单元，每个单元都有一个唯一的地址。</p>
<h3 id="2-数据总线-3"><a href="#2-数据总线-3" class="headerlink" title="2.数据总线"></a>2.数据总线</h3><p>用于在CPU和存储器之间传输数据。</p>
<h3 id="3-地址总线-3"><a href="#3-地址总线-3" class="headerlink" title="3.地址总线"></a>3.地址总线</h3><p>用于传输存储单元的地址信息。</p>
<h3 id="4-控制总线-3"><a href="#4-控制总线-3" class="headerlink" title="4.控制总线"></a>4.控制总线</h3><p>用于传输控制信号，如读&#x2F;写命令。</p>
<h3 id="5-控制单元-3"><a href="#5-控制单元-3" class="headerlink" title="5.控制单元"></a>5.控制单元</h3><p>管理存储器的操作，如数据读取和写入。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>主存储器通常以线性数组的形式组织，每个存储单元都可以通过其地址直接访问。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>主存储器主要包括随机存取存储器（RAM）和只读存储器（ROM）。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>主存储器具有快速访问速度，但通常容量有限，且易失性（断电后数据丢失）。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627155859300.png" alt="image-20240627155859300"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627155958764.png" alt="image-20240627155958764"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160052987.png" alt="image-20240627160052987"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-寻址-3"><a href="#1-寻址-3" class="headerlink" title="1.寻址"></a>1.寻址</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627160407587.png" alt="image-20240627160407587"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>五段式指令流水线</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E4%BA%94%E6%AE%B5%E5%BC%8F%E6%8C%87%E4%BB%A4%E6%B5%81%E6%B0%B4%E7%BA%BF/</url>
    <content><![CDATA[<h1 id="五段式指令流水线"><a href="#五段式指令流水线" class="headerlink" title="五段式指令流水线"></a>五段式指令流水线</h1><h2 id="运算类指令的过程"><a href="#运算类指令的过程" class="headerlink" title="运算类指令的过程"></a>运算类指令的过程</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224706578.png" alt="image-20240629224706578"></p>
<h2 id="Load指令"><a href="#Load指令" class="headerlink" title="Load指令"></a>Load指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224732455.png" alt="image-20240629224732455"></p>
<h2 id="Store指令"><a href="#Store指令" class="headerlink" title="Store指令"></a>Store指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224757393.png" alt="image-20240629224757393"></p>
<h2 id="条件转移指令"><a href="#条件转移指令" class="headerlink" title="条件转移指令"></a>条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224825009.png" alt="image-20240629224825009"></p>
<h2 id="无条件转移指令"><a href="#无条件转移指令" class="headerlink" title="无条件转移指令"></a>无条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224850438.png" alt="image-20240629224850438"></p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224608455.png" alt="image-20240629224608455">水线</p>
<h2 id="运算类指令的过程-1"><a href="#运算类指令的过程-1" class="headerlink" title="运算类指令的过程"></a>运算类指令的过程</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224706578.png" alt="image-20240629224706578"></p>
<h2 id="Load指令-1"><a href="#Load指令-1" class="headerlink" title="Load指令"></a>Load指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224732455.png" alt="image-20240629224732455"></p>
<h2 id="Store指令-1"><a href="#Store指令-1" class="headerlink" title="Store指令"></a>Store指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224757393.png" alt="image-20240629224757393"></p>
<h2 id="条件转移指令-1"><a href="#条件转移指令-1" class="headerlink" title="条件转移指令"></a>条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224825009.png" alt="image-20240629224825009"></p>
<h2 id="无条件转移指令-1"><a href="#无条件转移指令-1" class="headerlink" title="无条件转移指令"></a>无条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224850438.png" alt="image-20240629224850438"></p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224608455.png" alt="image-20240629224608455"># 五段式指令流水线</p>
<h2 id="运算类指令的过程-2"><a href="#运算类指令的过程-2" class="headerlink" title="运算类指令的过程"></a>运算类指令的过程</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224706578.png" alt="image-20240629224706578"></p>
<h2 id="Load指令-2"><a href="#Load指令-2" class="headerlink" title="Load指令"></a>Load指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224732455.png" alt="image-20240629224732455"></p>
<h2 id="Store指令-2"><a href="#Store指令-2" class="headerlink" title="Store指令"></a>Store指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224757393.png" alt="image-20240629224757393"></p>
<h2 id="条件转移指令-2"><a href="#条件转移指令-2" class="headerlink" title="条件转移指令"></a>条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224825009.png" alt="image-20240629224825009"></p>
<h2 id="无条件转移指令-2"><a href="#无条件转移指令-2" class="headerlink" title="无条件转移指令"></a>无条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224850438.png" alt="image-20240629224850438"></p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224608455.png" alt="image-20240629224608455">水线</p>
<h2 id="运算类指令的过程-3"><a href="#运算类指令的过程-3" class="headerlink" title="运算类指令的过程"></a>运算类指令的过程</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224706578.png" alt="image-20240629224706578"></p>
<h2 id="Load指令-3"><a href="#Load指令-3" class="headerlink" title="Load指令"></a>Load指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224732455.png" alt="image-20240629224732455"></p>
<h2 id="Store指令-3"><a href="#Store指令-3" class="headerlink" title="Store指令"></a>Store指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224757393.png" alt="image-20240629224757393"></p>
<h2 id="条件转移指令-3"><a href="#条件转移指令-3" class="headerlink" title="条件转移指令"></a>条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224825009.png" alt="image-20240629224825009"></p>
<h2 id="无条件转移指令-3"><a href="#无条件转移指令-3" class="headerlink" title="无条件转移指令"></a>无条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224850438.png" alt="image-20240629224850438"></p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224608455.png" alt="image-20240629224608455"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>加减运算与溢出判断</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%8A%A0%E5%87%8F%E8%BF%90%E7%AE%97%E4%B8%8E%E6%BA%A2%E5%87%BA%E5%88%A4%E6%96%AD/</url>
    <content><![CDATA[<h1 id="溢出判断"><a href="#溢出判断" class="headerlink" title="溢出判断"></a>溢出判断</h1><h2 id="加减运算"><a href="#加减运算" class="headerlink" title="加减运算"></a>加减运算</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625174439930.png" alt="image-20240625174439930"></p>
<h2 id="溢出判断-1"><a href="#溢出判断-1" class="headerlink" title="溢出判断"></a>溢出判断</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="1-上溢出"><a href="#1-上溢出" class="headerlink" title="1.上溢出"></a>1.上溢出</h4><h4 id="2-下溢出"><a href="#2-下溢出" class="headerlink" title="2.下溢出"></a>2.下溢出</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625174552890.png" alt="image-20240625174552890"></p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-采用一位符号位"><a href="#1-采用一位符号位" class="headerlink" title="1.采用一位符号位"></a>1.采用一位符号位</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625174659385.png" alt="image-20240625174659385"></p>
<h4 id="2-采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs-最高数值位的进位C1"><a href="#2-采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs-最高数值位的进位C1" class="headerlink" title="2.采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs   ,最高数值位的进位C1."></a>2.采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs   ,最高数值位的进位C1.</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175317375.png" alt="image-20240625175317375"></p>
<h4 id="3-采用双符号位"><a href="#3-采用双符号位" class="headerlink" title="3.采用双符号位"></a>3.采用双符号位</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175446079.png" alt="image-20240625175446079"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-符号扩展"><a href="#1-符号扩展" class="headerlink" title="1.符号扩展"></a>1.符号扩展</h3><p>1.定点整数</p>
<p>2.定点小数</p>
<p><strong><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175633689.png" alt="image-20240625175633689"></strong><br>判断</p>
<h2 id="加减运算-1"><a href="#加减运算-1" class="headerlink" title="加减运算"></a>加减运算</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625174439930.png" alt="image-20240625174439930"></p>
<h2 id="溢出判断-2"><a href="#溢出判断-2" class="headerlink" title="溢出判断"></a>溢出判断</h2><h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><h4 id="1-上溢出-1"><a href="#1-上溢出-1" class="headerlink" title="1.上溢出"></a>1.上溢出</h4><h4 id="2-下溢出-1"><a href="#2-下溢出-1" class="headerlink" title="2.下溢出"></a>2.下溢出</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625174552890.png" alt="image-20240625174552890"></p>
<h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-采用一位符号位-1"><a href="#1-采用一位符号位-1" class="headerlink" title="1.采用一位符号位"></a>1.采用一位符号位</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625174659385.png" alt="image-20240625174659385"></p>
<h4 id="2-采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs-最高数值位的进位C1-1"><a href="#2-采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs-最高数值位的进位C1-1" class="headerlink" title="2.采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs   ,最高数值位的进位C1."></a>2.采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs   ,最高数值位的进位C1.</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175317375.png" alt="image-20240625175317375"></p>
<h4 id="3-采用双符号位-1"><a href="#3-采用双符号位-1" class="headerlink" title="3.采用双符号位"></a>3.采用双符号位</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175446079.png" alt="image-20240625175446079"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-符号扩展-1"><a href="#1-符号扩展-1" class="headerlink" title="1.符号扩展"></a>1.符号扩展</h3><p>1.定点整数</p>
<p>2.定点小数</p>
<p><strong><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175633689.png" alt="image-20240625175633689"></strong># 溢出判断</p>
<h2 id="加减运算-2"><a href="#加减运算-2" class="headerlink" title="加减运算"></a>加减运算</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625174439930.png" alt="image-20240625174439930"></p>
<h2 id="溢出判断-3"><a href="#溢出判断-3" class="headerlink" title="溢出判断"></a>溢出判断</h2><h3 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h3><h4 id="1-上溢出-2"><a href="#1-上溢出-2" class="headerlink" title="1.上溢出"></a>1.上溢出</h4><h4 id="2-下溢出-2"><a href="#2-下溢出-2" class="headerlink" title="2.下溢出"></a>2.下溢出</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625174552890.png" alt="image-20240625174552890"></p>
<h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-采用一位符号位-2"><a href="#1-采用一位符号位-2" class="headerlink" title="1.采用一位符号位"></a>1.采用一位符号位</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625174659385.png" alt="image-20240625174659385"></p>
<h4 id="2-采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs-最高数值位的进位C1-2"><a href="#2-采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs-最高数值位的进位C1-2" class="headerlink" title="2.采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs   ,最高数值位的进位C1."></a>2.采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs   ,最高数值位的进位C1.</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175317375.png" alt="image-20240625175317375"></p>
<h4 id="3-采用双符号位-2"><a href="#3-采用双符号位-2" class="headerlink" title="3.采用双符号位"></a>3.采用双符号位</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175446079.png" alt="image-20240625175446079"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-符号扩展-2"><a href="#1-符号扩展-2" class="headerlink" title="1.符号扩展"></a>1.符号扩展</h3><p>1.定点整数</p>
<p>2.定点小数</p>
<p><strong><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175633689.png" alt="image-20240625175633689"></strong><br>判断</p>
<h2 id="加减运算-3"><a href="#加减运算-3" class="headerlink" title="加减运算"></a>加减运算</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625174439930.png" alt="image-20240625174439930"></p>
<h2 id="溢出判断-4"><a href="#溢出判断-4" class="headerlink" title="溢出判断"></a>溢出判断</h2><h3 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h3><h4 id="1-上溢出-3"><a href="#1-上溢出-3" class="headerlink" title="1.上溢出"></a>1.上溢出</h4><h4 id="2-下溢出-3"><a href="#2-下溢出-3" class="headerlink" title="2.下溢出"></a>2.下溢出</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625174552890.png" alt="image-20240625174552890"></p>
<h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-采用一位符号位-3"><a href="#1-采用一位符号位-3" class="headerlink" title="1.采用一位符号位"></a>1.采用一位符号位</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625174659385.png" alt="image-20240625174659385"></p>
<h4 id="2-采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs-最高数值位的进位C1-3"><a href="#2-采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs-最高数值位的进位C1-3" class="headerlink" title="2.采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs   ,最高数值位的进位C1."></a>2.采用一位符号位，根据数据位进位情况判断溢出符号位的进位Cs   ,最高数值位的进位C1.</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175317375.png" alt="image-20240625175317375"></p>
<h4 id="3-采用双符号位-3"><a href="#3-采用双符号位-3" class="headerlink" title="3.采用双符号位"></a>3.采用双符号位</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175446079.png" alt="image-20240625175446079"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-符号扩展-3"><a href="#1-符号扩展-3" class="headerlink" title="1.符号扩展"></a>1.符号扩展</h3><p>1.定点整数</p>
<p>2.定点小数</p>
<p><strong><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175633689.png" alt="image-20240625175633689"></strong></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>加法器ALU设计</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%8A%A0%E6%B3%95%E5%99%A8ALU%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="加法器"><a href="#加法器" class="headerlink" title="加法器"></a>加法器</h1><h2 id="一位全加器"><a href="#一位全加器" class="headerlink" title="一位全加器"></a>一位全加器</h2><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172152648.png" alt="image-20240625172152648"></p>
<h2 id="串行加法器"><a href="#串行加法器" class="headerlink" title="串行加法器"></a>串行加法器</h2><h3 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172328968.png" alt="image-20240625172328968"></p>
<h2 id="并行加法器（串行进位）"><a href="#并行加法器（串行进位）" class="headerlink" title="并行加法器（串行进位）"></a>并行加法器（串行进位）</h2><h3 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172405221.png" alt="image-20240625172405221"></p>
<h2 id="并行进位的并行加法器"><a href="#并行进位的并行加法器" class="headerlink" title="并行进位的并行加法器"></a>并行进位的并行加法器</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172703476.png" alt="image-20240625172703476"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="一、ALU"><a href="#一、ALU" class="headerlink" title="一、ALU"></a>一、ALU</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>1.算数运算</p>
<p>2.逻辑运算</p>
<p>3.辅助功能</p>
<h4 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171811099.png" alt="image-20240625171811099"></p>
<h3 id="二、逻辑的硬件实现"><a href="#二、逻辑的硬件实现" class="headerlink" title="二、逻辑的硬件实现"></a>二、逻辑的硬件实现</h3><h4 id="与、或、非的硬件实现"><a href="#与、或、非的硬件实现" class="headerlink" title="与、或、非的硬件实现"></a>与、或、非的硬件实现</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171913374.png" alt="image-20240625171913374"></p>
<h4 id="复合逻辑的实现"><a href="#复合逻辑的实现" class="headerlink" title="复合逻辑的实现"></a>复合逻辑的实现</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172029954.png" alt="image-20240625172029954"></p>
<p>法器</p>
<h2 id="一位全加器-1"><a href="#一位全加器-1" class="headerlink" title="一位全加器"></a>一位全加器</h2><h3 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172152648.png" alt="image-20240625172152648"></p>
<h2 id="串行加法器-1"><a href="#串行加法器-1" class="headerlink" title="串行加法器"></a>串行加法器</h2><h3 id="基本原理-4"><a href="#基本原理-4" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172328968.png" alt="image-20240625172328968"></p>
<h2 id="并行加法器（串行进位）-1"><a href="#并行加法器（串行进位）-1" class="headerlink" title="并行加法器（串行进位）"></a>并行加法器（串行进位）</h2><h3 id="基本原理-5"><a href="#基本原理-5" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172405221.png" alt="image-20240625172405221"></p>
<h2 id="并行进位的并行加法器-1"><a href="#并行进位的并行加法器-1" class="headerlink" title="并行进位的并行加法器"></a>并行进位的并行加法器</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172703476.png" alt="image-20240625172703476"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="一、ALU-1"><a href="#一、ALU-1" class="headerlink" title="一、ALU"></a>一、ALU</h3><h4 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h4><p>1.算数运算</p>
<p>2.逻辑运算</p>
<p>3.辅助功能</p>
<h4 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171811099.png" alt="image-20240625171811099"></p>
<h3 id="二、逻辑的硬件实现-1"><a href="#二、逻辑的硬件实现-1" class="headerlink" title="二、逻辑的硬件实现"></a>二、逻辑的硬件实现</h3><h4 id="与、或、非的硬件实现-1"><a href="#与、或、非的硬件实现-1" class="headerlink" title="与、或、非的硬件实现"></a>与、或、非的硬件实现</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171913374.png" alt="image-20240625171913374"></p>
<h4 id="复合逻辑的实现-1"><a href="#复合逻辑的实现-1" class="headerlink" title="复合逻辑的实现"></a>复合逻辑的实现</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172029954.png" alt="image-20240625172029954"># 加法器</p>
<h2 id="一位全加器-2"><a href="#一位全加器-2" class="headerlink" title="一位全加器"></a>一位全加器</h2><h3 id="基本原理-6"><a href="#基本原理-6" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172152648.png" alt="image-20240625172152648"></p>
<h2 id="串行加法器-2"><a href="#串行加法器-2" class="headerlink" title="串行加法器"></a>串行加法器</h2><h3 id="基本原理-7"><a href="#基本原理-7" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172328968.png" alt="image-20240625172328968"></p>
<h2 id="并行加法器（串行进位）-2"><a href="#并行加法器（串行进位）-2" class="headerlink" title="并行加法器（串行进位）"></a>并行加法器（串行进位）</h2><h3 id="基本原理-8"><a href="#基本原理-8" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172405221.png" alt="image-20240625172405221"></p>
<h2 id="并行进位的并行加法器-2"><a href="#并行进位的并行加法器-2" class="headerlink" title="并行进位的并行加法器"></a>并行进位的并行加法器</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172703476.png" alt="image-20240625172703476"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="一、ALU-2"><a href="#一、ALU-2" class="headerlink" title="一、ALU"></a>一、ALU</h3><h4 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h4><p>1.算数运算</p>
<p>2.逻辑运算</p>
<p>3.辅助功能</p>
<h4 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171811099.png" alt="image-20240625171811099"></p>
<h3 id="二、逻辑的硬件实现-2"><a href="#二、逻辑的硬件实现-2" class="headerlink" title="二、逻辑的硬件实现"></a>二、逻辑的硬件实现</h3><h4 id="与、或、非的硬件实现-2"><a href="#与、或、非的硬件实现-2" class="headerlink" title="与、或、非的硬件实现"></a>与、或、非的硬件实现</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171913374.png" alt="image-20240625171913374"></p>
<h4 id="复合逻辑的实现-2"><a href="#复合逻辑的实现-2" class="headerlink" title="复合逻辑的实现"></a>复合逻辑的实现</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172029954.png" alt="image-20240625172029954"></p>
<p>法器</p>
<h2 id="一位全加器-3"><a href="#一位全加器-3" class="headerlink" title="一位全加器"></a>一位全加器</h2><h3 id="基本原理-9"><a href="#基本原理-9" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172152648.png" alt="image-20240625172152648"></p>
<h2 id="串行加法器-3"><a href="#串行加法器-3" class="headerlink" title="串行加法器"></a>串行加法器</h2><h3 id="基本原理-10"><a href="#基本原理-10" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172328968.png" alt="image-20240625172328968"></p>
<h2 id="并行加法器（串行进位）-3"><a href="#并行加法器（串行进位）-3" class="headerlink" title="并行加法器（串行进位）"></a>并行加法器（串行进位）</h2><h3 id="基本原理-11"><a href="#基本原理-11" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172405221.png" alt="image-20240625172405221"></p>
<h2 id="并行进位的并行加法器-3"><a href="#并行进位的并行加法器-3" class="headerlink" title="并行进位的并行加法器"></a>并行进位的并行加法器</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172703476.png" alt="image-20240625172703476"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="一、ALU-3"><a href="#一、ALU-3" class="headerlink" title="一、ALU"></a>一、ALU</h3><h4 id="功能-3"><a href="#功能-3" class="headerlink" title="功能"></a>功能</h4><p>1.算数运算</p>
<p>2.逻辑运算</p>
<p>3.辅助功能</p>
<h4 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171811099.png" alt="image-20240625171811099"></p>
<h3 id="二、逻辑的硬件实现-3"><a href="#二、逻辑的硬件实现-3" class="headerlink" title="二、逻辑的硬件实现"></a>二、逻辑的硬件实现</h3><h4 id="与、或、非的硬件实现-3"><a href="#与、或、非的硬件实现-3" class="headerlink" title="与、或、非的硬件实现"></a>与、或、非的硬件实现</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171913374.png" alt="image-20240625171913374"></p>
<h4 id="复合逻辑的实现-3"><a href="#复合逻辑的实现-3" class="headerlink" title="复合逻辑的实现"></a>复合逻辑的实现</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172029954.png" alt="image-20240625172029954"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>原码、补码除法的对比</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%8E%9F%E7%A0%81%E3%80%81%E8%A1%A5%E7%A0%81%E9%99%A4%E6%B3%95%E7%9A%84%E5%AF%B9%E6%AF%94/</url>
    <content><![CDATA[<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626111437178.png" alt="image-20240626111437178"><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626111437178.png" alt="image-20240626111437178"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>原码、补码乘法的对比</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%8E%9F%E7%A0%81%E3%80%81%E8%A1%A5%E7%A0%81%E4%B9%98%E6%B3%95%E7%9A%84%E5%AF%B9%E6%AF%94/</url>
    <content><![CDATA[<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626104656226.png" alt="image-20240626104656226"><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626104656226.png" alt="image-20240626104656226"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>原码乘法</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%8E%9F%E7%A0%81%E4%B9%98%E6%B3%95/</url>
    <content><![CDATA[<h1 id="原码乘法"><a href="#原码乘法" class="headerlink" title="原码乘法"></a>原码乘法</h1><h2 id="原码一位乘"><a href="#原码一位乘" class="headerlink" title="原码一位乘"></a>原码一位乘</h2><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626102528133.png" alt="image-20240626102528133"></p>
<p>ACC存储乘积的高位。</p>
<p>MQ存储乘积的低位。</p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626102927260.png" alt="image-20240626102927260"></p>
<h4 id="符号位："><a href="#符号位：" class="headerlink" title="符号位："></a>符号位：</h4><p>符号位单独处理，用两个符号的异或结果处理。</p>
<h4 id="数值位："><a href="#数值位：" class="headerlink" title="数值位："></a>数值位：</h4><p>数值位取<strong>绝对值</strong>进行乘法计算。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626102954353.png" alt="image-20240626102954353"></p>
<p>PS：</p>
<p>1.原码乘法通过<strong>逻辑右移</strong>实现。</p>
<p>当MQ最后一位是0，则加0；是1，则加被<strong>乘数绝对值的原码</strong></p>
<p>2.最后的结果需要通过ACC和MQ的内容进行拼接。<br>乘法</p>
<h2 id="原码一位乘-1"><a href="#原码一位乘-1" class="headerlink" title="原码一位乘"></a>原码一位乘</h2><h3 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626102528133.png" alt="image-20240626102528133"></p>
<p>ACC存储乘积的高位。</p>
<p>MQ存储乘积的低位。</p>
<h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626102927260.png" alt="image-20240626102927260"></p>
<h4 id="符号位：-1"><a href="#符号位：-1" class="headerlink" title="符号位："></a>符号位：</h4><p>符号位单独处理，用两个符号的异或结果处理。</p>
<h4 id="数值位：-1"><a href="#数值位：-1" class="headerlink" title="数值位："></a>数值位：</h4><p>数值位取<strong>绝对值</strong>进行乘法计算。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626102954353.png" alt="image-20240626102954353"></p>
<p>PS：</p>
<p>1.原码乘法通过<strong>逻辑右移</strong>实现。</p>
<p>当MQ最后一位是0，则加0；是1，则加被<strong>乘数绝对值的原码</strong></p>
<p>2.最后的结果需要通过ACC和MQ的内容进行拼接。# 原码乘法</p>
<h2 id="原码一位乘-2"><a href="#原码一位乘-2" class="headerlink" title="原码一位乘"></a>原码一位乘</h2><h3 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626102528133.png" alt="image-20240626102528133"></p>
<p>ACC存储乘积的高位。</p>
<p>MQ存储乘积的低位。</p>
<h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626102927260.png" alt="image-20240626102927260"></p>
<h4 id="符号位：-2"><a href="#符号位：-2" class="headerlink" title="符号位："></a>符号位：</h4><p>符号位单独处理，用两个符号的异或结果处理。</p>
<h4 id="数值位：-2"><a href="#数值位：-2" class="headerlink" title="数值位："></a>数值位：</h4><p>数值位取<strong>绝对值</strong>进行乘法计算。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626102954353.png" alt="image-20240626102954353"></p>
<p>PS：</p>
<p>1.原码乘法通过<strong>逻辑右移</strong>实现。</p>
<p>当MQ最后一位是0，则加0；是1，则加被<strong>乘数绝对值的原码</strong></p>
<p>2.最后的结果需要通过ACC和MQ的内容进行拼接。<br>乘法</p>
<h2 id="原码一位乘-3"><a href="#原码一位乘-3" class="headerlink" title="原码一位乘"></a>原码一位乘</h2><h3 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626102528133.png" alt="image-20240626102528133"></p>
<p>ACC存储乘积的高位。</p>
<p>MQ存储乘积的低位。</p>
<h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626102927260.png" alt="image-20240626102927260"></p>
<h4 id="符号位：-3"><a href="#符号位：-3" class="headerlink" title="符号位："></a>符号位：</h4><p>符号位单独处理，用两个符号的异或结果处理。</p>
<h4 id="数值位：-3"><a href="#数值位：-3" class="headerlink" title="数值位："></a>数值位：</h4><p>数值位取<strong>绝对值</strong>进行乘法计算。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626102954353.png" alt="image-20240626102954353"></p>
<p>PS：</p>
<p>1.原码乘法通过<strong>逻辑右移</strong>实现。</p>
<p>当MQ最后一位是0，则加0；是1，则加被<strong>乘数绝对值的原码</strong></p>
<p>2.最后的结果需要通过ACC和MQ的内容进行拼接。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>原码除法</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%8E%9F%E7%A0%81%E9%99%A4%E6%B3%95/</url>
    <content><![CDATA[<h1 id="原码除法（通过补码来实现的）"><a href="#原码除法（通过补码来实现的）" class="headerlink" title="原码除法（通过补码来实现的）"></a>原码除法（通过补码来实现的）</h1><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626105750272.png" alt="image-20240626105750272"></p>
<p>最后一步，如果MQ的最后一位是1，那么还要加一次除数。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="恢复余数法"><a href="#恢复余数法" class="headerlink" title="恢复余数法"></a>恢复余数法</h3><h4 id="1-符号位单独处理"><a href="#1-符号位单独处理" class="headerlink" title="1.符号位单独处理"></a>1.符号位单独处理</h4><h4 id="2-数值位计算"><a href="#2-数值位计算" class="headerlink" title="2.数值位计算"></a>2.数值位计算</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626105919836.png" alt="image-20240626105919836"></p>
<h3 id="加减交替法（不恢复余数法，即上一个的优化版本）"><a href="#加减交替法（不恢复余数法，即上一个的优化版本）" class="headerlink" title="加减交替法（不恢复余数法，即上一个的优化版本）"></a>加减交替法（不恢复余数法，即上一个的优化版本）</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626110031779.png" alt="image-20240626110031779"><br>的）</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626105750272.png" alt="image-20240626105750272"></p>
<p>最后一步，如果MQ的最后一位是1，那么还要加一次除数。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="恢复余数法-1"><a href="#恢复余数法-1" class="headerlink" title="恢复余数法"></a>恢复余数法</h3><h4 id="1-符号位单独处理-1"><a href="#1-符号位单独处理-1" class="headerlink" title="1.符号位单独处理"></a>1.符号位单独处理</h4><h4 id="2-数值位计算-1"><a href="#2-数值位计算-1" class="headerlink" title="2.数值位计算"></a>2.数值位计算</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626105919836.png" alt="image-20240626105919836"></p>
<h3 id="加减交替法（不恢复余数法，即上一个的优化版本）-1"><a href="#加减交替法（不恢复余数法，即上一个的优化版本）-1" class="headerlink" title="加减交替法（不恢复余数法，即上一个的优化版本）"></a>加减交替法（不恢复余数法，即上一个的优化版本）</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626110031779.png" alt="image-20240626110031779"># 原码除法（通过补码来实现的）</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626105750272.png" alt="image-20240626105750272"></p>
<p>最后一步，如果MQ的最后一位是1，那么还要加一次除数。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="恢复余数法-2"><a href="#恢复余数法-2" class="headerlink" title="恢复余数法"></a>恢复余数法</h3><h4 id="1-符号位单独处理-2"><a href="#1-符号位单独处理-2" class="headerlink" title="1.符号位单独处理"></a>1.符号位单独处理</h4><h4 id="2-数值位计算-2"><a href="#2-数值位计算-2" class="headerlink" title="2.数值位计算"></a>2.数值位计算</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626105919836.png" alt="image-20240626105919836"></p>
<h3 id="加减交替法（不恢复余数法，即上一个的优化版本）-2"><a href="#加减交替法（不恢复余数法，即上一个的优化版本）-2" class="headerlink" title="加减交替法（不恢复余数法，即上一个的优化版本）"></a>加减交替法（不恢复余数法，即上一个的优化版本）</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626110031779.png" alt="image-20240626110031779"><br>的）</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626105750272.png" alt="image-20240626105750272"></p>
<p>最后一步，如果MQ的最后一位是1，那么还要加一次除数。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="恢复余数法-3"><a href="#恢复余数法-3" class="headerlink" title="恢复余数法"></a>恢复余数法</h3><h4 id="1-符号位单独处理-3"><a href="#1-符号位单独处理-3" class="headerlink" title="1.符号位单独处理"></a>1.符号位单独处理</h4><h4 id="2-数值位计算-3"><a href="#2-数值位计算-3" class="headerlink" title="2.数值位计算"></a>2.数值位计算</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626105919836.png" alt="image-20240626105919836"></p>
<h3 id="加减交替法（不恢复余数法，即上一个的优化版本）-3"><a href="#加减交替法（不恢复余数法，即上一个的优化版本）-3" class="headerlink" title="加减交替法（不恢复余数法，即上一个的优化版本）"></a>加减交替法（不恢复余数法，即上一个的优化版本）</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626110031779.png" alt="image-20240626110031779"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>双端口RAM</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%8F%8C%E7%AB%AF%E5%8F%A3RAM/</url>
    <content><![CDATA[<h1 id="双端口RAM"><a href="#双端口RAM" class="headerlink" title="双端口RAM"></a>双端口RAM</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>双端口RAM（Dual-Port RAM）是一种特殊的随机存取存储器，它具有两个独立的访问端口，允许同时从两个不同的源进行读写操作。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.存储单元：构成RAM的基本单元，每个单元存储一个数据位。</p>
<p>2.两个独立的端口：每个端口都有自己的地址线、数据线和控制线。</p>
<p>3.控制逻辑：用于管理两个端口的数据访问和同步。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>双端口RAM通常以集成电路的形式存在，其内部结构设计为允许同时访问。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163545856.png" alt="image-20240627163545856"></p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>同时访问能力，高速度，用于需要并行处理的应用。AM</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>双端口RAM（Dual-Port RAM）是一种特殊的随机存取存储器，它具有两个独立的访问端口，允许同时从两个不同的源进行读写操作。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.存储单元：构成RAM的基本单元，每个单元存储一个数据位。</p>
<p>2.两个独立的端口：每个端口都有自己的地址线、数据线和控制线。</p>
<p>3.控制逻辑：用于管理两个端口的数据访问和同步。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>双端口RAM通常以集成电路的形式存在，其内部结构设计为允许同时访问。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163545856.png" alt="image-20240627163545856"></p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>同时访问能力，高速度，用于需要并行处理的应用。# 双端口RAM</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>双端口RAM（Dual-Port RAM）是一种特殊的随机存取存储器，它具有两个独立的访问端口，允许同时从两个不同的源进行读写操作。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.存储单元：构成RAM的基本单元，每个单元存储一个数据位。</p>
<p>2.两个独立的端口：每个端口都有自己的地址线、数据线和控制线。</p>
<p>3.控制逻辑：用于管理两个端口的数据访问和同步。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>双端口RAM通常以集成电路的形式存在，其内部结构设计为允许同时访问。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163545856.png" alt="image-20240627163545856"></p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>同时访问能力，高速度，用于需要并行处理的应用。AM</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>双端口RAM（Dual-Port RAM）是一种特殊的随机存取存储器，它具有两个独立的访问端口，允许同时从两个不同的源进行读写操作。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.存储单元：构成RAM的基本单元，每个单元存储一个数据位。</p>
<p>2.两个独立的端口：每个端口都有自己的地址线、数据线和控制线。</p>
<p>3.控制逻辑：用于管理两个端口的数据访问和同步。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>双端口RAM通常以集成电路的形式存在，其内部结构设计为允许同时访问。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163545856.png" alt="image-20240627163545856"></p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>同时访问能力，高速度，用于需要并行处理的应用。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>只读存储器ROM</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%8F%AA%E8%AF%BB%E5%AD%98%E5%82%A8%E5%99%A8ROM/</url>
    <content><![CDATA[<h1 id="ROM"><a href="#ROM" class="headerlink" title="ROM"></a>ROM</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>ROM（Read-Only Memory，唯读存储器）是一种只能读取不能写入的非易失性存储器，用于永久性地存储固件或不可变数据。数据在制造时或通过专用程序写入后，不能被修改或擦除。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>ROM通常以集成电路的形式存在，其数据在制造过程中被永久性地编程。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.包括掩模ROM（MROM）</p>
<p>2.可编程ROM（PROM）</p>
<p>3.可擦写可编程ROM（EPROM）</p>
<p>4.电可擦写可编程ROM（EEPROM）</p>
<p>5.闪存FM（Flash Memory）</p>
<p>6.SSD（Solid State Drive）</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>只读，非易失性（断电后数据不丢失），速度较RAM慢。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163250120.png" alt="image-20240627163250120"></p>
<p>OM</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>ROM（Read-Only Memory，唯读存储器）是一种只能读取不能写入的非易失性存储器，用于永久性地存储固件或不可变数据。数据在制造时或通过专用程序写入后，不能被修改或擦除。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>ROM通常以集成电路的形式存在，其数据在制造过程中被永久性地编程。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.包括掩模ROM（MROM）</p>
<p>2.可编程ROM（PROM）</p>
<p>3.可擦写可编程ROM（EPROM）</p>
<p>4.电可擦写可编程ROM（EEPROM）</p>
<p>5.闪存FM（Flash Memory）</p>
<p>6.SSD（Solid State Drive）</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>只读，非易失性（断电后数据不丢失），速度较RAM慢。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163250120.png" alt="image-20240627163250120"># ROM</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>ROM（Read-Only Memory，唯读存储器）是一种只能读取不能写入的非易失性存储器，用于永久性地存储固件或不可变数据。数据在制造时或通过专用程序写入后，不能被修改或擦除。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>ROM通常以集成电路的形式存在，其数据在制造过程中被永久性地编程。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.包括掩模ROM（MROM）</p>
<p>2.可编程ROM（PROM）</p>
<p>3.可擦写可编程ROM（EPROM）</p>
<p>4.电可擦写可编程ROM（EEPROM）</p>
<p>5.闪存FM（Flash Memory）</p>
<p>6.SSD（Solid State Drive）</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>只读，非易失性（断电后数据不丢失），速度较RAM慢。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163250120.png" alt="image-20240627163250120"></p>
<p>OM</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>ROM（Read-Only Memory，唯读存储器）是一种只能读取不能写入的非易失性存储器，用于永久性地存储固件或不可变数据。数据在制造时或通过专用程序写入后，不能被修改或擦除。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>ROM通常以集成电路的形式存在，其数据在制造过程中被永久性地编程。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.包括掩模ROM（MROM）</p>
<p>2.可编程ROM（PROM）</p>
<p>3.可擦写可编程ROM（EPROM）</p>
<p>4.电可擦写可编程ROM（EEPROM）</p>
<p>5.闪存FM（Flash Memory）</p>
<p>6.SSD（Solid State Drive）</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>只读，非易失性（断电后数据不丢失），速度较RAM慢。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163250120.png" alt="image-20240627163250120"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>各个硬件的工作原理</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%90%84%E4%B8%AA%E7%A1%AC%E4%BB%B6%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="硬件工作原理"><a href="#硬件工作原理" class="headerlink" title="硬件工作原理"></a>硬件工作原理</h1><h2 id="主存储器"><a href="#主存储器" class="headerlink" title="主存储器"></a>主存储器</h2><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155931825.png" alt="image-20240624155931825"></p>
<h3 id="组成结构"><a href="#组成结构" class="headerlink" title="组成结构"></a>组成结构</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160112102.png" alt="image-20240624160112102"></p>
<h2 id="运算器"><a href="#运算器" class="headerlink" title="运算器"></a>运算器</h2><h3 id="基本组成"><a href="#基本组成" class="headerlink" title="基本组成"></a>基本组成</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160235718.png" alt="image-20240624160235718"></p>
<h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><h3 id="基本组成-1"><a href="#基本组成-1" class="headerlink" title="基本组成"></a>基本组成</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160325347.png" alt="image-20240624160325347"></p>
<h2 id="计算机的工作原理"><a href="#计算机的工作原理" class="headerlink" title="计算机的工作原理"></a>计算机的工作原理</h2><h3 id="1-高级语言编译后装入主存"><a href="#1-高级语言编译后装入主存" class="headerlink" title="1.高级语言编译后装入主存"></a>1.高级语言编译后装入主存</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160648284.png" alt="image-20240624160648284"></p>
<h3 id="2-取数的操作"><a href="#2-取数的操作" class="headerlink" title="2.取数的操作"></a>2.取数的操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624161105204.png" alt="image-20240624161105204"></p>
<h3 id="3-乘法的操作"><a href="#3-乘法的操作" class="headerlink" title="3.乘法的操作"></a>3.乘法的操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624161251621.png" alt="image-20240624161251621"></p>
<p>PS：</p>
<p>在乘法操作中，被乘数会被从ACC中转移到X中，乘数会放到MQ中，由ALU进行计算。最终结果放到ACC中保存。</p>
<h3 id="4-加法操作"><a href="#4-加法操作" class="headerlink" title="4.加法操作"></a>4.加法操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624172748368.png" alt="image-20240624172748368"></p>
<p>PS：被加数存在于ACC中，而加数直接放到X中，由ALU进行计算。最终结果放到ACC中保存。</p>
<h3 id="5-存数操作"><a href="#5-存数操作" class="headerlink" title="5.存数操作"></a>5.存数操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173134485.png" alt="image-20240624173134485"></p>
<p>PS：MAR中放存放的目的地址，MDR中存放ACC中要保存的数据。最后由CU发送信号，存储体进行存储。</p>
<h3 id="6-停机操作"><a href="#6-停机操作" class="headerlink" title="6.停机操作"></a>6.停机操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173445784.png" alt="image-20240624173445784"></p>
<p>PS：由操作系统负责一系列的操作。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.执行指令的一般过程：</p>
<p>取、分析、执行，一共三个步骤。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173754108.png" alt="image-20240624173754108"></p>
<p>原理</p>
<h2 id="主存储器-1"><a href="#主存储器-1" class="headerlink" title="主存储器"></a>主存储器</h2><h3 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155931825.png" alt="image-20240624155931825"></p>
<h3 id="组成结构-1"><a href="#组成结构-1" class="headerlink" title="组成结构"></a>组成结构</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160112102.png" alt="image-20240624160112102"></p>
<h2 id="运算器-1"><a href="#运算器-1" class="headerlink" title="运算器"></a>运算器</h2><h3 id="基本组成-2"><a href="#基本组成-2" class="headerlink" title="基本组成"></a>基本组成</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160235718.png" alt="image-20240624160235718"></p>
<h2 id="控制器-1"><a href="#控制器-1" class="headerlink" title="控制器"></a>控制器</h2><h3 id="基本组成-3"><a href="#基本组成-3" class="headerlink" title="基本组成"></a>基本组成</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160325347.png" alt="image-20240624160325347"></p>
<h2 id="计算机的工作原理-1"><a href="#计算机的工作原理-1" class="headerlink" title="计算机的工作原理"></a>计算机的工作原理</h2><h3 id="1-高级语言编译后装入主存-1"><a href="#1-高级语言编译后装入主存-1" class="headerlink" title="1.高级语言编译后装入主存"></a>1.高级语言编译后装入主存</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160648284.png" alt="image-20240624160648284"></p>
<h3 id="2-取数的操作-1"><a href="#2-取数的操作-1" class="headerlink" title="2.取数的操作"></a>2.取数的操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624161105204.png" alt="image-20240624161105204"></p>
<h3 id="3-乘法的操作-1"><a href="#3-乘法的操作-1" class="headerlink" title="3.乘法的操作"></a>3.乘法的操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624161251621.png" alt="image-20240624161251621"></p>
<p>PS：</p>
<p>在乘法操作中，被乘数会被从ACC中转移到X中，乘数会放到MQ中，由ALU进行计算。最终结果放到ACC中保存。</p>
<h3 id="4-加法操作-1"><a href="#4-加法操作-1" class="headerlink" title="4.加法操作"></a>4.加法操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624172748368.png" alt="image-20240624172748368"></p>
<p>PS：被加数存在于ACC中，而加数直接放到X中，由ALU进行计算。最终结果放到ACC中保存。</p>
<h3 id="5-存数操作-1"><a href="#5-存数操作-1" class="headerlink" title="5.存数操作"></a>5.存数操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173134485.png" alt="image-20240624173134485"></p>
<p>PS：MAR中放存放的目的地址，MDR中存放ACC中要保存的数据。最后由CU发送信号，存储体进行存储。</p>
<h3 id="6-停机操作-1"><a href="#6-停机操作-1" class="headerlink" title="6.停机操作"></a>6.停机操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173445784.png" alt="image-20240624173445784"></p>
<p>PS：由操作系统负责一系列的操作。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.执行指令的一般过程：</p>
<p>取、分析、执行，一共三个步骤。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173754108.png" alt="image-20240624173754108"># 硬件工作原理</p>
<h2 id="主存储器-2"><a href="#主存储器-2" class="headerlink" title="主存储器"></a>主存储器</h2><h3 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155931825.png" alt="image-20240624155931825"></p>
<h3 id="组成结构-2"><a href="#组成结构-2" class="headerlink" title="组成结构"></a>组成结构</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160112102.png" alt="image-20240624160112102"></p>
<h2 id="运算器-2"><a href="#运算器-2" class="headerlink" title="运算器"></a>运算器</h2><h3 id="基本组成-4"><a href="#基本组成-4" class="headerlink" title="基本组成"></a>基本组成</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160235718.png" alt="image-20240624160235718"></p>
<h2 id="控制器-2"><a href="#控制器-2" class="headerlink" title="控制器"></a>控制器</h2><h3 id="基本组成-5"><a href="#基本组成-5" class="headerlink" title="基本组成"></a>基本组成</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160325347.png" alt="image-20240624160325347"></p>
<h2 id="计算机的工作原理-2"><a href="#计算机的工作原理-2" class="headerlink" title="计算机的工作原理"></a>计算机的工作原理</h2><h3 id="1-高级语言编译后装入主存-2"><a href="#1-高级语言编译后装入主存-2" class="headerlink" title="1.高级语言编译后装入主存"></a>1.高级语言编译后装入主存</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160648284.png" alt="image-20240624160648284"></p>
<h3 id="2-取数的操作-2"><a href="#2-取数的操作-2" class="headerlink" title="2.取数的操作"></a>2.取数的操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624161105204.png" alt="image-20240624161105204"></p>
<h3 id="3-乘法的操作-2"><a href="#3-乘法的操作-2" class="headerlink" title="3.乘法的操作"></a>3.乘法的操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624161251621.png" alt="image-20240624161251621"></p>
<p>PS：</p>
<p>在乘法操作中，被乘数会被从ACC中转移到X中，乘数会放到MQ中，由ALU进行计算。最终结果放到ACC中保存。</p>
<h3 id="4-加法操作-2"><a href="#4-加法操作-2" class="headerlink" title="4.加法操作"></a>4.加法操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624172748368.png" alt="image-20240624172748368"></p>
<p>PS：被加数存在于ACC中，而加数直接放到X中，由ALU进行计算。最终结果放到ACC中保存。</p>
<h3 id="5-存数操作-2"><a href="#5-存数操作-2" class="headerlink" title="5.存数操作"></a>5.存数操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173134485.png" alt="image-20240624173134485"></p>
<p>PS：MAR中放存放的目的地址，MDR中存放ACC中要保存的数据。最后由CU发送信号，存储体进行存储。</p>
<h3 id="6-停机操作-2"><a href="#6-停机操作-2" class="headerlink" title="6.停机操作"></a>6.停机操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173445784.png" alt="image-20240624173445784"></p>
<p>PS：由操作系统负责一系列的操作。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.执行指令的一般过程：</p>
<p>取、分析、执行，一共三个步骤。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173754108.png" alt="image-20240624173754108"></p>
<p>原理</p>
<h2 id="主存储器-3"><a href="#主存储器-3" class="headerlink" title="主存储器"></a>主存储器</h2><h3 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155931825.png" alt="image-20240624155931825"></p>
<h3 id="组成结构-3"><a href="#组成结构-3" class="headerlink" title="组成结构"></a>组成结构</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160112102.png" alt="image-20240624160112102"></p>
<h2 id="运算器-3"><a href="#运算器-3" class="headerlink" title="运算器"></a>运算器</h2><h3 id="基本组成-6"><a href="#基本组成-6" class="headerlink" title="基本组成"></a>基本组成</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160235718.png" alt="image-20240624160235718"></p>
<h2 id="控制器-3"><a href="#控制器-3" class="headerlink" title="控制器"></a>控制器</h2><h3 id="基本组成-7"><a href="#基本组成-7" class="headerlink" title="基本组成"></a>基本组成</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160325347.png" alt="image-20240624160325347"></p>
<h2 id="计算机的工作原理-3"><a href="#计算机的工作原理-3" class="headerlink" title="计算机的工作原理"></a>计算机的工作原理</h2><h3 id="1-高级语言编译后装入主存-3"><a href="#1-高级语言编译后装入主存-3" class="headerlink" title="1.高级语言编译后装入主存"></a>1.高级语言编译后装入主存</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624160648284.png" alt="image-20240624160648284"></p>
<h3 id="2-取数的操作-3"><a href="#2-取数的操作-3" class="headerlink" title="2.取数的操作"></a>2.取数的操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624161105204.png" alt="image-20240624161105204"></p>
<h3 id="3-乘法的操作-3"><a href="#3-乘法的操作-3" class="headerlink" title="3.乘法的操作"></a>3.乘法的操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624161251621.png" alt="image-20240624161251621"></p>
<p>PS：</p>
<p>在乘法操作中，被乘数会被从ACC中转移到X中，乘数会放到MQ中，由ALU进行计算。最终结果放到ACC中保存。</p>
<h3 id="4-加法操作-3"><a href="#4-加法操作-3" class="headerlink" title="4.加法操作"></a>4.加法操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624172748368.png" alt="image-20240624172748368"></p>
<p>PS：被加数存在于ACC中，而加数直接放到X中，由ALU进行计算。最终结果放到ACC中保存。</p>
<h3 id="5-存数操作-3"><a href="#5-存数操作-3" class="headerlink" title="5.存数操作"></a>5.存数操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173134485.png" alt="image-20240624173134485"></p>
<p>PS：MAR中放存放的目的地址，MDR中存放ACC中要保存的数据。最后由CU发送信号，存储体进行存储。</p>
<h3 id="6-停机操作-3"><a href="#6-停机操作-3" class="headerlink" title="6.停机操作"></a>6.停机操作</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173445784.png" alt="image-20240624173445784"></p>
<p>PS：由操作系统负责一系列的操作。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.执行指令的一般过程：</p>
<p>取、分析、执行，一共三个步骤。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173754108.png" alt="image-20240624173754108"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>固态硬盘SSD</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98SSD/</url>
    <content><![CDATA[<h1 id="SSD"><a href="#SSD" class="headerlink" title="SSD"></a>SSD</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>SSD（Solid State Drive，固态驱动器）是一种基于闪存存储技术的非机械存储设备。它通过使用NAND闪存或DRAM等存储介质来存储数据，不包含传统硬盘驱动器中的机械部件。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-NAND闪存芯片"><a href="#1-NAND闪存芯片" class="headerlink" title="1.NAND闪存芯片"></a>1.NAND闪存芯片</h3><p>用于存储数据的主要存储介质。</p>
<h3 id="2-控制器"><a href="#2-控制器" class="headerlink" title="2.控制器"></a>2.控制器</h3><p>管理数据的读写操作、数据分配和垃圾回收等功能。</p>
<h3 id="3-缓存"><a href="#3-缓存" class="headerlink" title="3.缓存"></a>3.缓存</h3><p>通常是DRAM，用于加速数据读写操作。</p>
<h3 id="4-接口"><a href="#4-接口" class="headerlink" title="4.接口"></a>4.接口</h3><p>如SATA、NVMe，用于与计算机系统连接和通信。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单级单元（SLC）"><a href="#1-单级单元（SLC）" class="headerlink" title="1.单级单元（SLC）"></a>1.单级单元（SLC）</h3><p>每个存储单元存储1位数据，速度快、寿命长。</p>
<h3 id="2-多级单元（MLC）"><a href="#2-多级单元（MLC）" class="headerlink" title="2.多级单元（MLC）"></a>2.多级单元（MLC）</h3><p>每个存储单元存储2位数据，成本较低但寿命和速度相对较低。</p>
<h3 id="3-三级单元（TLC）"><a href="#3-三级单元（TLC）" class="headerlink" title="3.三级单元（TLC）"></a>3.三级单元（TLC）</h3><p>每个存储单元存储3位数据，成本更低，但寿命和速度进一步降低。</p>
<h3 id="4-四级单元（QLC）"><a href="#4-四级单元（QLC）" class="headerlink" title="4.四级单元（QLC）"></a>4.四级单元（QLC）</h3><p>每个存储单元存储4位数据，提供最高密度但寿命和速度最短。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172952387.png" alt="image-20240627172952387"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.SATA SSD：使用SATA接口，适用于较旧的计算机系统，速度受SATA接口限制。<br>2.NVMe SSD：使用NVMe协议和PCIe接口，提供更高的读写速度和更低的延迟。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.无机械部件：相比于传统硬盘（HDD），SSD没有移动部件，更耐用，抗震性能好。<br>2.高速读写：提供比HDD更快的读写速度和更低的延迟。<br>3.低功耗：功耗较低，适合移动设备使用。<br>4.静音运行：无机械部件，运行时无噪音。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627173052669.png" alt="image-20240627173052669">SD</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>SSD（Solid State Drive，固态驱动器）是一种基于闪存存储技术的非机械存储设备。它通过使用NAND闪存或DRAM等存储介质来存储数据，不包含传统硬盘驱动器中的机械部件。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-NAND闪存芯片-1"><a href="#1-NAND闪存芯片-1" class="headerlink" title="1.NAND闪存芯片"></a>1.NAND闪存芯片</h3><p>用于存储数据的主要存储介质。</p>
<h3 id="2-控制器-1"><a href="#2-控制器-1" class="headerlink" title="2.控制器"></a>2.控制器</h3><p>管理数据的读写操作、数据分配和垃圾回收等功能。</p>
<h3 id="3-缓存-1"><a href="#3-缓存-1" class="headerlink" title="3.缓存"></a>3.缓存</h3><p>通常是DRAM，用于加速数据读写操作。</p>
<h3 id="4-接口-1"><a href="#4-接口-1" class="headerlink" title="4.接口"></a>4.接口</h3><p>如SATA、NVMe，用于与计算机系统连接和通信。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单级单元（SLC）-1"><a href="#1-单级单元（SLC）-1" class="headerlink" title="1.单级单元（SLC）"></a>1.单级单元（SLC）</h3><p>每个存储单元存储1位数据，速度快、寿命长。</p>
<h3 id="2-多级单元（MLC）-1"><a href="#2-多级单元（MLC）-1" class="headerlink" title="2.多级单元（MLC）"></a>2.多级单元（MLC）</h3><p>每个存储单元存储2位数据，成本较低但寿命和速度相对较低。</p>
<h3 id="3-三级单元（TLC）-1"><a href="#3-三级单元（TLC）-1" class="headerlink" title="3.三级单元（TLC）"></a>3.三级单元（TLC）</h3><p>每个存储单元存储3位数据，成本更低，但寿命和速度进一步降低。</p>
<h3 id="4-四级单元（QLC）-1"><a href="#4-四级单元（QLC）-1" class="headerlink" title="4.四级单元（QLC）"></a>4.四级单元（QLC）</h3><p>每个存储单元存储4位数据，提供最高密度但寿命和速度最短。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172952387.png" alt="image-20240627172952387"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.SATA SSD：使用SATA接口，适用于较旧的计算机系统，速度受SATA接口限制。<br>2.NVMe SSD：使用NVMe协议和PCIe接口，提供更高的读写速度和更低的延迟。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.无机械部件：相比于传统硬盘（HDD），SSD没有移动部件，更耐用，抗震性能好。<br>2.高速读写：提供比HDD更快的读写速度和更低的延迟。<br>3.低功耗：功耗较低，适合移动设备使用。<br>4.静音运行：无机械部件，运行时无噪音。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627173052669.png" alt="image-20240627173052669"># SSD</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>SSD（Solid State Drive，固态驱动器）是一种基于闪存存储技术的非机械存储设备。它通过使用NAND闪存或DRAM等存储介质来存储数据，不包含传统硬盘驱动器中的机械部件。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-NAND闪存芯片-2"><a href="#1-NAND闪存芯片-2" class="headerlink" title="1.NAND闪存芯片"></a>1.NAND闪存芯片</h3><p>用于存储数据的主要存储介质。</p>
<h3 id="2-控制器-2"><a href="#2-控制器-2" class="headerlink" title="2.控制器"></a>2.控制器</h3><p>管理数据的读写操作、数据分配和垃圾回收等功能。</p>
<h3 id="3-缓存-2"><a href="#3-缓存-2" class="headerlink" title="3.缓存"></a>3.缓存</h3><p>通常是DRAM，用于加速数据读写操作。</p>
<h3 id="4-接口-2"><a href="#4-接口-2" class="headerlink" title="4.接口"></a>4.接口</h3><p>如SATA、NVMe，用于与计算机系统连接和通信。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单级单元（SLC）-2"><a href="#1-单级单元（SLC）-2" class="headerlink" title="1.单级单元（SLC）"></a>1.单级单元（SLC）</h3><p>每个存储单元存储1位数据，速度快、寿命长。</p>
<h3 id="2-多级单元（MLC）-2"><a href="#2-多级单元（MLC）-2" class="headerlink" title="2.多级单元（MLC）"></a>2.多级单元（MLC）</h3><p>每个存储单元存储2位数据，成本较低但寿命和速度相对较低。</p>
<h3 id="3-三级单元（TLC）-2"><a href="#3-三级单元（TLC）-2" class="headerlink" title="3.三级单元（TLC）"></a>3.三级单元（TLC）</h3><p>每个存储单元存储3位数据，成本更低，但寿命和速度进一步降低。</p>
<h3 id="4-四级单元（QLC）-2"><a href="#4-四级单元（QLC）-2" class="headerlink" title="4.四级单元（QLC）"></a>4.四级单元（QLC）</h3><p>每个存储单元存储4位数据，提供最高密度但寿命和速度最短。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172952387.png" alt="image-20240627172952387"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.SATA SSD：使用SATA接口，适用于较旧的计算机系统，速度受SATA接口限制。<br>2.NVMe SSD：使用NVMe协议和PCIe接口，提供更高的读写速度和更低的延迟。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.无机械部件：相比于传统硬盘（HDD），SSD没有移动部件，更耐用，抗震性能好。<br>2.高速读写：提供比HDD更快的读写速度和更低的延迟。<br>3.低功耗：功耗较低，适合移动设备使用。<br>4.静音运行：无机械部件，运行时无噪音。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627173052669.png" alt="image-20240627173052669">SD</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>SSD（Solid State Drive，固态驱动器）是一种基于闪存存储技术的非机械存储设备。它通过使用NAND闪存或DRAM等存储介质来存储数据，不包含传统硬盘驱动器中的机械部件。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-NAND闪存芯片-3"><a href="#1-NAND闪存芯片-3" class="headerlink" title="1.NAND闪存芯片"></a>1.NAND闪存芯片</h3><p>用于存储数据的主要存储介质。</p>
<h3 id="2-控制器-3"><a href="#2-控制器-3" class="headerlink" title="2.控制器"></a>2.控制器</h3><p>管理数据的读写操作、数据分配和垃圾回收等功能。</p>
<h3 id="3-缓存-3"><a href="#3-缓存-3" class="headerlink" title="3.缓存"></a>3.缓存</h3><p>通常是DRAM，用于加速数据读写操作。</p>
<h3 id="4-接口-3"><a href="#4-接口-3" class="headerlink" title="4.接口"></a>4.接口</h3><p>如SATA、NVMe，用于与计算机系统连接和通信。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单级单元（SLC）-3"><a href="#1-单级单元（SLC）-3" class="headerlink" title="1.单级单元（SLC）"></a>1.单级单元（SLC）</h3><p>每个存储单元存储1位数据，速度快、寿命长。</p>
<h3 id="2-多级单元（MLC）-3"><a href="#2-多级单元（MLC）-3" class="headerlink" title="2.多级单元（MLC）"></a>2.多级单元（MLC）</h3><p>每个存储单元存储2位数据，成本较低但寿命和速度相对较低。</p>
<h3 id="3-三级单元（TLC）-3"><a href="#3-三级单元（TLC）-3" class="headerlink" title="3.三级单元（TLC）"></a>3.三级单元（TLC）</h3><p>每个存储单元存储3位数据，成本更低，但寿命和速度进一步降低。</p>
<h3 id="4-四级单元（QLC）-3"><a href="#4-四级单元（QLC）-3" class="headerlink" title="4.四级单元（QLC）"></a>4.四级单元（QLC）</h3><p>每个存储单元存储4位数据，提供最高密度但寿命和速度最短。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172952387.png" alt="image-20240627172952387"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.SATA SSD：使用SATA接口，适用于较旧的计算机系统，速度受SATA接口限制。<br>2.NVMe SSD：使用NVMe协议和PCIe接口，提供更高的读写速度和更低的延迟。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.无机械部件：相比于传统硬盘（HDD），SSD没有移动部件，更耐用，抗震性能好。<br>2.高速读写：提供比HDD更快的读写速度和更低的延迟。<br>3.低功耗：功耗较低，适合移动设备使用。<br>4.静音运行：无机械部件，运行时无噪音。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627173052669.png" alt="image-20240627173052669"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>多体并行存储器</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%A4%9A%E4%BD%93%E5%B9%B6%E8%A1%8C%E5%AD%98%E5%82%A8%E5%99%A8/</url>
    <content><![CDATA[<h1 id="多体并行存储器"><a href="#多体并行存储器" class="headerlink" title="多体并行存储器"></a>多体并行存储器</h1><h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163721073.png" alt="image-20240627163721073"></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.取几个体？</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163837999.png" alt="image-20240627163837999">储器</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163721073.png" alt="image-20240627163721073"></p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.取几个体？</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163837999.png" alt="image-20240627163837999"># 多体并行存储器</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163721073.png" alt="image-20240627163721073"></p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.取几个体？</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163837999.png" alt="image-20240627163837999">储器</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163721073.png" alt="image-20240627163721073"></p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.取几个体？</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627163837999.png" alt="image-20240627163837999"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>多处理器系统的基本概念</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%A4%9A%E5%A4%84%E7%90%86%E5%99%A8%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h1 id="多处理器系统的基本概念"><a href="#多处理器系统的基本概念" class="headerlink" title="多处理器系统的基本概念"></a>多处理器系统的基本概念</h1><h2 id="SISD"><a href="#SISD" class="headerlink" title="SISD"></a>SISD</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225026111.png" alt="image-20240629225026111"></p>
<h2 id="SIMD"><a href="#SIMD" class="headerlink" title="SIMD"></a>SIMD</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225036460.png" alt="image-20240629225036460"></p>
<h2 id="MISD"><a href="#MISD" class="headerlink" title="MISD"></a>MISD</h2><p>不存在</p>
<h2 id="MIMD"><a href="#MIMD" class="headerlink" title="MIMD"></a>MIMD</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225059851.png" alt="image-20240629225059851"></p>
<h3 id="2-多计算机系统"><a href="#2-多计算机系统" class="headerlink" title="2.多计算机系统"></a>2.多计算机系统</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225207671.png" alt="image-20240629225207671"></p>
<h2 id="向量处理器"><a href="#向量处理器" class="headerlink" title="向量处理器"></a>向量处理器</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225235590.png" alt="image-20240629225235590"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225306481.png" alt="image-20240629225306481"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225319418.png" alt="image-20240629225319418">概念</p>
<h2 id="SISD-1"><a href="#SISD-1" class="headerlink" title="SISD"></a>SISD</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225026111.png" alt="image-20240629225026111"></p>
<h2 id="SIMD-1"><a href="#SIMD-1" class="headerlink" title="SIMD"></a>SIMD</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225036460.png" alt="image-20240629225036460"></p>
<h2 id="MISD-1"><a href="#MISD-1" class="headerlink" title="MISD"></a>MISD</h2><p>不存在</p>
<h2 id="MIMD-1"><a href="#MIMD-1" class="headerlink" title="MIMD"></a>MIMD</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1."></a>1.</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225059851.png" alt="image-20240629225059851"></p>
<h3 id="2-多计算机系统-1"><a href="#2-多计算机系统-1" class="headerlink" title="2.多计算机系统"></a>2.多计算机系统</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225207671.png" alt="image-20240629225207671"></p>
<h2 id="向量处理器-1"><a href="#向量处理器-1" class="headerlink" title="向量处理器"></a>向量处理器</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225235590.png" alt="image-20240629225235590"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225306481.png" alt="image-20240629225306481"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225319418.png" alt="image-20240629225319418"># 多处理器系统的基本概念</p>
<h2 id="SISD-2"><a href="#SISD-2" class="headerlink" title="SISD"></a>SISD</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225026111.png" alt="image-20240629225026111"></p>
<h2 id="SIMD-2"><a href="#SIMD-2" class="headerlink" title="SIMD"></a>SIMD</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225036460.png" alt="image-20240629225036460"></p>
<h2 id="MISD-2"><a href="#MISD-2" class="headerlink" title="MISD"></a>MISD</h2><p>不存在</p>
<h2 id="MIMD-2"><a href="#MIMD-2" class="headerlink" title="MIMD"></a>MIMD</h2><h3 id="1-2"><a href="#1-2" class="headerlink" title="1."></a>1.</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225059851.png" alt="image-20240629225059851"></p>
<h3 id="2-多计算机系统-2"><a href="#2-多计算机系统-2" class="headerlink" title="2.多计算机系统"></a>2.多计算机系统</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225207671.png" alt="image-20240629225207671"></p>
<h2 id="向量处理器-2"><a href="#向量处理器-2" class="headerlink" title="向量处理器"></a>向量处理器</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225235590.png" alt="image-20240629225235590"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225306481.png" alt="image-20240629225306481"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225319418.png" alt="image-20240629225319418">概念</p>
<h2 id="SISD-3"><a href="#SISD-3" class="headerlink" title="SISD"></a>SISD</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225026111.png" alt="image-20240629225026111"></p>
<h2 id="SIMD-3"><a href="#SIMD-3" class="headerlink" title="SIMD"></a>SIMD</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225036460.png" alt="image-20240629225036460"></p>
<h2 id="MISD-3"><a href="#MISD-3" class="headerlink" title="MISD"></a>MISD</h2><p>不存在</p>
<h2 id="MIMD-3"><a href="#MIMD-3" class="headerlink" title="MIMD"></a>MIMD</h2><h3 id="1-3"><a href="#1-3" class="headerlink" title="1."></a>1.</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225059851.png" alt="image-20240629225059851"></p>
<h3 id="2-多计算机系统-3"><a href="#2-多计算机系统-3" class="headerlink" title="2.多计算机系统"></a>2.多计算机系统</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225207671.png" alt="image-20240629225207671"></p>
<h2 id="向量处理器-3"><a href="#向量处理器-3" class="headerlink" title="向量处理器"></a>向量处理器</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225235590.png" alt="image-20240629225235590"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225306481.png" alt="image-20240629225306481"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225319418.png" alt="image-20240629225319418"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>多模块存储器</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%A4%9A%E6%A8%A1%E5%9D%97%E5%AD%98%E5%82%A8%E5%99%A8/</url>
    <content><![CDATA[<h1 id="多模块存储器"><a href="#多模块存储器" class="headerlink" title="多模块存储器"></a>多模块存储器</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>多模块存储器（Multi-Module Memory）是一种由多个独立存储模块组成的存储系统，每个模块都可以独立访问，提高了数据访问的速度和带宽。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-多体并行存储器"><a href="#1-多体并行存储器" class="headerlink" title="1.多体并行存储器"></a>1.多体并行存储器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627164316722.png" alt="image-20240627164316722"></p>
<h3 id="2-单体多字存储器"><a href="#2-单体多字存储器" class="headerlink" title="2.单体多字存储器"></a>2.单体多字存储器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627164333016.png" alt="image-20240627164333016"></p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-存储模块"><a href="#1-存储模块" class="headerlink" title="1.存储模块"></a>1.存储模块</h3><p>构成多模块存储器的基本单元，每个模块都是一个独立的存储单元。</p>
<h3 id="2-控制器"><a href="#2-控制器" class="headerlink" title="2.控制器"></a>2.控制器</h3><p>用于管理多个模块之间的数据分配和同步。</p>
<h3 id="3-数据总线"><a href="#3-数据总线" class="headerlink" title="3.数据总线"></a>3.数据总线</h3><p>用于在模块之间传输数据。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>多模块存储器通常以多个存储芯片或模块的形式存在，它们可以通过并行或串行方式连接。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>高速度，高带宽，可扩展性，用于需要大量数据存储和高性能计算的应用。储器</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>多模块存储器（Multi-Module Memory）是一种由多个独立存储模块组成的存储系统，每个模块都可以独立访问，提高了数据访问的速度和带宽。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-多体并行存储器-1"><a href="#1-多体并行存储器-1" class="headerlink" title="1.多体并行存储器"></a>1.多体并行存储器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627164316722.png" alt="image-20240627164316722"></p>
<h3 id="2-单体多字存储器-1"><a href="#2-单体多字存储器-1" class="headerlink" title="2.单体多字存储器"></a>2.单体多字存储器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627164333016.png" alt="image-20240627164333016"></p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-存储模块-1"><a href="#1-存储模块-1" class="headerlink" title="1.存储模块"></a>1.存储模块</h3><p>构成多模块存储器的基本单元，每个模块都是一个独立的存储单元。</p>
<h3 id="2-控制器-1"><a href="#2-控制器-1" class="headerlink" title="2.控制器"></a>2.控制器</h3><p>用于管理多个模块之间的数据分配和同步。</p>
<h3 id="3-数据总线-1"><a href="#3-数据总线-1" class="headerlink" title="3.数据总线"></a>3.数据总线</h3><p>用于在模块之间传输数据。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>多模块存储器通常以多个存储芯片或模块的形式存在，它们可以通过并行或串行方式连接。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>高速度，高带宽，可扩展性，用于需要大量数据存储和高性能计算的应用。# 多模块存储器</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>多模块存储器（Multi-Module Memory）是一种由多个独立存储模块组成的存储系统，每个模块都可以独立访问，提高了数据访问的速度和带宽。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-多体并行存储器-2"><a href="#1-多体并行存储器-2" class="headerlink" title="1.多体并行存储器"></a>1.多体并行存储器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627164316722.png" alt="image-20240627164316722"></p>
<h3 id="2-单体多字存储器-2"><a href="#2-单体多字存储器-2" class="headerlink" title="2.单体多字存储器"></a>2.单体多字存储器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627164333016.png" alt="image-20240627164333016"></p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-存储模块-2"><a href="#1-存储模块-2" class="headerlink" title="1.存储模块"></a>1.存储模块</h3><p>构成多模块存储器的基本单元，每个模块都是一个独立的存储单元。</p>
<h3 id="2-控制器-2"><a href="#2-控制器-2" class="headerlink" title="2.控制器"></a>2.控制器</h3><p>用于管理多个模块之间的数据分配和同步。</p>
<h3 id="3-数据总线-2"><a href="#3-数据总线-2" class="headerlink" title="3.数据总线"></a>3.数据总线</h3><p>用于在模块之间传输数据。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>多模块存储器通常以多个存储芯片或模块的形式存在，它们可以通过并行或串行方式连接。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>高速度，高带宽，可扩展性，用于需要大量数据存储和高性能计算的应用。储器</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>多模块存储器（Multi-Module Memory）是一种由多个独立存储模块组成的存储系统，每个模块都可以独立访问，提高了数据访问的速度和带宽。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-多体并行存储器-3"><a href="#1-多体并行存储器-3" class="headerlink" title="1.多体并行存储器"></a>1.多体并行存储器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627164316722.png" alt="image-20240627164316722"></p>
<h3 id="2-单体多字存储器-3"><a href="#2-单体多字存储器-3" class="headerlink" title="2.单体多字存储器"></a>2.单体多字存储器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627164333016.png" alt="image-20240627164333016"></p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-存储模块-3"><a href="#1-存储模块-3" class="headerlink" title="1.存储模块"></a>1.存储模块</h3><p>构成多模块存储器的基本单元，每个模块都是一个独立的存储单元。</p>
<h3 id="2-控制器-3"><a href="#2-控制器-3" class="headerlink" title="2.控制器"></a>2.控制器</h3><p>用于管理多个模块之间的数据分配和同步。</p>
<h3 id="3-数据总线-3"><a href="#3-数据总线-3" class="headerlink" title="3.数据总线"></a>3.数据总线</h3><p>用于在模块之间传输数据。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>多模块存储器通常以多个存储芯片或模块的形式存在，它们可以通过并行或串行方式连接。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>高速度，高带宽，可扩展性，用于需要大量数据存储和高性能计算的应用。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>奇偶校验码</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%A5%87%E5%81%B6%E6%A0%A1%E9%AA%8C%E7%A0%81/</url>
    <content><![CDATA[<h1 id="奇偶校验码"><a href="#奇偶校验码" class="headerlink" title="奇偶校验码"></a>奇偶校验码</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>奇偶校验码（Parity Check Code）是一种简单的错误检测码，用于检测数据传输或存储过程中是否发生了错误。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.数据位：原始的数据位。</p>
<p>2.校验位：附加在数据位后面的一个位，用于实现奇偶校验。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>奇偶校验码通过在数据位后面添加一个校验位来实现。校验位可以是奇校验或偶校验，确保整个数据（包括校验位）中1的个数是奇数（奇校验）或偶数（偶校验）。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.奇校验：确保整个数据中1的个数是奇数。</p>
<p>2.偶校验：确保整个数据中1的个数是偶数。</p>
<h2 id="基本原理（硬件）"><a href="#基本原理（硬件）" class="headerlink" title="基本原理（硬件）"></a>基本原理（硬件）</h2><p>1.求偶校验位</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171402187.png" alt="image-20240625171402187"></p>
<p>2.进行偶校验</p>
<p> <img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171518565.png" alt="image-20240625171518565">验码</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>奇偶校验码（Parity Check Code）是一种简单的错误检测码，用于检测数据传输或存储过程中是否发生了错误。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.数据位：原始的数据位。</p>
<p>2.校验位：附加在数据位后面的一个位，用于实现奇偶校验。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>奇偶校验码通过在数据位后面添加一个校验位来实现。校验位可以是奇校验或偶校验，确保整个数据（包括校验位）中1的个数是奇数（奇校验）或偶数（偶校验）。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.奇校验：确保整个数据中1的个数是奇数。</p>
<p>2.偶校验：确保整个数据中1的个数是偶数。</p>
<h2 id="基本原理（硬件）-1"><a href="#基本原理（硬件）-1" class="headerlink" title="基本原理（硬件）"></a>基本原理（硬件）</h2><p>1.求偶校验位</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171402187.png" alt="image-20240625171402187"></p>
<p>2.进行偶校验</p>
<p> <img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171518565.png" alt="image-20240625171518565"># 奇偶校验码</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>奇偶校验码（Parity Check Code）是一种简单的错误检测码，用于检测数据传输或存储过程中是否发生了错误。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.数据位：原始的数据位。</p>
<p>2.校验位：附加在数据位后面的一个位，用于实现奇偶校验。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>奇偶校验码通过在数据位后面添加一个校验位来实现。校验位可以是奇校验或偶校验，确保整个数据（包括校验位）中1的个数是奇数（奇校验）或偶数（偶校验）。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.奇校验：确保整个数据中1的个数是奇数。</p>
<p>2.偶校验：确保整个数据中1的个数是偶数。</p>
<h2 id="基本原理（硬件）-2"><a href="#基本原理（硬件）-2" class="headerlink" title="基本原理（硬件）"></a>基本原理（硬件）</h2><p>1.求偶校验位</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171402187.png" alt="image-20240625171402187"></p>
<p>2.进行偶校验</p>
<p> <img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171518565.png" alt="image-20240625171518565">验码</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>奇偶校验码（Parity Check Code）是一种简单的错误检测码，用于检测数据传输或存储过程中是否发生了错误。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.数据位：原始的数据位。</p>
<p>2.校验位：附加在数据位后面的一个位，用于实现奇偶校验。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>奇偶校验码通过在数据位后面添加一个校验位来实现。校验位可以是奇校验或偶校验，确保整个数据（包括校验位）中1的个数是奇数（奇校验）或偶数（偶校验）。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.奇校验：确保整个数据中1的个数是奇数。</p>
<p>2.偶校验：确保整个数据中1的个数是偶数。</p>
<h2 id="基本原理（硬件）-3"><a href="#基本原理（硬件）-3" class="headerlink" title="基本原理（硬件）"></a>基本原理（硬件）</h2><p>1.求偶校验位</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171402187.png" alt="image-20240625171402187"></p>
<p>2.进行偶校验</p>
<p> <img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171518565.png" alt="image-20240625171518565"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>定点数</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%AE%9A%E7%82%B9%E6%95%B0/</url>
    <content><![CDATA[<h1 id="定点数"><a href="#定点数" class="headerlink" title="定点数"></a>定点数</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-定点整数"><a href="#1-定点整数" class="headerlink" title="1.定点整数"></a>1.定点整数</h3><h3 id="2-定点小数"><a href="#2-定点小数" class="headerlink" title="2.定点小数"></a>2.定点小数</h3><h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-定点整数-1"><a href="#1-定点整数-1" class="headerlink" title="1.定点整数"></a>1.定点整数</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170207443.png" alt="image-20240625170207443"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170218789.png" alt="image-20240625170218789"></p>
<h3 id="2-定点小数-1"><a href="#2-定点小数-1" class="headerlink" title="2.定点小数"></a>2.定点小数</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170229518.png" alt="image-20240625170229518"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170233574.png" alt="image-20240625170233574">点数</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-定点整数-2"><a href="#1-定点整数-2" class="headerlink" title="1.定点整数"></a>1.定点整数</h3><h3 id="2-定点小数-2"><a href="#2-定点小数-2" class="headerlink" title="2.定点小数"></a>2.定点小数</h3><h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-定点整数-3"><a href="#1-定点整数-3" class="headerlink" title="1.定点整数"></a>1.定点整数</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170207443.png" alt="image-20240625170207443"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170218789.png" alt="image-20240625170218789"></p>
<h3 id="2-定点小数-3"><a href="#2-定点小数-3" class="headerlink" title="2.定点小数"></a>2.定点小数</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170229518.png" alt="image-20240625170229518"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170233574.png" alt="image-20240625170233574"># 定点数</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-定点整数-4"><a href="#1-定点整数-4" class="headerlink" title="1.定点整数"></a>1.定点整数</h3><h3 id="2-定点小数-4"><a href="#2-定点小数-4" class="headerlink" title="2.定点小数"></a>2.定点小数</h3><h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-定点整数-5"><a href="#1-定点整数-5" class="headerlink" title="1.定点整数"></a>1.定点整数</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170207443.png" alt="image-20240625170207443"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170218789.png" alt="image-20240625170218789"></p>
<h3 id="2-定点小数-5"><a href="#2-定点小数-5" class="headerlink" title="2.定点小数"></a>2.定点小数</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170229518.png" alt="image-20240625170229518"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170233574.png" alt="image-20240625170233574">点数</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-定点整数-6"><a href="#1-定点整数-6" class="headerlink" title="1.定点整数"></a>1.定点整数</h3><h3 id="2-定点小数-6"><a href="#2-定点小数-6" class="headerlink" title="2.定点小数"></a>2.定点小数</h3><h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-定点整数-7"><a href="#1-定点整数-7" class="headerlink" title="1.定点整数"></a>1.定点整数</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170207443.png" alt="image-20240625170207443"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170218789.png" alt="image-20240625170218789"></p>
<h3 id="2-定点小数-7"><a href="#2-定点小数-7" class="headerlink" title="2.定点小数"></a>2.定点小数</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170229518.png" alt="image-20240625170229518"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170233574.png" alt="image-20240625170233574"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>定点小数</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%AE%9A%E7%82%B9%E5%B0%8F%E6%95%B0/</url>
    <content><![CDATA[<h1 id="定点小数"><a href="#定点小数" class="headerlink" title="定点小数"></a>定点小数</h1><h2 id="三码之间的转化"><a href="#三码之间的转化" class="headerlink" title="三码之间的转化"></a>三码之间的转化</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170359774.png" alt="image-20240625170359774"></p>
<h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170459778.png" alt="image-20240625170459778"></p>
<h3 id="1-小数补码的加法"><a href="#1-小数补码的加法" class="headerlink" title="1.小数补码的加法"></a>1.小数补码的加法</h3><p>从最低位开始，按位相加（符号位参与运算），并向更高位进位。</p>
<h3 id="2-小数补码的减法"><a href="#2-小数补码的减法" class="headerlink" title="2.小数补码的减法"></a>2.小数补码的减法</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171016336.png" alt="image-20240625171016336"></p>
<h2 id="定点小数和定点整数对比"><a href="#定点小数和定点整数对比" class="headerlink" title="定点小数和定点整数对比"></a>定点小数和定点整数对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170552921.png" alt="image-20240625170552921"></p>
<h2 id="定点小数和定点整数位的扩展"><a href="#定点小数和定点整数位的扩展" class="headerlink" title="定点小数和定点整数位的扩展"></a>定点小数和定点整数位的扩展</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170809582.png" alt="image-20240625170809582"></p>
<p>1.定点小数，扩展到最后面</p>
<p>2.定点整数，扩展到前面</p>
<p>小数</p>
<h2 id="三码之间的转化-1"><a href="#三码之间的转化-1" class="headerlink" title="三码之间的转化"></a>三码之间的转化</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170359774.png" alt="image-20240625170359774"></p>
<h2 id="运算-1"><a href="#运算-1" class="headerlink" title="运算"></a>运算</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170459778.png" alt="image-20240625170459778"></p>
<h3 id="1-小数补码的加法-1"><a href="#1-小数补码的加法-1" class="headerlink" title="1.小数补码的加法"></a>1.小数补码的加法</h3><p>从最低位开始，按位相加（符号位参与运算），并向更高位进位。</p>
<h3 id="2-小数补码的减法-1"><a href="#2-小数补码的减法-1" class="headerlink" title="2.小数补码的减法"></a>2.小数补码的减法</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171016336.png" alt="image-20240625171016336"></p>
<h2 id="定点小数和定点整数对比-1"><a href="#定点小数和定点整数对比-1" class="headerlink" title="定点小数和定点整数对比"></a>定点小数和定点整数对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170552921.png" alt="image-20240625170552921"></p>
<h2 id="定点小数和定点整数位的扩展-1"><a href="#定点小数和定点整数位的扩展-1" class="headerlink" title="定点小数和定点整数位的扩展"></a>定点小数和定点整数位的扩展</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170809582.png" alt="image-20240625170809582"></p>
<p>1.定点小数，扩展到最后面</p>
<p>2.定点整数，扩展到前面# 定点小数</p>
<h2 id="三码之间的转化-2"><a href="#三码之间的转化-2" class="headerlink" title="三码之间的转化"></a>三码之间的转化</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170359774.png" alt="image-20240625170359774"></p>
<h2 id="运算-2"><a href="#运算-2" class="headerlink" title="运算"></a>运算</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170459778.png" alt="image-20240625170459778"></p>
<h3 id="1-小数补码的加法-2"><a href="#1-小数补码的加法-2" class="headerlink" title="1.小数补码的加法"></a>1.小数补码的加法</h3><p>从最低位开始，按位相加（符号位参与运算），并向更高位进位。</p>
<h3 id="2-小数补码的减法-2"><a href="#2-小数补码的减法-2" class="headerlink" title="2.小数补码的减法"></a>2.小数补码的减法</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171016336.png" alt="image-20240625171016336"></p>
<h2 id="定点小数和定点整数对比-2"><a href="#定点小数和定点整数对比-2" class="headerlink" title="定点小数和定点整数对比"></a>定点小数和定点整数对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170552921.png" alt="image-20240625170552921"></p>
<h2 id="定点小数和定点整数位的扩展-2"><a href="#定点小数和定点整数位的扩展-2" class="headerlink" title="定点小数和定点整数位的扩展"></a>定点小数和定点整数位的扩展</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170809582.png" alt="image-20240625170809582"></p>
<p>1.定点小数，扩展到最后面</p>
<p>2.定点整数，扩展到前面</p>
<p>小数</p>
<h2 id="三码之间的转化-3"><a href="#三码之间的转化-3" class="headerlink" title="三码之间的转化"></a>三码之间的转化</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170359774.png" alt="image-20240625170359774"></p>
<h2 id="运算-3"><a href="#运算-3" class="headerlink" title="运算"></a>运算</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170459778.png" alt="image-20240625170459778"></p>
<h3 id="1-小数补码的加法-3"><a href="#1-小数补码的加法-3" class="headerlink" title="1.小数补码的加法"></a>1.小数补码的加法</h3><p>从最低位开始，按位相加（符号位参与运算），并向更高位进位。</p>
<h3 id="2-小数补码的减法-3"><a href="#2-小数补码的减法-3" class="headerlink" title="2.小数补码的减法"></a>2.小数补码的减法</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625171016336.png" alt="image-20240625171016336"></p>
<h2 id="定点小数和定点整数对比-3"><a href="#定点小数和定点整数对比-3" class="headerlink" title="定点小数和定点整数对比"></a>定点小数和定点整数对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170552921.png" alt="image-20240625170552921"></p>
<h2 id="定点小数和定点整数位的扩展-3"><a href="#定点小数和定点整数位的扩展-3" class="headerlink" title="定点小数和定点整数位的扩展"></a>定点小数和定点整数位的扩展</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170809582.png" alt="image-20240625170809582"></p>
<p>1.定点小数，扩展到最后面</p>
<p>2.定点整数，扩展到前面</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>带符号整数的表示和运算</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%B8%A6%E7%AC%A6%E5%8F%B7%E6%95%B4%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="带符号整数的表示和运算"><a href="#带符号整数的表示和运算" class="headerlink" title="带符号整数的表示和运算"></a>带符号整数的表示和运算</h1><h2 id="表示"><a href="#表示" class="headerlink" title="表示"></a>表示</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="1-原码"><a href="#1-原码" class="headerlink" title="1.原码"></a>1.原码</h4><h4 id="2-反码"><a href="#2-反码" class="headerlink" title="2.反码"></a>2.反码</h4><h4 id="3-补码"><a href="#3-补码" class="headerlink" title="3.补码"></a>3.补码</h4><p>PS：补码的数值位不可以解读为“位权”，如果想知道真值，需要先转换为原码。</p>
<h3 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h3><h4 id="1-原码-1"><a href="#1-原码-1" class="headerlink" title="1.原码"></a>1.原码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164002732.png" alt="image-20240625164002732"></p>
<p>缺点：</p>
<p>符号位不能参与运算，需要额外设计复杂的硬件电路，这样子的话，成本较高。</p>
<h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><h3 id="1-补码加法"><a href="#1-补码加法" class="headerlink" title="1.补码加法"></a>1.补码加法</h3><p>从最低位开始，<strong>按位相加</strong>（符号位参与运算），并向更高位进位。</p>
<h3 id="2-补码减法"><a href="#2-补码减法" class="headerlink" title="2.补码减法"></a>2.补码减法</h3><p>①转换成加法</p>
<p>将要减的数B的补码，转换成-B的补码。</p>
<p>具体操作：</p>
<p><strong>全部位按位取反，末位+1</strong></p>
<p>②进行加法操作</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-带符号数的原码、反码、补码之间的转化"><a href="#1-带符号数的原码、反码、补码之间的转化" class="headerlink" title="1.带符号数的原码、反码、补码之间的转化"></a>1.带符号数的原码、反码、补码之间的转化</h3><h4 id="①正数"><a href="#①正数" class="headerlink" title="①正数"></a>①正数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164305557.png" alt="image-20240625164305557"></p>
<h4 id="②负数"><a href="#②负数" class="headerlink" title="②负数"></a>②负数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164327603.png" alt="image-20240625164327603"></p>
<h3 id="2-原码、补码之间的快速转换技巧（人类）"><a href="#2-原码、补码之间的快速转换技巧（人类）" class="headerlink" title="2.原码、补码之间的快速转换技巧（人类）"></a>2.原码、补码之间的快速转换技巧（人类）</h3><h4 id="①正数-1"><a href="#①正数-1" class="headerlink" title="①正数"></a>①正数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164436988.png" alt="image-20240625164436988"></p>
<h4 id="②负数-1"><a href="#②负数-1" class="headerlink" title="②负数"></a>②负数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164449045.png" alt="image-20240625164449045"></p>
<p>运算</p>
<h2 id="表示-1"><a href="#表示-1" class="headerlink" title="表示"></a>表示</h2><h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><h4 id="1-原码-2"><a href="#1-原码-2" class="headerlink" title="1.原码"></a>1.原码</h4><h4 id="2-反码-1"><a href="#2-反码-1" class="headerlink" title="2.反码"></a>2.反码</h4><h4 id="3-补码-1"><a href="#3-补码-1" class="headerlink" title="3.补码"></a>3.补码</h4><p>PS：补码的数值位不可以解读为“位权”，如果想知道真值，需要先转换为原码。</p>
<h3 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h3><h4 id="1-原码-3"><a href="#1-原码-3" class="headerlink" title="1.原码"></a>1.原码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164002732.png" alt="image-20240625164002732"></p>
<p>缺点：</p>
<p>符号位不能参与运算，需要额外设计复杂的硬件电路，这样子的话，成本较高。</p>
<h2 id="运算-1"><a href="#运算-1" class="headerlink" title="运算"></a>运算</h2><h3 id="1-补码加法-1"><a href="#1-补码加法-1" class="headerlink" title="1.补码加法"></a>1.补码加法</h3><p>从最低位开始，<strong>按位相加</strong>（符号位参与运算），并向更高位进位。</p>
<h3 id="2-补码减法-1"><a href="#2-补码减法-1" class="headerlink" title="2.补码减法"></a>2.补码减法</h3><p>①转换成加法</p>
<p>将要减的数B的补码，转换成-B的补码。</p>
<p>具体操作：</p>
<p><strong>全部位按位取反，末位+1</strong></p>
<p>②进行加法操作</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-带符号数的原码、反码、补码之间的转化-1"><a href="#1-带符号数的原码、反码、补码之间的转化-1" class="headerlink" title="1.带符号数的原码、反码、补码之间的转化"></a>1.带符号数的原码、反码、补码之间的转化</h3><h4 id="①正数-2"><a href="#①正数-2" class="headerlink" title="①正数"></a>①正数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164305557.png" alt="image-20240625164305557"></p>
<h4 id="②负数-2"><a href="#②负数-2" class="headerlink" title="②负数"></a>②负数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164327603.png" alt="image-20240625164327603"></p>
<h3 id="2-原码、补码之间的快速转换技巧（人类）-1"><a href="#2-原码、补码之间的快速转换技巧（人类）-1" class="headerlink" title="2.原码、补码之间的快速转换技巧（人类）"></a>2.原码、补码之间的快速转换技巧（人类）</h3><h4 id="①正数-3"><a href="#①正数-3" class="headerlink" title="①正数"></a>①正数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164436988.png" alt="image-20240625164436988"></p>
<h4 id="②负数-3"><a href="#②负数-3" class="headerlink" title="②负数"></a>②负数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164449045.png" alt="image-20240625164449045"># 带符号整数的表示和运算</p>
<h2 id="表示-2"><a href="#表示-2" class="headerlink" title="表示"></a>表示</h2><h3 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h3><h4 id="1-原码-4"><a href="#1-原码-4" class="headerlink" title="1.原码"></a>1.原码</h4><h4 id="2-反码-2"><a href="#2-反码-2" class="headerlink" title="2.反码"></a>2.反码</h4><h4 id="3-补码-2"><a href="#3-补码-2" class="headerlink" title="3.补码"></a>3.补码</h4><p>PS：补码的数值位不可以解读为“位权”，如果想知道真值，需要先转换为原码。</p>
<h3 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h3><h4 id="1-原码-5"><a href="#1-原码-5" class="headerlink" title="1.原码"></a>1.原码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164002732.png" alt="image-20240625164002732"></p>
<p>缺点：</p>
<p>符号位不能参与运算，需要额外设计复杂的硬件电路，这样子的话，成本较高。</p>
<h2 id="运算-2"><a href="#运算-2" class="headerlink" title="运算"></a>运算</h2><h3 id="1-补码加法-2"><a href="#1-补码加法-2" class="headerlink" title="1.补码加法"></a>1.补码加法</h3><p>从最低位开始，<strong>按位相加</strong>（符号位参与运算），并向更高位进位。</p>
<h3 id="2-补码减法-2"><a href="#2-补码减法-2" class="headerlink" title="2.补码减法"></a>2.补码减法</h3><p>①转换成加法</p>
<p>将要减的数B的补码，转换成-B的补码。</p>
<p>具体操作：</p>
<p><strong>全部位按位取反，末位+1</strong></p>
<p>②进行加法操作</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-带符号数的原码、反码、补码之间的转化-2"><a href="#1-带符号数的原码、反码、补码之间的转化-2" class="headerlink" title="1.带符号数的原码、反码、补码之间的转化"></a>1.带符号数的原码、反码、补码之间的转化</h3><h4 id="①正数-4"><a href="#①正数-4" class="headerlink" title="①正数"></a>①正数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164305557.png" alt="image-20240625164305557"></p>
<h4 id="②负数-4"><a href="#②负数-4" class="headerlink" title="②负数"></a>②负数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164327603.png" alt="image-20240625164327603"></p>
<h3 id="2-原码、补码之间的快速转换技巧（人类）-2"><a href="#2-原码、补码之间的快速转换技巧（人类）-2" class="headerlink" title="2.原码、补码之间的快速转换技巧（人类）"></a>2.原码、补码之间的快速转换技巧（人类）</h3><h4 id="①正数-5"><a href="#①正数-5" class="headerlink" title="①正数"></a>①正数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164436988.png" alt="image-20240625164436988"></p>
<h4 id="②负数-5"><a href="#②负数-5" class="headerlink" title="②负数"></a>②负数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164449045.png" alt="image-20240625164449045"></p>
<p>运算</p>
<h2 id="表示-3"><a href="#表示-3" class="headerlink" title="表示"></a>表示</h2><h3 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h3><h4 id="1-原码-6"><a href="#1-原码-6" class="headerlink" title="1.原码"></a>1.原码</h4><h4 id="2-反码-3"><a href="#2-反码-3" class="headerlink" title="2.反码"></a>2.反码</h4><h4 id="3-补码-3"><a href="#3-补码-3" class="headerlink" title="3.补码"></a>3.补码</h4><p>PS：补码的数值位不可以解读为“位权”，如果想知道真值，需要先转换为原码。</p>
<h3 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h3><h4 id="1-原码-7"><a href="#1-原码-7" class="headerlink" title="1.原码"></a>1.原码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164002732.png" alt="image-20240625164002732"></p>
<p>缺点：</p>
<p>符号位不能参与运算，需要额外设计复杂的硬件电路，这样子的话，成本较高。</p>
<h2 id="运算-3"><a href="#运算-3" class="headerlink" title="运算"></a>运算</h2><h3 id="1-补码加法-3"><a href="#1-补码加法-3" class="headerlink" title="1.补码加法"></a>1.补码加法</h3><p>从最低位开始，<strong>按位相加</strong>（符号位参与运算），并向更高位进位。</p>
<h3 id="2-补码减法-3"><a href="#2-补码减法-3" class="headerlink" title="2.补码减法"></a>2.补码减法</h3><p>①转换成加法</p>
<p>将要减的数B的补码，转换成-B的补码。</p>
<p>具体操作：</p>
<p><strong>全部位按位取反，末位+1</strong></p>
<p>②进行加法操作</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-带符号数的原码、反码、补码之间的转化-3"><a href="#1-带符号数的原码、反码、补码之间的转化-3" class="headerlink" title="1.带符号数的原码、反码、补码之间的转化"></a>1.带符号数的原码、反码、补码之间的转化</h3><h4 id="①正数-6"><a href="#①正数-6" class="headerlink" title="①正数"></a>①正数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164305557.png" alt="image-20240625164305557"></p>
<h4 id="②负数-6"><a href="#②负数-6" class="headerlink" title="②负数"></a>②负数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164327603.png" alt="image-20240625164327603"></p>
<h3 id="2-原码、补码之间的快速转换技巧（人类）-3"><a href="#2-原码、补码之间的快速转换技巧（人类）-3" class="headerlink" title="2.原码、补码之间的快速转换技巧（人类）"></a>2.原码、补码之间的快速转换技巧（人类）</h3><h4 id="①正数-7"><a href="#①正数-7" class="headerlink" title="①正数"></a>①正数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164436988.png" alt="image-20240625164436988"></p>
<h4 id="②负数-7"><a href="#②负数-7" class="headerlink" title="②负数"></a>②负数</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625164449045.png" alt="image-20240625164449045"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>常用的x86汇编指令</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%B8%B8%E7%94%A8%E7%9A%84x86%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="常用的x86汇编指令"><a href="#常用的x86汇编指令" class="headerlink" title="常用的x86汇编指令"></a>常用的x86汇编指令</h1><h2 id="算术运算指令"><a href="#算术运算指令" class="headerlink" title="算术运算指令"></a>算术运算指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135448818.png" alt="image-20240629135448818"></p>
<h2 id="逻辑运算指令"><a href="#逻辑运算指令" class="headerlink" title="逻辑运算指令"></a>逻辑运算指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135514093.png" alt="image-20240629135514093"></p>
<h2 id="其他指令"><a href="#其他指令" class="headerlink" title="其他指令"></a>其他指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135535167.png" alt="image-20240629135535167">指令</p>
<h2 id="算术运算指令-1"><a href="#算术运算指令-1" class="headerlink" title="算术运算指令"></a>算术运算指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135448818.png" alt="image-20240629135448818"></p>
<h2 id="逻辑运算指令-1"><a href="#逻辑运算指令-1" class="headerlink" title="逻辑运算指令"></a>逻辑运算指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135514093.png" alt="image-20240629135514093"></p>
<h2 id="其他指令-1"><a href="#其他指令-1" class="headerlink" title="其他指令"></a>其他指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135535167.png" alt="image-20240629135535167"># 常用的x86汇编指令</p>
<h2 id="算术运算指令-2"><a href="#算术运算指令-2" class="headerlink" title="算术运算指令"></a>算术运算指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135448818.png" alt="image-20240629135448818"></p>
<h2 id="逻辑运算指令-2"><a href="#逻辑运算指令-2" class="headerlink" title="逻辑运算指令"></a>逻辑运算指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135514093.png" alt="image-20240629135514093"></p>
<h2 id="其他指令-2"><a href="#其他指令-2" class="headerlink" title="其他指令"></a>其他指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135535167.png" alt="image-20240629135535167">指令</p>
<h2 id="算术运算指令-3"><a href="#算术运算指令-3" class="headerlink" title="算术运算指令"></a>算术运算指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135448818.png" alt="image-20240629135448818"></p>
<h2 id="逻辑运算指令-3"><a href="#逻辑运算指令-3" class="headerlink" title="逻辑运算指令"></a>逻辑运算指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135514093.png" alt="image-20240629135514093"></p>
<h2 id="其他指令-3"><a href="#其他指令-3" class="headerlink" title="其他指令"></a>其他指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135535167.png" alt="image-20240629135535167"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>循环语句的机器级表示</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%9C%BA%E5%99%A8%E7%BA%A7%E8%A1%A8%E7%A4%BA/</url>
    <content><![CDATA[<h1 id="循环语句的机器级表示"><a href="#循环语句的机器级表示" class="headerlink" title="循环语句的机器级表示"></a>循环语句的机器级表示</h1><h2 id="1-条件转移指令实现"><a href="#1-条件转移指令实现" class="headerlink" title="1.条件转移指令实现"></a>1.条件转移指令实现</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140127818.png" alt="image-20240629140127818"></p>
<h2 id="2-loop指令实现"><a href="#2-loop指令实现" class="headerlink" title="2.loop指令实现"></a>2.loop指令实现</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140238982.png" alt="image-20240629140238982"></p>
<p>表示</p>
<h2 id="1-条件转移指令实现-1"><a href="#1-条件转移指令实现-1" class="headerlink" title="1.条件转移指令实现"></a>1.条件转移指令实现</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140127818.png" alt="image-20240629140127818"></p>
<h2 id="2-loop指令实现-1"><a href="#2-loop指令实现-1" class="headerlink" title="2.loop指令实现"></a>2.loop指令实现</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140238982.png" alt="image-20240629140238982"># 循环语句的机器级表示</p>
<h2 id="1-条件转移指令实现-2"><a href="#1-条件转移指令实现-2" class="headerlink" title="1.条件转移指令实现"></a>1.条件转移指令实现</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140127818.png" alt="image-20240629140127818"></p>
<h2 id="2-loop指令实现-2"><a href="#2-loop指令实现-2" class="headerlink" title="2.loop指令实现"></a>2.loop指令实现</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140238982.png" alt="image-20240629140238982"></p>
<p>表示</p>
<h2 id="1-条件转移指令实现-3"><a href="#1-条件转移指令实现-3" class="headerlink" title="1.条件转移指令实现"></a>1.条件转移指令实现</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140127818.png" alt="image-20240629140127818"></p>
<h2 id="2-loop指令实现-3"><a href="#2-loop指令实现-3" class="headerlink" title="2.loop指令实现"></a>2.loop指令实现</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140238982.png" alt="image-20240629140238982"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>微指令的设计</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%BE%AE%E6%8C%87%E4%BB%A4%E7%9A%84%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="微指令的设计"><a href="#微指令的设计" class="headerlink" title="微指令的设计"></a>微指令的设计</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>微指令是一组控制信号序列，用于在微程序控制器中控制和执行单个基本操作，例如寄存器读写、算术逻辑操作、内存访问等。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222128667.png" alt="image-20240629222128667"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-水平型微指令"><a href="#1-水平型微指令" class="headerlink" title="1.水平型微指令"></a>1.水平型微指令</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222328785.png" alt="image-20240629222328785"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222240231.png" alt="image-20240629222240231"></p>
<h3 id="2-垂直型微指令"><a href="#2-垂直型微指令" class="headerlink" title="2.垂直型微指令"></a>2.垂直型微指令</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222338046.png" alt="image-20240629222338046"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222249163.png" alt="image-20240629222249163"></p>
<h3 id="3-混合型微指令"><a href="#3-混合型微指令" class="headerlink" title="3.混合型微指令"></a>3.混合型微指令</h3><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="编码方式"><a href="#编码方式" class="headerlink" title="编码方式"></a>编码方式</h3><h4 id="1-直接编码"><a href="#1-直接编码" class="headerlink" title="1.直接编码"></a>1.直接编码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222445194.png" alt="image-20240629222445194"></p>
<h4 id="2-字段直接编码"><a href="#2-字段直接编码" class="headerlink" title="2.字段直接编码"></a>2.字段直接编码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222519235.png" alt="image-20240629222519235"></p>
<h4 id="3-字段间接编码"><a href="#3-字段间接编码" class="headerlink" title="3.字段间接编码"></a>3.字段间接编码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222604160.png" alt="image-20240629222604160"></p>
<h3 id="地址形成方式"><a href="#地址形成方式" class="headerlink" title="地址形成方式"></a>地址形成方式</h3><h4 id=""><a href="#" class="headerlink" title=""></a><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222756325.png" alt="image-20240629222756325"></h4><p>设计</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>微指令是一组控制信号序列，用于在微程序控制器中控制和执行单个基本操作，例如寄存器读写、算术逻辑操作、内存访问等。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222128667.png" alt="image-20240629222128667"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-水平型微指令-1"><a href="#1-水平型微指令-1" class="headerlink" title="1.水平型微指令"></a>1.水平型微指令</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222328785.png" alt="image-20240629222328785"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222240231.png" alt="image-20240629222240231"></p>
<h3 id="2-垂直型微指令-1"><a href="#2-垂直型微指令-1" class="headerlink" title="2.垂直型微指令"></a>2.垂直型微指令</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222338046.png" alt="image-20240629222338046"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222249163.png" alt="image-20240629222249163"></p>
<h3 id="3-混合型微指令-1"><a href="#3-混合型微指令-1" class="headerlink" title="3.混合型微指令"></a>3.混合型微指令</h3><h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="编码方式-1"><a href="#编码方式-1" class="headerlink" title="编码方式"></a>编码方式</h3><h4 id="1-直接编码-1"><a href="#1-直接编码-1" class="headerlink" title="1.直接编码"></a>1.直接编码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222445194.png" alt="image-20240629222445194"></p>
<h4 id="2-字段直接编码-1"><a href="#2-字段直接编码-1" class="headerlink" title="2.字段直接编码"></a>2.字段直接编码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222519235.png" alt="image-20240629222519235"></p>
<h4 id="3-字段间接编码-1"><a href="#3-字段间接编码-1" class="headerlink" title="3.字段间接编码"></a>3.字段间接编码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222604160.png" alt="image-20240629222604160"></p>
<h3 id="地址形成方式-1"><a href="#地址形成方式-1" class="headerlink" title="地址形成方式"></a>地址形成方式</h3><h4 id="微指令的设计-1"><a href="#微指令的设计-1" class="headerlink" title="# 微指令的设计"></a><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222756325.png" alt="image-20240629222756325"># 微指令的设计</h4><h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>微指令是一组控制信号序列，用于在微程序控制器中控制和执行单个基本操作，例如寄存器读写、算术逻辑操作、内存访问等。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222128667.png" alt="image-20240629222128667"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-水平型微指令-2"><a href="#1-水平型微指令-2" class="headerlink" title="1.水平型微指令"></a>1.水平型微指令</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222328785.png" alt="image-20240629222328785"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222240231.png" alt="image-20240629222240231"></p>
<h3 id="2-垂直型微指令-2"><a href="#2-垂直型微指令-2" class="headerlink" title="2.垂直型微指令"></a>2.垂直型微指令</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222338046.png" alt="image-20240629222338046"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222249163.png" alt="image-20240629222249163"></p>
<h3 id="3-混合型微指令-2"><a href="#3-混合型微指令-2" class="headerlink" title="3.混合型微指令"></a>3.混合型微指令</h3><h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="编码方式-2"><a href="#编码方式-2" class="headerlink" title="编码方式"></a>编码方式</h3><h4 id="1-直接编码-2"><a href="#1-直接编码-2" class="headerlink" title="1.直接编码"></a>1.直接编码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222445194.png" alt="image-20240629222445194"></p>
<h4 id="2-字段直接编码-2"><a href="#2-字段直接编码-2" class="headerlink" title="2.字段直接编码"></a>2.字段直接编码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222519235.png" alt="image-20240629222519235"></p>
<h4 id="3-字段间接编码-2"><a href="#3-字段间接编码-2" class="headerlink" title="3.字段间接编码"></a>3.字段间接编码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222604160.png" alt="image-20240629222604160"></p>
<h3 id="地址形成方式-2"><a href="#地址形成方式-2" class="headerlink" title="地址形成方式"></a>地址形成方式</h3><h4 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222756325.png" alt="image-20240629222756325"></h4><p>设计</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>微指令是一组控制信号序列，用于在微程序控制器中控制和执行单个基本操作，例如寄存器读写、算术逻辑操作、内存访问等。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222128667.png" alt="image-20240629222128667"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-水平型微指令-3"><a href="#1-水平型微指令-3" class="headerlink" title="1.水平型微指令"></a>1.水平型微指令</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222328785.png" alt="image-20240629222328785"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222240231.png" alt="image-20240629222240231"></p>
<h3 id="2-垂直型微指令-3"><a href="#2-垂直型微指令-3" class="headerlink" title="2.垂直型微指令"></a>2.垂直型微指令</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222338046.png" alt="image-20240629222338046"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222249163.png" alt="image-20240629222249163"></p>
<h3 id="3-混合型微指令-3"><a href="#3-混合型微指令-3" class="headerlink" title="3.混合型微指令"></a>3.混合型微指令</h3><h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="编码方式-3"><a href="#编码方式-3" class="headerlink" title="编码方式"></a>编码方式</h3><h4 id="1-直接编码-3"><a href="#1-直接编码-3" class="headerlink" title="1.直接编码"></a>1.直接编码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222445194.png" alt="image-20240629222445194"></p>
<h4 id="2-字段直接编码-3"><a href="#2-字段直接编码-3" class="headerlink" title="2.字段直接编码"></a>2.字段直接编码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222519235.png" alt="image-20240629222519235"></p>
<h4 id="3-字段间接编码-3"><a href="#3-字段间接编码-3" class="headerlink" title="3.字段间接编码"></a>3.字段间接编码</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222604160.png" alt="image-20240629222604160"></p>
<h3 id="地址形成方式-3"><a href="#地址形成方式-3" class="headerlink" title="地址形成方式"></a>地址形成方式</h3><h4 id="-2"><a href="#-2" class="headerlink" title=""></a><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222756325.png" alt="image-20240629222756325"></h4>]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>微程序控制单元的设计</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%BE%AE%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B6%E5%8D%95%E5%85%83%E7%9A%84%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="微程序控制单元的设计"><a href="#微程序控制单元的设计" class="headerlink" title="微程序控制单元的设计"></a>微程序控制单元的设计</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态和动态"><a href="#1-静态和动态" class="headerlink" title="1.静态和动态"></a>1.静态和动态</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223056695.png" alt="image-20240629223056695"></p>
<h3 id="2-毫微程序设计"><a href="#2-毫微程序设计" class="headerlink" title="2.毫微程序设计"></a>2.毫微程序设计</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223103945.png" alt="image-20240629223103945"></p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223001796.png" alt="image-20240629223001796"></p>
<h2 id="微程序控制器和硬部件控制器的对比"><a href="#微程序控制器和硬部件控制器的对比" class="headerlink" title="微程序控制器和硬部件控制器的对比"></a>微程序控制器和硬部件控制器的对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223141066.png" alt="image-20240629223141066">设计</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态和动态-1"><a href="#1-静态和动态-1" class="headerlink" title="1.静态和动态"></a>1.静态和动态</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223056695.png" alt="image-20240629223056695"></p>
<h3 id="2-毫微程序设计-1"><a href="#2-毫微程序设计-1" class="headerlink" title="2.毫微程序设计"></a>2.毫微程序设计</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223103945.png" alt="image-20240629223103945"></p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223001796.png" alt="image-20240629223001796"></p>
<h2 id="微程序控制器和硬部件控制器的对比-1"><a href="#微程序控制器和硬部件控制器的对比-1" class="headerlink" title="微程序控制器和硬部件控制器的对比"></a>微程序控制器和硬部件控制器的对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223141066.png" alt="image-20240629223141066"># 微程序控制单元的设计</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态和动态-2"><a href="#1-静态和动态-2" class="headerlink" title="1.静态和动态"></a>1.静态和动态</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223056695.png" alt="image-20240629223056695"></p>
<h3 id="2-毫微程序设计-2"><a href="#2-毫微程序设计-2" class="headerlink" title="2.毫微程序设计"></a>2.毫微程序设计</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223103945.png" alt="image-20240629223103945"></p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223001796.png" alt="image-20240629223001796"></p>
<h2 id="微程序控制器和硬部件控制器的对比-2"><a href="#微程序控制器和硬部件控制器的对比-2" class="headerlink" title="微程序控制器和硬部件控制器的对比"></a>微程序控制器和硬部件控制器的对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223141066.png" alt="image-20240629223141066">设计</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态和动态-3"><a href="#1-静态和动态-3" class="headerlink" title="1.静态和动态"></a>1.静态和动态</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223056695.png" alt="image-20240629223056695"></p>
<h3 id="2-毫微程序设计-3"><a href="#2-毫微程序设计-3" class="headerlink" title="2.毫微程序设计"></a>2.毫微程序设计</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223103945.png" alt="image-20240629223103945"></p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223001796.png" alt="image-20240629223001796"></p>
<h2 id="微程序控制器和硬部件控制器的对比-3"><a href="#微程序控制器和硬部件控制器的对比-3" class="headerlink" title="微程序控制器和硬部件控制器的对比"></a>微程序控制器和硬部件控制器的对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223141066.png" alt="image-20240629223141066"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>微程序控制器的基本原理</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%BE%AE%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B6%E5%99%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="微程序控制器"><a href="#微程序控制器" class="headerlink" title="微程序控制器"></a>微程序控制器</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>微程序控制器是一种控制器设计方法，通过微程序存储器中预先编码的微指令序列来控制计算机的指令执行流程。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-微指令存储器（微存储器）"><a href="#1-微指令存储器（微存储器）" class="headerlink" title="1.微指令存储器（微存储器）"></a>1.微指令存储器（微存储器）</h3><p>存储微程序的存储器，每个微指令对应一个控制信号。</p>
<h3 id="2-微指令"><a href="#2-微指令" class="headerlink" title="2.微指令"></a>2.微指令</h3><p>微程序中的每个微指令都包含一组控制信号，用于控制具体的操作，如寄存器读写、算术逻辑运算、内存访问等。</p>
<h3 id="3-控制逻辑"><a href="#3-控制逻辑" class="headerlink" title="3.控制逻辑"></a>3.控制逻辑</h3><p>解码和执行微指令序列的逻辑电路，包括状态机和控制信号生成电路。</p>
<h3 id="4-主控制器"><a href="#4-主控制器" class="headerlink" title="4.主控制器"></a>4.主控制器</h3><p>负责从微程序存储器中读取并解析微指令，控制整个计算机系统的操作。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221913682.png" alt="image-20240629221913682"></p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221830445.png" alt="image-20240629221830445"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221951508.png" alt="image-20240629221951508"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222004951.png" alt="image-20240629222004951">制器</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>微程序控制器是一种控制器设计方法，通过微程序存储器中预先编码的微指令序列来控制计算机的指令执行流程。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-微指令存储器（微存储器）-1"><a href="#1-微指令存储器（微存储器）-1" class="headerlink" title="1.微指令存储器（微存储器）"></a>1.微指令存储器（微存储器）</h3><p>存储微程序的存储器，每个微指令对应一个控制信号。</p>
<h3 id="2-微指令-1"><a href="#2-微指令-1" class="headerlink" title="2.微指令"></a>2.微指令</h3><p>微程序中的每个微指令都包含一组控制信号，用于控制具体的操作，如寄存器读写、算术逻辑运算、内存访问等。</p>
<h3 id="3-控制逻辑-1"><a href="#3-控制逻辑-1" class="headerlink" title="3.控制逻辑"></a>3.控制逻辑</h3><p>解码和执行微指令序列的逻辑电路，包括状态机和控制信号生成电路。</p>
<h3 id="4-主控制器-1"><a href="#4-主控制器-1" class="headerlink" title="4.主控制器"></a>4.主控制器</h3><p>负责从微程序存储器中读取并解析微指令，控制整个计算机系统的操作。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221913682.png" alt="image-20240629221913682"></p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221830445.png" alt="image-20240629221830445"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221951508.png" alt="image-20240629221951508"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222004951.png" alt="image-20240629222004951"># 微程序控制器</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>微程序控制器是一种控制器设计方法，通过微程序存储器中预先编码的微指令序列来控制计算机的指令执行流程。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-微指令存储器（微存储器）-2"><a href="#1-微指令存储器（微存储器）-2" class="headerlink" title="1.微指令存储器（微存储器）"></a>1.微指令存储器（微存储器）</h3><p>存储微程序的存储器，每个微指令对应一个控制信号。</p>
<h3 id="2-微指令-2"><a href="#2-微指令-2" class="headerlink" title="2.微指令"></a>2.微指令</h3><p>微程序中的每个微指令都包含一组控制信号，用于控制具体的操作，如寄存器读写、算术逻辑运算、内存访问等。</p>
<h3 id="3-控制逻辑-2"><a href="#3-控制逻辑-2" class="headerlink" title="3.控制逻辑"></a>3.控制逻辑</h3><p>解码和执行微指令序列的逻辑电路，包括状态机和控制信号生成电路。</p>
<h3 id="4-主控制器-2"><a href="#4-主控制器-2" class="headerlink" title="4.主控制器"></a>4.主控制器</h3><p>负责从微程序存储器中读取并解析微指令，控制整个计算机系统的操作。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221913682.png" alt="image-20240629221913682"></p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221830445.png" alt="image-20240629221830445"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221951508.png" alt="image-20240629221951508"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222004951.png" alt="image-20240629222004951">制器</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>微程序控制器是一种控制器设计方法，通过微程序存储器中预先编码的微指令序列来控制计算机的指令执行流程。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-微指令存储器（微存储器）-3"><a href="#1-微指令存储器（微存储器）-3" class="headerlink" title="1.微指令存储器（微存储器）"></a>1.微指令存储器（微存储器）</h3><p>存储微程序的存储器，每个微指令对应一个控制信号。</p>
<h3 id="2-微指令-3"><a href="#2-微指令-3" class="headerlink" title="2.微指令"></a>2.微指令</h3><p>微程序中的每个微指令都包含一组控制信号，用于控制具体的操作，如寄存器读写、算术逻辑运算、内存访问等。</p>
<h3 id="3-控制逻辑-3"><a href="#3-控制逻辑-3" class="headerlink" title="3.控制逻辑"></a>3.控制逻辑</h3><p>解码和执行微指令序列的逻辑电路，包括状态机和控制信号生成电路。</p>
<h3 id="4-主控制器-3"><a href="#4-主控制器-3" class="headerlink" title="4.主控制器"></a>4.主控制器</h3><p>负责从微程序存储器中读取并解析微指令，控制整个计算机系统的操作。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221913682.png" alt="image-20240629221913682"></p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221830445.png" alt="image-20240629221830445"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221951508.png" alt="image-20240629221951508"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629222004951.png" alt="image-20240629222004951"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>扩展操作码</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%89%A9%E5%B1%95%E6%93%8D%E4%BD%9C%E7%A0%81/</url>
    <content><![CDATA[<h1 id="扩展操作码"><a href="#扩展操作码" class="headerlink" title="扩展操作码"></a>扩展操作码</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>扩展操作码是指令集架构（ISA）中用于增加指令数量的一种技术，通过扩展基本操作码长度或使用额外的操作码字节，实现更多的指令编码。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-基本操作码（Base-Opcode）"><a href="#1-基本操作码（Base-Opcode）" class="headerlink" title="1.基本操作码（Base Opcode）"></a>1.基本操作码（Base Opcode）</h3><p>原始操作码，用于表示基本指令。</p>
<h3 id="2-扩展操作码（Extended-Opcode）"><a href="#2-扩展操作码（Extended-Opcode）" class="headerlink" title="2.扩展操作码（Extended Opcode）"></a>2.扩展操作码（Extended Opcode）</h3><p>附加的操作码位或字节，用于表示更多的指令。</p>
<h3 id="3-操作数（Operands）"><a href="#3-操作数（Operands）" class="headerlink" title="3.操作数（Operands）"></a>3.操作数（Operands）</h3><p>指示操作所需的数据或数据的位置，占用指令的一部分长度。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单字节扩展"><a href="#1-单字节扩展" class="headerlink" title="1.单字节扩展"></a>1.单字节扩展</h3><p>在基本操作码的基础上增加一个字节用于扩展。</p>
<h3 id="2-多字节扩展"><a href="#2-多字节扩展" class="headerlink" title="2.多字节扩展"></a>2.多字节扩展</h3><p>在基本操作码的基础上增加多个字节用于扩展。</p>
<h3 id="3-前缀字节"><a href="#3-前缀字节" class="headerlink" title="3.前缀字节"></a>3.前缀字节</h3><p>在指令前面添加前缀字节，用于改变或扩展基本操作码的含义。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628115739384.png" alt="image-20240628115739384"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-固定扩展"><a href="#1-固定扩展" class="headerlink" title="1.固定扩展"></a>1.固定扩展</h3><p>固定数量的扩展字节，用于扩展指令集。</p>
<h3 id="2-可变扩展"><a href="#2-可变扩展" class="headerlink" title="2.可变扩展"></a>2.可变扩展</h3><p>根据需要动态增加扩展字节，提供更灵活的指令编码。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.增加指令数量：通过扩展操作码，增加指令集中的指令数量和种类。<br>2.增强指令功能：通过扩展操作码，提供更多的功能和操作类型。<br>3.复杂性增加：扩展操作码增加了指令解码的复杂性。</p>
<h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628120203529.png" alt="image-20240628120203529">作码</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>扩展操作码是指令集架构（ISA）中用于增加指令数量的一种技术，通过扩展基本操作码长度或使用额外的操作码字节，实现更多的指令编码。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-基本操作码（Base-Opcode）-1"><a href="#1-基本操作码（Base-Opcode）-1" class="headerlink" title="1.基本操作码（Base Opcode）"></a>1.基本操作码（Base Opcode）</h3><p>原始操作码，用于表示基本指令。</p>
<h3 id="2-扩展操作码（Extended-Opcode）-1"><a href="#2-扩展操作码（Extended-Opcode）-1" class="headerlink" title="2.扩展操作码（Extended Opcode）"></a>2.扩展操作码（Extended Opcode）</h3><p>附加的操作码位或字节，用于表示更多的指令。</p>
<h3 id="3-操作数（Operands）-1"><a href="#3-操作数（Operands）-1" class="headerlink" title="3.操作数（Operands）"></a>3.操作数（Operands）</h3><p>指示操作所需的数据或数据的位置，占用指令的一部分长度。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单字节扩展-1"><a href="#1-单字节扩展-1" class="headerlink" title="1.单字节扩展"></a>1.单字节扩展</h3><p>在基本操作码的基础上增加一个字节用于扩展。</p>
<h3 id="2-多字节扩展-1"><a href="#2-多字节扩展-1" class="headerlink" title="2.多字节扩展"></a>2.多字节扩展</h3><p>在基本操作码的基础上增加多个字节用于扩展。</p>
<h3 id="3-前缀字节-1"><a href="#3-前缀字节-1" class="headerlink" title="3.前缀字节"></a>3.前缀字节</h3><p>在指令前面添加前缀字节，用于改变或扩展基本操作码的含义。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628115739384.png" alt="image-20240628115739384"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-固定扩展-1"><a href="#1-固定扩展-1" class="headerlink" title="1.固定扩展"></a>1.固定扩展</h3><p>固定数量的扩展字节，用于扩展指令集。</p>
<h3 id="2-可变扩展-1"><a href="#2-可变扩展-1" class="headerlink" title="2.可变扩展"></a>2.可变扩展</h3><p>根据需要动态增加扩展字节，提供更灵活的指令编码。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.增加指令数量：通过扩展操作码，增加指令集中的指令数量和种类。<br>2.增强指令功能：通过扩展操作码，提供更多的功能和操作类型。<br>3.复杂性增加：扩展操作码增加了指令解码的复杂性。</p>
<h2 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628120203529.png" alt="image-20240628120203529"># 扩展操作码</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>扩展操作码是指令集架构（ISA）中用于增加指令数量的一种技术，通过扩展基本操作码长度或使用额外的操作码字节，实现更多的指令编码。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-基本操作码（Base-Opcode）-2"><a href="#1-基本操作码（Base-Opcode）-2" class="headerlink" title="1.基本操作码（Base Opcode）"></a>1.基本操作码（Base Opcode）</h3><p>原始操作码，用于表示基本指令。</p>
<h3 id="2-扩展操作码（Extended-Opcode）-2"><a href="#2-扩展操作码（Extended-Opcode）-2" class="headerlink" title="2.扩展操作码（Extended Opcode）"></a>2.扩展操作码（Extended Opcode）</h3><p>附加的操作码位或字节，用于表示更多的指令。</p>
<h3 id="3-操作数（Operands）-2"><a href="#3-操作数（Operands）-2" class="headerlink" title="3.操作数（Operands）"></a>3.操作数（Operands）</h3><p>指示操作所需的数据或数据的位置，占用指令的一部分长度。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单字节扩展-2"><a href="#1-单字节扩展-2" class="headerlink" title="1.单字节扩展"></a>1.单字节扩展</h3><p>在基本操作码的基础上增加一个字节用于扩展。</p>
<h3 id="2-多字节扩展-2"><a href="#2-多字节扩展-2" class="headerlink" title="2.多字节扩展"></a>2.多字节扩展</h3><p>在基本操作码的基础上增加多个字节用于扩展。</p>
<h3 id="3-前缀字节-2"><a href="#3-前缀字节-2" class="headerlink" title="3.前缀字节"></a>3.前缀字节</h3><p>在指令前面添加前缀字节，用于改变或扩展基本操作码的含义。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628115739384.png" alt="image-20240628115739384"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-固定扩展-2"><a href="#1-固定扩展-2" class="headerlink" title="1.固定扩展"></a>1.固定扩展</h3><p>固定数量的扩展字节，用于扩展指令集。</p>
<h3 id="2-可变扩展-2"><a href="#2-可变扩展-2" class="headerlink" title="2.可变扩展"></a>2.可变扩展</h3><p>根据需要动态增加扩展字节，提供更灵活的指令编码。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.增加指令数量：通过扩展操作码，增加指令集中的指令数量和种类。<br>2.增强指令功能：通过扩展操作码，提供更多的功能和操作类型。<br>3.复杂性增加：扩展操作码增加了指令解码的复杂性。</p>
<h2 id="应用-2"><a href="#应用-2" class="headerlink" title="应用"></a>应用</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628120203529.png" alt="image-20240628120203529">作码</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>扩展操作码是指令集架构（ISA）中用于增加指令数量的一种技术，通过扩展基本操作码长度或使用额外的操作码字节，实现更多的指令编码。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-基本操作码（Base-Opcode）-3"><a href="#1-基本操作码（Base-Opcode）-3" class="headerlink" title="1.基本操作码（Base Opcode）"></a>1.基本操作码（Base Opcode）</h3><p>原始操作码，用于表示基本指令。</p>
<h3 id="2-扩展操作码（Extended-Opcode）-3"><a href="#2-扩展操作码（Extended-Opcode）-3" class="headerlink" title="2.扩展操作码（Extended Opcode）"></a>2.扩展操作码（Extended Opcode）</h3><p>附加的操作码位或字节，用于表示更多的指令。</p>
<h3 id="3-操作数（Operands）-3"><a href="#3-操作数（Operands）-3" class="headerlink" title="3.操作数（Operands）"></a>3.操作数（Operands）</h3><p>指示操作所需的数据或数据的位置，占用指令的一部分长度。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单字节扩展-3"><a href="#1-单字节扩展-3" class="headerlink" title="1.单字节扩展"></a>1.单字节扩展</h3><p>在基本操作码的基础上增加一个字节用于扩展。</p>
<h3 id="2-多字节扩展-3"><a href="#2-多字节扩展-3" class="headerlink" title="2.多字节扩展"></a>2.多字节扩展</h3><p>在基本操作码的基础上增加多个字节用于扩展。</p>
<h3 id="3-前缀字节-3"><a href="#3-前缀字节-3" class="headerlink" title="3.前缀字节"></a>3.前缀字节</h3><p>在指令前面添加前缀字节，用于改变或扩展基本操作码的含义。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628115739384.png" alt="image-20240628115739384"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-固定扩展-3"><a href="#1-固定扩展-3" class="headerlink" title="1.固定扩展"></a>1.固定扩展</h3><p>固定数量的扩展字节，用于扩展指令集。</p>
<h3 id="2-可变扩展-3"><a href="#2-可变扩展-3" class="headerlink" title="2.可变扩展"></a>2.可变扩展</h3><p>根据需要动态增加扩展字节，提供更灵活的指令编码。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.增加指令数量：通过扩展操作码，增加指令集中的指令数量和种类。<br>2.增强指令功能：通过扩展操作码，提供更多的功能和操作类型。<br>3.复杂性增加：扩展操作码增加了指令解码的复杂性。</p>
<h2 id="应用-3"><a href="#应用-3" class="headerlink" title="应用"></a>应用</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628120203529.png" alt="image-20240628120203529"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>指令周期的数据流</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%8C%87%E4%BB%A4%E5%91%A8%E6%9C%9F%E7%9A%84%E6%95%B0%E6%8D%AE%E6%B5%81/</url>
    <content><![CDATA[<h1 id="指令周期"><a href="#指令周期" class="headerlink" title="指令周期"></a>指令周期</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>指令周期是计算机执行一条指令所经历的整个过程，从取出指令到完成指令执行，包括所有的步骤和阶段。每条指令的执行都需要经历若干个固定的步骤，这些步骤构成了指令周期。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-取指周期（Fetch-Cycle）"><a href="#1-取指周期（Fetch-Cycle）" class="headerlink" title="1.取指周期（Fetch Cycle）"></a>1.取指周期（Fetch Cycle）</h3><p>从内存中取出指令。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141948458.png" alt="image-20240629141948458"></p>
<h3 id="2-译码周期（Decode-Cycle）"><a href="#2-译码周期（Decode-Cycle）" class="headerlink" title="2.译码周期（Decode Cycle）"></a>2.译码周期（Decode Cycle）</h3><p>将取出的指令译码，以确定操作类型和操作数。</p>
<h3 id="3-间址周期（Indirect-Cycle）"><a href="#3-间址周期（Indirect-Cycle）" class="headerlink" title="3.间址周期（Indirect Cycle）"></a>3.间址周期（Indirect Cycle）</h3><p>如果指令使用间接地址方式，需要访问内存获取实际操作数地址。</p>
<h3 id="4-执行周期（Execute-Cycle）"><a href="#4-执行周期（Execute-Cycle）" class="headerlink" title="4.执行周期（Execute Cycle）"></a>4.执行周期（Execute Cycle）</h3><p>执行指令所规定的操作。</p>
<h3 id="5-中断周期"><a href="#5-中断周期" class="headerlink" title="5.中断周期"></a>5.中断周期</h3><p>中断周期是指计算机在执行过程中遇到中断请求时，保存当前执行状态，转移到中断服务程序处理中断，完成后恢复原来执行状态的过程。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142206659.png" alt="image-20240629142206659"></p>
<h3 id="6-存储周期（Memory-Access-Cycle）"><a href="#6-存储周期（Memory-Access-Cycle）" class="headerlink" title="6.存储周期（Memory Access Cycle）"></a>6.存储周期（Memory Access Cycle）</h3><p>如果指令需要，对存储器进行读&#x2F;写操作。</p>
<h3 id="7-写回周期（Write-back-Cycle）"><a href="#7-写回周期（Write-back-Cycle）" class="headerlink" title="7.写回周期（Write-back Cycle）"></a>7.写回周期（Write-back Cycle）</h3><p>将结果写回到寄存器或内存中。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141743815.png" alt="image-20240629141743815"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141649700.png" alt="image-20240629141649700"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141809184.png" alt="image-20240629141809184"></p>
<h3 id="1-非流水线结构"><a href="#1-非流水线结构" class="headerlink" title="1.非流水线结构"></a>1.非流水线结构</h3><p>各步骤顺序执行，一次处理一条指令。</p>
<h3 id="2-流水线结构"><a href="#2-流水线结构" class="headerlink" title="2.流水线结构"></a>2.流水线结构</h3><p>将指令周期的各步骤重叠执行，提高指令处理效率。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-RISC（精简指令集计算机）"><a href="#1-RISC（精简指令集计算机）" class="headerlink" title="1.RISC（精简指令集计算机）"></a>1.RISC（精简指令集计算机）</h3><p>指令周期通常较短，指令集简单。</p>
<h3 id="2-CISC（复杂指令集计算机）"><a href="#2-CISC（复杂指令集计算机）" class="headerlink" title="2.CISC（复杂指令集计算机）"></a>2.CISC（复杂指令集计算机）</h3><p>指令周期较长，指令集复杂。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.阶段性：指令周期由若干固定阶段组成。<br>2.数据流动：数据在指令周期内在CPU和内存之间传递。<br>3.控制信号：控制单元生成的控制信号指示各阶段的操作。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142254919.png" alt="image-20240629142254919"></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过描述指令周期，理解CPU内部指令执行过程，提高程序设计和优化能力。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141901757.png" alt="image-20240629141901757"></p>
<p>周期</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>指令周期是计算机执行一条指令所经历的整个过程，从取出指令到完成指令执行，包括所有的步骤和阶段。每条指令的执行都需要经历若干个固定的步骤，这些步骤构成了指令周期。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-取指周期（Fetch-Cycle）-1"><a href="#1-取指周期（Fetch-Cycle）-1" class="headerlink" title="1.取指周期（Fetch Cycle）"></a>1.取指周期（Fetch Cycle）</h3><p>从内存中取出指令。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141948458.png" alt="image-20240629141948458"></p>
<h3 id="2-译码周期（Decode-Cycle）-1"><a href="#2-译码周期（Decode-Cycle）-1" class="headerlink" title="2.译码周期（Decode Cycle）"></a>2.译码周期（Decode Cycle）</h3><p>将取出的指令译码，以确定操作类型和操作数。</p>
<h3 id="3-间址周期（Indirect-Cycle）-1"><a href="#3-间址周期（Indirect-Cycle）-1" class="headerlink" title="3.间址周期（Indirect Cycle）"></a>3.间址周期（Indirect Cycle）</h3><p>如果指令使用间接地址方式，需要访问内存获取实际操作数地址。</p>
<h3 id="4-执行周期（Execute-Cycle）-1"><a href="#4-执行周期（Execute-Cycle）-1" class="headerlink" title="4.执行周期（Execute Cycle）"></a>4.执行周期（Execute Cycle）</h3><p>执行指令所规定的操作。</p>
<h3 id="5-中断周期-1"><a href="#5-中断周期-1" class="headerlink" title="5.中断周期"></a>5.中断周期</h3><p>中断周期是指计算机在执行过程中遇到中断请求时，保存当前执行状态，转移到中断服务程序处理中断，完成后恢复原来执行状态的过程。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142206659.png" alt="image-20240629142206659"></p>
<h3 id="6-存储周期（Memory-Access-Cycle）-1"><a href="#6-存储周期（Memory-Access-Cycle）-1" class="headerlink" title="6.存储周期（Memory Access Cycle）"></a>6.存储周期（Memory Access Cycle）</h3><p>如果指令需要，对存储器进行读&#x2F;写操作。</p>
<h3 id="7-写回周期（Write-back-Cycle）-1"><a href="#7-写回周期（Write-back-Cycle）-1" class="headerlink" title="7.写回周期（Write-back Cycle）"></a>7.写回周期（Write-back Cycle）</h3><p>将结果写回到寄存器或内存中。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141743815.png" alt="image-20240629141743815"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141649700.png" alt="image-20240629141649700"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141809184.png" alt="image-20240629141809184"></p>
<h3 id="1-非流水线结构-1"><a href="#1-非流水线结构-1" class="headerlink" title="1.非流水线结构"></a>1.非流水线结构</h3><p>各步骤顺序执行，一次处理一条指令。</p>
<h3 id="2-流水线结构-1"><a href="#2-流水线结构-1" class="headerlink" title="2.流水线结构"></a>2.流水线结构</h3><p>将指令周期的各步骤重叠执行，提高指令处理效率。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-RISC（精简指令集计算机）-1"><a href="#1-RISC（精简指令集计算机）-1" class="headerlink" title="1.RISC（精简指令集计算机）"></a>1.RISC（精简指令集计算机）</h3><p>指令周期通常较短，指令集简单。</p>
<h3 id="2-CISC（复杂指令集计算机）-1"><a href="#2-CISC（复杂指令集计算机）-1" class="headerlink" title="2.CISC（复杂指令集计算机）"></a>2.CISC（复杂指令集计算机）</h3><p>指令周期较长，指令集复杂。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.阶段性：指令周期由若干固定阶段组成。<br>2.数据流动：数据在指令周期内在CPU和内存之间传递。<br>3.控制信号：控制单元生成的控制信号指示各阶段的操作。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142254919.png" alt="image-20240629142254919"></p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>通过描述指令周期，理解CPU内部指令执行过程，提高程序设计和优化能力。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141901757.png" alt="image-20240629141901757"># 指令周期</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>指令周期是计算机执行一条指令所经历的整个过程，从取出指令到完成指令执行，包括所有的步骤和阶段。每条指令的执行都需要经历若干个固定的步骤，这些步骤构成了指令周期。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-取指周期（Fetch-Cycle）-2"><a href="#1-取指周期（Fetch-Cycle）-2" class="headerlink" title="1.取指周期（Fetch Cycle）"></a>1.取指周期（Fetch Cycle）</h3><p>从内存中取出指令。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141948458.png" alt="image-20240629141948458"></p>
<h3 id="2-译码周期（Decode-Cycle）-2"><a href="#2-译码周期（Decode-Cycle）-2" class="headerlink" title="2.译码周期（Decode Cycle）"></a>2.译码周期（Decode Cycle）</h3><p>将取出的指令译码，以确定操作类型和操作数。</p>
<h3 id="3-间址周期（Indirect-Cycle）-2"><a href="#3-间址周期（Indirect-Cycle）-2" class="headerlink" title="3.间址周期（Indirect Cycle）"></a>3.间址周期（Indirect Cycle）</h3><p>如果指令使用间接地址方式，需要访问内存获取实际操作数地址。</p>
<h3 id="4-执行周期（Execute-Cycle）-2"><a href="#4-执行周期（Execute-Cycle）-2" class="headerlink" title="4.执行周期（Execute Cycle）"></a>4.执行周期（Execute Cycle）</h3><p>执行指令所规定的操作。</p>
<h3 id="5-中断周期-2"><a href="#5-中断周期-2" class="headerlink" title="5.中断周期"></a>5.中断周期</h3><p>中断周期是指计算机在执行过程中遇到中断请求时，保存当前执行状态，转移到中断服务程序处理中断，完成后恢复原来执行状态的过程。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142206659.png" alt="image-20240629142206659"></p>
<h3 id="6-存储周期（Memory-Access-Cycle）-2"><a href="#6-存储周期（Memory-Access-Cycle）-2" class="headerlink" title="6.存储周期（Memory Access Cycle）"></a>6.存储周期（Memory Access Cycle）</h3><p>如果指令需要，对存储器进行读&#x2F;写操作。</p>
<h3 id="7-写回周期（Write-back-Cycle）-2"><a href="#7-写回周期（Write-back-Cycle）-2" class="headerlink" title="7.写回周期（Write-back Cycle）"></a>7.写回周期（Write-back Cycle）</h3><p>将结果写回到寄存器或内存中。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141743815.png" alt="image-20240629141743815"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141649700.png" alt="image-20240629141649700"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141809184.png" alt="image-20240629141809184"></p>
<h3 id="1-非流水线结构-2"><a href="#1-非流水线结构-2" class="headerlink" title="1.非流水线结构"></a>1.非流水线结构</h3><p>各步骤顺序执行，一次处理一条指令。</p>
<h3 id="2-流水线结构-2"><a href="#2-流水线结构-2" class="headerlink" title="2.流水线结构"></a>2.流水线结构</h3><p>将指令周期的各步骤重叠执行，提高指令处理效率。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-RISC（精简指令集计算机）-2"><a href="#1-RISC（精简指令集计算机）-2" class="headerlink" title="1.RISC（精简指令集计算机）"></a>1.RISC（精简指令集计算机）</h3><p>指令周期通常较短，指令集简单。</p>
<h3 id="2-CISC（复杂指令集计算机）-2"><a href="#2-CISC（复杂指令集计算机）-2" class="headerlink" title="2.CISC（复杂指令集计算机）"></a>2.CISC（复杂指令集计算机）</h3><p>指令周期较长，指令集复杂。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.阶段性：指令周期由若干固定阶段组成。<br>2.数据流动：数据在指令周期内在CPU和内存之间传递。<br>3.控制信号：控制单元生成的控制信号指示各阶段的操作。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142254919.png" alt="image-20240629142254919"></p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>通过描述指令周期，理解CPU内部指令执行过程，提高程序设计和优化能力。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141901757.png" alt="image-20240629141901757"></p>
<p>周期</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>指令周期是计算机执行一条指令所经历的整个过程，从取出指令到完成指令执行，包括所有的步骤和阶段。每条指令的执行都需要经历若干个固定的步骤，这些步骤构成了指令周期。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-取指周期（Fetch-Cycle）-3"><a href="#1-取指周期（Fetch-Cycle）-3" class="headerlink" title="1.取指周期（Fetch Cycle）"></a>1.取指周期（Fetch Cycle）</h3><p>从内存中取出指令。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141948458.png" alt="image-20240629141948458"></p>
<h3 id="2-译码周期（Decode-Cycle）-3"><a href="#2-译码周期（Decode-Cycle）-3" class="headerlink" title="2.译码周期（Decode Cycle）"></a>2.译码周期（Decode Cycle）</h3><p>将取出的指令译码，以确定操作类型和操作数。</p>
<h3 id="3-间址周期（Indirect-Cycle）-3"><a href="#3-间址周期（Indirect-Cycle）-3" class="headerlink" title="3.间址周期（Indirect Cycle）"></a>3.间址周期（Indirect Cycle）</h3><p>如果指令使用间接地址方式，需要访问内存获取实际操作数地址。</p>
<h3 id="4-执行周期（Execute-Cycle）-3"><a href="#4-执行周期（Execute-Cycle）-3" class="headerlink" title="4.执行周期（Execute Cycle）"></a>4.执行周期（Execute Cycle）</h3><p>执行指令所规定的操作。</p>
<h3 id="5-中断周期-3"><a href="#5-中断周期-3" class="headerlink" title="5.中断周期"></a>5.中断周期</h3><p>中断周期是指计算机在执行过程中遇到中断请求时，保存当前执行状态，转移到中断服务程序处理中断，完成后恢复原来执行状态的过程。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142206659.png" alt="image-20240629142206659"></p>
<h3 id="6-存储周期（Memory-Access-Cycle）-3"><a href="#6-存储周期（Memory-Access-Cycle）-3" class="headerlink" title="6.存储周期（Memory Access Cycle）"></a>6.存储周期（Memory Access Cycle）</h3><p>如果指令需要，对存储器进行读&#x2F;写操作。</p>
<h3 id="7-写回周期（Write-back-Cycle）-3"><a href="#7-写回周期（Write-back-Cycle）-3" class="headerlink" title="7.写回周期（Write-back Cycle）"></a>7.写回周期（Write-back Cycle）</h3><p>将结果写回到寄存器或内存中。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141743815.png" alt="image-20240629141743815"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141649700.png" alt="image-20240629141649700"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141809184.png" alt="image-20240629141809184"></p>
<h3 id="1-非流水线结构-3"><a href="#1-非流水线结构-3" class="headerlink" title="1.非流水线结构"></a>1.非流水线结构</h3><p>各步骤顺序执行，一次处理一条指令。</p>
<h3 id="2-流水线结构-3"><a href="#2-流水线结构-3" class="headerlink" title="2.流水线结构"></a>2.流水线结构</h3><p>将指令周期的各步骤重叠执行，提高指令处理效率。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-RISC（精简指令集计算机）-3"><a href="#1-RISC（精简指令集计算机）-3" class="headerlink" title="1.RISC（精简指令集计算机）"></a>1.RISC（精简指令集计算机）</h3><p>指令周期通常较短，指令集简单。</p>
<h3 id="2-CISC（复杂指令集计算机）-3"><a href="#2-CISC（复杂指令集计算机）-3" class="headerlink" title="2.CISC（复杂指令集计算机）"></a>2.CISC（复杂指令集计算机）</h3><p>指令周期较长，指令集复杂。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.阶段性：指令周期由若干固定阶段组成。<br>2.数据流动：数据在指令周期内在CPU和内存之间传递。<br>3.控制信号：控制单元生成的控制信号指示各阶段的操作。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142254919.png" alt="image-20240629142254919"></p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>通过描述指令周期，理解CPU内部指令执行过程，提高程序设计和优化能力。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141901757.png" alt="image-20240629141901757"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>指令寻址</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%8C%87%E4%BB%A4%E5%AF%BB%E5%9D%80/</url>
    <content><![CDATA[<h1 id="指令寻址"><a href="#指令寻址" class="headerlink" title="指令寻址"></a>指令寻址</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>指令寻址（Instruction Addressing）是指处理器如何确定下一条指令的内存地址的过程。它涉及到指令指针（Instruction Pointer，IP）或程序计数器（Program Counter，PC）的使用，这些寄存器存储了下一条将要执行的指令的地址。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-指令指针（IP）或程序计数器（PC）"><a href="#1-指令指针（IP）或程序计数器（PC）" class="headerlink" title="1.指令指针（IP）或程序计数器（PC）"></a>1.指令指针（IP）或程序计数器（PC）</h3><p>用于存储下一条指令的内存地址。</p>
<h3 id="2-指令序列"><a href="#2-指令序列" class="headerlink" title="2.指令序列"></a>2.指令序列</h3><p>程序中的一系列指令。</p>
<h3 id="3-寻址模式"><a href="#3-寻址模式" class="headerlink" title="3.寻址模式"></a>3.寻址模式</h3><p>决定如何计算下一条指令地址的方法。</p>
<h4 id="①顺序寻址"><a href="#①顺序寻址" class="headerlink" title="①顺序寻址"></a>①顺序寻址</h4><h4 id="②跳跃寻址"><a href="#②跳跃寻址" class="headerlink" title="②跳跃寻址"></a>②跳跃寻址</h4><h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>指令寻址通常涉及处理器中的控制单元，它负责根据当前的指令指针值来获取下一条指令。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>指令寻址可以基于不同的模式，如顺序寻址、跳转寻址、条件跳转寻址等。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>指令寻址的主要特征是它决定了程序的执行顺序和流程控制。<br>寻址</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>指令寻址（Instruction Addressing）是指处理器如何确定下一条指令的内存地址的过程。它涉及到指令指针（Instruction Pointer，IP）或程序计数器（Program Counter，PC）的使用，这些寄存器存储了下一条将要执行的指令的地址。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-指令指针（IP）或程序计数器（PC）-1"><a href="#1-指令指针（IP）或程序计数器（PC）-1" class="headerlink" title="1.指令指针（IP）或程序计数器（PC）"></a>1.指令指针（IP）或程序计数器（PC）</h3><p>用于存储下一条指令的内存地址。</p>
<h3 id="2-指令序列-1"><a href="#2-指令序列-1" class="headerlink" title="2.指令序列"></a>2.指令序列</h3><p>程序中的一系列指令。</p>
<h3 id="3-寻址模式-1"><a href="#3-寻址模式-1" class="headerlink" title="3.寻址模式"></a>3.寻址模式</h3><p>决定如何计算下一条指令地址的方法。</p>
<h4 id="①顺序寻址-1"><a href="#①顺序寻址-1" class="headerlink" title="①顺序寻址"></a>①顺序寻址</h4><h4 id="②跳跃寻址-1"><a href="#②跳跃寻址-1" class="headerlink" title="②跳跃寻址"></a>②跳跃寻址</h4><h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>指令寻址通常涉及处理器中的控制单元，它负责根据当前的指令指针值来获取下一条指令。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>指令寻址可以基于不同的模式，如顺序寻址、跳转寻址、条件跳转寻址等。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>指令寻址的主要特征是它决定了程序的执行顺序和流程控制。# 指令寻址</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>指令寻址（Instruction Addressing）是指处理器如何确定下一条指令的内存地址的过程。它涉及到指令指针（Instruction Pointer，IP）或程序计数器（Program Counter，PC）的使用，这些寄存器存储了下一条将要执行的指令的地址。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-指令指针（IP）或程序计数器（PC）-2"><a href="#1-指令指针（IP）或程序计数器（PC）-2" class="headerlink" title="1.指令指针（IP）或程序计数器（PC）"></a>1.指令指针（IP）或程序计数器（PC）</h3><p>用于存储下一条指令的内存地址。</p>
<h3 id="2-指令序列-2"><a href="#2-指令序列-2" class="headerlink" title="2.指令序列"></a>2.指令序列</h3><p>程序中的一系列指令。</p>
<h3 id="3-寻址模式-2"><a href="#3-寻址模式-2" class="headerlink" title="3.寻址模式"></a>3.寻址模式</h3><p>决定如何计算下一条指令地址的方法。</p>
<h4 id="①顺序寻址-2"><a href="#①顺序寻址-2" class="headerlink" title="①顺序寻址"></a>①顺序寻址</h4><h4 id="②跳跃寻址-2"><a href="#②跳跃寻址-2" class="headerlink" title="②跳跃寻址"></a>②跳跃寻址</h4><h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>指令寻址通常涉及处理器中的控制单元，它负责根据当前的指令指针值来获取下一条指令。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>指令寻址可以基于不同的模式，如顺序寻址、跳转寻址、条件跳转寻址等。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>指令寻址的主要特征是它决定了程序的执行顺序和流程控制。<br>寻址</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>指令寻址（Instruction Addressing）是指处理器如何确定下一条指令的内存地址的过程。它涉及到指令指针（Instruction Pointer，IP）或程序计数器（Program Counter，PC）的使用，这些寄存器存储了下一条将要执行的指令的地址。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-指令指针（IP）或程序计数器（PC）-3"><a href="#1-指令指针（IP）或程序计数器（PC）-3" class="headerlink" title="1.指令指针（IP）或程序计数器（PC）"></a>1.指令指针（IP）或程序计数器（PC）</h3><p>用于存储下一条指令的内存地址。</p>
<h3 id="2-指令序列-3"><a href="#2-指令序列-3" class="headerlink" title="2.指令序列"></a>2.指令序列</h3><p>程序中的一系列指令。</p>
<h3 id="3-寻址模式-3"><a href="#3-寻址模式-3" class="headerlink" title="3.寻址模式"></a>3.寻址模式</h3><p>决定如何计算下一条指令地址的方法。</p>
<h4 id="①顺序寻址-3"><a href="#①顺序寻址-3" class="headerlink" title="①顺序寻址"></a>①顺序寻址</h4><h4 id="②跳跃寻址-3"><a href="#②跳跃寻址-3" class="headerlink" title="②跳跃寻址"></a>②跳跃寻址</h4><h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>指令寻址通常涉及处理器中的控制单元，它负责根据当前的指令指针值来获取下一条指令。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>指令寻址可以基于不同的模式，如顺序寻址、跳转寻址、条件跳转寻址等。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>指令寻址的主要特征是它决定了程序的执行顺序和流程控制。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>指令流水线</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%8C%87%E4%BB%A4%E6%B5%81%E6%B0%B4%E7%BA%BF/</url>
    <content><![CDATA[<h1 id="指令流水线"><a href="#指令流水线" class="headerlink" title="指令流水线"></a>指令流水线</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>指令流水线是一种处理器设计技术，通过将指令执行过程分解为若干个独立的阶段，并同时执行不同指令在不同阶段的操作，以提高指令执行的效率和吞吐量。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-指令流"><a href="#1-指令流" class="headerlink" title="1.指令流"></a>1.指令流</h3><p>待执行的指令序列。</p>
<h3 id="2-流水线寄存器"><a href="#2-流水线寄存器" class="headerlink" title="2.流水线寄存器"></a>2.流水线寄存器</h3><p>用于存储每个阶段的中间结果和控制信息。</p>
<h3 id="3-流水线阶段"><a href="#3-流水线阶段" class="headerlink" title="3.流水线阶段"></a>3.流水线阶段</h3><p>典型的流水线包括取指令、译码、执行、访存和写回等阶段。</p>
<h3 id="4-控制逻辑"><a href="#4-控制逻辑" class="headerlink" title="4.控制逻辑"></a>4.控制逻辑</h3><p>协调各阶段的操作和数据流动。</p>
<h2 id="执行方式"><a href="#执行方式" class="headerlink" title="执行方式"></a>执行方式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223416248.png" alt="image-20240629223416248"></p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223327778.png" alt="image-20240629223327778"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-流水线的表示方法"><a href="#1-流水线的表示方法" class="headerlink" title="1.流水线的表示方法"></a>1.流水线的表示方法<img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223452581.png" alt="image-20240629223452581"></h3><h3 id="2-流水线的性能指标"><a href="#2-流水线的性能指标" class="headerlink" title="2.流水线的性能指标"></a>2.流水线的性能指标</h3><h4 id="1-吞吐率"><a href="#1-吞吐率" class="headerlink" title="1.吞吐率"></a>1.吞吐率</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223611991.png" alt="image-20240629223611991"></p>
<h4 id="2-加速比"><a href="#2-加速比" class="headerlink" title="2.加速比"></a>2.加速比</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223621780.png" alt="image-20240629223621780"></p>
<h4 id="3-效率"><a href="#3-效率" class="headerlink" title="3.效率"></a>3.效率</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223633220.png" alt="image-20240629223633220"></p>
<p>水线</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>指令流水线是一种处理器设计技术，通过将指令执行过程分解为若干个独立的阶段，并同时执行不同指令在不同阶段的操作，以提高指令执行的效率和吞吐量。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-指令流-1"><a href="#1-指令流-1" class="headerlink" title="1.指令流"></a>1.指令流</h3><p>待执行的指令序列。</p>
<h3 id="2-流水线寄存器-1"><a href="#2-流水线寄存器-1" class="headerlink" title="2.流水线寄存器"></a>2.流水线寄存器</h3><p>用于存储每个阶段的中间结果和控制信息。</p>
<h3 id="3-流水线阶段-1"><a href="#3-流水线阶段-1" class="headerlink" title="3.流水线阶段"></a>3.流水线阶段</h3><p>典型的流水线包括取指令、译码、执行、访存和写回等阶段。</p>
<h3 id="4-控制逻辑-1"><a href="#4-控制逻辑-1" class="headerlink" title="4.控制逻辑"></a>4.控制逻辑</h3><p>协调各阶段的操作和数据流动。</p>
<h2 id="执行方式-1"><a href="#执行方式-1" class="headerlink" title="执行方式"></a>执行方式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223416248.png" alt="image-20240629223416248"></p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223327778.png" alt="image-20240629223327778"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-流水线的表示方法-1"><a href="#1-流水线的表示方法-1" class="headerlink" title="1.流水线的表示方法"></a>1.流水线的表示方法<img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223452581.png" alt="image-20240629223452581"></h3><h3 id="2-流水线的性能指标-1"><a href="#2-流水线的性能指标-1" class="headerlink" title="2.流水线的性能指标"></a>2.流水线的性能指标</h3><h4 id="1-吞吐率-1"><a href="#1-吞吐率-1" class="headerlink" title="1.吞吐率"></a>1.吞吐率</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223611991.png" alt="image-20240629223611991"></p>
<h4 id="2-加速比-1"><a href="#2-加速比-1" class="headerlink" title="2.加速比"></a>2.加速比</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223621780.png" alt="image-20240629223621780"></p>
<h4 id="3-效率-1"><a href="#3-效率-1" class="headerlink" title="3.效率"></a>3.效率</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223633220.png" alt="image-20240629223633220"># 指令流水线</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>指令流水线是一种处理器设计技术，通过将指令执行过程分解为若干个独立的阶段，并同时执行不同指令在不同阶段的操作，以提高指令执行的效率和吞吐量。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-指令流-2"><a href="#1-指令流-2" class="headerlink" title="1.指令流"></a>1.指令流</h3><p>待执行的指令序列。</p>
<h3 id="2-流水线寄存器-2"><a href="#2-流水线寄存器-2" class="headerlink" title="2.流水线寄存器"></a>2.流水线寄存器</h3><p>用于存储每个阶段的中间结果和控制信息。</p>
<h3 id="3-流水线阶段-2"><a href="#3-流水线阶段-2" class="headerlink" title="3.流水线阶段"></a>3.流水线阶段</h3><p>典型的流水线包括取指令、译码、执行、访存和写回等阶段。</p>
<h3 id="4-控制逻辑-2"><a href="#4-控制逻辑-2" class="headerlink" title="4.控制逻辑"></a>4.控制逻辑</h3><p>协调各阶段的操作和数据流动。</p>
<h2 id="执行方式-2"><a href="#执行方式-2" class="headerlink" title="执行方式"></a>执行方式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223416248.png" alt="image-20240629223416248"></p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223327778.png" alt="image-20240629223327778"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-流水线的表示方法-2"><a href="#1-流水线的表示方法-2" class="headerlink" title="1.流水线的表示方法"></a>1.流水线的表示方法<img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223452581.png" alt="image-20240629223452581"></h3><h3 id="2-流水线的性能指标-2"><a href="#2-流水线的性能指标-2" class="headerlink" title="2.流水线的性能指标"></a>2.流水线的性能指标</h3><h4 id="1-吞吐率-2"><a href="#1-吞吐率-2" class="headerlink" title="1.吞吐率"></a>1.吞吐率</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223611991.png" alt="image-20240629223611991"></p>
<h4 id="2-加速比-2"><a href="#2-加速比-2" class="headerlink" title="2.加速比"></a>2.加速比</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223621780.png" alt="image-20240629223621780"></p>
<h4 id="3-效率-2"><a href="#3-效率-2" class="headerlink" title="3.效率"></a>3.效率</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223633220.png" alt="image-20240629223633220"></p>
<p>水线</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>指令流水线是一种处理器设计技术，通过将指令执行过程分解为若干个独立的阶段，并同时执行不同指令在不同阶段的操作，以提高指令执行的效率和吞吐量。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-指令流-3"><a href="#1-指令流-3" class="headerlink" title="1.指令流"></a>1.指令流</h3><p>待执行的指令序列。</p>
<h3 id="2-流水线寄存器-3"><a href="#2-流水线寄存器-3" class="headerlink" title="2.流水线寄存器"></a>2.流水线寄存器</h3><p>用于存储每个阶段的中间结果和控制信息。</p>
<h3 id="3-流水线阶段-3"><a href="#3-流水线阶段-3" class="headerlink" title="3.流水线阶段"></a>3.流水线阶段</h3><p>典型的流水线包括取指令、译码、执行、访存和写回等阶段。</p>
<h3 id="4-控制逻辑-3"><a href="#4-控制逻辑-3" class="headerlink" title="4.控制逻辑"></a>4.控制逻辑</h3><p>协调各阶段的操作和数据流动。</p>
<h2 id="执行方式-3"><a href="#执行方式-3" class="headerlink" title="执行方式"></a>执行方式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223416248.png" alt="image-20240629223416248"></p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223327778.png" alt="image-20240629223327778"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-流水线的表示方法-3"><a href="#1-流水线的表示方法-3" class="headerlink" title="1.流水线的表示方法"></a>1.流水线的表示方法<img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223452581.png" alt="image-20240629223452581"></h3><h3 id="2-流水线的性能指标-3"><a href="#2-流水线的性能指标-3" class="headerlink" title="2.流水线的性能指标"></a>2.流水线的性能指标</h3><h4 id="1-吞吐率-3"><a href="#1-吞吐率-3" class="headerlink" title="1.吞吐率"></a>1.吞吐率</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223611991.png" alt="image-20240629223611991"></p>
<h4 id="2-加速比-3"><a href="#2-加速比-3" class="headerlink" title="2.加速比"></a>2.加速比</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223621780.png" alt="image-20240629223621780"></p>
<h4 id="3-效率-3"><a href="#3-效率-3" class="headerlink" title="3.效率"></a>3.效率</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223633220.png" alt="image-20240629223633220"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>指令流水线的影响因素</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%8C%87%E4%BB%A4%E6%B5%81%E6%B0%B4%E7%BA%BF%E7%9A%84%E5%BD%B1%E5%93%8D%E5%9B%A0%E7%B4%A0/</url>
    <content><![CDATA[<h1 id="指令水流线的分类和影响因素"><a href="#指令水流线的分类和影响因素" class="headerlink" title="指令水流线的分类和影响因素"></a>指令水流线的分类和影响因素</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="按流水线使用的级别"><a href="#按流水线使用的级别" class="headerlink" title="按流水线使用的级别"></a>按流水线使用的级别</h3><p>1.部件功能级</p>
<p>2.处理机级</p>
<p>3.处理机间级</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224239630.png" alt="image-20240629224239630"></p>
<h3 id="按流水线完成的功能"><a href="#按流水线完成的功能" class="headerlink" title="按流水线完成的功能"></a>按流水线完成的功能</h3><p>1.单功能流水线</p>
<p>2.多功能流水线</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224251440.png" alt="image-20240629224251440"></p>
<h3 id="按同一时间各段之间的连接方式"><a href="#按同一时间各段之间的连接方式" class="headerlink" title="按同一时间各段之间的连接方式"></a>按同一时间各段之间的连接方式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224336205.png" alt="image-20240629224336205"></p>
<h3 id="按各个功能段之间是否有反馈信号"><a href="#按各个功能段之间是否有反馈信号" class="headerlink" title="按各个功能段之间是否有反馈信号"></a>按各个功能段之间是否有反馈信号</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224402496.png" alt="image-20240629224402496"></p>
<h2 id="影响因素"><a href="#影响因素" class="headerlink" title="影响因素"></a>影响因素</h2><h3 id="1-结构相关"><a href="#1-结构相关" class="headerlink" title="1.结构相关"></a>1.结构相关</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223854401.png" alt="image-20240629223854401"></p>
<h3 id="2-数据相关"><a href="#2-数据相关" class="headerlink" title="2.数据相关"></a>2.数据相关</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223944566.png" alt="image-20240629223944566"></p>
<h3 id="3-控制相关"><a href="#3-控制相关" class="headerlink" title="3.控制相关"></a>3.控制相关</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223955933.png" alt="image-20240629223955933"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><ol>
<li></li>
</ol>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223738546.png" alt="image-20240629223738546"></p>
<h3 id="2-流水线的多发技术"><a href="#2-流水线的多发技术" class="headerlink" title="2.流水线的多发技术"></a>2.流水线的多发技术</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224441954.png" alt="image-20240629224441954"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224457332.png" alt="image-20240629224457332"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224518264.png" alt="image-20240629224518264">因素</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="按流水线使用的级别-1"><a href="#按流水线使用的级别-1" class="headerlink" title="按流水线使用的级别"></a>按流水线使用的级别</h3><p>1.部件功能级</p>
<p>2.处理机级</p>
<p>3.处理机间级</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224239630.png" alt="image-20240629224239630"></p>
<h3 id="按流水线完成的功能-1"><a href="#按流水线完成的功能-1" class="headerlink" title="按流水线完成的功能"></a>按流水线完成的功能</h3><p>1.单功能流水线</p>
<p>2.多功能流水线</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224251440.png" alt="image-20240629224251440"></p>
<h3 id="按同一时间各段之间的连接方式-1"><a href="#按同一时间各段之间的连接方式-1" class="headerlink" title="按同一时间各段之间的连接方式"></a>按同一时间各段之间的连接方式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224336205.png" alt="image-20240629224336205"></p>
<h3 id="按各个功能段之间是否有反馈信号-1"><a href="#按各个功能段之间是否有反馈信号-1" class="headerlink" title="按各个功能段之间是否有反馈信号"></a>按各个功能段之间是否有反馈信号</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224402496.png" alt="image-20240629224402496"></p>
<h2 id="影响因素-1"><a href="#影响因素-1" class="headerlink" title="影响因素"></a>影响因素</h2><h3 id="1-结构相关-1"><a href="#1-结构相关-1" class="headerlink" title="1.结构相关"></a>1.结构相关</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223854401.png" alt="image-20240629223854401"></p>
<h3 id="2-数据相关-1"><a href="#2-数据相关-1" class="headerlink" title="2.数据相关"></a>2.数据相关</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223944566.png" alt="image-20240629223944566"></p>
<h3 id="3-控制相关-1"><a href="#3-控制相关-1" class="headerlink" title="3.控制相关"></a>3.控制相关</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223955933.png" alt="image-20240629223955933"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><ol>
<li></li>
</ol>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223738546.png" alt="image-20240629223738546"></p>
<h3 id="2-流水线的多发技术-1"><a href="#2-流水线的多发技术-1" class="headerlink" title="2.流水线的多发技术"></a>2.流水线的多发技术</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224441954.png" alt="image-20240629224441954"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224457332.png" alt="image-20240629224457332"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224518264.png" alt="image-20240629224518264"># 指令水流线的分类和影响因素</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="按流水线使用的级别-2"><a href="#按流水线使用的级别-2" class="headerlink" title="按流水线使用的级别"></a>按流水线使用的级别</h3><p>1.部件功能级</p>
<p>2.处理机级</p>
<p>3.处理机间级</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224239630.png" alt="image-20240629224239630"></p>
<h3 id="按流水线完成的功能-2"><a href="#按流水线完成的功能-2" class="headerlink" title="按流水线完成的功能"></a>按流水线完成的功能</h3><p>1.单功能流水线</p>
<p>2.多功能流水线</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224251440.png" alt="image-20240629224251440"></p>
<h3 id="按同一时间各段之间的连接方式-2"><a href="#按同一时间各段之间的连接方式-2" class="headerlink" title="按同一时间各段之间的连接方式"></a>按同一时间各段之间的连接方式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224336205.png" alt="image-20240629224336205"></p>
<h3 id="按各个功能段之间是否有反馈信号-2"><a href="#按各个功能段之间是否有反馈信号-2" class="headerlink" title="按各个功能段之间是否有反馈信号"></a>按各个功能段之间是否有反馈信号</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224402496.png" alt="image-20240629224402496"></p>
<h2 id="影响因素-2"><a href="#影响因素-2" class="headerlink" title="影响因素"></a>影响因素</h2><h3 id="1-结构相关-2"><a href="#1-结构相关-2" class="headerlink" title="1.结构相关"></a>1.结构相关</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223854401.png" alt="image-20240629223854401"></p>
<h3 id="2-数据相关-2"><a href="#2-数据相关-2" class="headerlink" title="2.数据相关"></a>2.数据相关</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223944566.png" alt="image-20240629223944566"></p>
<h3 id="3-控制相关-2"><a href="#3-控制相关-2" class="headerlink" title="3.控制相关"></a>3.控制相关</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223955933.png" alt="image-20240629223955933"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><ol>
<li></li>
</ol>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223738546.png" alt="image-20240629223738546"></p>
<h3 id="2-流水线的多发技术-2"><a href="#2-流水线的多发技术-2" class="headerlink" title="2.流水线的多发技术"></a>2.流水线的多发技术</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224441954.png" alt="image-20240629224441954"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224457332.png" alt="image-20240629224457332"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224518264.png" alt="image-20240629224518264">因素</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="按流水线使用的级别-3"><a href="#按流水线使用的级别-3" class="headerlink" title="按流水线使用的级别"></a>按流水线使用的级别</h3><p>1.部件功能级</p>
<p>2.处理机级</p>
<p>3.处理机间级</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224239630.png" alt="image-20240629224239630"></p>
<h3 id="按流水线完成的功能-3"><a href="#按流水线完成的功能-3" class="headerlink" title="按流水线完成的功能"></a>按流水线完成的功能</h3><p>1.单功能流水线</p>
<p>2.多功能流水线</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224251440.png" alt="image-20240629224251440"></p>
<h3 id="按同一时间各段之间的连接方式-3"><a href="#按同一时间各段之间的连接方式-3" class="headerlink" title="按同一时间各段之间的连接方式"></a>按同一时间各段之间的连接方式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224336205.png" alt="image-20240629224336205"></p>
<h3 id="按各个功能段之间是否有反馈信号-3"><a href="#按各个功能段之间是否有反馈信号-3" class="headerlink" title="按各个功能段之间是否有反馈信号"></a>按各个功能段之间是否有反馈信号</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224402496.png" alt="image-20240629224402496"></p>
<h2 id="影响因素-3"><a href="#影响因素-3" class="headerlink" title="影响因素"></a>影响因素</h2><h3 id="1-结构相关-3"><a href="#1-结构相关-3" class="headerlink" title="1.结构相关"></a>1.结构相关</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223854401.png" alt="image-20240629223854401"></p>
<h3 id="2-数据相关-3"><a href="#2-数据相关-3" class="headerlink" title="2.数据相关"></a>2.数据相关</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223944566.png" alt="image-20240629223944566"></p>
<h3 id="3-控制相关-3"><a href="#3-控制相关-3" class="headerlink" title="3.控制相关"></a>3.控制相关</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223955933.png" alt="image-20240629223955933"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><ol>
<li></li>
</ol>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629223738546.png" alt="image-20240629223738546"></p>
<h3 id="2-流水线的多发技术-3"><a href="#2-流水线的多发技术-3" class="headerlink" title="2.流水线的多发技术"></a>2.流水线的多发技术</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224441954.png" alt="image-20240629224441954"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224457332.png" alt="image-20240629224457332"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629224518264.png" alt="image-20240629224518264"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>数据寻址1</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E6%8D%AE%E5%AF%BB%E5%9D%801/</url>
    <content><![CDATA[<h2 id="1-直接寻址"><a href="#1-直接寻址" class="headerlink" title="1.直接寻址"></a>1.直接寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629115727284.png" alt="image-20240629115727284"></p>
<h2 id="2-间接寻址"><a href="#2-间接寻址" class="headerlink" title="2.间接寻址"></a>2.间接寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629115911361.png" alt="image-20240629115911361"></p>
<h2 id="3-立即寻址"><a href="#3-立即寻址" class="headerlink" title="3.立即寻址"></a>3.立即寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120147122.png" alt="image-20240629120147122"></p>
<h2 id="4-隐含寻址"><a href="#4-隐含寻址" class="headerlink" title="4.隐含寻址"></a>4.隐含寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120051185.png" alt="image-20240629120051185"></p>
<h2 id="5-寄存器寻址"><a href="#5-寄存器寻址" class="headerlink" title="5.寄存器寻址"></a>5.寄存器寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629115951461.png" alt="image-20240629115951461"></p>
<h2 id="6-寄存器间接寻址"><a href="#6-寄存器间接寻址" class="headerlink" title="6.寄存器间接寻址"></a>6.寄存器间接寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120023014.png" alt="image-20240629120023014"></p>
<h2 id="六种寻址方式的对比"><a href="#六种寻址方式的对比" class="headerlink" title="六种寻址方式的对比"></a>六种寻址方式的对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120214066.png" alt="image-20240629120214066">接寻址</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629115727284.png" alt="image-20240629115727284"></p>
<h2 id="2-间接寻址-1"><a href="#2-间接寻址-1" class="headerlink" title="2.间接寻址"></a>2.间接寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629115911361.png" alt="image-20240629115911361"></p>
<h2 id="3-立即寻址-1"><a href="#3-立即寻址-1" class="headerlink" title="3.立即寻址"></a>3.立即寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120147122.png" alt="image-20240629120147122"></p>
<h2 id="4-隐含寻址-1"><a href="#4-隐含寻址-1" class="headerlink" title="4.隐含寻址"></a>4.隐含寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120051185.png" alt="image-20240629120051185"></p>
<h2 id="5-寄存器寻址-1"><a href="#5-寄存器寻址-1" class="headerlink" title="5.寄存器寻址"></a>5.寄存器寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629115951461.png" alt="image-20240629115951461"></p>
<h2 id="6-寄存器间接寻址-1"><a href="#6-寄存器间接寻址-1" class="headerlink" title="6.寄存器间接寻址"></a>6.寄存器间接寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120023014.png" alt="image-20240629120023014"></p>
<h2 id="六种寻址方式的对比-1"><a href="#六种寻址方式的对比-1" class="headerlink" title="六种寻址方式的对比"></a>六种寻址方式的对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120214066.png" alt="image-20240629120214066">## 1.直接寻址</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629115727284.png" alt="image-20240629115727284"></p>
<h2 id="2-间接寻址-2"><a href="#2-间接寻址-2" class="headerlink" title="2.间接寻址"></a>2.间接寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629115911361.png" alt="image-20240629115911361"></p>
<h2 id="3-立即寻址-2"><a href="#3-立即寻址-2" class="headerlink" title="3.立即寻址"></a>3.立即寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120147122.png" alt="image-20240629120147122"></p>
<h2 id="4-隐含寻址-2"><a href="#4-隐含寻址-2" class="headerlink" title="4.隐含寻址"></a>4.隐含寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120051185.png" alt="image-20240629120051185"></p>
<h2 id="5-寄存器寻址-2"><a href="#5-寄存器寻址-2" class="headerlink" title="5.寄存器寻址"></a>5.寄存器寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629115951461.png" alt="image-20240629115951461"></p>
<h2 id="6-寄存器间接寻址-2"><a href="#6-寄存器间接寻址-2" class="headerlink" title="6.寄存器间接寻址"></a>6.寄存器间接寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120023014.png" alt="image-20240629120023014"></p>
<h2 id="六种寻址方式的对比-2"><a href="#六种寻址方式的对比-2" class="headerlink" title="六种寻址方式的对比"></a>六种寻址方式的对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120214066.png" alt="image-20240629120214066">接寻址</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629115727284.png" alt="image-20240629115727284"></p>
<h2 id="2-间接寻址-3"><a href="#2-间接寻址-3" class="headerlink" title="2.间接寻址"></a>2.间接寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629115911361.png" alt="image-20240629115911361"></p>
<h2 id="3-立即寻址-3"><a href="#3-立即寻址-3" class="headerlink" title="3.立即寻址"></a>3.立即寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120147122.png" alt="image-20240629120147122"></p>
<h2 id="4-隐含寻址-3"><a href="#4-隐含寻址-3" class="headerlink" title="4.隐含寻址"></a>4.隐含寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120051185.png" alt="image-20240629120051185"></p>
<h2 id="5-寄存器寻址-3"><a href="#5-寄存器寻址-3" class="headerlink" title="5.寄存器寻址"></a>5.寄存器寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629115951461.png" alt="image-20240629115951461"></p>
<h2 id="6-寄存器间接寻址-3"><a href="#6-寄存器间接寻址-3" class="headerlink" title="6.寄存器间接寻址"></a>6.寄存器间接寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120023014.png" alt="image-20240629120023014"></p>
<h2 id="六种寻址方式的对比-3"><a href="#六种寻址方式的对比-3" class="headerlink" title="六种寻址方式的对比"></a>六种寻址方式的对比</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120214066.png" alt="image-20240629120214066"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>数据寻址2—偏移寻址</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E6%8D%AE%E5%AF%BB%E5%9D%802%E2%80%94%E5%81%8F%E7%A7%BB%E5%AF%BB%E5%9D%80/</url>
    <content><![CDATA[<h1 id="偏移寻址"><a href="#偏移寻址" class="headerlink" title="偏移寻址"></a>偏移寻址</h1><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120359192.png" alt="image-20240629120359192"></p>
<h2 id="1-基址寻址"><a href="#1-基址寻址" class="headerlink" title="1.基址寻址"></a>1.基址寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629133626719.png" alt="image-20240629133626719"></p>
<h2 id="2-变址寻址"><a href="#2-变址寻址" class="headerlink" title="2.变址寻址"></a>2.变址寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629133703840.png" alt="image-20240629133703840"></p>
<h2 id="3-相对寻址"><a href="#3-相对寻址" class="headerlink" title="3.相对寻址"></a>3.相对寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134606982.png" alt="image-20240629134606982"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-寻址对比"><a href="#1-寻址对比" class="headerlink" title="1.寻址对比"></a>1.寻址对比</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134706322.png" alt="image-20240629134706322"></p>
<h3 id="2-硬件如何实现比较"><a href="#2-硬件如何实现比较" class="headerlink" title="2.硬件如何实现比较"></a>2.硬件如何实现比较</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134754968.png" alt="image-20240629134754968">寻址</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120359192.png" alt="image-20240629120359192"></p>
<h2 id="1-基址寻址-1"><a href="#1-基址寻址-1" class="headerlink" title="1.基址寻址"></a>1.基址寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629133626719.png" alt="image-20240629133626719"></p>
<h2 id="2-变址寻址-1"><a href="#2-变址寻址-1" class="headerlink" title="2.变址寻址"></a>2.变址寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629133703840.png" alt="image-20240629133703840"></p>
<h2 id="3-相对寻址-1"><a href="#3-相对寻址-1" class="headerlink" title="3.相对寻址"></a>3.相对寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134606982.png" alt="image-20240629134606982"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-寻址对比-1"><a href="#1-寻址对比-1" class="headerlink" title="1.寻址对比"></a>1.寻址对比</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134706322.png" alt="image-20240629134706322"></p>
<h3 id="2-硬件如何实现比较-1"><a href="#2-硬件如何实现比较-1" class="headerlink" title="2.硬件如何实现比较"></a>2.硬件如何实现比较</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134754968.png" alt="image-20240629134754968"># 偏移寻址</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120359192.png" alt="image-20240629120359192"></p>
<h2 id="1-基址寻址-2"><a href="#1-基址寻址-2" class="headerlink" title="1.基址寻址"></a>1.基址寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629133626719.png" alt="image-20240629133626719"></p>
<h2 id="2-变址寻址-2"><a href="#2-变址寻址-2" class="headerlink" title="2.变址寻址"></a>2.变址寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629133703840.png" alt="image-20240629133703840"></p>
<h2 id="3-相对寻址-2"><a href="#3-相对寻址-2" class="headerlink" title="3.相对寻址"></a>3.相对寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134606982.png" alt="image-20240629134606982"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-寻址对比-2"><a href="#1-寻址对比-2" class="headerlink" title="1.寻址对比"></a>1.寻址对比</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134706322.png" alt="image-20240629134706322"></p>
<h3 id="2-硬件如何实现比较-2"><a href="#2-硬件如何实现比较-2" class="headerlink" title="2.硬件如何实现比较"></a>2.硬件如何实现比较</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134754968.png" alt="image-20240629134754968">寻址</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629120359192.png" alt="image-20240629120359192"></p>
<h2 id="1-基址寻址-3"><a href="#1-基址寻址-3" class="headerlink" title="1.基址寻址"></a>1.基址寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629133626719.png" alt="image-20240629133626719"></p>
<h2 id="2-变址寻址-3"><a href="#2-变址寻址-3" class="headerlink" title="2.变址寻址"></a>2.变址寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629133703840.png" alt="image-20240629133703840"></p>
<h2 id="3-相对寻址-3"><a href="#3-相对寻址-3" class="headerlink" title="3.相对寻址"></a>3.相对寻址</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134606982.png" alt="image-20240629134606982"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-寻址对比-3"><a href="#1-寻址对比-3" class="headerlink" title="1.寻址对比"></a>1.寻址对比</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134706322.png" alt="image-20240629134706322"></p>
<h3 id="2-硬件如何实现比较-3"><a href="#2-硬件如何实现比较-3" class="headerlink" title="2.硬件如何实现比较"></a>2.硬件如何实现比较</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134754968.png" alt="image-20240629134754968"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>数据寻址3—堆栈寻址</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E6%8D%AE%E5%AF%BB%E5%9D%803%E2%80%94%E5%A0%86%E6%A0%88%E5%AF%BB%E5%9D%80/</url>
    <content><![CDATA[<h1 id="堆栈寻址"><a href="#堆栈寻址" class="headerlink" title="堆栈寻址"></a>堆栈寻址</h1><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134852177.png" alt="image-20240629134852177"></p>
<h2 id="硬堆栈和软堆栈"><a href="#硬堆栈和软堆栈" class="headerlink" title="硬堆栈和软堆栈"></a>硬堆栈和软堆栈</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134927930.png" alt="image-20240629134927930"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="寻址方式对比"><a href="#寻址方式对比" class="headerlink" title="寻址方式对比"></a>寻址方式对比</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134959450.png" alt="image-20240629134959450">寻址</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134852177.png" alt="image-20240629134852177"></p>
<h2 id="硬堆栈和软堆栈-1"><a href="#硬堆栈和软堆栈-1" class="headerlink" title="硬堆栈和软堆栈"></a>硬堆栈和软堆栈</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134927930.png" alt="image-20240629134927930"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="寻址方式对比-1"><a href="#寻址方式对比-1" class="headerlink" title="寻址方式对比"></a>寻址方式对比</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134959450.png" alt="image-20240629134959450"># 堆栈寻址</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134852177.png" alt="image-20240629134852177"></p>
<h2 id="硬堆栈和软堆栈-2"><a href="#硬堆栈和软堆栈-2" class="headerlink" title="硬堆栈和软堆栈"></a>硬堆栈和软堆栈</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134927930.png" alt="image-20240629134927930"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="寻址方式对比-2"><a href="#寻址方式对比-2" class="headerlink" title="寻址方式对比"></a>寻址方式对比</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134959450.png" alt="image-20240629134959450">寻址</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134852177.png" alt="image-20240629134852177"></p>
<h2 id="硬堆栈和软堆栈-3"><a href="#硬堆栈和软堆栈-3" class="headerlink" title="硬堆栈和软堆栈"></a>硬堆栈和软堆栈</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134927930.png" alt="image-20240629134927930"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="寻址方式对比-3"><a href="#寻址方式对比-3" class="headerlink" title="寻址方式对比"></a>寻址方式对比</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629134959450.png" alt="image-20240629134959450"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>数据寻址概述</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E6%8D%AE%E5%AF%BB%E5%9D%80%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="数据寻址"><a href="#数据寻址" class="headerlink" title="数据寻址"></a>数据寻址</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>数据寻址（Data Addressing）是指处理器如何确定操作数在内存中的地址的过程。它涉及到使用不同的寻址模式来计算操作数的有效地址。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-操作数"><a href="#1-操作数" class="headerlink" title="1.操作数"></a>1.操作数</h3><p>指令中用于操作的数据。</p>
<h3 id="2-寻址模式"><a href="#2-寻址模式" class="headerlink" title="2.寻址模式"></a>2.寻址模式</h3><p>决定如何计算操作数地址的方法。</p>
<h3 id="3-地址计算逻辑"><a href="#3-地址计算逻辑" class="headerlink" title="3.地址计算逻辑"></a>3.地址计算逻辑</h3><p>处理器中的逻辑电路，用于根据寻址模式计算操作数的地址。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>数据寻址通常涉及处理器中的地址生成单元，它负责根据指令中的寻址模式和寄存器内容来计算操作数的地址。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628150420440.png" alt="image-20240628150420440"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-直接寻址"><a href="#1-直接寻址" class="headerlink" title="1.直接寻址"></a>1.直接寻址</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p>直接寻址是指令中直接包含操作数的内存地址。</p>
<h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>简单直接，但灵活性较低。</p>
<h3 id="2-间接寻址"><a href="#2-间接寻址" class="headerlink" title="2.间接寻址"></a>2.间接寻址</h3><h4 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h4><p>间接寻址是指令中的地址指向另一个内存地址，该地址中存放着操作数的实际地址。</p>
<h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h4><p>增加了灵活性，但需要额外的内存访问。</p>
<h3 id="3-立即寻址"><a href="#3-立即寻址" class="headerlink" title="3.立即寻址"></a>3.立即寻址</h3><h4 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h4><p>立即寻址是指令中直接包含操作数本身，而不是地址。</p>
<h4 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h4><p>速度快，适用于常数或小数据。</p>
<h3 id="4-隐含寻址"><a href="#4-隐含寻址" class="headerlink" title="4.隐含寻址"></a>4.隐含寻址</h3><h3 id="5-寄存器寻址"><a href="#5-寄存器寻址" class="headerlink" title="5.寄存器寻址"></a>5.寄存器寻址</h3><h4 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h4><p>寄存器寻址是指令中使用寄存器作为操作数。</p>
<h4 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h4><p>访问速度快，寄存器数量有限。</p>
<h3 id="6-寄存器间接寻址"><a href="#6-寄存器间接寻址" class="headerlink" title="6.寄存器间接寻址"></a>6.寄存器间接寻址</h3><h4 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h4><p>寄存器间接寻址是指令中使用寄存器中的值作为操作数的内存地址。</p>
<h4 id="特点-4"><a href="#特点-4" class="headerlink" title="特点"></a>特点</h4><p>结合了寄存器的高速访问和间接寻址的灵活性。</p>
<h3 id="7-相对寻址"><a href="#7-相对寻址" class="headerlink" title="7.相对寻址"></a>7.相对寻址</h3><h3 id="8-基址寻址"><a href="#8-基址寻址" class="headerlink" title="8.基址寻址"></a>8.基址寻址</h3><h4 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h4><p>基址寻址是指令中使用一个基址寄存器的内容加上偏移量来计算操作数的地址。</p>
<h4 id="特点-5"><a href="#特点-5" class="headerlink" title="特点"></a>特点</h4><p>常用于多道程序设计和内存管理。</p>
<h3 id="9-变址寻址"><a href="#9-变址寻址" class="headerlink" title="9.变址寻址"></a>9.变址寻址</h3><h3 id="10-堆栈寻址"><a href="#10-堆栈寻址" class="headerlink" title="10.堆栈寻址"></a>10.堆栈寻址</h3><h4 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h4><p>堆栈寻址是指令通过堆栈指针来访问操作数。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>数据寻址的主要特征是它决定了处理器如何访问和操作内存中的数据。寻址</p>
<h2 id="定义-8"><a href="#定义-8" class="headerlink" title="定义"></a>定义</h2><p>数据寻址（Data Addressing）是指处理器如何确定操作数在内存中的地址的过程。它涉及到使用不同的寻址模式来计算操作数的有效地址。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-操作数-1"><a href="#1-操作数-1" class="headerlink" title="1.操作数"></a>1.操作数</h3><p>指令中用于操作的数据。</p>
<h3 id="2-寻址模式-1"><a href="#2-寻址模式-1" class="headerlink" title="2.寻址模式"></a>2.寻址模式</h3><p>决定如何计算操作数地址的方法。</p>
<h3 id="3-地址计算逻辑-1"><a href="#3-地址计算逻辑-1" class="headerlink" title="3.地址计算逻辑"></a>3.地址计算逻辑</h3><p>处理器中的逻辑电路，用于根据寻址模式计算操作数的地址。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>数据寻址通常涉及处理器中的地址生成单元，它负责根据指令中的寻址模式和寄存器内容来计算操作数的地址。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628150420440.png" alt="image-20240628150420440"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-直接寻址-1"><a href="#1-直接寻址-1" class="headerlink" title="1.直接寻址"></a>1.直接寻址</h3><h4 id="定义-9"><a href="#定义-9" class="headerlink" title="定义"></a>定义</h4><p>直接寻址是指令中直接包含操作数的内存地址。</p>
<h4 id="特点-6"><a href="#特点-6" class="headerlink" title="特点"></a>特点</h4><p>简单直接，但灵活性较低。</p>
<h3 id="2-间接寻址-1"><a href="#2-间接寻址-1" class="headerlink" title="2.间接寻址"></a>2.间接寻址</h3><h4 id="定义-10"><a href="#定义-10" class="headerlink" title="定义"></a>定义</h4><p>间接寻址是指令中的地址指向另一个内存地址，该地址中存放着操作数的实际地址。</p>
<h4 id="特点-7"><a href="#特点-7" class="headerlink" title="特点"></a>特点</h4><p>增加了灵活性，但需要额外的内存访问。</p>
<h3 id="3-立即寻址-1"><a href="#3-立即寻址-1" class="headerlink" title="3.立即寻址"></a>3.立即寻址</h3><h4 id="定义-11"><a href="#定义-11" class="headerlink" title="定义"></a>定义</h4><p>立即寻址是指令中直接包含操作数本身，而不是地址。</p>
<h4 id="特点-8"><a href="#特点-8" class="headerlink" title="特点"></a>特点</h4><p>速度快，适用于常数或小数据。</p>
<h3 id="4-隐含寻址-1"><a href="#4-隐含寻址-1" class="headerlink" title="4.隐含寻址"></a>4.隐含寻址</h3><h3 id="5-寄存器寻址-1"><a href="#5-寄存器寻址-1" class="headerlink" title="5.寄存器寻址"></a>5.寄存器寻址</h3><h4 id="定义-12"><a href="#定义-12" class="headerlink" title="定义"></a>定义</h4><p>寄存器寻址是指令中使用寄存器作为操作数。</p>
<h4 id="特点-9"><a href="#特点-9" class="headerlink" title="特点"></a>特点</h4><p>访问速度快，寄存器数量有限。</p>
<h3 id="6-寄存器间接寻址-1"><a href="#6-寄存器间接寻址-1" class="headerlink" title="6.寄存器间接寻址"></a>6.寄存器间接寻址</h3><h4 id="定义-13"><a href="#定义-13" class="headerlink" title="定义"></a>定义</h4><p>寄存器间接寻址是指令中使用寄存器中的值作为操作数的内存地址。</p>
<h4 id="特点-10"><a href="#特点-10" class="headerlink" title="特点"></a>特点</h4><p>结合了寄存器的高速访问和间接寻址的灵活性。</p>
<h3 id="7-相对寻址-1"><a href="#7-相对寻址-1" class="headerlink" title="7.相对寻址"></a>7.相对寻址</h3><h3 id="8-基址寻址-1"><a href="#8-基址寻址-1" class="headerlink" title="8.基址寻址"></a>8.基址寻址</h3><h4 id="定义-14"><a href="#定义-14" class="headerlink" title="定义"></a>定义</h4><p>基址寻址是指令中使用一个基址寄存器的内容加上偏移量来计算操作数的地址。</p>
<h4 id="特点-11"><a href="#特点-11" class="headerlink" title="特点"></a>特点</h4><p>常用于多道程序设计和内存管理。</p>
<h3 id="9-变址寻址-1"><a href="#9-变址寻址-1" class="headerlink" title="9.变址寻址"></a>9.变址寻址</h3><h3 id="10-堆栈寻址-1"><a href="#10-堆栈寻址-1" class="headerlink" title="10.堆栈寻址"></a>10.堆栈寻址</h3><h4 id="定义-15"><a href="#定义-15" class="headerlink" title="定义"></a>定义</h4><p>堆栈寻址是指令通过堆栈指针来访问操作数。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>数据寻址的主要特征是它决定了处理器如何访问和操作内存中的数据。# 数据寻址</p>
<h2 id="定义-16"><a href="#定义-16" class="headerlink" title="定义"></a>定义</h2><p>数据寻址（Data Addressing）是指处理器如何确定操作数在内存中的地址的过程。它涉及到使用不同的寻址模式来计算操作数的有效地址。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-操作数-2"><a href="#1-操作数-2" class="headerlink" title="1.操作数"></a>1.操作数</h3><p>指令中用于操作的数据。</p>
<h3 id="2-寻址模式-2"><a href="#2-寻址模式-2" class="headerlink" title="2.寻址模式"></a>2.寻址模式</h3><p>决定如何计算操作数地址的方法。</p>
<h3 id="3-地址计算逻辑-2"><a href="#3-地址计算逻辑-2" class="headerlink" title="3.地址计算逻辑"></a>3.地址计算逻辑</h3><p>处理器中的逻辑电路，用于根据寻址模式计算操作数的地址。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>数据寻址通常涉及处理器中的地址生成单元，它负责根据指令中的寻址模式和寄存器内容来计算操作数的地址。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628150420440.png" alt="image-20240628150420440"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-直接寻址-2"><a href="#1-直接寻址-2" class="headerlink" title="1.直接寻址"></a>1.直接寻址</h3><h4 id="定义-17"><a href="#定义-17" class="headerlink" title="定义"></a>定义</h4><p>直接寻址是指令中直接包含操作数的内存地址。</p>
<h4 id="特点-12"><a href="#特点-12" class="headerlink" title="特点"></a>特点</h4><p>简单直接，但灵活性较低。</p>
<h3 id="2-间接寻址-2"><a href="#2-间接寻址-2" class="headerlink" title="2.间接寻址"></a>2.间接寻址</h3><h4 id="定义-18"><a href="#定义-18" class="headerlink" title="定义"></a>定义</h4><p>间接寻址是指令中的地址指向另一个内存地址，该地址中存放着操作数的实际地址。</p>
<h4 id="特点-13"><a href="#特点-13" class="headerlink" title="特点"></a>特点</h4><p>增加了灵活性，但需要额外的内存访问。</p>
<h3 id="3-立即寻址-2"><a href="#3-立即寻址-2" class="headerlink" title="3.立即寻址"></a>3.立即寻址</h3><h4 id="定义-19"><a href="#定义-19" class="headerlink" title="定义"></a>定义</h4><p>立即寻址是指令中直接包含操作数本身，而不是地址。</p>
<h4 id="特点-14"><a href="#特点-14" class="headerlink" title="特点"></a>特点</h4><p>速度快，适用于常数或小数据。</p>
<h3 id="4-隐含寻址-2"><a href="#4-隐含寻址-2" class="headerlink" title="4.隐含寻址"></a>4.隐含寻址</h3><h3 id="5-寄存器寻址-2"><a href="#5-寄存器寻址-2" class="headerlink" title="5.寄存器寻址"></a>5.寄存器寻址</h3><h4 id="定义-20"><a href="#定义-20" class="headerlink" title="定义"></a>定义</h4><p>寄存器寻址是指令中使用寄存器作为操作数。</p>
<h4 id="特点-15"><a href="#特点-15" class="headerlink" title="特点"></a>特点</h4><p>访问速度快，寄存器数量有限。</p>
<h3 id="6-寄存器间接寻址-2"><a href="#6-寄存器间接寻址-2" class="headerlink" title="6.寄存器间接寻址"></a>6.寄存器间接寻址</h3><h4 id="定义-21"><a href="#定义-21" class="headerlink" title="定义"></a>定义</h4><p>寄存器间接寻址是指令中使用寄存器中的值作为操作数的内存地址。</p>
<h4 id="特点-16"><a href="#特点-16" class="headerlink" title="特点"></a>特点</h4><p>结合了寄存器的高速访问和间接寻址的灵活性。</p>
<h3 id="7-相对寻址-2"><a href="#7-相对寻址-2" class="headerlink" title="7.相对寻址"></a>7.相对寻址</h3><h3 id="8-基址寻址-2"><a href="#8-基址寻址-2" class="headerlink" title="8.基址寻址"></a>8.基址寻址</h3><h4 id="定义-22"><a href="#定义-22" class="headerlink" title="定义"></a>定义</h4><p>基址寻址是指令中使用一个基址寄存器的内容加上偏移量来计算操作数的地址。</p>
<h4 id="特点-17"><a href="#特点-17" class="headerlink" title="特点"></a>特点</h4><p>常用于多道程序设计和内存管理。</p>
<h3 id="9-变址寻址-2"><a href="#9-变址寻址-2" class="headerlink" title="9.变址寻址"></a>9.变址寻址</h3><h3 id="10-堆栈寻址-2"><a href="#10-堆栈寻址-2" class="headerlink" title="10.堆栈寻址"></a>10.堆栈寻址</h3><h4 id="定义-23"><a href="#定义-23" class="headerlink" title="定义"></a>定义</h4><p>堆栈寻址是指令通过堆栈指针来访问操作数。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>数据寻址的主要特征是它决定了处理器如何访问和操作内存中的数据。寻址</p>
<h2 id="定义-24"><a href="#定义-24" class="headerlink" title="定义"></a>定义</h2><p>数据寻址（Data Addressing）是指处理器如何确定操作数在内存中的地址的过程。它涉及到使用不同的寻址模式来计算操作数的有效地址。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-操作数-3"><a href="#1-操作数-3" class="headerlink" title="1.操作数"></a>1.操作数</h3><p>指令中用于操作的数据。</p>
<h3 id="2-寻址模式-3"><a href="#2-寻址模式-3" class="headerlink" title="2.寻址模式"></a>2.寻址模式</h3><p>决定如何计算操作数地址的方法。</p>
<h3 id="3-地址计算逻辑-3"><a href="#3-地址计算逻辑-3" class="headerlink" title="3.地址计算逻辑"></a>3.地址计算逻辑</h3><p>处理器中的逻辑电路，用于根据寻址模式计算操作数的地址。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>数据寻址通常涉及处理器中的地址生成单元，它负责根据指令中的寻址模式和寄存器内容来计算操作数的地址。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628150420440.png" alt="image-20240628150420440"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-直接寻址-3"><a href="#1-直接寻址-3" class="headerlink" title="1.直接寻址"></a>1.直接寻址</h3><h4 id="定义-25"><a href="#定义-25" class="headerlink" title="定义"></a>定义</h4><p>直接寻址是指令中直接包含操作数的内存地址。</p>
<h4 id="特点-18"><a href="#特点-18" class="headerlink" title="特点"></a>特点</h4><p>简单直接，但灵活性较低。</p>
<h3 id="2-间接寻址-3"><a href="#2-间接寻址-3" class="headerlink" title="2.间接寻址"></a>2.间接寻址</h3><h4 id="定义-26"><a href="#定义-26" class="headerlink" title="定义"></a>定义</h4><p>间接寻址是指令中的地址指向另一个内存地址，该地址中存放着操作数的实际地址。</p>
<h4 id="特点-19"><a href="#特点-19" class="headerlink" title="特点"></a>特点</h4><p>增加了灵活性，但需要额外的内存访问。</p>
<h3 id="3-立即寻址-3"><a href="#3-立即寻址-3" class="headerlink" title="3.立即寻址"></a>3.立即寻址</h3><h4 id="定义-27"><a href="#定义-27" class="headerlink" title="定义"></a>定义</h4><p>立即寻址是指令中直接包含操作数本身，而不是地址。</p>
<h4 id="特点-20"><a href="#特点-20" class="headerlink" title="特点"></a>特点</h4><p>速度快，适用于常数或小数据。</p>
<h3 id="4-隐含寻址-3"><a href="#4-隐含寻址-3" class="headerlink" title="4.隐含寻址"></a>4.隐含寻址</h3><h3 id="5-寄存器寻址-3"><a href="#5-寄存器寻址-3" class="headerlink" title="5.寄存器寻址"></a>5.寄存器寻址</h3><h4 id="定义-28"><a href="#定义-28" class="headerlink" title="定义"></a>定义</h4><p>寄存器寻址是指令中使用寄存器作为操作数。</p>
<h4 id="特点-21"><a href="#特点-21" class="headerlink" title="特点"></a>特点</h4><p>访问速度快，寄存器数量有限。</p>
<h3 id="6-寄存器间接寻址-3"><a href="#6-寄存器间接寻址-3" class="headerlink" title="6.寄存器间接寻址"></a>6.寄存器间接寻址</h3><h4 id="定义-29"><a href="#定义-29" class="headerlink" title="定义"></a>定义</h4><p>寄存器间接寻址是指令中使用寄存器中的值作为操作数的内存地址。</p>
<h4 id="特点-22"><a href="#特点-22" class="headerlink" title="特点"></a>特点</h4><p>结合了寄存器的高速访问和间接寻址的灵活性。</p>
<h3 id="7-相对寻址-3"><a href="#7-相对寻址-3" class="headerlink" title="7.相对寻址"></a>7.相对寻址</h3><h3 id="8-基址寻址-3"><a href="#8-基址寻址-3" class="headerlink" title="8.基址寻址"></a>8.基址寻址</h3><h4 id="定义-30"><a href="#定义-30" class="headerlink" title="定义"></a>定义</h4><p>基址寻址是指令中使用一个基址寄存器的内容加上偏移量来计算操作数的地址。</p>
<h4 id="特点-23"><a href="#特点-23" class="headerlink" title="特点"></a>特点</h4><p>常用于多道程序设计和内存管理。</p>
<h3 id="9-变址寻址-3"><a href="#9-变址寻址-3" class="headerlink" title="9.变址寻址"></a>9.变址寻址</h3><h3 id="10-堆栈寻址-3"><a href="#10-堆栈寻址-3" class="headerlink" title="10.堆栈寻址"></a>10.堆栈寻址</h3><h4 id="定义-31"><a href="#定义-31" class="headerlink" title="定义"></a>定义</h4><p>堆栈寻址是指令通过堆栈指针来访问操作数。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>数据寻址的主要特征是它决定了处理器如何访问和操作内存中的数据。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>数据的存储和排列</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AD%98%E5%82%A8%E5%92%8C%E6%8E%92%E5%88%97/</url>
    <content><![CDATA[<h1 id="数据的存储和排列"><a href="#数据的存储和排列" class="headerlink" title="数据的存储和排列"></a>数据的存储和排列</h1><h2 id="大小端模式"><a href="#大小端模式" class="headerlink" title="大小端模式"></a>大小端模式</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>大小端模式（Endianess）是计算机体系结构中一种描述多字节数据类型（如整数、浮点数等）在内存中存储顺序的术语。</p>
<h3 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h3><p>大小端模式涉及到数据在内存中的字节顺序，特别是在处理多字节数据类型时。</p>
<h3 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h3><p>在大端模式中，数据的最高有效字节存储在最小的内存地址处，</p>
<p>而在小端模式中，最低有效字节存储在最小的内存地址处。</p>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="1-大端模式（Big-Endian）"><a href="#1-大端模式（Big-Endian）" class="headerlink" title="1.大端模式（Big Endian）"></a>1.大端模式（Big Endian）</h4><h4 id="2-小端模式（Little-Endian）。"><a href="#2-小端模式（Little-Endian）。" class="headerlink" title="2.小端模式（Little Endian）。"></a>2.小端模式（Little Endian）。</h4><p>大小端模式是描述数据在内存中存储顺序的两种不同方式。</p>
<h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><p>大小端模式的主要特征是它们在内存中存储多字节数据的字节顺序不同。</p>
<h2 id="对齐方式"><a href="#对齐方式" class="headerlink" title="对齐方式"></a>对齐方式</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>边界对齐（Alignment）是计算机内存管理中的一个概念，指的是数据在内存中的存放位置与其大小之间的关系。</p>
<h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><h4 id="1-边界对齐"><a href="#1-边界对齐" class="headerlink" title="1.边界对齐"></a>1.边界对齐</h4><h4 id="2-边界不对齐"><a href="#2-边界不对齐" class="headerlink" title="2.边界不对齐"></a>2.边界不对齐</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171036970.png" alt="image-20240626171036970">排列</p>
<h2 id="大小端模式-1"><a href="#大小端模式-1" class="headerlink" title="大小端模式"></a>大小端模式</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>大小端模式（Endianess）是计算机体系结构中一种描述多字节数据类型（如整数、浮点数等）在内存中存储顺序的术语。</p>
<h3 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h3><p>大小端模式涉及到数据在内存中的字节顺序，特别是在处理多字节数据类型时。</p>
<h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h3><p>在大端模式中，数据的最高有效字节存储在最小的内存地址处，</p>
<p>而在小端模式中，最低有效字节存储在最小的内存地址处。</p>
<h3 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h3><h4 id="1-大端模式（Big-Endian）-1"><a href="#1-大端模式（Big-Endian）-1" class="headerlink" title="1.大端模式（Big Endian）"></a>1.大端模式（Big Endian）</h4><h4 id="2-小端模式（Little-Endian）。-1"><a href="#2-小端模式（Little-Endian）。-1" class="headerlink" title="2.小端模式（Little Endian）。"></a>2.小端模式（Little Endian）。</h4><p>大小端模式是描述数据在内存中存储顺序的两种不同方式。</p>
<h3 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h3><p>大小端模式的主要特征是它们在内存中存储多字节数据的字节顺序不同。</p>
<h2 id="对齐方式-1"><a href="#对齐方式-1" class="headerlink" title="对齐方式"></a>对齐方式</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>边界对齐（Alignment）是计算机内存管理中的一个概念，指的是数据在内存中的存放位置与其大小之间的关系。</p>
<h3 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h3><h4 id="1-边界对齐-1"><a href="#1-边界对齐-1" class="headerlink" title="1.边界对齐"></a>1.边界对齐</h4><h4 id="2-边界不对齐-1"><a href="#2-边界不对齐-1" class="headerlink" title="2.边界不对齐"></a>2.边界不对齐</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171036970.png" alt="image-20240626171036970"># 数据的存储和排列</p>
<h2 id="大小端模式-2"><a href="#大小端模式-2" class="headerlink" title="大小端模式"></a>大小端模式</h2><h3 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h3><p>大小端模式（Endianess）是计算机体系结构中一种描述多字节数据类型（如整数、浮点数等）在内存中存储顺序的术语。</p>
<h3 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h3><p>大小端模式涉及到数据在内存中的字节顺序，特别是在处理多字节数据类型时。</p>
<h3 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h3><p>在大端模式中，数据的最高有效字节存储在最小的内存地址处，</p>
<p>而在小端模式中，最低有效字节存储在最小的内存地址处。</p>
<h3 id="分类-4"><a href="#分类-4" class="headerlink" title="分类"></a>分类</h3><h4 id="1-大端模式（Big-Endian）-2"><a href="#1-大端模式（Big-Endian）-2" class="headerlink" title="1.大端模式（Big Endian）"></a>1.大端模式（Big Endian）</h4><h4 id="2-小端模式（Little-Endian）。-2"><a href="#2-小端模式（Little-Endian）。-2" class="headerlink" title="2.小端模式（Little Endian）。"></a>2.小端模式（Little Endian）。</h4><p>大小端模式是描述数据在内存中存储顺序的两种不同方式。</p>
<h3 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h3><p>大小端模式的主要特征是它们在内存中存储多字节数据的字节顺序不同。</p>
<h2 id="对齐方式-2"><a href="#对齐方式-2" class="headerlink" title="对齐方式"></a>对齐方式</h2><h3 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h3><p>边界对齐（Alignment）是计算机内存管理中的一个概念，指的是数据在内存中的存放位置与其大小之间的关系。</p>
<h3 id="分类-5"><a href="#分类-5" class="headerlink" title="分类"></a>分类</h3><h4 id="1-边界对齐-2"><a href="#1-边界对齐-2" class="headerlink" title="1.边界对齐"></a>1.边界对齐</h4><h4 id="2-边界不对齐-2"><a href="#2-边界不对齐-2" class="headerlink" title="2.边界不对齐"></a>2.边界不对齐</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171036970.png" alt="image-20240626171036970">排列</p>
<h2 id="大小端模式-3"><a href="#大小端模式-3" class="headerlink" title="大小端模式"></a>大小端模式</h2><h3 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h3><p>大小端模式（Endianess）是计算机体系结构中一种描述多字节数据类型（如整数、浮点数等）在内存中存储顺序的术语。</p>
<h3 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h3><p>大小端模式涉及到数据在内存中的字节顺序，特别是在处理多字节数据类型时。</p>
<h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h3><p>在大端模式中，数据的最高有效字节存储在最小的内存地址处，</p>
<p>而在小端模式中，最低有效字节存储在最小的内存地址处。</p>
<h3 id="分类-6"><a href="#分类-6" class="headerlink" title="分类"></a>分类</h3><h4 id="1-大端模式（Big-Endian）-3"><a href="#1-大端模式（Big-Endian）-3" class="headerlink" title="1.大端模式（Big Endian）"></a>1.大端模式（Big Endian）</h4><h4 id="2-小端模式（Little-Endian）。-3"><a href="#2-小端模式（Little-Endian）。-3" class="headerlink" title="2.小端模式（Little Endian）。"></a>2.小端模式（Little Endian）。</h4><p>大小端模式是描述数据在内存中存储顺序的两种不同方式。</p>
<h3 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h3><p>大小端模式的主要特征是它们在内存中存储多字节数据的字节顺序不同。</p>
<h2 id="对齐方式-3"><a href="#对齐方式-3" class="headerlink" title="对齐方式"></a>对齐方式</h2><h3 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h3><p>边界对齐（Alignment）是计算机内存管理中的一个概念，指的是数据在内存中的存放位置与其大小之间的关系。</p>
<h3 id="分类-7"><a href="#分类-7" class="headerlink" title="分类"></a>分类</h3><h4 id="1-边界对齐-3"><a href="#1-边界对齐-3" class="headerlink" title="1.边界对齐"></a>1.边界对齐</h4><h4 id="2-边界不对齐-3"><a href="#2-边界不对齐-3" class="headerlink" title="2.边界不对齐"></a>2.边界不对齐</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171036970.png" alt="image-20240626171036970"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>数据通路—专用通路结构</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E6%8D%AE%E9%80%9A%E8%B7%AF%E2%80%94%E4%B8%93%E7%94%A8%E9%80%9A%E8%B7%AF%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="专用数据通路"><a href="#专用数据通路" class="headerlink" title="专用数据通路"></a>专用数据通路</h1><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142849005.png" alt="image-20240629142849005">通路</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142849005.png" alt="image-20240629142849005"># 专用数据通路</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142849005.png" alt="image-20240629142849005">通路</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142849005.png" alt="image-20240629142849005"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>数据通路—单总线结构</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E6%8D%AE%E9%80%9A%E8%B7%AF%E2%80%94%E5%8D%95%E6%80%BB%E7%BA%BF%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="单总线结构"><a href="#单总线结构" class="headerlink" title="单总线结构"></a>单总线结构</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>数据通路是计算机系统中数据传输和处理的路径，包括处理器内部和处理器与内存之间的数据流动。它由一系列硬件组件组成，用于执行算术、逻辑操作和数据传输等功能。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-寄存器"><a href="#1-寄存器" class="headerlink" title="1.寄存器"></a>1.寄存器</h3><p>用于暂时存储数据和指令。</p>
<h3 id="2-算术逻辑单元（ALU）"><a href="#2-算术逻辑单元（ALU）" class="headerlink" title="2.算术逻辑单元（ALU）"></a>2.算术逻辑单元（ALU）</h3><p>执行算术和逻辑运算。</p>
<h3 id="3-多路复用器（MUX）"><a href="#3-多路复用器（MUX）" class="headerlink" title="3.多路复用器（MUX）"></a>3.多路复用器（MUX）</h3><p>选择输入信号进行处理。</p>
<h3 id="4-加法器"><a href="#4-加法器" class="headerlink" title="4.加法器"></a>4.加法器</h3><p>执行加法运算，常用于地址计算。</p>
<h3 id="5-移位器"><a href="#5-移位器" class="headerlink" title="5.移位器"></a>5.移位器</h3><p>执行移位操作。</p>
<h3 id="6-数据总线"><a href="#6-数据总线" class="headerlink" title="6.数据总线"></a>6.数据总线</h3><p>用于数据在各组件之间传输。</p>
<h3 id="7-控制单元"><a href="#7-控制单元" class="headerlink" title="7.控制单元"></a>7.控制单元</h3><p>生成控制信号，控制数据通路的操作。</p>
<h2 id="单总线结构-1"><a href="#单总线结构-1" class="headerlink" title="单总线结构"></a>单总线结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142607581.png" alt="image-20240629142607581"></p>
<h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142642030.png" alt="image-20240629142642030"><br>结构</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>数据通路是计算机系统中数据传输和处理的路径，包括处理器内部和处理器与内存之间的数据流动。它由一系列硬件组件组成，用于执行算术、逻辑操作和数据传输等功能。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-寄存器-1"><a href="#1-寄存器-1" class="headerlink" title="1.寄存器"></a>1.寄存器</h3><p>用于暂时存储数据和指令。</p>
<h3 id="2-算术逻辑单元（ALU）-1"><a href="#2-算术逻辑单元（ALU）-1" class="headerlink" title="2.算术逻辑单元（ALU）"></a>2.算术逻辑单元（ALU）</h3><p>执行算术和逻辑运算。</p>
<h3 id="3-多路复用器（MUX）-1"><a href="#3-多路复用器（MUX）-1" class="headerlink" title="3.多路复用器（MUX）"></a>3.多路复用器（MUX）</h3><p>选择输入信号进行处理。</p>
<h3 id="4-加法器-1"><a href="#4-加法器-1" class="headerlink" title="4.加法器"></a>4.加法器</h3><p>执行加法运算，常用于地址计算。</p>
<h3 id="5-移位器-1"><a href="#5-移位器-1" class="headerlink" title="5.移位器"></a>5.移位器</h3><p>执行移位操作。</p>
<h3 id="6-数据总线-1"><a href="#6-数据总线-1" class="headerlink" title="6.数据总线"></a>6.数据总线</h3><p>用于数据在各组件之间传输。</p>
<h3 id="7-控制单元-1"><a href="#7-控制单元-1" class="headerlink" title="7.控制单元"></a>7.控制单元</h3><p>生成控制信号，控制数据通路的操作。</p>
<h2 id="单总线结构-2"><a href="#单总线结构-2" class="headerlink" title="单总线结构"></a>单总线结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142607581.png" alt="image-20240629142607581"></p>
<h2 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142642030.png" alt="image-20240629142642030"># 单总线结构</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>数据通路是计算机系统中数据传输和处理的路径，包括处理器内部和处理器与内存之间的数据流动。它由一系列硬件组件组成，用于执行算术、逻辑操作和数据传输等功能。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-寄存器-2"><a href="#1-寄存器-2" class="headerlink" title="1.寄存器"></a>1.寄存器</h3><p>用于暂时存储数据和指令。</p>
<h3 id="2-算术逻辑单元（ALU）-2"><a href="#2-算术逻辑单元（ALU）-2" class="headerlink" title="2.算术逻辑单元（ALU）"></a>2.算术逻辑单元（ALU）</h3><p>执行算术和逻辑运算。</p>
<h3 id="3-多路复用器（MUX）-2"><a href="#3-多路复用器（MUX）-2" class="headerlink" title="3.多路复用器（MUX）"></a>3.多路复用器（MUX）</h3><p>选择输入信号进行处理。</p>
<h3 id="4-加法器-2"><a href="#4-加法器-2" class="headerlink" title="4.加法器"></a>4.加法器</h3><p>执行加法运算，常用于地址计算。</p>
<h3 id="5-移位器-2"><a href="#5-移位器-2" class="headerlink" title="5.移位器"></a>5.移位器</h3><p>执行移位操作。</p>
<h3 id="6-数据总线-2"><a href="#6-数据总线-2" class="headerlink" title="6.数据总线"></a>6.数据总线</h3><p>用于数据在各组件之间传输。</p>
<h3 id="7-控制单元-2"><a href="#7-控制单元-2" class="headerlink" title="7.控制单元"></a>7.控制单元</h3><p>生成控制信号，控制数据通路的操作。</p>
<h2 id="单总线结构-3"><a href="#单总线结构-3" class="headerlink" title="单总线结构"></a>单总线结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142607581.png" alt="image-20240629142607581"></p>
<h2 id="应用-2"><a href="#应用-2" class="headerlink" title="应用"></a>应用</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142642030.png" alt="image-20240629142642030"><br>结构</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>数据通路是计算机系统中数据传输和处理的路径，包括处理器内部和处理器与内存之间的数据流动。它由一系列硬件组件组成，用于执行算术、逻辑操作和数据传输等功能。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-寄存器-3"><a href="#1-寄存器-3" class="headerlink" title="1.寄存器"></a>1.寄存器</h3><p>用于暂时存储数据和指令。</p>
<h3 id="2-算术逻辑单元（ALU）-3"><a href="#2-算术逻辑单元（ALU）-3" class="headerlink" title="2.算术逻辑单元（ALU）"></a>2.算术逻辑单元（ALU）</h3><p>执行算术和逻辑运算。</p>
<h3 id="3-多路复用器（MUX）-3"><a href="#3-多路复用器（MUX）-3" class="headerlink" title="3.多路复用器（MUX）"></a>3.多路复用器（MUX）</h3><p>选择输入信号进行处理。</p>
<h3 id="4-加法器-3"><a href="#4-加法器-3" class="headerlink" title="4.加法器"></a>4.加法器</h3><p>执行加法运算，常用于地址计算。</p>
<h3 id="5-移位器-3"><a href="#5-移位器-3" class="headerlink" title="5.移位器"></a>5.移位器</h3><p>执行移位操作。</p>
<h3 id="6-数据总线-3"><a href="#6-数据总线-3" class="headerlink" title="6.数据总线"></a>6.数据总线</h3><p>用于数据在各组件之间传输。</p>
<h3 id="7-控制单元-3"><a href="#7-控制单元-3" class="headerlink" title="7.控制单元"></a>7.控制单元</h3><p>生成控制信号，控制数据通路的操作。</p>
<h2 id="单总线结构-4"><a href="#单总线结构-4" class="headerlink" title="单总线结构"></a>单总线结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142607581.png" alt="image-20240629142607581"></p>
<h2 id="应用-3"><a href="#应用-3" class="headerlink" title="应用"></a>应用</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629142642030.png" alt="image-20240629142642030"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>无符号整数的表示和运算</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%97%A0%E7%AC%A6%E5%8F%B7%E6%95%B4%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="无符号整数的表示和运算"><a href="#无符号整数的表示和运算" class="headerlink" title="无符号整数的表示和运算"></a>无符号整数的表示和运算</h1><h2 id="表示"><a href="#表示" class="headerlink" title="表示"></a>表示</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>无符号整数（Unsigned Integer）是一种数据类型，它只包含非负整数，即没有符号（正或负）的整数。</p>
<h3 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h3><p>数字：只包括0和正整数。<br>位宽：表示无符号整数的数据类型可以存储的位数，如8位、16位、32位等。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625163408456.png" alt="image-20240625163408456"></p>
<h3 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h3><p>无符号整数在计算机中以二进制形式存储，不包含表示正负的符号位。</p>
<h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><h3 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h3><p>从最低位开始，<strong>按位相加</strong>，并逐渐向更高位进位。</p>
<h3 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h3><p>1.被减数不变，减数<strong>全部位按位取反、末位+1</strong>。这样子，减法变加法</p>
<p>2.从从最低位开始，<strong>按位相加</strong>，并逐渐向更高位进位。运算</p>
<h2 id="表示-1"><a href="#表示-1" class="headerlink" title="表示"></a>表示</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>无符号整数（Unsigned Integer）是一种数据类型，它只包含非负整数，即没有符号（正或负）的整数。</p>
<h3 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h3><p>数字：只包括0和正整数。<br>位宽：表示无符号整数的数据类型可以存储的位数，如8位、16位、32位等。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625163408456.png" alt="image-20240625163408456"></p>
<h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h3><p>无符号整数在计算机中以二进制形式存储，不包含表示正负的符号位。</p>
<h2 id="运算-1"><a href="#运算-1" class="headerlink" title="运算"></a>运算</h2><h3 id="加法-1"><a href="#加法-1" class="headerlink" title="加法"></a>加法</h3><p>从最低位开始，<strong>按位相加</strong>，并逐渐向更高位进位。</p>
<h3 id="减法-1"><a href="#减法-1" class="headerlink" title="减法"></a>减法</h3><p>1.被减数不变，减数<strong>全部位按位取反、末位+1</strong>。这样子，减法变加法</p>
<p>2.从从最低位开始，<strong>按位相加</strong>，并逐渐向更高位进位。# 无符号整数的表示和运算</p>
<h2 id="表示-2"><a href="#表示-2" class="headerlink" title="表示"></a>表示</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>无符号整数（Unsigned Integer）是一种数据类型，它只包含非负整数，即没有符号（正或负）的整数。</p>
<h3 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h3><p>数字：只包括0和正整数。<br>位宽：表示无符号整数的数据类型可以存储的位数，如8位、16位、32位等。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625163408456.png" alt="image-20240625163408456"></p>
<h3 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h3><p>无符号整数在计算机中以二进制形式存储，不包含表示正负的符号位。</p>
<h2 id="运算-2"><a href="#运算-2" class="headerlink" title="运算"></a>运算</h2><h3 id="加法-2"><a href="#加法-2" class="headerlink" title="加法"></a>加法</h3><p>从最低位开始，<strong>按位相加</strong>，并逐渐向更高位进位。</p>
<h3 id="减法-2"><a href="#减法-2" class="headerlink" title="减法"></a>减法</h3><p>1.被减数不变，减数<strong>全部位按位取反、末位+1</strong>。这样子，减法变加法</p>
<p>2.从从最低位开始，<strong>按位相加</strong>，并逐渐向更高位进位。运算</p>
<h2 id="表示-3"><a href="#表示-3" class="headerlink" title="表示"></a>表示</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>无符号整数（Unsigned Integer）是一种数据类型，它只包含非负整数，即没有符号（正或负）的整数。</p>
<h3 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h3><p>数字：只包括0和正整数。<br>位宽：表示无符号整数的数据类型可以存储的位数，如8位、16位、32位等。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625163408456.png" alt="image-20240625163408456"></p>
<h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h3><p>无符号整数在计算机中以二进制形式存储，不包含表示正负的符号位。</p>
<h2 id="运算-3"><a href="#运算-3" class="headerlink" title="运算"></a>运算</h2><h3 id="加法-3"><a href="#加法-3" class="headerlink" title="加法"></a>加法</h3><p>从最低位开始，<strong>按位相加</strong>，并逐渐向更高位进位。</p>
<h3 id="减法-3"><a href="#减法-3" class="headerlink" title="减法"></a>减法</h3><p>1.被减数不变，减数<strong>全部位按位取反、末位+1</strong>。这样子，减法变加法</p>
<p>2.从从最低位开始，<strong>按位相加</strong>，并逐渐向更高位进位。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>标志位的生成</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%A0%87%E5%BF%97%E4%BD%8D%E7%9A%84%E7%94%9F%E6%88%90/</url>
    <content><![CDATA[<h1 id="标志位的生成"><a href="#标志位的生成" class="headerlink" title="标志位的生成"></a>标志位的生成</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.OF</p>
<p>2.SF</p>
<p>3.ZF</p>
<p>4.CF</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175829477.png" alt="image-20240625175829477"></p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175748969.png" alt="image-20240625175748969"></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-OF-有符号的看这一位"><a href="#1-OF-有符号的看这一位" class="headerlink" title="1.OF(有符号的看这一位)"></a>1.OF(有符号的看这一位)</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180000731.png" alt="image-20240625180000731"></p>
<h3 id="2-SF"><a href="#2-SF" class="headerlink" title="2.SF"></a>2.SF</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180019859.png" alt="image-20240625180019859"></p>
<h3 id="3-ZF"><a href="#3-ZF" class="headerlink" title="3.ZF"></a>3.ZF</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180046723.png" alt="image-20240625180046723"></p>
<h3 id="4-CF-无符号的看这一位"><a href="#4-CF-无符号的看这一位" class="headerlink" title="4.CF(无符号的看这一位)"></a>4.CF(无符号的看这一位)</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180119205.png" alt="image-20240625180119205"></p>
<p>生成</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.OF</p>
<p>2.SF</p>
<p>3.ZF</p>
<p>4.CF</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175829477.png" alt="image-20240625175829477"></p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175748969.png" alt="image-20240625175748969"></p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-OF-有符号的看这一位-1"><a href="#1-OF-有符号的看这一位-1" class="headerlink" title="1.OF(有符号的看这一位)"></a>1.OF(有符号的看这一位)</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180000731.png" alt="image-20240625180000731"></p>
<h3 id="2-SF-1"><a href="#2-SF-1" class="headerlink" title="2.SF"></a>2.SF</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180019859.png" alt="image-20240625180019859"></p>
<h3 id="3-ZF-1"><a href="#3-ZF-1" class="headerlink" title="3.ZF"></a>3.ZF</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180046723.png" alt="image-20240625180046723"></p>
<h3 id="4-CF-无符号的看这一位-1"><a href="#4-CF-无符号的看这一位-1" class="headerlink" title="4.CF(无符号的看这一位)"></a>4.CF(无符号的看这一位)</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180119205.png" alt="image-20240625180119205"># 标志位的生成</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.OF</p>
<p>2.SF</p>
<p>3.ZF</p>
<p>4.CF</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175829477.png" alt="image-20240625175829477"></p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175748969.png" alt="image-20240625175748969"></p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-OF-有符号的看这一位-2"><a href="#1-OF-有符号的看这一位-2" class="headerlink" title="1.OF(有符号的看这一位)"></a>1.OF(有符号的看这一位)</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180000731.png" alt="image-20240625180000731"></p>
<h3 id="2-SF-2"><a href="#2-SF-2" class="headerlink" title="2.SF"></a>2.SF</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180019859.png" alt="image-20240625180019859"></p>
<h3 id="3-ZF-2"><a href="#3-ZF-2" class="headerlink" title="3.ZF"></a>3.ZF</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180046723.png" alt="image-20240625180046723"></p>
<h3 id="4-CF-无符号的看这一位-2"><a href="#4-CF-无符号的看这一位-2" class="headerlink" title="4.CF(无符号的看这一位)"></a>4.CF(无符号的看这一位)</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180119205.png" alt="image-20240625180119205"></p>
<p>生成</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.OF</p>
<p>2.SF</p>
<p>3.ZF</p>
<p>4.CF</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175829477.png" alt="image-20240625175829477"></p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625175748969.png" alt="image-20240625175748969"></p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-OF-有符号的看这一位-3"><a href="#1-OF-有符号的看这一位-3" class="headerlink" title="1.OF(有符号的看这一位)"></a>1.OF(有符号的看这一位)</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180000731.png" alt="image-20240625180000731"></p>
<h3 id="2-SF-3"><a href="#2-SF-3" class="headerlink" title="2.SF"></a>2.SF</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180019859.png" alt="image-20240625180019859"></p>
<h3 id="3-ZF-3"><a href="#3-ZF-3" class="headerlink" title="3.ZF"></a>3.ZF</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180046723.png" alt="image-20240625180046723"></p>
<h3 id="4-CF-无符号的看这一位-3"><a href="#4-CF-无符号的看这一位-3" class="headerlink" title="4.CF(无符号的看这一位)"></a>4.CF(无符号的看这一位)</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625180119205.png" alt="image-20240625180119205"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>概念名词简记</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%A6%82%E5%BF%B5%E5%90%8D%E8%AF%8D%E7%AE%80%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="存储器"><a href="#存储器" class="headerlink" title="存储器"></a>存储器</h2><h3 id="1-MAR（Memory-Address-Register）"><a href="#1-MAR（Memory-Address-Register）" class="headerlink" title="1.MAR（Memory Address Register）"></a>1.MAR（Memory Address Register）</h3><p>内存地址寄存器，是计算机处理器中的一个寄存器，用于存储要访问的内存单元的地址。</p>
<h3 id="2-MDR（Memory-Data-Register）"><a href="#2-MDR（Memory-Data-Register）" class="headerlink" title="2.MDR（Memory Data Register）"></a>2.MDR（Memory Data Register）</h3><p>内存数据寄存器，也是计算机处理器中的一个寄存器，用于暂存从内存读取的数据或即将写入内存的数据。</p>
<h3 id="3-Cache（缓存）："><a href="#3-Cache（缓存）：" class="headerlink" title="3.Cache（缓存）："></a>3.Cache（缓存）：</h3><p>Cache，即缓存，是一种存储技术，用于暂时存储经常访问的数据或指令，以便快速访问。它是位于CPU和主内存之间的一种小容量但非常快速的存储器。</p>
<h3 id="4-SAM（Sequential-Access-Memory）："><a href="#4-SAM（Sequential-Access-Memory）：" class="headerlink" title="4.SAM（Sequential Access Memory）："></a>4.SAM（Sequential Access Memory）：</h3><p>顺序存取存储器，这种存储器按一定顺序访问数据，存取数据的时间依赖于数据的位置。常见的例子是磁带存储。</p>
<h3 id="5-RAM（Random-Access-Memory）："><a href="#5-RAM（Random-Access-Memory）：" class="headerlink" title="5.RAM（Random Access Memory）："></a>5.RAM（Random Access Memory）：</h3><p>随机存取存储器，这种存储器可以在任何顺序存取数据，存取数据的时间与数据的位置无关。常见的例子是计算机内存。</p>
<h3 id="6-DRAM（Dynamic-Random-Access-Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。"><a href="#6-DRAM（Dynamic-Random-Access-Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。" class="headerlink" title="6.DRAM（Dynamic Random Access Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。"></a>6.DRAM（Dynamic Random Access Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。</h3><h3 id="7-SRAM（Static-Random-Access-Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。"><a href="#7-SRAM（Static-Random-Access-Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。" class="headerlink" title="7.SRAM（Static Random Access Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。"></a>7.SRAM（Static Random Access Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。</h3><h3 id="8-SDRAM（Synchronous-Dynamic-Random-Access-Memory）"><a href="#8-SDRAM（Synchronous-Dynamic-Random-Access-Memory）" class="headerlink" title="8.SDRAM（Synchronous Dynamic Random Access Memory）"></a>8.SDRAM（Synchronous Dynamic Random Access Memory）</h3><p>同步动态随机存取存储器，是一种与系统时钟同步运行的DRAM类型。它在时钟的每个周期都能执行指令，从而提高了数据访问速度和效率。</p>
<h3 id="9-MROM（Masked-Read-Only-Memory）："><a href="#9-MROM（Masked-Read-Only-Memory）：" class="headerlink" title="9.MROM（Masked Read-Only Memory）："></a>9.MROM（Masked Read-Only Memory）：</h3><p>掩膜只读存储器，MROM是一种只读存储器，其内容在制造过程中被永久性地设置，不可更改。</p>
<h3 id="10-PROM（Programmable-Read-Only-Memory）："><a href="#10-PROM（Programmable-Read-Only-Memory）：" class="headerlink" title="10.PROM（Programmable Read-Only Memory）："></a>10.PROM（Programmable Read-Only Memory）：</h3><p>可编程只读存储器，PROM是一种只读存储器，用户可以编程一次，之后内容固定，不可更改。</p>
<h3 id="11-EPROM（Erasable-Programmable-Read-Only-Memory）："><a href="#11-EPROM（Erasable-Programmable-Read-Only-Memory）：" class="headerlink" title="11.EPROM（Erasable Programmable Read-Only Memory）："></a>11.EPROM（Erasable Programmable Read-Only Memory）：</h3><p>可擦写可编程只读存储器，EPROM是一种可编程和可擦写的只读存储器，用户可以通过暴露于紫外线下来擦除和重新编程。</p>
<h3 id="12-Flash-Memory（Flash-Memory）："><a href="#12-Flash-Memory（Flash-Memory）：" class="headerlink" title="12.Flash Memory（Flash Memory）："></a>12.Flash Memory（Flash Memory）：</h3><p>闪存，Flash Memory是一种非易失性存储器，可以电子方式擦除和重写。</p>
<h3 id="13-SSD（Solid-State-Drive）："><a href="#13-SSD（Solid-State-Drive）：" class="headerlink" title="13.SSD（Solid State Drive）："></a>13.SSD（Solid State Drive）：</h3><p>固态硬盘，SSD是一种使用闪存作为存储介质的计算机硬盘，用于数据存储。</p>
<h3 id="14-MREQ（Memory-Request）"><a href="#14-MREQ（Memory-Request）" class="headerlink" title="14.MREQ（Memory Request）"></a>14.MREQ（Memory Request）</h3><p>内存请求信号，是微处理器与内存或内存控制器之间的控制信号，用于指示当前总线周期是内存访问周期。通常在处理器访问内存时有效。</p>
<h3 id="15-RAID（Redundant-Array-of-Independent-Disks）"><a href="#15-RAID（Redundant-Array-of-Independent-Disks）" class="headerlink" title="15.RAID（Redundant Array of Independent Disks）"></a>15.RAID（Redundant Array of Independent Disks）</h3><p>独立磁盘冗余阵列，是一种将多个独立的物理磁盘驱动器组合成一个或多个逻辑单元，以提高数据存储性能和&#x2F;或提供容错能力的技术。</p>
<h3 id="16-CAM（Content-Addressable-Memory-内容寻址存储器）"><a href="#16-CAM（Content-Addressable-Memory-内容寻址存储器）" class="headerlink" title="16.CAM（Content-Addressable Memory,内容寻址存储器）"></a>16.CAM（Content-Addressable Memory,内容寻址存储器）</h3><p>是一种特殊类型的计算机内存，它允许数据通过其内容而不是传统的内存地址来检索。</p>
<h2 id="运算器"><a href="#运算器" class="headerlink" title="运算器"></a>运算器</h2><h3 id="1-ACC（Accumulator）"><a href="#1-ACC（Accumulator）" class="headerlink" title="1.ACC（Accumulator）"></a>1.ACC（Accumulator）</h3><p>累加器，是计算机处理器中的一个寄存器，用于存储算术和逻辑操作的结果。</p>
<h3 id="2-MQ（Multiplier-Quotient-Register）"><a href="#2-MQ（Multiplier-Quotient-Register）" class="headerlink" title="2.MQ（Multiplier Quotient Register）"></a>2.MQ（Multiplier Quotient Register）</h3><p>乘数商寄存器，用于在乘法和除法操作中存储中间结果。</p>
<h3 id="3-X"><a href="#3-X" class="headerlink" title="3.X"></a>3.X</h3><p>通常指代一个通用寄存器，用于存储临时数据或操作数。</p>
<h3 id="4-ALU（Arithmetic-Logic-Unit）"><a href="#4-ALU（Arithmetic-Logic-Unit）" class="headerlink" title="4.ALU（Arithmetic Logic Unit）"></a>4.ALU（Arithmetic Logic Unit）</h3><p>算术逻辑单元，是处理器的一部分，负责执行算术和逻辑运算。</p>
<h3 id="5-PSW（Program-Status-Word）"><a href="#5-PSW（Program-Status-Word）" class="headerlink" title="5.PSW（Program Status Word）"></a>5.PSW（Program Status Word）</h3><p>程序状态字,是一个寄存器，用于存储程序或处理器的当前状态信息，包括条件码、中断使能标志等。</p>
<h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><h3 id="1-CU（Control-Unit）"><a href="#1-CU（Control-Unit）" class="headerlink" title="1.CU（Control Unit）"></a>1.CU（Control Unit）</h3><p>控制单元，是计算机处理器的一部分，负责解释和执行指令，控制其他组件的操作。</p>
<h3 id="2-IR（Instruction-Register）"><a href="#2-IR（Instruction-Register）" class="headerlink" title="2.IR（Instruction Register）"></a>2.IR（Instruction Register）</h3><p>指令寄存器，用于存储当前正在执行的指令。</p>
<h3 id="3-PC（Program-Counter）"><a href="#3-PC（Program-Counter）" class="headerlink" title="3.PC（Program Counter）"></a>3.PC（Program Counter）</h3><p>程序计数器，用于存储下一条将要执行的指令的地址。</p>
<h3 id="4-BR（Base-Register）："><a href="#4-BR（Base-Register）：" class="headerlink" title="4.BR（Base Register）："></a>4.BR（Base Register）：</h3><p>基址寄存器,用于提供相对寻址的基地址的寄存器。</p>
<h3 id="5-IX（Index-Register）："><a href="#5-IX（Index-Register）：" class="headerlink" title="5.IX（Index Register）："></a>5.IX（Index Register）：</h3><p>索引寄存器,用于存储索引值或偏移量的寄存器，常用于数组访问和指针操作。</p>
<h3 id="6-EA（Effective-Address）："><a href="#6-EA（Effective-Address）：" class="headerlink" title="6.EA（Effective Address）："></a>6.EA（Effective Address）：</h3><p>有效地址,用于计算内存操作实际位置的地址，由寄存器值、立即数、偏移量等组合而成。</p>
<h3 id="7-POP："><a href="#7-POP：" class="headerlink" title="7.POP："></a>7.POP：</h3><p>弹出,POP指令用于从堆栈中取出一个值并将其存储到指定的寄存器或内存位置。它通常用于恢复被压入堆栈的寄存器值，如在函数调用后恢复返回地址和参数。</p>
<h3 id="8-PUSH："><a href="#8-PUSH：" class="headerlink" title="8.PUSH："></a>8.PUSH：</h3><p>压入,PUSH指令用于将一个值压入堆栈。它可以将寄存器中的值、立即数或内存中的值压入堆栈。PUSH常用于保存寄存器的值，以便在函数调用时使用，或者在需要时存储数据。</p>
<h3 id="9-SP（Stack-Pointer）："><a href="#9-SP（Stack-Pointer）：" class="headerlink" title="9.SP（Stack Pointer）："></a>9.SP（Stack Pointer）：</h3><p>堆栈指针,堆栈指针是一个寄存器，用于指示当前堆栈的顶部位置。它用于管理堆栈中的数据，确保新压入的数据添加到顶部，而弹出的数据从顶部移除。堆栈指针在函数调用、返回、参数传递和局部变量存储等操作中起着关键作用。</p>
<h3 id="10-IP（Instruction-Pointer）："><a href="#10-IP（Instruction-Pointer）：" class="headerlink" title="10.IP（Instruction Pointer）："></a>10.IP（Instruction Pointer）：</h3><p>指令指针,指令指针是一个寄存器，用于存储下一条指令的内存地址。它控制程序的执行流程，确保处理器能够按顺序执行指令序列。指令指针在程序的跳转、循环和函数调用等控制流操作中扮演重要角色。</p>
<h3 id="11-CISC（Complex-Instruction-Set-Computer）："><a href="#11-CISC（Complex-Instruction-Set-Computer）：" class="headerlink" title="11.CISC（Complex Instruction Set Computer）："></a>11.CISC（Complex Instruction Set Computer）：</h3><p>复杂指令集计算机,CISC架构的处理器使用大量复杂的指令来执行各种操作。这些指令通常可以执行多个低级操作，如加载、存储、算术和逻辑运算。CISC架构的优点是每条指令可以完成更多的工作，但缺点是指令长度和执行时间可能较长。</p>
<h3 id="12-RISC（Reduced-Instruction-Set-Computer）："><a href="#12-RISC（Reduced-Instruction-Set-Computer）：" class="headerlink" title="12.RISC（Reduced Instruction Set Computer）："></a>12.RISC（Reduced Instruction Set Computer）：</h3><p>精简指令集计算机,RISC架构的处理器使用较少的、简单的指令来执行操作。这些指令通常执行单个操作，如算术运算或数据传输。RISC架构的优点是每条指令的执行时间较短，指令周期更少，但缺点是可能需要更多的指令来完成复杂的任务。</p>
<h3 id="13-FE（Fetch，取指）"><a href="#13-FE（Fetch，取指）" class="headerlink" title="13.FE（Fetch，取指）"></a>13.FE（Fetch，取指）</h3><p>取指阶段是控制器从内存中获取下一条指令的过程。</p>
<h3 id="14-IND（Instruction-Decode，指令解码）："><a href="#14-IND（Instruction-Decode，指令解码）：" class="headerlink" title="14.IND（Instruction Decode，指令解码）："></a>14.IND（Instruction Decode，指令解码）：</h3><p>指令解码阶段是控制器解析刚刚获取的指令，确定指令的操作类型和操作数。</p>
<h3 id="15-EX（Execute，执行）："><a href="#15-EX（Execute，执行）：" class="headerlink" title="15.EX（Execute，执行）："></a>15.EX（Execute，执行）：</h3><p>执行阶段是控制器根据解码阶段确定的指令操作类型和操作数进行实际计算或处理的过程。</p>
<h3 id="16-INT（Interrupt，中断）："><a href="#16-INT（Interrupt，中断）：" class="headerlink" title="16.INT（Interrupt，中断）："></a>16.INT（Interrupt，中断）：</h3><p>中断是一种机制，用于暂停当前正在执行的程序，以便处理更紧急的任务或事件。</p>
<h3 id="17-ID-Instruction-Decoder"><a href="#17-ID-Instruction-Decoder" class="headerlink" title="17.ID(Instruction Decoder):"></a>17.ID(<strong>Instruction Decoder</strong>):</h3><p>指令译码器,是计算机处理器中的一个关键组件，它负责将指令的操作码部分翻译成一系列的控制信号，这些信号用于指导处理器执行指令。</p>
<h3 id="18-LDA-Load-Accumulator-："><a href="#18-LDA-Load-Accumulator-：" class="headerlink" title="18.LDA(Load Accumulator)："></a>18.LDA(Load Accumulator)：</h3><p>LDA指令是一种数据传输指令，用于将指定内存地址中的数据复制到累加器寄存器中。</p>
<h3 id="19-CM（Control-Memory，控制存储器）："><a href="#19-CM（Control-Memory，控制存储器）：" class="headerlink" title="19.CM（Control Memory，控制存储器）："></a>19.CM（Control Memory，控制存储器）：</h3><p>控制存储器是计算机处理器中的一个组成部分，它用于存储微程序或微指令序列，这些微程序或微指令序列用于控制处理器的操作。</p>
<h3 id="20-CMAR（Control-Memory-Address-Register，控制存储器地址寄存器）："><a href="#20-CMAR（Control-Memory-Address-Register，控制存储器地址寄存器）：" class="headerlink" title="20.CMAR（Control Memory Address Register，控制存储器地址寄存器）："></a>20.CMAR（Control Memory Address Register，控制存储器地址寄存器）：</h3><p>CMAR是计算机处理器中的一个寄存器，它用于存储控制存储器中微指令的地址。</p>
<h3 id="21-CMDR（Control-Memory-Data-Register，控制存储器数据寄存器）："><a href="#21-CMDR（Control-Memory-Data-Register，控制存储器数据寄存器）：" class="headerlink" title="21.CMDR（Control Memory Data Register，控制存储器数据寄存器）："></a>21.CMDR（Control Memory Data Register，控制存储器数据寄存器）：</h3><p>CMDR是计算机处理器中的一个寄存器，它用于暂存从控制存储器中读取的微指令数据。</p>
<h2 id="CPU性能指标"><a href="#CPU性能指标" class="headerlink" title="CPU性能指标"></a>CPU性能指标</h2><h3 id="1-CPI（Cycles-Per-Instruction）"><a href="#1-CPI（Cycles-Per-Instruction）" class="headerlink" title="1.CPI（Cycles Per Instruction）"></a>1.CPI（Cycles Per Instruction）</h3><p>是指每条指令所需的时钟周期数。它是衡量计算机处理器性能的一个指标，反映了执行一条指令所需的平均时钟周期数。</p>
<h3 id="2-IPS（Instructions-Per-Second）"><a href="#2-IPS（Instructions-Per-Second）" class="headerlink" title="2.IPS（Instructions Per Second）"></a>2.IPS（Instructions Per Second）</h3><p>是指每秒钟处理器可以执行的指令数，是衡量计算机处理器性能的一个指标。</p>
<h3 id="3-FLOPS（Floating-Point-Operations-Per-Second）"><a href="#3-FLOPS（Floating-Point-Operations-Per-Second）" class="headerlink" title="3.FLOPS（Floating Point Operations Per Second）"></a>3.FLOPS（Floating Point Operations Per Second）</h3><p>是指每秒钟处理器可以执行的浮点运算次数，是衡量计算机处理器在浮点运算方面性能的一个指标。</p>
<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><h3 id="1-CLA（Clear-Accumulator）："><a href="#1-CLA（Clear-Accumulator）：" class="headerlink" title="1.CLA（Clear Accumulator）："></a>1.CLA（Clear Accumulator）：</h3><p>CLA指令用于将累加器寄存器的值清零。</p>
<h3 id="2-COM（Complement）："><a href="#2-COM（Complement）：" class="headerlink" title="2.COM（Complement）："></a>2.COM（Complement）：</h3><p>COM指令用于对累加器或指定寄存器的值进行逐位取反，即每一位由1变为0，由0变为1。</p>
<h3 id="3-SHR（Shift-Right）："><a href="#3-SHR（Shift-Right）：" class="headerlink" title="3.SHR（Shift Right）："></a>3.SHR（Shift Right）：</h3><p>SHR指令用于将累加器或指定寄存器的值逻辑右移一位，通常将最高位（MSB）移入进位标志位。</p>
<h3 id="4-CSL（Circular-Shift-Left）："><a href="#4-CSL（Circular-Shift-Left）：" class="headerlink" title="4.CSL（Circular Shift Left）："></a>4.CSL（Circular Shift Left）：</h3><p>CSL指令用于将累加器或指定寄存器的值循环左移一位，最低位（LSB）移入最高位（MSB）。</p>
<h3 id="5-STP（Stop）："><a href="#5-STP（Stop）：" class="headerlink" title="5.STP（Stop）："></a>5.STP（Stop）：</h3><p>STP指令用于停止处理器或程序的执行，通常用于程序结束或错误处理</p>
<h2 id="多处理器"><a href="#多处理器" class="headerlink" title="多处理器"></a>多处理器</h2><p>1.SISD（Single Instruction, Single Data）：</p>
<p>单指令单数据，这是一种传统的处理模型，其中单个处理器执行一条指令，操作单个数据项。</p>
<p>2.SIMD（Single Instruction, Multiple Data）：</p>
<p>单指令多数据，这种模型中，一个指令同时应用于多个数据项。这种模型常见于并行处理和向量处理中。</p>
<p>3.MISD（Multiple Instruction, Single Data）：</p>
<p>多指令单数据，这种模型相对较少见，其中多个处理器执行不同的指令，但都操作相同的数据。</p>
<p>4.MIMD（Multiple Instruction, Multiple Data）</p>
<p>是一种并行计算模型，其中多个处理器同时执行不同的指令集，操作不同的数据集。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="1-FA（Full-Adder）"><a href="#1-FA（Full-Adder）" class="headerlink" title="1.FA（Full Adder）"></a>1.FA（Full Adder）</h3><p>全加器是数字电路中的一个基本组件，用于执行二进制数的加法运算。它能够将两个一位的二进制数（称为加数）以及一个进位输入相加，产生一个和以及一个进位输出。</p>
<h3 id="2-多路复用器（MUX，Multiplexer）"><a href="#2-多路复用器（MUX，Multiplexer）" class="headerlink" title="2.多路复用器（MUX，Multiplexer）"></a>2.多路复用器（MUX，Multiplexer）</h3><p>是一种组合逻辑电路，它允许在多个输入信号中选择一个并将其传输到单个输出线上。</p>
<h3 id="3-OF（Overflow-Flag）"><a href="#3-OF（Overflow-Flag）" class="headerlink" title="3.OF（Overflow Flag）"></a>3.OF（Overflow Flag）</h3><p>溢出标志位用于指示有符号数的算术操作是否产生了溢出。</p>
<h3 id="4-SF（Sign-Flag）"><a href="#4-SF（Sign-Flag）" class="headerlink" title="4.SF（Sign Flag）"></a>4.SF（Sign Flag）</h3><p>定义：符号标志位用于指示运算结果的符号。</p>
<h3 id="5-ZF（Zero-Flag）："><a href="#5-ZF（Zero-Flag）：" class="headerlink" title="5.ZF（Zero Flag）："></a>5.ZF（Zero Flag）：</h3><p>定义：零标志位用于指示运算结果是否为零。</p>
<h3 id="6-CF（Carry-Flag）："><a href="#6-CF（Carry-Flag）：" class="headerlink" title="6.CF（Carry Flag）："></a>6.CF（Carry Flag）：</h3><p>定义：进位标志位用于指示无符号数的算术操作是否产生了进位或借位。</p>
<h3 id="7-MSB（Most-Significant-Bit）"><a href="#7-MSB（Most-Significant-Bit）" class="headerlink" title="7.MSB（Most Significant Bit）"></a>7.MSB（Most Significant Bit）</h3><p>在一个二进制数中，MSB是最高位，即最左边的位，它具有最高的值。在大多数情况下，MSB决定了数字的符号（例如，在补码表示中）。</p>
<h3 id="8-LSB（Least-Significant-Bit）"><a href="#8-LSB（Least-Significant-Bit）" class="headerlink" title="8.LSB（Least Significant Bit）"></a>8.LSB（Least Significant Bit）</h3><p>LSB是最低位，即最右边的位，它具有最小的值。LSB通常用于确定数字的奇偶性。</p>
<p>存储器</p>
<h3 id="1-MAR（Memory-Address-Register）-1"><a href="#1-MAR（Memory-Address-Register）-1" class="headerlink" title="1.MAR（Memory Address Register）"></a>1.MAR（Memory Address Register）</h3><p>内存地址寄存器，是计算机处理器中的一个寄存器，用于存储要访问的内存单元的地址。</p>
<h3 id="2-MDR（Memory-Data-Register）-1"><a href="#2-MDR（Memory-Data-Register）-1" class="headerlink" title="2.MDR（Memory Data Register）"></a>2.MDR（Memory Data Register）</h3><p>内存数据寄存器，也是计算机处理器中的一个寄存器，用于暂存从内存读取的数据或即将写入内存的数据。</p>
<h3 id="3-Cache（缓存）：-1"><a href="#3-Cache（缓存）：-1" class="headerlink" title="3.Cache（缓存）："></a>3.Cache（缓存）：</h3><p>Cache，即缓存，是一种存储技术，用于暂时存储经常访问的数据或指令，以便快速访问。它是位于CPU和主内存之间的一种小容量但非常快速的存储器。</p>
<h3 id="4-SAM（Sequential-Access-Memory）：-1"><a href="#4-SAM（Sequential-Access-Memory）：-1" class="headerlink" title="4.SAM（Sequential Access Memory）："></a>4.SAM（Sequential Access Memory）：</h3><p>顺序存取存储器，这种存储器按一定顺序访问数据，存取数据的时间依赖于数据的位置。常见的例子是磁带存储。</p>
<h3 id="5-RAM（Random-Access-Memory）：-1"><a href="#5-RAM（Random-Access-Memory）：-1" class="headerlink" title="5.RAM（Random Access Memory）："></a>5.RAM（Random Access Memory）：</h3><p>随机存取存储器，这种存储器可以在任何顺序存取数据，存取数据的时间与数据的位置无关。常见的例子是计算机内存。</p>
<h3 id="6-DRAM（Dynamic-Random-Access-Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。-1"><a href="#6-DRAM（Dynamic-Random-Access-Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。-1" class="headerlink" title="6.DRAM（Dynamic Random Access Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。"></a>6.DRAM（Dynamic Random Access Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。</h3><h3 id="7-SRAM（Static-Random-Access-Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。-1"><a href="#7-SRAM（Static-Random-Access-Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。-1" class="headerlink" title="7.SRAM（Static Random Access Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。"></a>7.SRAM（Static Random Access Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。</h3><h3 id="8-SDRAM（Synchronous-Dynamic-Random-Access-Memory）-1"><a href="#8-SDRAM（Synchronous-Dynamic-Random-Access-Memory）-1" class="headerlink" title="8.SDRAM（Synchronous Dynamic Random Access Memory）"></a>8.SDRAM（Synchronous Dynamic Random Access Memory）</h3><p>同步动态随机存取存储器，是一种与系统时钟同步运行的DRAM类型。它在时钟的每个周期都能执行指令，从而提高了数据访问速度和效率。</p>
<h3 id="9-MROM（Masked-Read-Only-Memory）：-1"><a href="#9-MROM（Masked-Read-Only-Memory）：-1" class="headerlink" title="9.MROM（Masked Read-Only Memory）："></a>9.MROM（Masked Read-Only Memory）：</h3><p>掩膜只读存储器，MROM是一种只读存储器，其内容在制造过程中被永久性地设置，不可更改。</p>
<h3 id="10-PROM（Programmable-Read-Only-Memory）：-1"><a href="#10-PROM（Programmable-Read-Only-Memory）：-1" class="headerlink" title="10.PROM（Programmable Read-Only Memory）："></a>10.PROM（Programmable Read-Only Memory）：</h3><p>可编程只读存储器，PROM是一种只读存储器，用户可以编程一次，之后内容固定，不可更改。</p>
<h3 id="11-EPROM（Erasable-Programmable-Read-Only-Memory）：-1"><a href="#11-EPROM（Erasable-Programmable-Read-Only-Memory）：-1" class="headerlink" title="11.EPROM（Erasable Programmable Read-Only Memory）："></a>11.EPROM（Erasable Programmable Read-Only Memory）：</h3><p>可擦写可编程只读存储器，EPROM是一种可编程和可擦写的只读存储器，用户可以通过暴露于紫外线下来擦除和重新编程。</p>
<h3 id="12-Flash-Memory（Flash-Memory）：-1"><a href="#12-Flash-Memory（Flash-Memory）：-1" class="headerlink" title="12.Flash Memory（Flash Memory）："></a>12.Flash Memory（Flash Memory）：</h3><p>闪存，Flash Memory是一种非易失性存储器，可以电子方式擦除和重写。</p>
<h3 id="13-SSD（Solid-State-Drive）：-1"><a href="#13-SSD（Solid-State-Drive）：-1" class="headerlink" title="13.SSD（Solid State Drive）："></a>13.SSD（Solid State Drive）：</h3><p>固态硬盘，SSD是一种使用闪存作为存储介质的计算机硬盘，用于数据存储。</p>
<h3 id="14-MREQ（Memory-Request）-1"><a href="#14-MREQ（Memory-Request）-1" class="headerlink" title="14.MREQ（Memory Request）"></a>14.MREQ（Memory Request）</h3><p>内存请求信号，是微处理器与内存或内存控制器之间的控制信号，用于指示当前总线周期是内存访问周期。通常在处理器访问内存时有效。</p>
<h3 id="15-RAID（Redundant-Array-of-Independent-Disks）-1"><a href="#15-RAID（Redundant-Array-of-Independent-Disks）-1" class="headerlink" title="15.RAID（Redundant Array of Independent Disks）"></a>15.RAID（Redundant Array of Independent Disks）</h3><p>独立磁盘冗余阵列，是一种将多个独立的物理磁盘驱动器组合成一个或多个逻辑单元，以提高数据存储性能和&#x2F;或提供容错能力的技术。</p>
<h3 id="16-CAM（Content-Addressable-Memory-内容寻址存储器）-1"><a href="#16-CAM（Content-Addressable-Memory-内容寻址存储器）-1" class="headerlink" title="16.CAM（Content-Addressable Memory,内容寻址存储器）"></a>16.CAM（Content-Addressable Memory,内容寻址存储器）</h3><p>是一种特殊类型的计算机内存，它允许数据通过其内容而不是传统的内存地址来检索。</p>
<h2 id="运算器-1"><a href="#运算器-1" class="headerlink" title="运算器"></a>运算器</h2><h3 id="1-ACC（Accumulator）-1"><a href="#1-ACC（Accumulator）-1" class="headerlink" title="1.ACC（Accumulator）"></a>1.ACC（Accumulator）</h3><p>累加器，是计算机处理器中的一个寄存器，用于存储算术和逻辑操作的结果。</p>
<h3 id="2-MQ（Multiplier-Quotient-Register）-1"><a href="#2-MQ（Multiplier-Quotient-Register）-1" class="headerlink" title="2.MQ（Multiplier Quotient Register）"></a>2.MQ（Multiplier Quotient Register）</h3><p>乘数商寄存器，用于在乘法和除法操作中存储中间结果。</p>
<h3 id="3-X-1"><a href="#3-X-1" class="headerlink" title="3.X"></a>3.X</h3><p>通常指代一个通用寄存器，用于存储临时数据或操作数。</p>
<h3 id="4-ALU（Arithmetic-Logic-Unit）-1"><a href="#4-ALU（Arithmetic-Logic-Unit）-1" class="headerlink" title="4.ALU（Arithmetic Logic Unit）"></a>4.ALU（Arithmetic Logic Unit）</h3><p>算术逻辑单元，是处理器的一部分，负责执行算术和逻辑运算。</p>
<h3 id="5-PSW（Program-Status-Word）-1"><a href="#5-PSW（Program-Status-Word）-1" class="headerlink" title="5.PSW（Program Status Word）"></a>5.PSW（Program Status Word）</h3><p>程序状态字,是一个寄存器，用于存储程序或处理器的当前状态信息，包括条件码、中断使能标志等。</p>
<h2 id="控制器-1"><a href="#控制器-1" class="headerlink" title="控制器"></a>控制器</h2><h3 id="1-CU（Control-Unit）-1"><a href="#1-CU（Control-Unit）-1" class="headerlink" title="1.CU（Control Unit）"></a>1.CU（Control Unit）</h3><p>控制单元，是计算机处理器的一部分，负责解释和执行指令，控制其他组件的操作。</p>
<h3 id="2-IR（Instruction-Register）-1"><a href="#2-IR（Instruction-Register）-1" class="headerlink" title="2.IR（Instruction Register）"></a>2.IR（Instruction Register）</h3><p>指令寄存器，用于存储当前正在执行的指令。</p>
<h3 id="3-PC（Program-Counter）-1"><a href="#3-PC（Program-Counter）-1" class="headerlink" title="3.PC（Program Counter）"></a>3.PC（Program Counter）</h3><p>程序计数器，用于存储下一条将要执行的指令的地址。</p>
<h3 id="4-BR（Base-Register）：-1"><a href="#4-BR（Base-Register）：-1" class="headerlink" title="4.BR（Base Register）："></a>4.BR（Base Register）：</h3><p>基址寄存器,用于提供相对寻址的基地址的寄存器。</p>
<h3 id="5-IX（Index-Register）：-1"><a href="#5-IX（Index-Register）：-1" class="headerlink" title="5.IX（Index Register）："></a>5.IX（Index Register）：</h3><p>索引寄存器,用于存储索引值或偏移量的寄存器，常用于数组访问和指针操作。</p>
<h3 id="6-EA（Effective-Address）：-1"><a href="#6-EA（Effective-Address）：-1" class="headerlink" title="6.EA（Effective Address）："></a>6.EA（Effective Address）：</h3><p>有效地址,用于计算内存操作实际位置的地址，由寄存器值、立即数、偏移量等组合而成。</p>
<h3 id="7-POP：-1"><a href="#7-POP：-1" class="headerlink" title="7.POP："></a>7.POP：</h3><p>弹出,POP指令用于从堆栈中取出一个值并将其存储到指定的寄存器或内存位置。它通常用于恢复被压入堆栈的寄存器值，如在函数调用后恢复返回地址和参数。</p>
<h3 id="8-PUSH：-1"><a href="#8-PUSH：-1" class="headerlink" title="8.PUSH："></a>8.PUSH：</h3><p>压入,PUSH指令用于将一个值压入堆栈。它可以将寄存器中的值、立即数或内存中的值压入堆栈。PUSH常用于保存寄存器的值，以便在函数调用时使用，或者在需要时存储数据。</p>
<h3 id="9-SP（Stack-Pointer）：-1"><a href="#9-SP（Stack-Pointer）：-1" class="headerlink" title="9.SP（Stack Pointer）："></a>9.SP（Stack Pointer）：</h3><p>堆栈指针,堆栈指针是一个寄存器，用于指示当前堆栈的顶部位置。它用于管理堆栈中的数据，确保新压入的数据添加到顶部，而弹出的数据从顶部移除。堆栈指针在函数调用、返回、参数传递和局部变量存储等操作中起着关键作用。</p>
<h3 id="10-IP（Instruction-Pointer）：-1"><a href="#10-IP（Instruction-Pointer）：-1" class="headerlink" title="10.IP（Instruction Pointer）："></a>10.IP（Instruction Pointer）：</h3><p>指令指针,指令指针是一个寄存器，用于存储下一条指令的内存地址。它控制程序的执行流程，确保处理器能够按顺序执行指令序列。指令指针在程序的跳转、循环和函数调用等控制流操作中扮演重要角色。</p>
<h3 id="11-CISC（Complex-Instruction-Set-Computer）：-1"><a href="#11-CISC（Complex-Instruction-Set-Computer）：-1" class="headerlink" title="11.CISC（Complex Instruction Set Computer）："></a>11.CISC（Complex Instruction Set Computer）：</h3><p>复杂指令集计算机,CISC架构的处理器使用大量复杂的指令来执行各种操作。这些指令通常可以执行多个低级操作，如加载、存储、算术和逻辑运算。CISC架构的优点是每条指令可以完成更多的工作，但缺点是指令长度和执行时间可能较长。</p>
<h3 id="12-RISC（Reduced-Instruction-Set-Computer）：-1"><a href="#12-RISC（Reduced-Instruction-Set-Computer）：-1" class="headerlink" title="12.RISC（Reduced Instruction Set Computer）："></a>12.RISC（Reduced Instruction Set Computer）：</h3><p>精简指令集计算机,RISC架构的处理器使用较少的、简单的指令来执行操作。这些指令通常执行单个操作，如算术运算或数据传输。RISC架构的优点是每条指令的执行时间较短，指令周期更少，但缺点是可能需要更多的指令来完成复杂的任务。</p>
<h3 id="13-FE（Fetch，取指）-1"><a href="#13-FE（Fetch，取指）-1" class="headerlink" title="13.FE（Fetch，取指）"></a>13.FE（Fetch，取指）</h3><p>取指阶段是控制器从内存中获取下一条指令的过程。</p>
<h3 id="14-IND（Instruction-Decode，指令解码）：-1"><a href="#14-IND（Instruction-Decode，指令解码）：-1" class="headerlink" title="14.IND（Instruction Decode，指令解码）："></a>14.IND（Instruction Decode，指令解码）：</h3><p>指令解码阶段是控制器解析刚刚获取的指令，确定指令的操作类型和操作数。</p>
<h3 id="15-EX（Execute，执行）：-1"><a href="#15-EX（Execute，执行）：-1" class="headerlink" title="15.EX（Execute，执行）："></a>15.EX（Execute，执行）：</h3><p>执行阶段是控制器根据解码阶段确定的指令操作类型和操作数进行实际计算或处理的过程。</p>
<h3 id="16-INT（Interrupt，中断）：-1"><a href="#16-INT（Interrupt，中断）：-1" class="headerlink" title="16.INT（Interrupt，中断）："></a>16.INT（Interrupt，中断）：</h3><p>中断是一种机制，用于暂停当前正在执行的程序，以便处理更紧急的任务或事件。</p>
<h3 id="17-ID-Instruction-Decoder-1"><a href="#17-ID-Instruction-Decoder-1" class="headerlink" title="17.ID(Instruction Decoder):"></a>17.ID(<strong>Instruction Decoder</strong>):</h3><p>指令译码器,是计算机处理器中的一个关键组件，它负责将指令的操作码部分翻译成一系列的控制信号，这些信号用于指导处理器执行指令。</p>
<h3 id="18-LDA-Load-Accumulator-：-1"><a href="#18-LDA-Load-Accumulator-：-1" class="headerlink" title="18.LDA(Load Accumulator)："></a>18.LDA(Load Accumulator)：</h3><p>LDA指令是一种数据传输指令，用于将指定内存地址中的数据复制到累加器寄存器中。</p>
<h3 id="19-CM（Control-Memory，控制存储器）：-1"><a href="#19-CM（Control-Memory，控制存储器）：-1" class="headerlink" title="19.CM（Control Memory，控制存储器）："></a>19.CM（Control Memory，控制存储器）：</h3><p>控制存储器是计算机处理器中的一个组成部分，它用于存储微程序或微指令序列，这些微程序或微指令序列用于控制处理器的操作。</p>
<h3 id="20-CMAR（Control-Memory-Address-Register，控制存储器地址寄存器）：-1"><a href="#20-CMAR（Control-Memory-Address-Register，控制存储器地址寄存器）：-1" class="headerlink" title="20.CMAR（Control Memory Address Register，控制存储器地址寄存器）："></a>20.CMAR（Control Memory Address Register，控制存储器地址寄存器）：</h3><p>CMAR是计算机处理器中的一个寄存器，它用于存储控制存储器中微指令的地址。</p>
<h3 id="21-CMDR（Control-Memory-Data-Register，控制存储器数据寄存器）：-1"><a href="#21-CMDR（Control-Memory-Data-Register，控制存储器数据寄存器）：-1" class="headerlink" title="21.CMDR（Control Memory Data Register，控制存储器数据寄存器）："></a>21.CMDR（Control Memory Data Register，控制存储器数据寄存器）：</h3><p>CMDR是计算机处理器中的一个寄存器，它用于暂存从控制存储器中读取的微指令数据。</p>
<h2 id="CPU性能指标-1"><a href="#CPU性能指标-1" class="headerlink" title="CPU性能指标"></a>CPU性能指标</h2><h3 id="1-CPI（Cycles-Per-Instruction）-1"><a href="#1-CPI（Cycles-Per-Instruction）-1" class="headerlink" title="1.CPI（Cycles Per Instruction）"></a>1.CPI（Cycles Per Instruction）</h3><p>是指每条指令所需的时钟周期数。它是衡量计算机处理器性能的一个指标，反映了执行一条指令所需的平均时钟周期数。</p>
<h3 id="2-IPS（Instructions-Per-Second）-1"><a href="#2-IPS（Instructions-Per-Second）-1" class="headerlink" title="2.IPS（Instructions Per Second）"></a>2.IPS（Instructions Per Second）</h3><p>是指每秒钟处理器可以执行的指令数，是衡量计算机处理器性能的一个指标。</p>
<h3 id="3-FLOPS（Floating-Point-Operations-Per-Second）-1"><a href="#3-FLOPS（Floating-Point-Operations-Per-Second）-1" class="headerlink" title="3.FLOPS（Floating Point Operations Per Second）"></a>3.FLOPS（Floating Point Operations Per Second）</h3><p>是指每秒钟处理器可以执行的浮点运算次数，是衡量计算机处理器在浮点运算方面性能的一个指标。</p>
<h2 id="指令-1"><a href="#指令-1" class="headerlink" title="指令"></a>指令</h2><h3 id="1-CLA（Clear-Accumulator）：-1"><a href="#1-CLA（Clear-Accumulator）：-1" class="headerlink" title="1.CLA（Clear Accumulator）："></a>1.CLA（Clear Accumulator）：</h3><p>CLA指令用于将累加器寄存器的值清零。</p>
<h3 id="2-COM（Complement）：-1"><a href="#2-COM（Complement）：-1" class="headerlink" title="2.COM（Complement）："></a>2.COM（Complement）：</h3><p>COM指令用于对累加器或指定寄存器的值进行逐位取反，即每一位由1变为0，由0变为1。</p>
<h3 id="3-SHR（Shift-Right）：-1"><a href="#3-SHR（Shift-Right）：-1" class="headerlink" title="3.SHR（Shift Right）："></a>3.SHR（Shift Right）：</h3><p>SHR指令用于将累加器或指定寄存器的值逻辑右移一位，通常将最高位（MSB）移入进位标志位。</p>
<h3 id="4-CSL（Circular-Shift-Left）：-1"><a href="#4-CSL（Circular-Shift-Left）：-1" class="headerlink" title="4.CSL（Circular Shift Left）："></a>4.CSL（Circular Shift Left）：</h3><p>CSL指令用于将累加器或指定寄存器的值循环左移一位，最低位（LSB）移入最高位（MSB）。</p>
<h3 id="5-STP（Stop）：-1"><a href="#5-STP（Stop）：-1" class="headerlink" title="5.STP（Stop）："></a>5.STP（Stop）：</h3><p>STP指令用于停止处理器或程序的执行，通常用于程序结束或错误处理</p>
<h2 id="多处理器-1"><a href="#多处理器-1" class="headerlink" title="多处理器"></a>多处理器</h2><p>1.SISD（Single Instruction, Single Data）：</p>
<p>单指令单数据，这是一种传统的处理模型，其中单个处理器执行一条指令，操作单个数据项。</p>
<p>2.SIMD（Single Instruction, Multiple Data）：</p>
<p>单指令多数据，这种模型中，一个指令同时应用于多个数据项。这种模型常见于并行处理和向量处理中。</p>
<p>3.MISD（Multiple Instruction, Single Data）：</p>
<p>多指令单数据，这种模型相对较少见，其中多个处理器执行不同的指令，但都操作相同的数据。</p>
<p>4.MIMD（Multiple Instruction, Multiple Data）</p>
<p>是一种并行计算模型，其中多个处理器同时执行不同的指令集，操作不同的数据集。</p>
<h2 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h2><h3 id="1-FA（Full-Adder）-1"><a href="#1-FA（Full-Adder）-1" class="headerlink" title="1.FA（Full Adder）"></a>1.FA（Full Adder）</h3><p>全加器是数字电路中的一个基本组件，用于执行二进制数的加法运算。它能够将两个一位的二进制数（称为加数）以及一个进位输入相加，产生一个和以及一个进位输出。</p>
<h3 id="2-多路复用器（MUX，Multiplexer）-1"><a href="#2-多路复用器（MUX，Multiplexer）-1" class="headerlink" title="2.多路复用器（MUX，Multiplexer）"></a>2.多路复用器（MUX，Multiplexer）</h3><p>是一种组合逻辑电路，它允许在多个输入信号中选择一个并将其传输到单个输出线上。</p>
<h3 id="3-OF（Overflow-Flag）-1"><a href="#3-OF（Overflow-Flag）-1" class="headerlink" title="3.OF（Overflow Flag）"></a>3.OF（Overflow Flag）</h3><p>溢出标志位用于指示有符号数的算术操作是否产生了溢出。</p>
<h3 id="4-SF（Sign-Flag）-1"><a href="#4-SF（Sign-Flag）-1" class="headerlink" title="4.SF（Sign Flag）"></a>4.SF（Sign Flag）</h3><p>定义：符号标志位用于指示运算结果的符号。</p>
<h3 id="5-ZF（Zero-Flag）：-1"><a href="#5-ZF（Zero-Flag）：-1" class="headerlink" title="5.ZF（Zero Flag）："></a>5.ZF（Zero Flag）：</h3><p>定义：零标志位用于指示运算结果是否为零。</p>
<h3 id="6-CF（Carry-Flag）：-1"><a href="#6-CF（Carry-Flag）：-1" class="headerlink" title="6.CF（Carry Flag）："></a>6.CF（Carry Flag）：</h3><p>定义：进位标志位用于指示无符号数的算术操作是否产生了进位或借位。</p>
<h3 id="7-MSB（Most-Significant-Bit）-1"><a href="#7-MSB（Most-Significant-Bit）-1" class="headerlink" title="7.MSB（Most Significant Bit）"></a>7.MSB（Most Significant Bit）</h3><p>在一个二进制数中，MSB是最高位，即最左边的位，它具有最高的值。在大多数情况下，MSB决定了数字的符号（例如，在补码表示中）。</p>
<h3 id="8-LSB（Least-Significant-Bit）-1"><a href="#8-LSB（Least-Significant-Bit）-1" class="headerlink" title="8.LSB（Least Significant Bit）"></a>8.LSB（Least Significant Bit）</h3><p>LSB是最低位，即最右边的位，它具有最小的值。LSB通常用于确定数字的奇偶性。## 存储器</p>
<h3 id="1-MAR（Memory-Address-Register）-2"><a href="#1-MAR（Memory-Address-Register）-2" class="headerlink" title="1.MAR（Memory Address Register）"></a>1.MAR（Memory Address Register）</h3><p>内存地址寄存器，是计算机处理器中的一个寄存器，用于存储要访问的内存单元的地址。</p>
<h3 id="2-MDR（Memory-Data-Register）-2"><a href="#2-MDR（Memory-Data-Register）-2" class="headerlink" title="2.MDR（Memory Data Register）"></a>2.MDR（Memory Data Register）</h3><p>内存数据寄存器，也是计算机处理器中的一个寄存器，用于暂存从内存读取的数据或即将写入内存的数据。</p>
<h3 id="3-Cache（缓存）：-2"><a href="#3-Cache（缓存）：-2" class="headerlink" title="3.Cache（缓存）："></a>3.Cache（缓存）：</h3><p>Cache，即缓存，是一种存储技术，用于暂时存储经常访问的数据或指令，以便快速访问。它是位于CPU和主内存之间的一种小容量但非常快速的存储器。</p>
<h3 id="4-SAM（Sequential-Access-Memory）：-2"><a href="#4-SAM（Sequential-Access-Memory）：-2" class="headerlink" title="4.SAM（Sequential Access Memory）："></a>4.SAM（Sequential Access Memory）：</h3><p>顺序存取存储器，这种存储器按一定顺序访问数据，存取数据的时间依赖于数据的位置。常见的例子是磁带存储。</p>
<h3 id="5-RAM（Random-Access-Memory）：-2"><a href="#5-RAM（Random-Access-Memory）：-2" class="headerlink" title="5.RAM（Random Access Memory）："></a>5.RAM（Random Access Memory）：</h3><p>随机存取存储器，这种存储器可以在任何顺序存取数据，存取数据的时间与数据的位置无关。常见的例子是计算机内存。</p>
<h3 id="6-DRAM（Dynamic-Random-Access-Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。-2"><a href="#6-DRAM（Dynamic-Random-Access-Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。-2" class="headerlink" title="6.DRAM（Dynamic Random Access Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。"></a>6.DRAM（Dynamic Random Access Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。</h3><h3 id="7-SRAM（Static-Random-Access-Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。-2"><a href="#7-SRAM（Static-Random-Access-Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。-2" class="headerlink" title="7.SRAM（Static Random Access Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。"></a>7.SRAM（Static Random Access Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。</h3><h3 id="8-SDRAM（Synchronous-Dynamic-Random-Access-Memory）-2"><a href="#8-SDRAM（Synchronous-Dynamic-Random-Access-Memory）-2" class="headerlink" title="8.SDRAM（Synchronous Dynamic Random Access Memory）"></a>8.SDRAM（Synchronous Dynamic Random Access Memory）</h3><p>同步动态随机存取存储器，是一种与系统时钟同步运行的DRAM类型。它在时钟的每个周期都能执行指令，从而提高了数据访问速度和效率。</p>
<h3 id="9-MROM（Masked-Read-Only-Memory）：-2"><a href="#9-MROM（Masked-Read-Only-Memory）：-2" class="headerlink" title="9.MROM（Masked Read-Only Memory）："></a>9.MROM（Masked Read-Only Memory）：</h3><p>掩膜只读存储器，MROM是一种只读存储器，其内容在制造过程中被永久性地设置，不可更改。</p>
<h3 id="10-PROM（Programmable-Read-Only-Memory）：-2"><a href="#10-PROM（Programmable-Read-Only-Memory）：-2" class="headerlink" title="10.PROM（Programmable Read-Only Memory）："></a>10.PROM（Programmable Read-Only Memory）：</h3><p>可编程只读存储器，PROM是一种只读存储器，用户可以编程一次，之后内容固定，不可更改。</p>
<h3 id="11-EPROM（Erasable-Programmable-Read-Only-Memory）：-2"><a href="#11-EPROM（Erasable-Programmable-Read-Only-Memory）：-2" class="headerlink" title="11.EPROM（Erasable Programmable Read-Only Memory）："></a>11.EPROM（Erasable Programmable Read-Only Memory）：</h3><p>可擦写可编程只读存储器，EPROM是一种可编程和可擦写的只读存储器，用户可以通过暴露于紫外线下来擦除和重新编程。</p>
<h3 id="12-Flash-Memory（Flash-Memory）：-2"><a href="#12-Flash-Memory（Flash-Memory）：-2" class="headerlink" title="12.Flash Memory（Flash Memory）："></a>12.Flash Memory（Flash Memory）：</h3><p>闪存，Flash Memory是一种非易失性存储器，可以电子方式擦除和重写。</p>
<h3 id="13-SSD（Solid-State-Drive）：-2"><a href="#13-SSD（Solid-State-Drive）：-2" class="headerlink" title="13.SSD（Solid State Drive）："></a>13.SSD（Solid State Drive）：</h3><p>固态硬盘，SSD是一种使用闪存作为存储介质的计算机硬盘，用于数据存储。</p>
<h3 id="14-MREQ（Memory-Request）-2"><a href="#14-MREQ（Memory-Request）-2" class="headerlink" title="14.MREQ（Memory Request）"></a>14.MREQ（Memory Request）</h3><p>内存请求信号，是微处理器与内存或内存控制器之间的控制信号，用于指示当前总线周期是内存访问周期。通常在处理器访问内存时有效。</p>
<h3 id="15-RAID（Redundant-Array-of-Independent-Disks）-2"><a href="#15-RAID（Redundant-Array-of-Independent-Disks）-2" class="headerlink" title="15.RAID（Redundant Array of Independent Disks）"></a>15.RAID（Redundant Array of Independent Disks）</h3><p>独立磁盘冗余阵列，是一种将多个独立的物理磁盘驱动器组合成一个或多个逻辑单元，以提高数据存储性能和&#x2F;或提供容错能力的技术。</p>
<h3 id="16-CAM（Content-Addressable-Memory-内容寻址存储器）-2"><a href="#16-CAM（Content-Addressable-Memory-内容寻址存储器）-2" class="headerlink" title="16.CAM（Content-Addressable Memory,内容寻址存储器）"></a>16.CAM（Content-Addressable Memory,内容寻址存储器）</h3><p>是一种特殊类型的计算机内存，它允许数据通过其内容而不是传统的内存地址来检索。</p>
<h2 id="运算器-2"><a href="#运算器-2" class="headerlink" title="运算器"></a>运算器</h2><h3 id="1-ACC（Accumulator）-2"><a href="#1-ACC（Accumulator）-2" class="headerlink" title="1.ACC（Accumulator）"></a>1.ACC（Accumulator）</h3><p>累加器，是计算机处理器中的一个寄存器，用于存储算术和逻辑操作的结果。</p>
<h3 id="2-MQ（Multiplier-Quotient-Register）-2"><a href="#2-MQ（Multiplier-Quotient-Register）-2" class="headerlink" title="2.MQ（Multiplier Quotient Register）"></a>2.MQ（Multiplier Quotient Register）</h3><p>乘数商寄存器，用于在乘法和除法操作中存储中间结果。</p>
<h3 id="3-X-2"><a href="#3-X-2" class="headerlink" title="3.X"></a>3.X</h3><p>通常指代一个通用寄存器，用于存储临时数据或操作数。</p>
<h3 id="4-ALU（Arithmetic-Logic-Unit）-2"><a href="#4-ALU（Arithmetic-Logic-Unit）-2" class="headerlink" title="4.ALU（Arithmetic Logic Unit）"></a>4.ALU（Arithmetic Logic Unit）</h3><p>算术逻辑单元，是处理器的一部分，负责执行算术和逻辑运算。</p>
<h3 id="5-PSW（Program-Status-Word）-2"><a href="#5-PSW（Program-Status-Word）-2" class="headerlink" title="5.PSW（Program Status Word）"></a>5.PSW（Program Status Word）</h3><p>程序状态字,是一个寄存器，用于存储程序或处理器的当前状态信息，包括条件码、中断使能标志等。</p>
<h2 id="控制器-2"><a href="#控制器-2" class="headerlink" title="控制器"></a>控制器</h2><h3 id="1-CU（Control-Unit）-2"><a href="#1-CU（Control-Unit）-2" class="headerlink" title="1.CU（Control Unit）"></a>1.CU（Control Unit）</h3><p>控制单元，是计算机处理器的一部分，负责解释和执行指令，控制其他组件的操作。</p>
<h3 id="2-IR（Instruction-Register）-2"><a href="#2-IR（Instruction-Register）-2" class="headerlink" title="2.IR（Instruction Register）"></a>2.IR（Instruction Register）</h3><p>指令寄存器，用于存储当前正在执行的指令。</p>
<h3 id="3-PC（Program-Counter）-2"><a href="#3-PC（Program-Counter）-2" class="headerlink" title="3.PC（Program Counter）"></a>3.PC（Program Counter）</h3><p>程序计数器，用于存储下一条将要执行的指令的地址。</p>
<h3 id="4-BR（Base-Register）：-2"><a href="#4-BR（Base-Register）：-2" class="headerlink" title="4.BR（Base Register）："></a>4.BR（Base Register）：</h3><p>基址寄存器,用于提供相对寻址的基地址的寄存器。</p>
<h3 id="5-IX（Index-Register）：-2"><a href="#5-IX（Index-Register）：-2" class="headerlink" title="5.IX（Index Register）："></a>5.IX（Index Register）：</h3><p>索引寄存器,用于存储索引值或偏移量的寄存器，常用于数组访问和指针操作。</p>
<h3 id="6-EA（Effective-Address）：-2"><a href="#6-EA（Effective-Address）：-2" class="headerlink" title="6.EA（Effective Address）："></a>6.EA（Effective Address）：</h3><p>有效地址,用于计算内存操作实际位置的地址，由寄存器值、立即数、偏移量等组合而成。</p>
<h3 id="7-POP：-2"><a href="#7-POP：-2" class="headerlink" title="7.POP："></a>7.POP：</h3><p>弹出,POP指令用于从堆栈中取出一个值并将其存储到指定的寄存器或内存位置。它通常用于恢复被压入堆栈的寄存器值，如在函数调用后恢复返回地址和参数。</p>
<h3 id="8-PUSH：-2"><a href="#8-PUSH：-2" class="headerlink" title="8.PUSH："></a>8.PUSH：</h3><p>压入,PUSH指令用于将一个值压入堆栈。它可以将寄存器中的值、立即数或内存中的值压入堆栈。PUSH常用于保存寄存器的值，以便在函数调用时使用，或者在需要时存储数据。</p>
<h3 id="9-SP（Stack-Pointer）：-2"><a href="#9-SP（Stack-Pointer）：-2" class="headerlink" title="9.SP（Stack Pointer）："></a>9.SP（Stack Pointer）：</h3><p>堆栈指针,堆栈指针是一个寄存器，用于指示当前堆栈的顶部位置。它用于管理堆栈中的数据，确保新压入的数据添加到顶部，而弹出的数据从顶部移除。堆栈指针在函数调用、返回、参数传递和局部变量存储等操作中起着关键作用。</p>
<h3 id="10-IP（Instruction-Pointer）：-2"><a href="#10-IP（Instruction-Pointer）：-2" class="headerlink" title="10.IP（Instruction Pointer）："></a>10.IP（Instruction Pointer）：</h3><p>指令指针,指令指针是一个寄存器，用于存储下一条指令的内存地址。它控制程序的执行流程，确保处理器能够按顺序执行指令序列。指令指针在程序的跳转、循环和函数调用等控制流操作中扮演重要角色。</p>
<h3 id="11-CISC（Complex-Instruction-Set-Computer）：-2"><a href="#11-CISC（Complex-Instruction-Set-Computer）：-2" class="headerlink" title="11.CISC（Complex Instruction Set Computer）："></a>11.CISC（Complex Instruction Set Computer）：</h3><p>复杂指令集计算机,CISC架构的处理器使用大量复杂的指令来执行各种操作。这些指令通常可以执行多个低级操作，如加载、存储、算术和逻辑运算。CISC架构的优点是每条指令可以完成更多的工作，但缺点是指令长度和执行时间可能较长。</p>
<h3 id="12-RISC（Reduced-Instruction-Set-Computer）：-2"><a href="#12-RISC（Reduced-Instruction-Set-Computer）：-2" class="headerlink" title="12.RISC（Reduced Instruction Set Computer）："></a>12.RISC（Reduced Instruction Set Computer）：</h3><p>精简指令集计算机,RISC架构的处理器使用较少的、简单的指令来执行操作。这些指令通常执行单个操作，如算术运算或数据传输。RISC架构的优点是每条指令的执行时间较短，指令周期更少，但缺点是可能需要更多的指令来完成复杂的任务。</p>
<h3 id="13-FE（Fetch，取指）-2"><a href="#13-FE（Fetch，取指）-2" class="headerlink" title="13.FE（Fetch，取指）"></a>13.FE（Fetch，取指）</h3><p>取指阶段是控制器从内存中获取下一条指令的过程。</p>
<h3 id="14-IND（Instruction-Decode，指令解码）：-2"><a href="#14-IND（Instruction-Decode，指令解码）：-2" class="headerlink" title="14.IND（Instruction Decode，指令解码）："></a>14.IND（Instruction Decode，指令解码）：</h3><p>指令解码阶段是控制器解析刚刚获取的指令，确定指令的操作类型和操作数。</p>
<h3 id="15-EX（Execute，执行）：-2"><a href="#15-EX（Execute，执行）：-2" class="headerlink" title="15.EX（Execute，执行）："></a>15.EX（Execute，执行）：</h3><p>执行阶段是控制器根据解码阶段确定的指令操作类型和操作数进行实际计算或处理的过程。</p>
<h3 id="16-INT（Interrupt，中断）：-2"><a href="#16-INT（Interrupt，中断）：-2" class="headerlink" title="16.INT（Interrupt，中断）："></a>16.INT（Interrupt，中断）：</h3><p>中断是一种机制，用于暂停当前正在执行的程序，以便处理更紧急的任务或事件。</p>
<h3 id="17-ID-Instruction-Decoder-2"><a href="#17-ID-Instruction-Decoder-2" class="headerlink" title="17.ID(Instruction Decoder):"></a>17.ID(<strong>Instruction Decoder</strong>):</h3><p>指令译码器,是计算机处理器中的一个关键组件，它负责将指令的操作码部分翻译成一系列的控制信号，这些信号用于指导处理器执行指令。</p>
<h3 id="18-LDA-Load-Accumulator-：-2"><a href="#18-LDA-Load-Accumulator-：-2" class="headerlink" title="18.LDA(Load Accumulator)："></a>18.LDA(Load Accumulator)：</h3><p>LDA指令是一种数据传输指令，用于将指定内存地址中的数据复制到累加器寄存器中。</p>
<h3 id="19-CM（Control-Memory，控制存储器）：-2"><a href="#19-CM（Control-Memory，控制存储器）：-2" class="headerlink" title="19.CM（Control Memory，控制存储器）："></a>19.CM（Control Memory，控制存储器）：</h3><p>控制存储器是计算机处理器中的一个组成部分，它用于存储微程序或微指令序列，这些微程序或微指令序列用于控制处理器的操作。</p>
<h3 id="20-CMAR（Control-Memory-Address-Register，控制存储器地址寄存器）：-2"><a href="#20-CMAR（Control-Memory-Address-Register，控制存储器地址寄存器）：-2" class="headerlink" title="20.CMAR（Control Memory Address Register，控制存储器地址寄存器）："></a>20.CMAR（Control Memory Address Register，控制存储器地址寄存器）：</h3><p>CMAR是计算机处理器中的一个寄存器，它用于存储控制存储器中微指令的地址。</p>
<h3 id="21-CMDR（Control-Memory-Data-Register，控制存储器数据寄存器）：-2"><a href="#21-CMDR（Control-Memory-Data-Register，控制存储器数据寄存器）：-2" class="headerlink" title="21.CMDR（Control Memory Data Register，控制存储器数据寄存器）："></a>21.CMDR（Control Memory Data Register，控制存储器数据寄存器）：</h3><p>CMDR是计算机处理器中的一个寄存器，它用于暂存从控制存储器中读取的微指令数据。</p>
<h2 id="CPU性能指标-2"><a href="#CPU性能指标-2" class="headerlink" title="CPU性能指标"></a>CPU性能指标</h2><h3 id="1-CPI（Cycles-Per-Instruction）-2"><a href="#1-CPI（Cycles-Per-Instruction）-2" class="headerlink" title="1.CPI（Cycles Per Instruction）"></a>1.CPI（Cycles Per Instruction）</h3><p>是指每条指令所需的时钟周期数。它是衡量计算机处理器性能的一个指标，反映了执行一条指令所需的平均时钟周期数。</p>
<h3 id="2-IPS（Instructions-Per-Second）-2"><a href="#2-IPS（Instructions-Per-Second）-2" class="headerlink" title="2.IPS（Instructions Per Second）"></a>2.IPS（Instructions Per Second）</h3><p>是指每秒钟处理器可以执行的指令数，是衡量计算机处理器性能的一个指标。</p>
<h3 id="3-FLOPS（Floating-Point-Operations-Per-Second）-2"><a href="#3-FLOPS（Floating-Point-Operations-Per-Second）-2" class="headerlink" title="3.FLOPS（Floating Point Operations Per Second）"></a>3.FLOPS（Floating Point Operations Per Second）</h3><p>是指每秒钟处理器可以执行的浮点运算次数，是衡量计算机处理器在浮点运算方面性能的一个指标。</p>
<h2 id="指令-2"><a href="#指令-2" class="headerlink" title="指令"></a>指令</h2><h3 id="1-CLA（Clear-Accumulator）：-2"><a href="#1-CLA（Clear-Accumulator）：-2" class="headerlink" title="1.CLA（Clear Accumulator）："></a>1.CLA（Clear Accumulator）：</h3><p>CLA指令用于将累加器寄存器的值清零。</p>
<h3 id="2-COM（Complement）：-2"><a href="#2-COM（Complement）：-2" class="headerlink" title="2.COM（Complement）："></a>2.COM（Complement）：</h3><p>COM指令用于对累加器或指定寄存器的值进行逐位取反，即每一位由1变为0，由0变为1。</p>
<h3 id="3-SHR（Shift-Right）：-2"><a href="#3-SHR（Shift-Right）：-2" class="headerlink" title="3.SHR（Shift Right）："></a>3.SHR（Shift Right）：</h3><p>SHR指令用于将累加器或指定寄存器的值逻辑右移一位，通常将最高位（MSB）移入进位标志位。</p>
<h3 id="4-CSL（Circular-Shift-Left）：-2"><a href="#4-CSL（Circular-Shift-Left）：-2" class="headerlink" title="4.CSL（Circular Shift Left）："></a>4.CSL（Circular Shift Left）：</h3><p>CSL指令用于将累加器或指定寄存器的值循环左移一位，最低位（LSB）移入最高位（MSB）。</p>
<h3 id="5-STP（Stop）：-2"><a href="#5-STP（Stop）：-2" class="headerlink" title="5.STP（Stop）："></a>5.STP（Stop）：</h3><p>STP指令用于停止处理器或程序的执行，通常用于程序结束或错误处理</p>
<h2 id="多处理器-2"><a href="#多处理器-2" class="headerlink" title="多处理器"></a>多处理器</h2><p>1.SISD（Single Instruction, Single Data）：</p>
<p>单指令单数据，这是一种传统的处理模型，其中单个处理器执行一条指令，操作单个数据项。</p>
<p>2.SIMD（Single Instruction, Multiple Data）：</p>
<p>单指令多数据，这种模型中，一个指令同时应用于多个数据项。这种模型常见于并行处理和向量处理中。</p>
<p>3.MISD（Multiple Instruction, Single Data）：</p>
<p>多指令单数据，这种模型相对较少见，其中多个处理器执行不同的指令，但都操作相同的数据。</p>
<p>4.MIMD（Multiple Instruction, Multiple Data）</p>
<p>是一种并行计算模型，其中多个处理器同时执行不同的指令集，操作不同的数据集。</p>
<h2 id="其他-2"><a href="#其他-2" class="headerlink" title="其他"></a>其他</h2><h3 id="1-FA（Full-Adder）-2"><a href="#1-FA（Full-Adder）-2" class="headerlink" title="1.FA（Full Adder）"></a>1.FA（Full Adder）</h3><p>全加器是数字电路中的一个基本组件，用于执行二进制数的加法运算。它能够将两个一位的二进制数（称为加数）以及一个进位输入相加，产生一个和以及一个进位输出。</p>
<h3 id="2-多路复用器（MUX，Multiplexer）-2"><a href="#2-多路复用器（MUX，Multiplexer）-2" class="headerlink" title="2.多路复用器（MUX，Multiplexer）"></a>2.多路复用器（MUX，Multiplexer）</h3><p>是一种组合逻辑电路，它允许在多个输入信号中选择一个并将其传输到单个输出线上。</p>
<h3 id="3-OF（Overflow-Flag）-2"><a href="#3-OF（Overflow-Flag）-2" class="headerlink" title="3.OF（Overflow Flag）"></a>3.OF（Overflow Flag）</h3><p>溢出标志位用于指示有符号数的算术操作是否产生了溢出。</p>
<h3 id="4-SF（Sign-Flag）-2"><a href="#4-SF（Sign-Flag）-2" class="headerlink" title="4.SF（Sign Flag）"></a>4.SF（Sign Flag）</h3><p>定义：符号标志位用于指示运算结果的符号。</p>
<h3 id="5-ZF（Zero-Flag）：-2"><a href="#5-ZF（Zero-Flag）：-2" class="headerlink" title="5.ZF（Zero Flag）："></a>5.ZF（Zero Flag）：</h3><p>定义：零标志位用于指示运算结果是否为零。</p>
<h3 id="6-CF（Carry-Flag）：-2"><a href="#6-CF（Carry-Flag）：-2" class="headerlink" title="6.CF（Carry Flag）："></a>6.CF（Carry Flag）：</h3><p>定义：进位标志位用于指示无符号数的算术操作是否产生了进位或借位。</p>
<h3 id="7-MSB（Most-Significant-Bit）-2"><a href="#7-MSB（Most-Significant-Bit）-2" class="headerlink" title="7.MSB（Most Significant Bit）"></a>7.MSB（Most Significant Bit）</h3><p>在一个二进制数中，MSB是最高位，即最左边的位，它具有最高的值。在大多数情况下，MSB决定了数字的符号（例如，在补码表示中）。</p>
<h3 id="8-LSB（Least-Significant-Bit）-2"><a href="#8-LSB（Least-Significant-Bit）-2" class="headerlink" title="8.LSB（Least Significant Bit）"></a>8.LSB（Least Significant Bit）</h3><p>LSB是最低位，即最右边的位，它具有最小的值。LSB通常用于确定数字的奇偶性。</p>
<p>存储器</p>
<h3 id="1-MAR（Memory-Address-Register）-3"><a href="#1-MAR（Memory-Address-Register）-3" class="headerlink" title="1.MAR（Memory Address Register）"></a>1.MAR（Memory Address Register）</h3><p>内存地址寄存器，是计算机处理器中的一个寄存器，用于存储要访问的内存单元的地址。</p>
<h3 id="2-MDR（Memory-Data-Register）-3"><a href="#2-MDR（Memory-Data-Register）-3" class="headerlink" title="2.MDR（Memory Data Register）"></a>2.MDR（Memory Data Register）</h3><p>内存数据寄存器，也是计算机处理器中的一个寄存器，用于暂存从内存读取的数据或即将写入内存的数据。</p>
<h3 id="3-Cache（缓存）：-3"><a href="#3-Cache（缓存）：-3" class="headerlink" title="3.Cache（缓存）："></a>3.Cache（缓存）：</h3><p>Cache，即缓存，是一种存储技术，用于暂时存储经常访问的数据或指令，以便快速访问。它是位于CPU和主内存之间的一种小容量但非常快速的存储器。</p>
<h3 id="4-SAM（Sequential-Access-Memory）：-3"><a href="#4-SAM（Sequential-Access-Memory）：-3" class="headerlink" title="4.SAM（Sequential Access Memory）："></a>4.SAM（Sequential Access Memory）：</h3><p>顺序存取存储器，这种存储器按一定顺序访问数据，存取数据的时间依赖于数据的位置。常见的例子是磁带存储。</p>
<h3 id="5-RAM（Random-Access-Memory）：-3"><a href="#5-RAM（Random-Access-Memory）：-3" class="headerlink" title="5.RAM（Random Access Memory）："></a>5.RAM（Random Access Memory）：</h3><p>随机存取存储器，这种存储器可以在任何顺序存取数据，存取数据的时间与数据的位置无关。常见的例子是计算机内存。</p>
<h3 id="6-DRAM（Dynamic-Random-Access-Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。-3"><a href="#6-DRAM（Dynamic-Random-Access-Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。-3" class="headerlink" title="6.DRAM（Dynamic Random Access Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。"></a>6.DRAM（Dynamic Random Access Memory）：动态随机存取存储器，这种存储器使用电容器存储数据，每个存储单元由一个电容和一个晶体管组成，电容需要定期刷新以保持数据。</h3><h3 id="7-SRAM（Static-Random-Access-Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。-3"><a href="#7-SRAM（Static-Random-Access-Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。-3" class="headerlink" title="7.SRAM（Static Random Access Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。"></a>7.SRAM（Static Random Access Memory）：静态随机存取存储器，这种存储器使用触发器存储数据，每个存储单元由多个晶体管组成，数据在电源开通时可以一直保持，不需要刷新。</h3><h3 id="8-SDRAM（Synchronous-Dynamic-Random-Access-Memory）-3"><a href="#8-SDRAM（Synchronous-Dynamic-Random-Access-Memory）-3" class="headerlink" title="8.SDRAM（Synchronous Dynamic Random Access Memory）"></a>8.SDRAM（Synchronous Dynamic Random Access Memory）</h3><p>同步动态随机存取存储器，是一种与系统时钟同步运行的DRAM类型。它在时钟的每个周期都能执行指令，从而提高了数据访问速度和效率。</p>
<h3 id="9-MROM（Masked-Read-Only-Memory）：-3"><a href="#9-MROM（Masked-Read-Only-Memory）：-3" class="headerlink" title="9.MROM（Masked Read-Only Memory）："></a>9.MROM（Masked Read-Only Memory）：</h3><p>掩膜只读存储器，MROM是一种只读存储器，其内容在制造过程中被永久性地设置，不可更改。</p>
<h3 id="10-PROM（Programmable-Read-Only-Memory）：-3"><a href="#10-PROM（Programmable-Read-Only-Memory）：-3" class="headerlink" title="10.PROM（Programmable Read-Only Memory）："></a>10.PROM（Programmable Read-Only Memory）：</h3><p>可编程只读存储器，PROM是一种只读存储器，用户可以编程一次，之后内容固定，不可更改。</p>
<h3 id="11-EPROM（Erasable-Programmable-Read-Only-Memory）：-3"><a href="#11-EPROM（Erasable-Programmable-Read-Only-Memory）：-3" class="headerlink" title="11.EPROM（Erasable Programmable Read-Only Memory）："></a>11.EPROM（Erasable Programmable Read-Only Memory）：</h3><p>可擦写可编程只读存储器，EPROM是一种可编程和可擦写的只读存储器，用户可以通过暴露于紫外线下来擦除和重新编程。</p>
<h3 id="12-Flash-Memory（Flash-Memory）：-3"><a href="#12-Flash-Memory（Flash-Memory）：-3" class="headerlink" title="12.Flash Memory（Flash Memory）："></a>12.Flash Memory（Flash Memory）：</h3><p>闪存，Flash Memory是一种非易失性存储器，可以电子方式擦除和重写。</p>
<h3 id="13-SSD（Solid-State-Drive）：-3"><a href="#13-SSD（Solid-State-Drive）：-3" class="headerlink" title="13.SSD（Solid State Drive）："></a>13.SSD（Solid State Drive）：</h3><p>固态硬盘，SSD是一种使用闪存作为存储介质的计算机硬盘，用于数据存储。</p>
<h3 id="14-MREQ（Memory-Request）-3"><a href="#14-MREQ（Memory-Request）-3" class="headerlink" title="14.MREQ（Memory Request）"></a>14.MREQ（Memory Request）</h3><p>内存请求信号，是微处理器与内存或内存控制器之间的控制信号，用于指示当前总线周期是内存访问周期。通常在处理器访问内存时有效。</p>
<h3 id="15-RAID（Redundant-Array-of-Independent-Disks）-3"><a href="#15-RAID（Redundant-Array-of-Independent-Disks）-3" class="headerlink" title="15.RAID（Redundant Array of Independent Disks）"></a>15.RAID（Redundant Array of Independent Disks）</h3><p>独立磁盘冗余阵列，是一种将多个独立的物理磁盘驱动器组合成一个或多个逻辑单元，以提高数据存储性能和&#x2F;或提供容错能力的技术。</p>
<h3 id="16-CAM（Content-Addressable-Memory-内容寻址存储器）-3"><a href="#16-CAM（Content-Addressable-Memory-内容寻址存储器）-3" class="headerlink" title="16.CAM（Content-Addressable Memory,内容寻址存储器）"></a>16.CAM（Content-Addressable Memory,内容寻址存储器）</h3><p>是一种特殊类型的计算机内存，它允许数据通过其内容而不是传统的内存地址来检索。</p>
<h2 id="运算器-3"><a href="#运算器-3" class="headerlink" title="运算器"></a>运算器</h2><h3 id="1-ACC（Accumulator）-3"><a href="#1-ACC（Accumulator）-3" class="headerlink" title="1.ACC（Accumulator）"></a>1.ACC（Accumulator）</h3><p>累加器，是计算机处理器中的一个寄存器，用于存储算术和逻辑操作的结果。</p>
<h3 id="2-MQ（Multiplier-Quotient-Register）-3"><a href="#2-MQ（Multiplier-Quotient-Register）-3" class="headerlink" title="2.MQ（Multiplier Quotient Register）"></a>2.MQ（Multiplier Quotient Register）</h3><p>乘数商寄存器，用于在乘法和除法操作中存储中间结果。</p>
<h3 id="3-X-3"><a href="#3-X-3" class="headerlink" title="3.X"></a>3.X</h3><p>通常指代一个通用寄存器，用于存储临时数据或操作数。</p>
<h3 id="4-ALU（Arithmetic-Logic-Unit）-3"><a href="#4-ALU（Arithmetic-Logic-Unit）-3" class="headerlink" title="4.ALU（Arithmetic Logic Unit）"></a>4.ALU（Arithmetic Logic Unit）</h3><p>算术逻辑单元，是处理器的一部分，负责执行算术和逻辑运算。</p>
<h3 id="5-PSW（Program-Status-Word）-3"><a href="#5-PSW（Program-Status-Word）-3" class="headerlink" title="5.PSW（Program Status Word）"></a>5.PSW（Program Status Word）</h3><p>程序状态字,是一个寄存器，用于存储程序或处理器的当前状态信息，包括条件码、中断使能标志等。</p>
<h2 id="控制器-3"><a href="#控制器-3" class="headerlink" title="控制器"></a>控制器</h2><h3 id="1-CU（Control-Unit）-3"><a href="#1-CU（Control-Unit）-3" class="headerlink" title="1.CU（Control Unit）"></a>1.CU（Control Unit）</h3><p>控制单元，是计算机处理器的一部分，负责解释和执行指令，控制其他组件的操作。</p>
<h3 id="2-IR（Instruction-Register）-3"><a href="#2-IR（Instruction-Register）-3" class="headerlink" title="2.IR（Instruction Register）"></a>2.IR（Instruction Register）</h3><p>指令寄存器，用于存储当前正在执行的指令。</p>
<h3 id="3-PC（Program-Counter）-3"><a href="#3-PC（Program-Counter）-3" class="headerlink" title="3.PC（Program Counter）"></a>3.PC（Program Counter）</h3><p>程序计数器，用于存储下一条将要执行的指令的地址。</p>
<h3 id="4-BR（Base-Register）：-3"><a href="#4-BR（Base-Register）：-3" class="headerlink" title="4.BR（Base Register）："></a>4.BR（Base Register）：</h3><p>基址寄存器,用于提供相对寻址的基地址的寄存器。</p>
<h3 id="5-IX（Index-Register）：-3"><a href="#5-IX（Index-Register）：-3" class="headerlink" title="5.IX（Index Register）："></a>5.IX（Index Register）：</h3><p>索引寄存器,用于存储索引值或偏移量的寄存器，常用于数组访问和指针操作。</p>
<h3 id="6-EA（Effective-Address）：-3"><a href="#6-EA（Effective-Address）：-3" class="headerlink" title="6.EA（Effective Address）："></a>6.EA（Effective Address）：</h3><p>有效地址,用于计算内存操作实际位置的地址，由寄存器值、立即数、偏移量等组合而成。</p>
<h3 id="7-POP：-3"><a href="#7-POP：-3" class="headerlink" title="7.POP："></a>7.POP：</h3><p>弹出,POP指令用于从堆栈中取出一个值并将其存储到指定的寄存器或内存位置。它通常用于恢复被压入堆栈的寄存器值，如在函数调用后恢复返回地址和参数。</p>
<h3 id="8-PUSH：-3"><a href="#8-PUSH：-3" class="headerlink" title="8.PUSH："></a>8.PUSH：</h3><p>压入,PUSH指令用于将一个值压入堆栈。它可以将寄存器中的值、立即数或内存中的值压入堆栈。PUSH常用于保存寄存器的值，以便在函数调用时使用，或者在需要时存储数据。</p>
<h3 id="9-SP（Stack-Pointer）：-3"><a href="#9-SP（Stack-Pointer）：-3" class="headerlink" title="9.SP（Stack Pointer）："></a>9.SP（Stack Pointer）：</h3><p>堆栈指针,堆栈指针是一个寄存器，用于指示当前堆栈的顶部位置。它用于管理堆栈中的数据，确保新压入的数据添加到顶部，而弹出的数据从顶部移除。堆栈指针在函数调用、返回、参数传递和局部变量存储等操作中起着关键作用。</p>
<h3 id="10-IP（Instruction-Pointer）：-3"><a href="#10-IP（Instruction-Pointer）：-3" class="headerlink" title="10.IP（Instruction Pointer）："></a>10.IP（Instruction Pointer）：</h3><p>指令指针,指令指针是一个寄存器，用于存储下一条指令的内存地址。它控制程序的执行流程，确保处理器能够按顺序执行指令序列。指令指针在程序的跳转、循环和函数调用等控制流操作中扮演重要角色。</p>
<h3 id="11-CISC（Complex-Instruction-Set-Computer）：-3"><a href="#11-CISC（Complex-Instruction-Set-Computer）：-3" class="headerlink" title="11.CISC（Complex Instruction Set Computer）："></a>11.CISC（Complex Instruction Set Computer）：</h3><p>复杂指令集计算机,CISC架构的处理器使用大量复杂的指令来执行各种操作。这些指令通常可以执行多个低级操作，如加载、存储、算术和逻辑运算。CISC架构的优点是每条指令可以完成更多的工作，但缺点是指令长度和执行时间可能较长。</p>
<h3 id="12-RISC（Reduced-Instruction-Set-Computer）：-3"><a href="#12-RISC（Reduced-Instruction-Set-Computer）：-3" class="headerlink" title="12.RISC（Reduced Instruction Set Computer）："></a>12.RISC（Reduced Instruction Set Computer）：</h3><p>精简指令集计算机,RISC架构的处理器使用较少的、简单的指令来执行操作。这些指令通常执行单个操作，如算术运算或数据传输。RISC架构的优点是每条指令的执行时间较短，指令周期更少，但缺点是可能需要更多的指令来完成复杂的任务。</p>
<h3 id="13-FE（Fetch，取指）-3"><a href="#13-FE（Fetch，取指）-3" class="headerlink" title="13.FE（Fetch，取指）"></a>13.FE（Fetch，取指）</h3><p>取指阶段是控制器从内存中获取下一条指令的过程。</p>
<h3 id="14-IND（Instruction-Decode，指令解码）：-3"><a href="#14-IND（Instruction-Decode，指令解码）：-3" class="headerlink" title="14.IND（Instruction Decode，指令解码）："></a>14.IND（Instruction Decode，指令解码）：</h3><p>指令解码阶段是控制器解析刚刚获取的指令，确定指令的操作类型和操作数。</p>
<h3 id="15-EX（Execute，执行）：-3"><a href="#15-EX（Execute，执行）：-3" class="headerlink" title="15.EX（Execute，执行）："></a>15.EX（Execute，执行）：</h3><p>执行阶段是控制器根据解码阶段确定的指令操作类型和操作数进行实际计算或处理的过程。</p>
<h3 id="16-INT（Interrupt，中断）：-3"><a href="#16-INT（Interrupt，中断）：-3" class="headerlink" title="16.INT（Interrupt，中断）："></a>16.INT（Interrupt，中断）：</h3><p>中断是一种机制，用于暂停当前正在执行的程序，以便处理更紧急的任务或事件。</p>
<h3 id="17-ID-Instruction-Decoder-3"><a href="#17-ID-Instruction-Decoder-3" class="headerlink" title="17.ID(Instruction Decoder):"></a>17.ID(<strong>Instruction Decoder</strong>):</h3><p>指令译码器,是计算机处理器中的一个关键组件，它负责将指令的操作码部分翻译成一系列的控制信号，这些信号用于指导处理器执行指令。</p>
<h3 id="18-LDA-Load-Accumulator-：-3"><a href="#18-LDA-Load-Accumulator-：-3" class="headerlink" title="18.LDA(Load Accumulator)："></a>18.LDA(Load Accumulator)：</h3><p>LDA指令是一种数据传输指令，用于将指定内存地址中的数据复制到累加器寄存器中。</p>
<h3 id="19-CM（Control-Memory，控制存储器）：-3"><a href="#19-CM（Control-Memory，控制存储器）：-3" class="headerlink" title="19.CM（Control Memory，控制存储器）："></a>19.CM（Control Memory，控制存储器）：</h3><p>控制存储器是计算机处理器中的一个组成部分，它用于存储微程序或微指令序列，这些微程序或微指令序列用于控制处理器的操作。</p>
<h3 id="20-CMAR（Control-Memory-Address-Register，控制存储器地址寄存器）：-3"><a href="#20-CMAR（Control-Memory-Address-Register，控制存储器地址寄存器）：-3" class="headerlink" title="20.CMAR（Control Memory Address Register，控制存储器地址寄存器）："></a>20.CMAR（Control Memory Address Register，控制存储器地址寄存器）：</h3><p>CMAR是计算机处理器中的一个寄存器，它用于存储控制存储器中微指令的地址。</p>
<h3 id="21-CMDR（Control-Memory-Data-Register，控制存储器数据寄存器）：-3"><a href="#21-CMDR（Control-Memory-Data-Register，控制存储器数据寄存器）：-3" class="headerlink" title="21.CMDR（Control Memory Data Register，控制存储器数据寄存器）："></a>21.CMDR（Control Memory Data Register，控制存储器数据寄存器）：</h3><p>CMDR是计算机处理器中的一个寄存器，它用于暂存从控制存储器中读取的微指令数据。</p>
<h2 id="CPU性能指标-3"><a href="#CPU性能指标-3" class="headerlink" title="CPU性能指标"></a>CPU性能指标</h2><h3 id="1-CPI（Cycles-Per-Instruction）-3"><a href="#1-CPI（Cycles-Per-Instruction）-3" class="headerlink" title="1.CPI（Cycles Per Instruction）"></a>1.CPI（Cycles Per Instruction）</h3><p>是指每条指令所需的时钟周期数。它是衡量计算机处理器性能的一个指标，反映了执行一条指令所需的平均时钟周期数。</p>
<h3 id="2-IPS（Instructions-Per-Second）-3"><a href="#2-IPS（Instructions-Per-Second）-3" class="headerlink" title="2.IPS（Instructions Per Second）"></a>2.IPS（Instructions Per Second）</h3><p>是指每秒钟处理器可以执行的指令数，是衡量计算机处理器性能的一个指标。</p>
<h3 id="3-FLOPS（Floating-Point-Operations-Per-Second）-3"><a href="#3-FLOPS（Floating-Point-Operations-Per-Second）-3" class="headerlink" title="3.FLOPS（Floating Point Operations Per Second）"></a>3.FLOPS（Floating Point Operations Per Second）</h3><p>是指每秒钟处理器可以执行的浮点运算次数，是衡量计算机处理器在浮点运算方面性能的一个指标。</p>
<h2 id="指令-3"><a href="#指令-3" class="headerlink" title="指令"></a>指令</h2><h3 id="1-CLA（Clear-Accumulator）：-3"><a href="#1-CLA（Clear-Accumulator）：-3" class="headerlink" title="1.CLA（Clear Accumulator）："></a>1.CLA（Clear Accumulator）：</h3><p>CLA指令用于将累加器寄存器的值清零。</p>
<h3 id="2-COM（Complement）：-3"><a href="#2-COM（Complement）：-3" class="headerlink" title="2.COM（Complement）："></a>2.COM（Complement）：</h3><p>COM指令用于对累加器或指定寄存器的值进行逐位取反，即每一位由1变为0，由0变为1。</p>
<h3 id="3-SHR（Shift-Right）：-3"><a href="#3-SHR（Shift-Right）：-3" class="headerlink" title="3.SHR（Shift Right）："></a>3.SHR（Shift Right）：</h3><p>SHR指令用于将累加器或指定寄存器的值逻辑右移一位，通常将最高位（MSB）移入进位标志位。</p>
<h3 id="4-CSL（Circular-Shift-Left）：-3"><a href="#4-CSL（Circular-Shift-Left）：-3" class="headerlink" title="4.CSL（Circular Shift Left）："></a>4.CSL（Circular Shift Left）：</h3><p>CSL指令用于将累加器或指定寄存器的值循环左移一位，最低位（LSB）移入最高位（MSB）。</p>
<h3 id="5-STP（Stop）：-3"><a href="#5-STP（Stop）：-3" class="headerlink" title="5.STP（Stop）："></a>5.STP（Stop）：</h3><p>STP指令用于停止处理器或程序的执行，通常用于程序结束或错误处理</p>
<h2 id="多处理器-3"><a href="#多处理器-3" class="headerlink" title="多处理器"></a>多处理器</h2><p>1.SISD（Single Instruction, Single Data）：</p>
<p>单指令单数据，这是一种传统的处理模型，其中单个处理器执行一条指令，操作单个数据项。</p>
<p>2.SIMD（Single Instruction, Multiple Data）：</p>
<p>单指令多数据，这种模型中，一个指令同时应用于多个数据项。这种模型常见于并行处理和向量处理中。</p>
<p>3.MISD（Multiple Instruction, Single Data）：</p>
<p>多指令单数据，这种模型相对较少见，其中多个处理器执行不同的指令，但都操作相同的数据。</p>
<p>4.MIMD（Multiple Instruction, Multiple Data）</p>
<p>是一种并行计算模型，其中多个处理器同时执行不同的指令集，操作不同的数据集。</p>
<h2 id="其他-3"><a href="#其他-3" class="headerlink" title="其他"></a>其他</h2><h3 id="1-FA（Full-Adder）-3"><a href="#1-FA（Full-Adder）-3" class="headerlink" title="1.FA（Full Adder）"></a>1.FA（Full Adder）</h3><p>全加器是数字电路中的一个基本组件，用于执行二进制数的加法运算。它能够将两个一位的二进制数（称为加数）以及一个进位输入相加，产生一个和以及一个进位输出。</p>
<h3 id="2-多路复用器（MUX，Multiplexer）-3"><a href="#2-多路复用器（MUX，Multiplexer）-3" class="headerlink" title="2.多路复用器（MUX，Multiplexer）"></a>2.多路复用器（MUX，Multiplexer）</h3><p>是一种组合逻辑电路，它允许在多个输入信号中选择一个并将其传输到单个输出线上。</p>
<h3 id="3-OF（Overflow-Flag）-3"><a href="#3-OF（Overflow-Flag）-3" class="headerlink" title="3.OF（Overflow Flag）"></a>3.OF（Overflow Flag）</h3><p>溢出标志位用于指示有符号数的算术操作是否产生了溢出。</p>
<h3 id="4-SF（Sign-Flag）-3"><a href="#4-SF（Sign-Flag）-3" class="headerlink" title="4.SF（Sign Flag）"></a>4.SF（Sign Flag）</h3><p>定义：符号标志位用于指示运算结果的符号。</p>
<h3 id="5-ZF（Zero-Flag）：-3"><a href="#5-ZF（Zero-Flag）：-3" class="headerlink" title="5.ZF（Zero Flag）："></a>5.ZF（Zero Flag）：</h3><p>定义：零标志位用于指示运算结果是否为零。</p>
<h3 id="6-CF（Carry-Flag）：-3"><a href="#6-CF（Carry-Flag）：-3" class="headerlink" title="6.CF（Carry Flag）："></a>6.CF（Carry Flag）：</h3><p>定义：进位标志位用于指示无符号数的算术操作是否产生了进位或借位。</p>
<h3 id="7-MSB（Most-Significant-Bit）-3"><a href="#7-MSB（Most-Significant-Bit）-3" class="headerlink" title="7.MSB（Most Significant Bit）"></a>7.MSB（Most Significant Bit）</h3><p>在一个二进制数中，MSB是最高位，即最左边的位，它具有最高的值。在大多数情况下，MSB决定了数字的符号（例如，在补码表示中）。</p>
<h3 id="8-LSB（Least-Significant-Bit）-3"><a href="#8-LSB（Least-Significant-Bit）-3" class="headerlink" title="8.LSB（Least Significant Bit）"></a>8.LSB（Least Significant Bit）</h3><p>LSB是最低位，即最右边的位，它具有最小的值。LSB通常用于确定数字的奇偶性。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>浮点数的表示</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%B5%AE%E7%82%B9%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/</url>
    <content><![CDATA[<h1 id="浮点数的表示"><a href="#浮点数的表示" class="headerlink" title="浮点数的表示"></a>浮点数的表示</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>浮点数（Floating Point Number）是一种表示实数的方法，它能够表示非常大或非常小的数字，以及不是整数的数字。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.符号位</p>
<p>2.指数部分</p>
<p>3.尾数部分组成</p>
<p>符号位表示正负，指数部分表示数的范围，尾数部分表示数的精度。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>浮点数的表示通常遵循IEEE 754标准，该标准定义了单精度（32位）和双精度（64位）两种主要的浮点数格式。</p>
<p>阶码：常用<strong>补码或者原码</strong>表示的<strong>定点整数</strong></p>
<p>尾数：常用<strong>原码或者补码</strong>表示的<strong>定点小数</strong></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171520784.png" alt="image-20240626171520784"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>浮点数可以根据其表示的精度和范围进行分类，如单精度浮点数和双精度浮点数。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>浮点数的主要特征是能够表示非常大或非常小的数，以及非整数，但可能存在精度误差。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>浮点数的目的在于提供一种在计算机中表示实数的方法，特别是在需要处理非常大或非常小的数以及非整数时。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-尾数的规格化"><a href="#1-尾数的规格化" class="headerlink" title="1.尾数的规格化"></a>1.尾数的规格化</h3><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171854142.png" alt="image-20240626171854142"></p>
<h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171948378.png" alt="image-20240626171948378"></p>
<h3 id="2-正负上溢、正负下溢"><a href="#2-正负上溢、正负下溢" class="headerlink" title="2.正负上溢、正负下溢"></a>2.正负上溢、正负下溢</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626172056770.png" alt="image-20240626172056770">的表示</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>浮点数（Floating Point Number）是一种表示实数的方法，它能够表示非常大或非常小的数字，以及不是整数的数字。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.符号位</p>
<p>2.指数部分</p>
<p>3.尾数部分组成</p>
<p>符号位表示正负，指数部分表示数的范围，尾数部分表示数的精度。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>浮点数的表示通常遵循IEEE 754标准，该标准定义了单精度（32位）和双精度（64位）两种主要的浮点数格式。</p>
<p>阶码：常用<strong>补码或者原码</strong>表示的<strong>定点整数</strong></p>
<p>尾数：常用<strong>原码或者补码</strong>表示的<strong>定点小数</strong></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171520784.png" alt="image-20240626171520784"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>浮点数可以根据其表示的精度和范围进行分类，如单精度浮点数和双精度浮点数。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>浮点数的主要特征是能够表示非常大或非常小的数，以及非整数，但可能存在精度误差。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>浮点数的目的在于提供一种在计算机中表示实数的方法，特别是在需要处理非常大或非常小的数以及非整数时。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-尾数的规格化-1"><a href="#1-尾数的规格化-1" class="headerlink" title="1.尾数的规格化"></a>1.尾数的规格化</h3><h4 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171854142.png" alt="image-20240626171854142"></p>
<h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171948378.png" alt="image-20240626171948378"></p>
<h3 id="2-正负上溢、正负下溢-1"><a href="#2-正负上溢、正负下溢-1" class="headerlink" title="2.正负上溢、正负下溢"></a>2.正负上溢、正负下溢</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626172056770.png" alt="image-20240626172056770"># 	浮点数的表示</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>浮点数（Floating Point Number）是一种表示实数的方法，它能够表示非常大或非常小的数字，以及不是整数的数字。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.符号位</p>
<p>2.指数部分</p>
<p>3.尾数部分组成</p>
<p>符号位表示正负，指数部分表示数的范围，尾数部分表示数的精度。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>浮点数的表示通常遵循IEEE 754标准，该标准定义了单精度（32位）和双精度（64位）两种主要的浮点数格式。</p>
<p>阶码：常用<strong>补码或者原码</strong>表示的<strong>定点整数</strong></p>
<p>尾数：常用<strong>原码或者补码</strong>表示的<strong>定点小数</strong></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171520784.png" alt="image-20240626171520784"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>浮点数可以根据其表示的精度和范围进行分类，如单精度浮点数和双精度浮点数。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>浮点数的主要特征是能够表示非常大或非常小的数，以及非整数，但可能存在精度误差。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>浮点数的目的在于提供一种在计算机中表示实数的方法，特别是在需要处理非常大或非常小的数以及非整数时。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-尾数的规格化-2"><a href="#1-尾数的规格化-2" class="headerlink" title="1.尾数的规格化"></a>1.尾数的规格化</h3><h4 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171854142.png" alt="image-20240626171854142"></p>
<h4 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171948378.png" alt="image-20240626171948378"></p>
<h3 id="2-正负上溢、正负下溢-2"><a href="#2-正负上溢、正负下溢-2" class="headerlink" title="2.正负上溢、正负下溢"></a>2.正负上溢、正负下溢</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626172056770.png" alt="image-20240626172056770">的表示</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>浮点数（Floating Point Number）是一种表示实数的方法，它能够表示非常大或非常小的数字，以及不是整数的数字。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.符号位</p>
<p>2.指数部分</p>
<p>3.尾数部分组成</p>
<p>符号位表示正负，指数部分表示数的范围，尾数部分表示数的精度。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>浮点数的表示通常遵循IEEE 754标准，该标准定义了单精度（32位）和双精度（64位）两种主要的浮点数格式。</p>
<p>阶码：常用<strong>补码或者原码</strong>表示的<strong>定点整数</strong></p>
<p>尾数：常用<strong>原码或者补码</strong>表示的<strong>定点小数</strong></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171520784.png" alt="image-20240626171520784"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>浮点数可以根据其表示的精度和范围进行分类，如单精度浮点数和双精度浮点数。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>浮点数的主要特征是能够表示非常大或非常小的数，以及非整数，但可能存在精度误差。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>浮点数的目的在于提供一种在计算机中表示实数的方法，特别是在需要处理非常大或非常小的数以及非整数时。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-尾数的规格化-3"><a href="#1-尾数的规格化-3" class="headerlink" title="1.尾数的规格化"></a>1.尾数的规格化</h3><h4 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171854142.png" alt="image-20240626171854142"></p>
<h4 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h4><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626171948378.png" alt="image-20240626171948378"></p>
<h3 id="2-正负上溢、正负下溢-3"><a href="#2-正负上溢、正负下溢-3" class="headerlink" title="2.正负上溢、正负下溢"></a>2.正负上溢、正负下溢</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626172056770.png" alt="image-20240626172056770"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>浮点数的运算</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%B5%AE%E7%82%B9%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="浮点数的运算"><a href="#浮点数的运算" class="headerlink" title="浮点数的运算"></a>浮点数的运算</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>类型一：</p>
<p>表示浮点数：按照IEEE 754标准，将数值转换为浮点数表示形式。<br>进行运算：使用浮点数的加法、减法、乘法、除法等运算。<br>舍入和截断：根据需要对计算结果进行舍入或截断处理。<br>处理特殊情况：如溢出、下溢和NaN（非数字）。</p>
<p>类型二：</p>
<p>①对阶</p>
<p>②尾数加&#x2F;减</p>
<p>③规格化</p>
<p>④舍入</p>
<p>⑤判断溢出</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626180456914.png" alt="image-20240626180456914"></p>
<p>运算</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>类型一：</p>
<p>表示浮点数：按照IEEE 754标准，将数值转换为浮点数表示形式。<br>进行运算：使用浮点数的加法、减法、乘法、除法等运算。<br>舍入和截断：根据需要对计算结果进行舍入或截断处理。<br>处理特殊情况：如溢出、下溢和NaN（非数字）。</p>
<p>类型二：</p>
<p>①对阶</p>
<p>②尾数加&#x2F;减</p>
<p>③规格化</p>
<p>④舍入</p>
<p>⑤判断溢出</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626180456914.png" alt="image-20240626180456914"># 浮点数的运算</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>类型一：</p>
<p>表示浮点数：按照IEEE 754标准，将数值转换为浮点数表示形式。<br>进行运算：使用浮点数的加法、减法、乘法、除法等运算。<br>舍入和截断：根据需要对计算结果进行舍入或截断处理。<br>处理特殊情况：如溢出、下溢和NaN（非数字）。</p>
<p>类型二：</p>
<p>①对阶</p>
<p>②尾数加&#x2F;减</p>
<p>③规格化</p>
<p>④舍入</p>
<p>⑤判断溢出</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626180456914.png" alt="image-20240626180456914"></p>
<p>运算</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>类型一：</p>
<p>表示浮点数：按照IEEE 754标准，将数值转换为浮点数表示形式。<br>进行运算：使用浮点数的加法、减法、乘法、除法等运算。<br>舍入和截断：根据需要对计算结果进行舍入或截断处理。<br>处理特殊情况：如溢出、下溢和NaN（非数字）。</p>
<p>类型二：</p>
<p>①对阶</p>
<p>②尾数加&#x2F;减</p>
<p>③规格化</p>
<p>④舍入</p>
<p>⑤判断溢出</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626180456914.png" alt="image-20240626180456914"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>硬件多线程的基本概念</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%A1%AC%E4%BB%B6%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h1 id="硬件多线程的基本概念"><a href="#硬件多线程的基本概念" class="headerlink" title="硬件多线程的基本概念"></a>硬件多线程的基本概念</h1><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225352289.png" alt="image-20240629225352289">概念</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225352289.png" alt="image-20240629225352289"># 硬件多线程的基本概念</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225352289.png" alt="image-20240629225352289">概念</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629225352289.png" alt="image-20240629225352289"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>硬布线控制器的设计</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%A1%AC%E5%B8%83%E7%BA%BF%E6%8E%A7%E5%88%B6%E5%99%A8%E7%9A%84%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="硬部件控制器"><a href="#硬部件控制器" class="headerlink" title="硬部件控制器"></a>硬部件控制器</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>硬件控制器是一种电子设备或电路，用于控制和管理计算机系统中特定硬件组件的操作和功能。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.接口电路：与CPU或总线连接，接收控制命令和传输数据。<br>2.控制逻辑：处理命令和控制信号，驱动硬件执行相应操作。<br>3.状态寄存器：存储设备状态和控制信息。<br>4.时序电路：生成时序信号，同步数据传输和操作执行。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>硬件控制器的具体结构可以根据不同的硬件设备和功能需求而有所差异，但通常包括接口、逻辑和时序控制。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221105354.png" alt="image-20240629221105354"></p>
<h3 id="逻辑表达式和对应的电路"><a href="#逻辑表达式和对应的电路" class="headerlink" title="逻辑表达式和对应的电路"></a>逻辑表达式和对应的电路</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221153472.png" alt="image-20240629221153472"></p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="硬部件控制器设计"><a href="#硬部件控制器设计" class="headerlink" title="硬部件控制器设计"></a>硬部件控制器设计</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221501963.png" alt="image-20240629221501963"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221253365.png" alt="image-20240629221253365"></p>
<h3 id="组合逻辑设计"><a href="#组合逻辑设计" class="headerlink" title="组合逻辑设计"></a>组合逻辑设计</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221321151.png" alt="image-20240629221321151"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221427042.png" alt="image-20240629221427042"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221545420.png" alt="image-20240629221545420"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221605321.png" alt="image-20240629221605321"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221622784.png" alt="image-20240629221622784">制器</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>硬件控制器是一种电子设备或电路，用于控制和管理计算机系统中特定硬件组件的操作和功能。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.接口电路：与CPU或总线连接，接收控制命令和传输数据。<br>2.控制逻辑：处理命令和控制信号，驱动硬件执行相应操作。<br>3.状态寄存器：存储设备状态和控制信息。<br>4.时序电路：生成时序信号，同步数据传输和操作执行。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>硬件控制器的具体结构可以根据不同的硬件设备和功能需求而有所差异，但通常包括接口、逻辑和时序控制。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221105354.png" alt="image-20240629221105354"></p>
<h3 id="逻辑表达式和对应的电路-1"><a href="#逻辑表达式和对应的电路-1" class="headerlink" title="逻辑表达式和对应的电路"></a>逻辑表达式和对应的电路</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221153472.png" alt="image-20240629221153472"></p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="硬部件控制器设计-1"><a href="#硬部件控制器设计-1" class="headerlink" title="硬部件控制器设计"></a>硬部件控制器设计</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221501963.png" alt="image-20240629221501963"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221253365.png" alt="image-20240629221253365"></p>
<h3 id="组合逻辑设计-1"><a href="#组合逻辑设计-1" class="headerlink" title="组合逻辑设计"></a>组合逻辑设计</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221321151.png" alt="image-20240629221321151"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221427042.png" alt="image-20240629221427042"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221545420.png" alt="image-20240629221545420"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221605321.png" alt="image-20240629221605321"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221622784.png" alt="image-20240629221622784"># 硬部件控制器</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>硬件控制器是一种电子设备或电路，用于控制和管理计算机系统中特定硬件组件的操作和功能。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.接口电路：与CPU或总线连接，接收控制命令和传输数据。<br>2.控制逻辑：处理命令和控制信号，驱动硬件执行相应操作。<br>3.状态寄存器：存储设备状态和控制信息。<br>4.时序电路：生成时序信号，同步数据传输和操作执行。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>硬件控制器的具体结构可以根据不同的硬件设备和功能需求而有所差异，但通常包括接口、逻辑和时序控制。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221105354.png" alt="image-20240629221105354"></p>
<h3 id="逻辑表达式和对应的电路-2"><a href="#逻辑表达式和对应的电路-2" class="headerlink" title="逻辑表达式和对应的电路"></a>逻辑表达式和对应的电路</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221153472.png" alt="image-20240629221153472"></p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="硬部件控制器设计-2"><a href="#硬部件控制器设计-2" class="headerlink" title="硬部件控制器设计"></a>硬部件控制器设计</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221501963.png" alt="image-20240629221501963"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221253365.png" alt="image-20240629221253365"></p>
<h3 id="组合逻辑设计-2"><a href="#组合逻辑设计-2" class="headerlink" title="组合逻辑设计"></a>组合逻辑设计</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221321151.png" alt="image-20240629221321151"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221427042.png" alt="image-20240629221427042"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221545420.png" alt="image-20240629221545420"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221605321.png" alt="image-20240629221605321"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221622784.png" alt="image-20240629221622784">制器</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>硬件控制器是一种电子设备或电路，用于控制和管理计算机系统中特定硬件组件的操作和功能。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.接口电路：与CPU或总线连接，接收控制命令和传输数据。<br>2.控制逻辑：处理命令和控制信号，驱动硬件执行相应操作。<br>3.状态寄存器：存储设备状态和控制信息。<br>4.时序电路：生成时序信号，同步数据传输和操作执行。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>硬件控制器的具体结构可以根据不同的硬件设备和功能需求而有所差异，但通常包括接口、逻辑和时序控制。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221105354.png" alt="image-20240629221105354"></p>
<h3 id="逻辑表达式和对应的电路-3"><a href="#逻辑表达式和对应的电路-3" class="headerlink" title="逻辑表达式和对应的电路"></a>逻辑表达式和对应的电路</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221153472.png" alt="image-20240629221153472"></p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="硬部件控制器设计-3"><a href="#硬部件控制器设计-3" class="headerlink" title="硬部件控制器设计"></a>硬部件控制器设计</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221501963.png" alt="image-20240629221501963"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221253365.png" alt="image-20240629221253365"></p>
<h3 id="组合逻辑设计-3"><a href="#组合逻辑设计-3" class="headerlink" title="组合逻辑设计"></a>组合逻辑设计</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221321151.png" alt="image-20240629221321151"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221427042.png" alt="image-20240629221427042"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221545420.png" alt="image-20240629221545420"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221605321.png" alt="image-20240629221605321"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629221622784.png" alt="image-20240629221622784"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>知识框架</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<h1 id="知识框架"><a href="#知识框架" class="headerlink" title="知识框架"></a>知识框架</h1><p><strong>1.是什么</strong>：</p>
<ul>
<li><p><strong>定义</strong>：对概念或技术的简洁明了的定义。(包含了本质)	</p>
</li>
<li><p><strong>组成部分</strong>：列出构成该概念或技术的各个部分或元素。（这是一种局部性思路）</p>
</li>
<li><p><strong>结构形式</strong>：根据定义，展现出这个概念的不同表现形式结构或者组成部分对应的静态结构。（这是一种系统式思路）</p>
</li>
<li><p><strong>分类</strong></p>
<p>是在一个更大的概念框架内，不同的变体或子类。这些变体具有该概念的基本属性，但在某些方面有独特的特征，是该概念的不同表现形式。</p>
</li>
<li><p><strong>所属领域</strong>：说明该概念或技术属于哪个更大的类别或领域。</p>
</li>
<li><p><strong>特征</strong>：描述概念或技术的主要特点和属性。</p>
</li>
</ul>
<h4 id="PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"><a href="#PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。" class="headerlink" title="PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"></a>PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。</h4><p><strong>2.怎么用</strong>：</p>
<ul>
<li><p><strong>作用</strong>：描述这个概念或者技术哪些作用。</p>
</li>
<li><p><strong>使用方法</strong>：列出使用该概念或技术的方法。             –  使用方法可能由逻辑性弱或者强，如果逻辑性强，则需要                                                                明确写明“步骤”，方法是由一系列有序步骤组成的。</p>
</li>
<li><p>【应用】：概念的具体应用，可以通过提供具体的代码示例或实际应用案例等。</p>
</li>
<li><p><strong>最佳实践</strong>：①介绍在使用该概念或技术时应遵循的最佳实践或准则。</p>
<p>​                     ②经验或者建议的总结。</p>
</li>
</ul>
<p>3.<strong>为什么</strong>：</p>
<ul>
<li><strong>目的</strong>：阐述使用该技术的目的。</li>
<li><strong>应用价值</strong>：讨论技术在解决实际问题中的应用价值和重要性。</li>
<li><strong>基本原理</strong>：解释技术背后的基本原理和工作机制，即展示这个知识体系各个组成部分之间的动态变化，能让人体系化的理解这个概念。</li>
<li><strong>设计理念</strong>：探讨技术设计背后的理念和哲学。</li>
</ul>
<p>4.<strong>相关知识点</strong>    框架</p>
<p><strong>1.是什么</strong>：</p>
<ul>
<li><p><strong>定义</strong>：对概念或技术的简洁明了的定义。(包含了本质)	</p>
</li>
<li><p><strong>组成部分</strong>：列出构成该概念或技术的各个部分或元素。（这是一种局部性思路）</p>
</li>
<li><p><strong>结构形式</strong>：根据定义，展现出这个概念的不同表现形式结构或者组成部分对应的静态结构。（这是一种系统式思路）</p>
</li>
<li><p><strong>分类</strong></p>
<p>是在一个更大的概念框架内，不同的变体或子类。这些变体具有该概念的基本属性，但在某些方面有独特的特征，是该概念的不同表现形式。</p>
</li>
<li><p><strong>所属领域</strong>：说明该概念或技术属于哪个更大的类别或领域。</p>
</li>
<li><p><strong>特征</strong>：描述概念或技术的主要特点和属性。</p>
</li>
</ul>
<h4 id="PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-1"><a href="#PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-1" class="headerlink" title="PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"></a>PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。</h4><p><strong>2.怎么用</strong>：</p>
<ul>
<li><p><strong>作用</strong>：描述这个概念或者技术哪些作用。</p>
</li>
<li><p><strong>使用方法</strong>：列出使用该概念或技术的方法。             –  使用方法可能由逻辑性弱或者强，如果逻辑性强，则需要                                                                明确写明“步骤”，方法是由一系列有序步骤组成的。</p>
</li>
<li><p>【应用】：概念的具体应用，可以通过提供具体的代码示例或实际应用案例等。</p>
</li>
<li><p><strong>最佳实践</strong>：①介绍在使用该概念或技术时应遵循的最佳实践或准则。</p>
<p>​                     ②经验或者建议的总结。</p>
</li>
</ul>
<p>3.<strong>为什么</strong>：</p>
<ul>
<li><strong>目的</strong>：阐述使用该技术的目的。</li>
<li><strong>应用价值</strong>：讨论技术在解决实际问题中的应用价值和重要性。</li>
<li><strong>基本原理</strong>：解释技术背后的基本原理和工作机制，即展示这个知识体系各个组成部分之间的动态变化，能让人体系化的理解这个概念。</li>
<li><strong>设计理念</strong>：探讨技术设计背后的理念和哲学。</li>
</ul>
<p>4.<strong>相关知识点</strong># 知识框架</p>
<p><strong>1.是什么</strong>：</p>
<ul>
<li><p><strong>定义</strong>：对概念或技术的简洁明了的定义。(包含了本质)	</p>
</li>
<li><p><strong>组成部分</strong>：列出构成该概念或技术的各个部分或元素。（这是一种局部性思路）</p>
</li>
<li><p><strong>结构形式</strong>：根据定义，展现出这个概念的不同表现形式结构或者组成部分对应的静态结构。（这是一种系统式思路）</p>
</li>
<li><p><strong>分类</strong></p>
<p>是在一个更大的概念框架内，不同的变体或子类。这些变体具有该概念的基本属性，但在某些方面有独特的特征，是该概念的不同表现形式。</p>
</li>
<li><p><strong>所属领域</strong>：说明该概念或技术属于哪个更大的类别或领域。</p>
</li>
<li><p><strong>特征</strong>：描述概念或技术的主要特点和属性。</p>
</li>
</ul>
<h4 id="PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-2"><a href="#PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-2" class="headerlink" title="PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"></a>PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。</h4><p><strong>2.怎么用</strong>：</p>
<ul>
<li><p><strong>作用</strong>：描述这个概念或者技术哪些作用。</p>
</li>
<li><p><strong>使用方法</strong>：列出使用该概念或技术的方法。             –  使用方法可能由逻辑性弱或者强，如果逻辑性强，则需要                                                                明确写明“步骤”，方法是由一系列有序步骤组成的。</p>
</li>
<li><p>【应用】：概念的具体应用，可以通过提供具体的代码示例或实际应用案例等。</p>
</li>
<li><p><strong>最佳实践</strong>：①介绍在使用该概念或技术时应遵循的最佳实践或准则。</p>
<p>​                     ②经验或者建议的总结。</p>
</li>
</ul>
<p>3.<strong>为什么</strong>：</p>
<ul>
<li><strong>目的</strong>：阐述使用该技术的目的。</li>
<li><strong>应用价值</strong>：讨论技术在解决实际问题中的应用价值和重要性。</li>
<li><strong>基本原理</strong>：解释技术背后的基本原理和工作机制，即展示这个知识体系各个组成部分之间的动态变化，能让人体系化的理解这个概念。</li>
<li><strong>设计理念</strong>：探讨技术设计背后的理念和哲学。</li>
</ul>
<p>4.<strong>相关知识点</strong>    框架</p>
<p><strong>1.是什么</strong>：</p>
<ul>
<li><p><strong>定义</strong>：对概念或技术的简洁明了的定义。(包含了本质)	</p>
</li>
<li><p><strong>组成部分</strong>：列出构成该概念或技术的各个部分或元素。（这是一种局部性思路）</p>
</li>
<li><p><strong>结构形式</strong>：根据定义，展现出这个概念的不同表现形式结构或者组成部分对应的静态结构。（这是一种系统式思路）</p>
</li>
<li><p><strong>分类</strong></p>
<p>是在一个更大的概念框架内，不同的变体或子类。这些变体具有该概念的基本属性，但在某些方面有独特的特征，是该概念的不同表现形式。</p>
</li>
<li><p><strong>所属领域</strong>：说明该概念或技术属于哪个更大的类别或领域。</p>
</li>
<li><p><strong>特征</strong>：描述概念或技术的主要特点和属性。</p>
</li>
</ul>
<h4 id="PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-3"><a href="#PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-3" class="headerlink" title="PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"></a>PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。</h4><p><strong>2.怎么用</strong>：</p>
<ul>
<li><p><strong>作用</strong>：描述这个概念或者技术哪些作用。</p>
</li>
<li><p><strong>使用方法</strong>：列出使用该概念或技术的方法。             –  使用方法可能由逻辑性弱或者强，如果逻辑性强，则需要                                                                明确写明“步骤”，方法是由一系列有序步骤组成的。</p>
</li>
<li><p>【应用】：概念的具体应用，可以通过提供具体的代码示例或实际应用案例等。</p>
</li>
<li><p><strong>最佳实践</strong>：①介绍在使用该概念或技术时应遵循的最佳实践或准则。</p>
<p>​                     ②经验或者建议的总结。</p>
</li>
</ul>
<p>3.<strong>为什么</strong>：</p>
<ul>
<li><strong>目的</strong>：阐述使用该技术的目的。</li>
<li><strong>应用价值</strong>：讨论技术在解决实际问题中的应用价值和重要性。</li>
<li><strong>基本原理</strong>：解释技术背后的基本原理和工作机制，即展示这个知识体系各个组成部分之间的动态变化，能让人体系化的理解这个概念。</li>
<li><strong>设计理念</strong>：探讨技术设计背后的理念和哲学。</li>
</ul>
<p>4.<strong>相关知识点</strong></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>磁盘存储器</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%A3%81%E7%9B%98%E5%AD%98%E5%82%A8%E5%99%A8/</url>
    <content><![CDATA[<h1 id="磁盘存储器"><a href="#磁盘存储器" class="headerlink" title="磁盘存储器"></a>磁盘存储器</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>磁盘存储器是一种使用磁性材料存储数据的非易失性存储设备，通过磁化和去磁化磁盘表面的小区域来表示二进制数据。常见的磁盘存储器包括硬盘驱动器（HDD）和软盘（Floppy Disk）。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.磁盘盘片：用于存储数据的旋转圆盘，表面覆盖有磁性材料。<br>2.磁头：读取和写入数据的装置，通过电磁感应改变磁性材料的磁化状态。<br>3.磁盘驱动器：包含电机、控制器和接口，用于控制磁盘的旋转、磁头的移动和数据的读写操作。<br>4.接口：如SATA、SCSI，用于连接计算机和磁盘存储器，传输数据和控制信号。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172236307.png" alt="image-20240627172236307"></p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.硬盘驱动器（HDD）：多个磁盘盘片叠加在一起，每个盘片有两面，可以同时进行多点读写操作。<br>2.软盘（Floppy Disk）：较小的可移动磁盘，封装在塑料外壳中，容量较小但便于携带。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172134378.png" alt="image-20240627172134378"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.内部硬盘：安装在计算机内部，通过SATA或其他接口与主板连接。<br>2.外部硬盘：通过USB或其他外部接口与计算机连接，便于携带和数据传输。<br>3.软盘：较旧的存储介质，容量较小，目前基本被淘汰。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.非易失性：断电后数据仍然保留。<br>2.大容量：相比于早期的存储介质，磁盘存储器提供了较大的存储容量。<br>3.相对较慢：相比于固态硬盘（SSD），磁盘存储器的读写速度较慢。<br>4.机械部件：包含旋转的磁盘和移动的磁头，机械部件可能导致磨损和故障。</p>
<h2 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172320678.png" alt="image-20240627172320678"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172341636.png" alt="image-20240627172341636"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172358329.png" alt="image-20240627172358329"></p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172518728.png" alt="image-20240627172518728"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172527176.png" alt="image-20240627172527176"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-磁盘地址的格式"><a href="#1-磁盘地址的格式" class="headerlink" title="1.磁盘地址的格式"></a>1.磁盘地址的格式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172439730.png" alt="image-20240627172439730"></p>
<h3 id="2-磁盘阵列"><a href="#2-磁盘阵列" class="headerlink" title="2.磁盘阵列"></a>2.磁盘阵列</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172605434.png" alt="image-20240627172605434"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172628114.png" alt="image-20240627172628114">储器</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>磁盘存储器是一种使用磁性材料存储数据的非易失性存储设备，通过磁化和去磁化磁盘表面的小区域来表示二进制数据。常见的磁盘存储器包括硬盘驱动器（HDD）和软盘（Floppy Disk）。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.磁盘盘片：用于存储数据的旋转圆盘，表面覆盖有磁性材料。<br>2.磁头：读取和写入数据的装置，通过电磁感应改变磁性材料的磁化状态。<br>3.磁盘驱动器：包含电机、控制器和接口，用于控制磁盘的旋转、磁头的移动和数据的读写操作。<br>4.接口：如SATA、SCSI，用于连接计算机和磁盘存储器，传输数据和控制信号。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172236307.png" alt="image-20240627172236307"></p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.硬盘驱动器（HDD）：多个磁盘盘片叠加在一起，每个盘片有两面，可以同时进行多点读写操作。<br>2.软盘（Floppy Disk）：较小的可移动磁盘，封装在塑料外壳中，容量较小但便于携带。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172134378.png" alt="image-20240627172134378"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.内部硬盘：安装在计算机内部，通过SATA或其他接口与主板连接。<br>2.外部硬盘：通过USB或其他外部接口与计算机连接，便于携带和数据传输。<br>3.软盘：较旧的存储介质，容量较小，目前基本被淘汰。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.非易失性：断电后数据仍然保留。<br>2.大容量：相比于早期的存储介质，磁盘存储器提供了较大的存储容量。<br>3.相对较慢：相比于固态硬盘（SSD），磁盘存储器的读写速度较慢。<br>4.机械部件：包含旋转的磁盘和移动的磁头，机械部件可能导致磨损和故障。</p>
<h2 id="性能指标-1"><a href="#性能指标-1" class="headerlink" title="性能指标"></a>性能指标</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172320678.png" alt="image-20240627172320678"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172341636.png" alt="image-20240627172341636"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172358329.png" alt="image-20240627172358329"></p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172518728.png" alt="image-20240627172518728"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172527176.png" alt="image-20240627172527176"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-磁盘地址的格式-1"><a href="#1-磁盘地址的格式-1" class="headerlink" title="1.磁盘地址的格式"></a>1.磁盘地址的格式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172439730.png" alt="image-20240627172439730"></p>
<h3 id="2-磁盘阵列-1"><a href="#2-磁盘阵列-1" class="headerlink" title="2.磁盘阵列"></a>2.磁盘阵列</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172605434.png" alt="image-20240627172605434"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172628114.png" alt="image-20240627172628114"># 磁盘存储器</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>磁盘存储器是一种使用磁性材料存储数据的非易失性存储设备，通过磁化和去磁化磁盘表面的小区域来表示二进制数据。常见的磁盘存储器包括硬盘驱动器（HDD）和软盘（Floppy Disk）。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.磁盘盘片：用于存储数据的旋转圆盘，表面覆盖有磁性材料。<br>2.磁头：读取和写入数据的装置，通过电磁感应改变磁性材料的磁化状态。<br>3.磁盘驱动器：包含电机、控制器和接口，用于控制磁盘的旋转、磁头的移动和数据的读写操作。<br>4.接口：如SATA、SCSI，用于连接计算机和磁盘存储器，传输数据和控制信号。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172236307.png" alt="image-20240627172236307"></p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.硬盘驱动器（HDD）：多个磁盘盘片叠加在一起，每个盘片有两面，可以同时进行多点读写操作。<br>2.软盘（Floppy Disk）：较小的可移动磁盘，封装在塑料外壳中，容量较小但便于携带。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172134378.png" alt="image-20240627172134378"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.内部硬盘：安装在计算机内部，通过SATA或其他接口与主板连接。<br>2.外部硬盘：通过USB或其他外部接口与计算机连接，便于携带和数据传输。<br>3.软盘：较旧的存储介质，容量较小，目前基本被淘汰。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.非易失性：断电后数据仍然保留。<br>2.大容量：相比于早期的存储介质，磁盘存储器提供了较大的存储容量。<br>3.相对较慢：相比于固态硬盘（SSD），磁盘存储器的读写速度较慢。<br>4.机械部件：包含旋转的磁盘和移动的磁头，机械部件可能导致磨损和故障。</p>
<h2 id="性能指标-2"><a href="#性能指标-2" class="headerlink" title="性能指标"></a>性能指标</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172320678.png" alt="image-20240627172320678"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172341636.png" alt="image-20240627172341636"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172358329.png" alt="image-20240627172358329"></p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172518728.png" alt="image-20240627172518728"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172527176.png" alt="image-20240627172527176"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-磁盘地址的格式-2"><a href="#1-磁盘地址的格式-2" class="headerlink" title="1.磁盘地址的格式"></a>1.磁盘地址的格式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172439730.png" alt="image-20240627172439730"></p>
<h3 id="2-磁盘阵列-2"><a href="#2-磁盘阵列-2" class="headerlink" title="2.磁盘阵列"></a>2.磁盘阵列</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172605434.png" alt="image-20240627172605434"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172628114.png" alt="image-20240627172628114">储器</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>磁盘存储器是一种使用磁性材料存储数据的非易失性存储设备，通过磁化和去磁化磁盘表面的小区域来表示二进制数据。常见的磁盘存储器包括硬盘驱动器（HDD）和软盘（Floppy Disk）。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.磁盘盘片：用于存储数据的旋转圆盘，表面覆盖有磁性材料。<br>2.磁头：读取和写入数据的装置，通过电磁感应改变磁性材料的磁化状态。<br>3.磁盘驱动器：包含电机、控制器和接口，用于控制磁盘的旋转、磁头的移动和数据的读写操作。<br>4.接口：如SATA、SCSI，用于连接计算机和磁盘存储器，传输数据和控制信号。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172236307.png" alt="image-20240627172236307"></p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.硬盘驱动器（HDD）：多个磁盘盘片叠加在一起，每个盘片有两面，可以同时进行多点读写操作。<br>2.软盘（Floppy Disk）：较小的可移动磁盘，封装在塑料外壳中，容量较小但便于携带。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172134378.png" alt="image-20240627172134378"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.内部硬盘：安装在计算机内部，通过SATA或其他接口与主板连接。<br>2.外部硬盘：通过USB或其他外部接口与计算机连接，便于携带和数据传输。<br>3.软盘：较旧的存储介质，容量较小，目前基本被淘汰。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.非易失性：断电后数据仍然保留。<br>2.大容量：相比于早期的存储介质，磁盘存储器提供了较大的存储容量。<br>3.相对较慢：相比于固态硬盘（SSD），磁盘存储器的读写速度较慢。<br>4.机械部件：包含旋转的磁盘和移动的磁头，机械部件可能导致磨损和故障。</p>
<h2 id="性能指标-3"><a href="#性能指标-3" class="headerlink" title="性能指标"></a>性能指标</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172320678.png" alt="image-20240627172320678"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172341636.png" alt="image-20240627172341636"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172358329.png" alt="image-20240627172358329"></p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172518728.png" alt="image-20240627172518728"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172527176.png" alt="image-20240627172527176"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-磁盘地址的格式-3"><a href="#1-磁盘地址的格式-3" class="headerlink" title="1.磁盘地址的格式"></a>1.磁盘地址的格式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172439730.png" alt="image-20240627172439730"></p>
<h3 id="2-磁盘阵列-3"><a href="#2-磁盘阵列-3" class="headerlink" title="2.磁盘阵列"></a>2.磁盘阵列</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172605434.png" alt="image-20240627172605434"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627172628114.png" alt="image-20240627172628114"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>移位运算</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%A7%BB%E4%BD%8D%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="移位运算"><a href="#移位运算" class="headerlink" title="移位运算"></a>移位运算</h1><p>分类</p>
<p>1.算数移位</p>
<p>2.逻辑移位</p>
<p>3.循环移位<br>运算</p>
<p>分类</p>
<p>1.算数移位</p>
<p>2.逻辑移位</p>
<p>3.循环移位# 移位运算</p>
<p>分类</p>
<p>1.算数移位</p>
<p>2.逻辑移位</p>
<p>3.循环移位<br>运算</p>
<p>分类</p>
<p>1.算数移位</p>
<p>2.逻辑移位</p>
<p>3.循环移位</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>移码</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%A7%BB%E7%A0%81/</url>
    <content><![CDATA[<h1 id="移码（只能用来表示整数）"><a href="#移码（只能用来表示整数）" class="headerlink" title="移码（只能用来表示整数）"></a>移码（只能用来表示整数）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>补码的基础上，将符号位取反。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170038700.png" alt="image-20240625170038700">数）</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>补码的基础上，将符号位取反。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170038700.png" alt="image-20240625170038700"># 移码（只能用来表示整数）</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>补码的基础上，将符号位取反。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170038700.png" alt="image-20240625170038700">数）</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>补码的基础上，将符号位取反。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625170038700.png" alt="image-20240625170038700"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>移码（真）</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%A7%BB%E7%A0%81%EF%BC%88%E7%9C%9F%EF%BC%89/</url>
    <content><![CDATA[<h1 id="移码"><a href="#移码" class="headerlink" title="移码"></a>移码</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>移码（Bias）是一种在计算机科学中用于表示整数或浮点数指数的方法。它通过给指数部分添加一个固定的偏移量，使得指数能够以无符号整数的形式表示，同时保持其原有的有符号特性。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.数的指数部分</p>
<p>2.偏移量</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>在移码表示中，实际的指数值与一个固定的偏移量（称为移码或偏置量）相加，得到的结果就是存储在计算机中的指数值。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>移码通常用于浮点数的表示，特别是在IEEE 754标准中。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>移码的主要特征是它能够将负指数转换为非负整数，从而简化了指数的表示和计算。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>为了简化浮点数指数部分的表示和计算，特别是处理负指数的情况。移码</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>移码（Bias）是一种在计算机科学中用于表示整数或浮点数指数的方法。它通过给指数部分添加一个固定的偏移量，使得指数能够以无符号整数的形式表示，同时保持其原有的有符号特性。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.数的指数部分</p>
<p>2.偏移量</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>在移码表示中，实际的指数值与一个固定的偏移量（称为移码或偏置量）相加，得到的结果就是存储在计算机中的指数值。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>移码通常用于浮点数的表示，特别是在IEEE 754标准中。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>移码的主要特征是它能够将负指数转换为非负整数，从而简化了指数的表示和计算。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>为了简化浮点数指数部分的表示和计算，特别是处理负指数的情况。# 移码</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>移码（Bias）是一种在计算机科学中用于表示整数或浮点数指数的方法。它通过给指数部分添加一个固定的偏移量，使得指数能够以无符号整数的形式表示，同时保持其原有的有符号特性。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.数的指数部分</p>
<p>2.偏移量</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>在移码表示中，实际的指数值与一个固定的偏移量（称为移码或偏置量）相加，得到的结果就是存储在计算机中的指数值。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>移码通常用于浮点数的表示，特别是在IEEE 754标准中。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>移码的主要特征是它能够将负指数转换为非负整数，从而简化了指数的表示和计算。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>为了简化浮点数指数部分的表示和计算，特别是处理负指数的情况。移码</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>移码（Bias）是一种在计算机科学中用于表示整数或浮点数指数的方法。它通过给指数部分添加一个固定的偏移量，使得指数能够以无符号整数的形式表示，同时保持其原有的有符号特性。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.数的指数部分</p>
<p>2.偏移量</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>在移码表示中，实际的指数值与一个固定的偏移量（称为移码或偏置量）相加，得到的结果就是存储在计算机中的指数值。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>移码通常用于浮点数的表示，特别是在IEEE 754标准中。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>移码的主要特征是它能够将负指数转换为非负整数，从而简化了指数的表示和计算。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>为了简化浮点数指数部分的表示和计算，特别是处理负指数的情况。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>第三章存储系统</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%B8%89%E7%AB%A0%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="存储系统"><a href="#存储系统" class="headerlink" title="存储系统"></a>存储系统</h1><h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627154913446.png" alt="image-20240627154913446"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h4 id="按存储介质"><a href="#按存储介质" class="headerlink" title="按存储介质"></a>按存储介质</h4><p>1.半导体存储器：主存、cache</p>
<p>2.磁表面存储器：磁盘、磁带</p>
<p>3.光存储器：光盘</p>
<h4 id="按存取方式"><a href="#按存取方式" class="headerlink" title="按存取方式"></a>按存取方式</h4><p>1.RAM</p>
<p>2.SAM</p>
<p>3.DAM</p>
<p>4.CAM</p>
<h2 id="按信息的可更改性"><a href="#按信息的可更改性" class="headerlink" title="按信息的可更改性"></a>按信息的可更改性</h2><p>1.读写存储器</p>
<p>2.只读存储器ROM</p>
<p>事实上，ROM也可以多次读写，只是比较麻烦</p>
<h4 id="按信息的可保存性"><a href="#按信息的可保存性" class="headerlink" title="按信息的可保存性"></a>按信息的可保存性</h4><p>1.易失性存储器</p>
<p>2.非易失性存储器</p>
<h2 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627155744457.png" alt="image-20240627155744457"></p>
<p>系统</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627154913446.png" alt="image-20240627154913446"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h4 id="按存储介质-1"><a href="#按存储介质-1" class="headerlink" title="按存储介质"></a>按存储介质</h4><p>1.半导体存储器：主存、cache</p>
<p>2.磁表面存储器：磁盘、磁带</p>
<p>3.光存储器：光盘</p>
<h4 id="按存取方式-1"><a href="#按存取方式-1" class="headerlink" title="按存取方式"></a>按存取方式</h4><p>1.RAM</p>
<p>2.SAM</p>
<p>3.DAM</p>
<p>4.CAM</p>
<h2 id="按信息的可更改性-1"><a href="#按信息的可更改性-1" class="headerlink" title="按信息的可更改性"></a>按信息的可更改性</h2><p>1.读写存储器</p>
<p>2.只读存储器ROM</p>
<p>事实上，ROM也可以多次读写，只是比较麻烦</p>
<h4 id="按信息的可保存性-1"><a href="#按信息的可保存性-1" class="headerlink" title="按信息的可保存性"></a>按信息的可保存性</h4><p>1.易失性存储器</p>
<p>2.非易失性存储器</p>
<h2 id="性能指标-1"><a href="#性能指标-1" class="headerlink" title="性能指标"></a>性能指标</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627155744457.png" alt="image-20240627155744457"># 存储系统</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627154913446.png" alt="image-20240627154913446"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h4 id="按存储介质-2"><a href="#按存储介质-2" class="headerlink" title="按存储介质"></a>按存储介质</h4><p>1.半导体存储器：主存、cache</p>
<p>2.磁表面存储器：磁盘、磁带</p>
<p>3.光存储器：光盘</p>
<h4 id="按存取方式-2"><a href="#按存取方式-2" class="headerlink" title="按存取方式"></a>按存取方式</h4><p>1.RAM</p>
<p>2.SAM</p>
<p>3.DAM</p>
<p>4.CAM</p>
<h2 id="按信息的可更改性-2"><a href="#按信息的可更改性-2" class="headerlink" title="按信息的可更改性"></a>按信息的可更改性</h2><p>1.读写存储器</p>
<p>2.只读存储器ROM</p>
<p>事实上，ROM也可以多次读写，只是比较麻烦</p>
<h4 id="按信息的可保存性-2"><a href="#按信息的可保存性-2" class="headerlink" title="按信息的可保存性"></a>按信息的可保存性</h4><p>1.易失性存储器</p>
<p>2.非易失性存储器</p>
<h2 id="性能指标-2"><a href="#性能指标-2" class="headerlink" title="性能指标"></a>性能指标</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627155744457.png" alt="image-20240627155744457"></p>
<p>系统</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627154913446.png" alt="image-20240627154913446"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h4 id="按存储介质-3"><a href="#按存储介质-3" class="headerlink" title="按存储介质"></a>按存储介质</h4><p>1.半导体存储器：主存、cache</p>
<p>2.磁表面存储器：磁盘、磁带</p>
<p>3.光存储器：光盘</p>
<h4 id="按存取方式-3"><a href="#按存取方式-3" class="headerlink" title="按存取方式"></a>按存取方式</h4><p>1.RAM</p>
<p>2.SAM</p>
<p>3.DAM</p>
<p>4.CAM</p>
<h2 id="按信息的可更改性-3"><a href="#按信息的可更改性-3" class="headerlink" title="按信息的可更改性"></a>按信息的可更改性</h2><p>1.读写存储器</p>
<p>2.只读存储器ROM</p>
<p>事实上，ROM也可以多次读写，只是比较麻烦</p>
<h4 id="按信息的可保存性-3"><a href="#按信息的可保存性-3" class="headerlink" title="按信息的可保存性"></a>按信息的可保存性</h4><p>1.易失性存储器</p>
<p>2.非易失性存储器</p>
<h2 id="性能指标-3"><a href="#性能指标-3" class="headerlink" title="性能指标"></a>性能指标</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240627155744457.png" alt="image-20240627155744457"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>第五章CPU的功能和基本结构</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%BA%94%E7%AB%A0CPU%E7%9A%84%E5%8A%9F%E8%83%BD%E5%92%8C%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h2 id="CPU的功能"><a href="#CPU的功能" class="headerlink" title="CPU的功能"></a>CPU的功能</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140650813.png" alt="image-20240629140650813"></p>
<h2 id="控制器和运算器的功能"><a href="#控制器和运算器的功能" class="headerlink" title="控制器和运算器的功能"></a>控制器和运算器的功能</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140729712.png" alt="image-20240629140729712"></p>
<h2 id="运算器的基本结构"><a href="#运算器的基本结构" class="headerlink" title="运算器的基本结构"></a>运算器的基本结构</h2><h3 id="专用数据通路模式"><a href="#专用数据通路模式" class="headerlink" title="专用数据通路模式"></a>专用数据通路模式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140812860.png" alt="image-20240629140812860"></p>
<h3 id="cpu数据总线模式"><a href="#cpu数据总线模式" class="headerlink" title="cpu数据总线模式"></a>cpu数据总线模式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140935813.png" alt="image-20240629140935813"></p>
<h2 id="控制器基本结构"><a href="#控制器基本结构" class="headerlink" title="控制器基本结构"></a>控制器基本结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141033286.png" alt="image-20240629141033286"></p>
<h2 id="CPU的基本结构"><a href="#CPU的基本结构" class="headerlink" title="CPU的基本结构"></a>CPU的基本结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141055243.png" alt="image-20240629141055243"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141131424.png" alt="image-20240629141131424">的功能</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140650813.png" alt="image-20240629140650813"></p>
<h2 id="控制器和运算器的功能-1"><a href="#控制器和运算器的功能-1" class="headerlink" title="控制器和运算器的功能"></a>控制器和运算器的功能</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140729712.png" alt="image-20240629140729712"></p>
<h2 id="运算器的基本结构-1"><a href="#运算器的基本结构-1" class="headerlink" title="运算器的基本结构"></a>运算器的基本结构</h2><h3 id="专用数据通路模式-1"><a href="#专用数据通路模式-1" class="headerlink" title="专用数据通路模式"></a>专用数据通路模式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140812860.png" alt="image-20240629140812860"></p>
<h3 id="cpu数据总线模式-1"><a href="#cpu数据总线模式-1" class="headerlink" title="cpu数据总线模式"></a>cpu数据总线模式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140935813.png" alt="image-20240629140935813"></p>
<h2 id="控制器基本结构-1"><a href="#控制器基本结构-1" class="headerlink" title="控制器基本结构"></a>控制器基本结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141033286.png" alt="image-20240629141033286"></p>
<h2 id="CPU的基本结构-1"><a href="#CPU的基本结构-1" class="headerlink" title="CPU的基本结构"></a>CPU的基本结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141055243.png" alt="image-20240629141055243"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141131424.png" alt="image-20240629141131424">## CPU的功能</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140650813.png" alt="image-20240629140650813"></p>
<h2 id="控制器和运算器的功能-2"><a href="#控制器和运算器的功能-2" class="headerlink" title="控制器和运算器的功能"></a>控制器和运算器的功能</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140729712.png" alt="image-20240629140729712"></p>
<h2 id="运算器的基本结构-2"><a href="#运算器的基本结构-2" class="headerlink" title="运算器的基本结构"></a>运算器的基本结构</h2><h3 id="专用数据通路模式-2"><a href="#专用数据通路模式-2" class="headerlink" title="专用数据通路模式"></a>专用数据通路模式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140812860.png" alt="image-20240629140812860"></p>
<h3 id="cpu数据总线模式-2"><a href="#cpu数据总线模式-2" class="headerlink" title="cpu数据总线模式"></a>cpu数据总线模式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140935813.png" alt="image-20240629140935813"></p>
<h2 id="控制器基本结构-2"><a href="#控制器基本结构-2" class="headerlink" title="控制器基本结构"></a>控制器基本结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141033286.png" alt="image-20240629141033286"></p>
<h2 id="CPU的基本结构-2"><a href="#CPU的基本结构-2" class="headerlink" title="CPU的基本结构"></a>CPU的基本结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141055243.png" alt="image-20240629141055243"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141131424.png" alt="image-20240629141131424">的功能</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140650813.png" alt="image-20240629140650813"></p>
<h2 id="控制器和运算器的功能-3"><a href="#控制器和运算器的功能-3" class="headerlink" title="控制器和运算器的功能"></a>控制器和运算器的功能</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140729712.png" alt="image-20240629140729712"></p>
<h2 id="运算器的基本结构-3"><a href="#运算器的基本结构-3" class="headerlink" title="运算器的基本结构"></a>运算器的基本结构</h2><h3 id="专用数据通路模式-3"><a href="#专用数据通路模式-3" class="headerlink" title="专用数据通路模式"></a>专用数据通路模式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140812860.png" alt="image-20240629140812860"></p>
<h3 id="cpu数据总线模式-3"><a href="#cpu数据总线模式-3" class="headerlink" title="cpu数据总线模式"></a>cpu数据总线模式</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140935813.png" alt="image-20240629140935813"></p>
<h2 id="控制器基本结构-3"><a href="#控制器基本结构-3" class="headerlink" title="控制器基本结构"></a>控制器基本结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141033286.png" alt="image-20240629141033286"></p>
<h2 id="CPU的基本结构-3"><a href="#CPU的基本结构-3" class="headerlink" title="CPU的基本结构"></a>CPU的基本结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141055243.png" alt="image-20240629141055243"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629141131424.png" alt="image-20240629141131424"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>第四章指令系统（控制器）</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E5%9B%9B%E7%AB%A0%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F%EF%BC%88%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%89/</url>
    <content><![CDATA[<h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>指令是计算机中执行特定操作的命令，通常由操作码（Opcode）和操作数（Operands）组成。指令在计算机的中央处理单元（CPU）中解码并执行，指导计算机完成各种任务。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-操作码（Opcode）"><a href="#1-操作码（Opcode）" class="headerlink" title="1.操作码（Opcode）"></a>1.操作码（Opcode）</h3><p>指示要执行的操作类型，如加法、减法、加载、存储等。</p>
<h3 id="2-操作数（Operands）"><a href="#2-操作数（Operands）" class="headerlink" title="2.操作数（Operands）"></a>2.操作数（Operands）</h3><p>指示操作所需的数据或数据的位置，可以是立即数、寄存器、内存地址等。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><img src="../TyporaImage/计算机组成原理图片/image-20240628114658484.png" alt="image-20240628114658484"  />



<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="按照地址数目分类"><a href="#按照地址数目分类" class="headerlink" title="按照地址数目分类"></a>按照地址数目分类</h3><h4 id="1-单地址指令"><a href="#1-单地址指令" class="headerlink" title="1.单地址指令"></a>1.单地址指令</h4><p>包含一个操作数，如累加指令。</p>
<h4 id="2-双地址指令"><a href="#2-双地址指令" class="headerlink" title="2.双地址指令"></a>2.双地址指令</h4><p>包含两个操作数，如加法指令。</p>
<h4 id="3-三地址指令"><a href="#3-三地址指令" class="headerlink" title="3.三地址指令"></a>3.三地址指令</h4><p>包含三个操作数，如乘法指令。</p>
<h4 id="4-零地址指令"><a href="#4-零地址指令" class="headerlink" title="4.零地址指令"></a>4.零地址指令</h4><p>操作数隐含在指令中或由堆栈提供，如堆栈指令。</p>
<h3 id="按照功能分类"><a href="#按照功能分类" class="headerlink" title="按照功能分类"></a>按照功能分类</h3><h4 id="1-数据传输指令"><a href="#1-数据传输指令" class="headerlink" title="1.数据传输指令"></a>1.数据传输指令</h4><p>如加载（Load）、存储（Store）。</p>
<h4 id="2-算术运算指令"><a href="#2-算术运算指令" class="headerlink" title="2.算术运算指令"></a>2.算术运算指令</h4><p>如加法（Add）、减法（Subtract）。</p>
<h4 id="3-逻辑运算指令"><a href="#3-逻辑运算指令" class="headerlink" title="3.逻辑运算指令"></a>3.逻辑运算指令</h4><p>如与（AND）、或（OR）。</p>
<h4 id="4-控制转移指令"><a href="#4-控制转移指令" class="headerlink" title="4.控制转移指令"></a>4.控制转移指令</h4><p>如跳转（Jump）、分支（Branch）。</p>
<h4 id="5-输入输出指令"><a href="#5-输入输出指令" class="headerlink" title="5.输入输出指令"></a>5.输入输出指令</h4><p>如输入（Input）、输出（Output）。</p>
<h4 id="6-堆栈操作指令"><a href="#6-堆栈操作指令" class="headerlink" title="6.堆栈操作指令"></a>6.堆栈操作指令</h4><p>如推入（Push）、弹出（Pop）。</p>
<h3 id="按照指令字长分类"><a href="#按照指令字长分类" class="headerlink" title="按照指令字长分类"></a>按照指令字长分类</h3><h4 id="1-固定长度指令"><a href="#1-固定长度指令" class="headerlink" title="1.固定长度指令"></a>1.固定长度指令</h4><p>所有指令具有相同的长度。</p>
<h4 id="2-可变长度指令"><a href="#2-可变长度指令" class="headerlink" title="2.可变长度指令"></a>2.可变长度指令</h4><p>指令长度可以不同，根据操作码和操作数的不同而变化。</p>
<h3 id="按照操作码长度分类"><a href="#按照操作码长度分类" class="headerlink" title="按照操作码长度分类"></a>按照操作码长度分类</h3><h4 id="1-固定长度操作码"><a href="#1-固定长度操作码" class="headerlink" title="1.固定长度操作码"></a>1.固定长度操作码</h4><p>所有指令的操作码长度相同。</p>
<h4 id="2-可变长度操作码"><a href="#2-可变长度操作码" class="headerlink" title="2.可变长度操作码"></a>2.可变长度操作码</h4><p>指令的操作码长度可以不同，根据具体指令而变化。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.固定格式：指令通常有固定的格式和长度。<br>2.操作码指示功能：操作码部分决定了指令的功能。<br>3.操作数指定数据：操作数部分指定了操作的数据或数据来源。指令</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>指令是计算机中执行特定操作的命令，通常由操作码（Opcode）和操作数（Operands）组成。指令在计算机的中央处理单元（CPU）中解码并执行，指导计算机完成各种任务。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-操作码（Opcode）-1"><a href="#1-操作码（Opcode）-1" class="headerlink" title="1.操作码（Opcode）"></a>1.操作码（Opcode）</h3><p>指示要执行的操作类型，如加法、减法、加载、存储等。</p>
<h3 id="2-操作数（Operands）-1"><a href="#2-操作数（Operands）-1" class="headerlink" title="2.操作数（Operands）"></a>2.操作数（Operands）</h3><p>指示操作所需的数据或数据的位置，可以是立即数、寄存器、内存地址等。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><img src="../TyporaImage/计算机组成原理图片/image-20240628114658484.png" alt="image-20240628114658484"  />



<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="按照地址数目分类-1"><a href="#按照地址数目分类-1" class="headerlink" title="按照地址数目分类"></a>按照地址数目分类</h3><h4 id="1-单地址指令-1"><a href="#1-单地址指令-1" class="headerlink" title="1.单地址指令"></a>1.单地址指令</h4><p>包含一个操作数，如累加指令。</p>
<h4 id="2-双地址指令-1"><a href="#2-双地址指令-1" class="headerlink" title="2.双地址指令"></a>2.双地址指令</h4><p>包含两个操作数，如加法指令。</p>
<h4 id="3-三地址指令-1"><a href="#3-三地址指令-1" class="headerlink" title="3.三地址指令"></a>3.三地址指令</h4><p>包含三个操作数，如乘法指令。</p>
<h4 id="4-零地址指令-1"><a href="#4-零地址指令-1" class="headerlink" title="4.零地址指令"></a>4.零地址指令</h4><p>操作数隐含在指令中或由堆栈提供，如堆栈指令。</p>
<h3 id="按照功能分类-1"><a href="#按照功能分类-1" class="headerlink" title="按照功能分类"></a>按照功能分类</h3><h4 id="1-数据传输指令-1"><a href="#1-数据传输指令-1" class="headerlink" title="1.数据传输指令"></a>1.数据传输指令</h4><p>如加载（Load）、存储（Store）。</p>
<h4 id="2-算术运算指令-1"><a href="#2-算术运算指令-1" class="headerlink" title="2.算术运算指令"></a>2.算术运算指令</h4><p>如加法（Add）、减法（Subtract）。</p>
<h4 id="3-逻辑运算指令-1"><a href="#3-逻辑运算指令-1" class="headerlink" title="3.逻辑运算指令"></a>3.逻辑运算指令</h4><p>如与（AND）、或（OR）。</p>
<h4 id="4-控制转移指令-1"><a href="#4-控制转移指令-1" class="headerlink" title="4.控制转移指令"></a>4.控制转移指令</h4><p>如跳转（Jump）、分支（Branch）。</p>
<h4 id="5-输入输出指令-1"><a href="#5-输入输出指令-1" class="headerlink" title="5.输入输出指令"></a>5.输入输出指令</h4><p>如输入（Input）、输出（Output）。</p>
<h4 id="6-堆栈操作指令-1"><a href="#6-堆栈操作指令-1" class="headerlink" title="6.堆栈操作指令"></a>6.堆栈操作指令</h4><p>如推入（Push）、弹出（Pop）。</p>
<h3 id="按照指令字长分类-1"><a href="#按照指令字长分类-1" class="headerlink" title="按照指令字长分类"></a>按照指令字长分类</h3><h4 id="1-固定长度指令-1"><a href="#1-固定长度指令-1" class="headerlink" title="1.固定长度指令"></a>1.固定长度指令</h4><p>所有指令具有相同的长度。</p>
<h4 id="2-可变长度指令-1"><a href="#2-可变长度指令-1" class="headerlink" title="2.可变长度指令"></a>2.可变长度指令</h4><p>指令长度可以不同，根据操作码和操作数的不同而变化。</p>
<h3 id="按照操作码长度分类-1"><a href="#按照操作码长度分类-1" class="headerlink" title="按照操作码长度分类"></a>按照操作码长度分类</h3><h4 id="1-固定长度操作码-1"><a href="#1-固定长度操作码-1" class="headerlink" title="1.固定长度操作码"></a>1.固定长度操作码</h4><p>所有指令的操作码长度相同。</p>
<h4 id="2-可变长度操作码-1"><a href="#2-可变长度操作码-1" class="headerlink" title="2.可变长度操作码"></a>2.可变长度操作码</h4><p>指令的操作码长度可以不同，根据具体指令而变化。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.固定格式：指令通常有固定的格式和长度。<br>2.操作码指示功能：操作码部分决定了指令的功能。<br>3.操作数指定数据：操作数部分指定了操作的数据或数据来源。# 指令</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>指令是计算机中执行特定操作的命令，通常由操作码（Opcode）和操作数（Operands）组成。指令在计算机的中央处理单元（CPU）中解码并执行，指导计算机完成各种任务。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-操作码（Opcode）-2"><a href="#1-操作码（Opcode）-2" class="headerlink" title="1.操作码（Opcode）"></a>1.操作码（Opcode）</h3><p>指示要执行的操作类型，如加法、减法、加载、存储等。</p>
<h3 id="2-操作数（Operands）-2"><a href="#2-操作数（Operands）-2" class="headerlink" title="2.操作数（Operands）"></a>2.操作数（Operands）</h3><p>指示操作所需的数据或数据的位置，可以是立即数、寄存器、内存地址等。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><img src="../TyporaImage/计算机组成原理图片/image-20240628114658484.png" alt="image-20240628114658484"  />



<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="按照地址数目分类-2"><a href="#按照地址数目分类-2" class="headerlink" title="按照地址数目分类"></a>按照地址数目分类</h3><h4 id="1-单地址指令-2"><a href="#1-单地址指令-2" class="headerlink" title="1.单地址指令"></a>1.单地址指令</h4><p>包含一个操作数，如累加指令。</p>
<h4 id="2-双地址指令-2"><a href="#2-双地址指令-2" class="headerlink" title="2.双地址指令"></a>2.双地址指令</h4><p>包含两个操作数，如加法指令。</p>
<h4 id="3-三地址指令-2"><a href="#3-三地址指令-2" class="headerlink" title="3.三地址指令"></a>3.三地址指令</h4><p>包含三个操作数，如乘法指令。</p>
<h4 id="4-零地址指令-2"><a href="#4-零地址指令-2" class="headerlink" title="4.零地址指令"></a>4.零地址指令</h4><p>操作数隐含在指令中或由堆栈提供，如堆栈指令。</p>
<h3 id="按照功能分类-2"><a href="#按照功能分类-2" class="headerlink" title="按照功能分类"></a>按照功能分类</h3><h4 id="1-数据传输指令-2"><a href="#1-数据传输指令-2" class="headerlink" title="1.数据传输指令"></a>1.数据传输指令</h4><p>如加载（Load）、存储（Store）。</p>
<h4 id="2-算术运算指令-2"><a href="#2-算术运算指令-2" class="headerlink" title="2.算术运算指令"></a>2.算术运算指令</h4><p>如加法（Add）、减法（Subtract）。</p>
<h4 id="3-逻辑运算指令-2"><a href="#3-逻辑运算指令-2" class="headerlink" title="3.逻辑运算指令"></a>3.逻辑运算指令</h4><p>如与（AND）、或（OR）。</p>
<h4 id="4-控制转移指令-2"><a href="#4-控制转移指令-2" class="headerlink" title="4.控制转移指令"></a>4.控制转移指令</h4><p>如跳转（Jump）、分支（Branch）。</p>
<h4 id="5-输入输出指令-2"><a href="#5-输入输出指令-2" class="headerlink" title="5.输入输出指令"></a>5.输入输出指令</h4><p>如输入（Input）、输出（Output）。</p>
<h4 id="6-堆栈操作指令-2"><a href="#6-堆栈操作指令-2" class="headerlink" title="6.堆栈操作指令"></a>6.堆栈操作指令</h4><p>如推入（Push）、弹出（Pop）。</p>
<h3 id="按照指令字长分类-2"><a href="#按照指令字长分类-2" class="headerlink" title="按照指令字长分类"></a>按照指令字长分类</h3><h4 id="1-固定长度指令-2"><a href="#1-固定长度指令-2" class="headerlink" title="1.固定长度指令"></a>1.固定长度指令</h4><p>所有指令具有相同的长度。</p>
<h4 id="2-可变长度指令-2"><a href="#2-可变长度指令-2" class="headerlink" title="2.可变长度指令"></a>2.可变长度指令</h4><p>指令长度可以不同，根据操作码和操作数的不同而变化。</p>
<h3 id="按照操作码长度分类-2"><a href="#按照操作码长度分类-2" class="headerlink" title="按照操作码长度分类"></a>按照操作码长度分类</h3><h4 id="1-固定长度操作码-2"><a href="#1-固定长度操作码-2" class="headerlink" title="1.固定长度操作码"></a>1.固定长度操作码</h4><p>所有指令的操作码长度相同。</p>
<h4 id="2-可变长度操作码-2"><a href="#2-可变长度操作码-2" class="headerlink" title="2.可变长度操作码"></a>2.可变长度操作码</h4><p>指令的操作码长度可以不同，根据具体指令而变化。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.固定格式：指令通常有固定的格式和长度。<br>2.操作码指示功能：操作码部分决定了指令的功能。<br>3.操作数指定数据：操作数部分指定了操作的数据或数据来源。指令</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>指令是计算机中执行特定操作的命令，通常由操作码（Opcode）和操作数（Operands）组成。指令在计算机的中央处理单元（CPU）中解码并执行，指导计算机完成各种任务。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-操作码（Opcode）-3"><a href="#1-操作码（Opcode）-3" class="headerlink" title="1.操作码（Opcode）"></a>1.操作码（Opcode）</h3><p>指示要执行的操作类型，如加法、减法、加载、存储等。</p>
<h3 id="2-操作数（Operands）-3"><a href="#2-操作数（Operands）-3" class="headerlink" title="2.操作数（Operands）"></a>2.操作数（Operands）</h3><p>指示操作所需的数据或数据的位置，可以是立即数、寄存器、内存地址等。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><img src="../TyporaImage/计算机组成原理图片/image-20240628114658484.png" alt="image-20240628114658484"  />



<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="按照地址数目分类-3"><a href="#按照地址数目分类-3" class="headerlink" title="按照地址数目分类"></a>按照地址数目分类</h3><h4 id="1-单地址指令-3"><a href="#1-单地址指令-3" class="headerlink" title="1.单地址指令"></a>1.单地址指令</h4><p>包含一个操作数，如累加指令。</p>
<h4 id="2-双地址指令-3"><a href="#2-双地址指令-3" class="headerlink" title="2.双地址指令"></a>2.双地址指令</h4><p>包含两个操作数，如加法指令。</p>
<h4 id="3-三地址指令-3"><a href="#3-三地址指令-3" class="headerlink" title="3.三地址指令"></a>3.三地址指令</h4><p>包含三个操作数，如乘法指令。</p>
<h4 id="4-零地址指令-3"><a href="#4-零地址指令-3" class="headerlink" title="4.零地址指令"></a>4.零地址指令</h4><p>操作数隐含在指令中或由堆栈提供，如堆栈指令。</p>
<h3 id="按照功能分类-3"><a href="#按照功能分类-3" class="headerlink" title="按照功能分类"></a>按照功能分类</h3><h4 id="1-数据传输指令-3"><a href="#1-数据传输指令-3" class="headerlink" title="1.数据传输指令"></a>1.数据传输指令</h4><p>如加载（Load）、存储（Store）。</p>
<h4 id="2-算术运算指令-3"><a href="#2-算术运算指令-3" class="headerlink" title="2.算术运算指令"></a>2.算术运算指令</h4><p>如加法（Add）、减法（Subtract）。</p>
<h4 id="3-逻辑运算指令-3"><a href="#3-逻辑运算指令-3" class="headerlink" title="3.逻辑运算指令"></a>3.逻辑运算指令</h4><p>如与（AND）、或（OR）。</p>
<h4 id="4-控制转移指令-3"><a href="#4-控制转移指令-3" class="headerlink" title="4.控制转移指令"></a>4.控制转移指令</h4><p>如跳转（Jump）、分支（Branch）。</p>
<h4 id="5-输入输出指令-3"><a href="#5-输入输出指令-3" class="headerlink" title="5.输入输出指令"></a>5.输入输出指令</h4><p>如输入（Input）、输出（Output）。</p>
<h4 id="6-堆栈操作指令-3"><a href="#6-堆栈操作指令-3" class="headerlink" title="6.堆栈操作指令"></a>6.堆栈操作指令</h4><p>如推入（Push）、弹出（Pop）。</p>
<h3 id="按照指令字长分类-3"><a href="#按照指令字长分类-3" class="headerlink" title="按照指令字长分类"></a>按照指令字长分类</h3><h4 id="1-固定长度指令-3"><a href="#1-固定长度指令-3" class="headerlink" title="1.固定长度指令"></a>1.固定长度指令</h4><p>所有指令具有相同的长度。</p>
<h4 id="2-可变长度指令-3"><a href="#2-可变长度指令-3" class="headerlink" title="2.可变长度指令"></a>2.可变长度指令</h4><p>指令长度可以不同，根据操作码和操作数的不同而变化。</p>
<h3 id="按照操作码长度分类-3"><a href="#按照操作码长度分类-3" class="headerlink" title="按照操作码长度分类"></a>按照操作码长度分类</h3><h4 id="1-固定长度操作码-3"><a href="#1-固定长度操作码-3" class="headerlink" title="1.固定长度操作码"></a>1.固定长度操作码</h4><p>所有指令的操作码长度相同。</p>
<h4 id="2-可变长度操作码-3"><a href="#2-可变长度操作码-3" class="headerlink" title="2.可变长度操作码"></a>2.可变长度操作码</h4><p>指令的操作码长度可以不同，根据具体指令而变化。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.固定格式：指令通常有固定的格式和长度。<br>2.操作码指示功能：操作码部分决定了指令的功能。<br>3.操作数指定数据：操作数部分指定了操作的数据或数据来源。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>虚拟存储器</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8/</url>
    <content><![CDATA[<h1 id="虚拟存储器"><a href="#虚拟存储器" class="headerlink" title="虚拟存储器"></a>虚拟存储器</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>虚拟存储器是一种计算机内存管理技术，通过将物理内存与磁盘等外部存储器结合，使得应用程序认为它有更大的连续内存空间。它通过地址转换和页面置换实现这一目标。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-虚拟地址空间"><a href="#1-虚拟地址空间" class="headerlink" title="1.虚拟地址空间"></a>1.虚拟地址空间</h3><p>应用程序使用的地址空间，抽象层面上的连续内存。</p>
<h3 id="2-物理内存"><a href="#2-物理内存" class="headerlink" title="2.物理内存"></a>2.物理内存</h3><p>实际的硬件内存（RAM），存储当前活动的数据和程序。</p>
<h3 id="3-磁盘存储"><a href="#3-磁盘存储" class="headerlink" title="3.磁盘存储"></a>3.磁盘存储</h3><p>外部存储设备，如硬盘，用于存储不在物理内存中的数据。</p>
<h3 id="4-页表"><a href="#4-页表" class="headerlink" title="4.页表"></a>4.页表</h3><p>存储虚拟地址到物理地址映射关系的数据结构。</p>
<h3 id="5-页面（Page）"><a href="#5-页面（Page）" class="headerlink" title="5.页面（Page）"></a>5.页面（Page）</h3><p>虚拟地址空间中的固定大小块。</p>
<h3 id="6-页框（Page-Frame）"><a href="#6-页框（Page-Frame）" class="headerlink" title="6.页框（Page Frame）"></a>6.页框（Page Frame）</h3><p>物理内存中的固定大小块，与页面对应。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-虚拟地址到物理地址的映射"><a href="#1-虚拟地址到物理地址的映射" class="headerlink" title="1.虚拟地址到物理地址的映射"></a>1.虚拟地址到物理地址的映射</h3><p>通过页表实现虚拟地址到物理地址的映射。</p>
<h3 id="2-分页机制"><a href="#2-分页机制" class="headerlink" title="2.分页机制"></a>2.分页机制</h3><p>将虚拟地址空间和物理内存划分为固定大小的页和页框</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-分页式虚拟存储器"><a href="#1-分页式虚拟存储器" class="headerlink" title="1.分页式虚拟存储器"></a>1.分页式虚拟存储器</h3><p>通过固定大小的页面和页框管理内存。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628113618856.png" alt="image-20240628113618856"></p>
<h3 id="2-分段式虚拟存储器"><a href="#2-分段式虚拟存储器" class="headerlink" title="2.分段式虚拟存储器"></a>2.分段式虚拟存储器</h3><p>将内存划分为不同大小的段，按段进行地址转换。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628113739451.png" alt="image-20240628113739451"></p>
<h3 id="3-段页式虚拟存储器"><a href="#3-段页式虚拟存储器" class="headerlink" title="3.段页式虚拟存储器"></a>3.段页式虚拟存储器</h3><p>结合分页和分段的优点进行内存管理。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628113826632.png" alt="image-20240628113826632"></p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.地址空间扩展：提供比物理内存更大的地址空间。<br>2.内存保护：通过页表和访问权限控制，增强内存保护。<br>3.内存利用率：通过分页和页面置换，提高内存利用率，减少碎片。储器</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>虚拟存储器是一种计算机内存管理技术，通过将物理内存与磁盘等外部存储器结合，使得应用程序认为它有更大的连续内存空间。它通过地址转换和页面置换实现这一目标。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-虚拟地址空间-1"><a href="#1-虚拟地址空间-1" class="headerlink" title="1.虚拟地址空间"></a>1.虚拟地址空间</h3><p>应用程序使用的地址空间，抽象层面上的连续内存。</p>
<h3 id="2-物理内存-1"><a href="#2-物理内存-1" class="headerlink" title="2.物理内存"></a>2.物理内存</h3><p>实际的硬件内存（RAM），存储当前活动的数据和程序。</p>
<h3 id="3-磁盘存储-1"><a href="#3-磁盘存储-1" class="headerlink" title="3.磁盘存储"></a>3.磁盘存储</h3><p>外部存储设备，如硬盘，用于存储不在物理内存中的数据。</p>
<h3 id="4-页表-1"><a href="#4-页表-1" class="headerlink" title="4.页表"></a>4.页表</h3><p>存储虚拟地址到物理地址映射关系的数据结构。</p>
<h3 id="5-页面（Page）-1"><a href="#5-页面（Page）-1" class="headerlink" title="5.页面（Page）"></a>5.页面（Page）</h3><p>虚拟地址空间中的固定大小块。</p>
<h3 id="6-页框（Page-Frame）-1"><a href="#6-页框（Page-Frame）-1" class="headerlink" title="6.页框（Page Frame）"></a>6.页框（Page Frame）</h3><p>物理内存中的固定大小块，与页面对应。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-虚拟地址到物理地址的映射-1"><a href="#1-虚拟地址到物理地址的映射-1" class="headerlink" title="1.虚拟地址到物理地址的映射"></a>1.虚拟地址到物理地址的映射</h3><p>通过页表实现虚拟地址到物理地址的映射。</p>
<h3 id="2-分页机制-1"><a href="#2-分页机制-1" class="headerlink" title="2.分页机制"></a>2.分页机制</h3><p>将虚拟地址空间和物理内存划分为固定大小的页和页框</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-分页式虚拟存储器-1"><a href="#1-分页式虚拟存储器-1" class="headerlink" title="1.分页式虚拟存储器"></a>1.分页式虚拟存储器</h3><p>通过固定大小的页面和页框管理内存。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628113618856.png" alt="image-20240628113618856"></p>
<h3 id="2-分段式虚拟存储器-1"><a href="#2-分段式虚拟存储器-1" class="headerlink" title="2.分段式虚拟存储器"></a>2.分段式虚拟存储器</h3><p>将内存划分为不同大小的段，按段进行地址转换。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628113739451.png" alt="image-20240628113739451"></p>
<h3 id="3-段页式虚拟存储器-1"><a href="#3-段页式虚拟存储器-1" class="headerlink" title="3.段页式虚拟存储器"></a>3.段页式虚拟存储器</h3><p>结合分页和分段的优点进行内存管理。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628113826632.png" alt="image-20240628113826632"></p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.地址空间扩展：提供比物理内存更大的地址空间。<br>2.内存保护：通过页表和访问权限控制，增强内存保护。<br>3.内存利用率：通过分页和页面置换，提高内存利用率，减少碎片。# 虚拟存储器</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>虚拟存储器是一种计算机内存管理技术，通过将物理内存与磁盘等外部存储器结合，使得应用程序认为它有更大的连续内存空间。它通过地址转换和页面置换实现这一目标。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-虚拟地址空间-2"><a href="#1-虚拟地址空间-2" class="headerlink" title="1.虚拟地址空间"></a>1.虚拟地址空间</h3><p>应用程序使用的地址空间，抽象层面上的连续内存。</p>
<h3 id="2-物理内存-2"><a href="#2-物理内存-2" class="headerlink" title="2.物理内存"></a>2.物理内存</h3><p>实际的硬件内存（RAM），存储当前活动的数据和程序。</p>
<h3 id="3-磁盘存储-2"><a href="#3-磁盘存储-2" class="headerlink" title="3.磁盘存储"></a>3.磁盘存储</h3><p>外部存储设备，如硬盘，用于存储不在物理内存中的数据。</p>
<h3 id="4-页表-2"><a href="#4-页表-2" class="headerlink" title="4.页表"></a>4.页表</h3><p>存储虚拟地址到物理地址映射关系的数据结构。</p>
<h3 id="5-页面（Page）-2"><a href="#5-页面（Page）-2" class="headerlink" title="5.页面（Page）"></a>5.页面（Page）</h3><p>虚拟地址空间中的固定大小块。</p>
<h3 id="6-页框（Page-Frame）-2"><a href="#6-页框（Page-Frame）-2" class="headerlink" title="6.页框（Page Frame）"></a>6.页框（Page Frame）</h3><p>物理内存中的固定大小块，与页面对应。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-虚拟地址到物理地址的映射-2"><a href="#1-虚拟地址到物理地址的映射-2" class="headerlink" title="1.虚拟地址到物理地址的映射"></a>1.虚拟地址到物理地址的映射</h3><p>通过页表实现虚拟地址到物理地址的映射。</p>
<h3 id="2-分页机制-2"><a href="#2-分页机制-2" class="headerlink" title="2.分页机制"></a>2.分页机制</h3><p>将虚拟地址空间和物理内存划分为固定大小的页和页框</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-分页式虚拟存储器-2"><a href="#1-分页式虚拟存储器-2" class="headerlink" title="1.分页式虚拟存储器"></a>1.分页式虚拟存储器</h3><p>通过固定大小的页面和页框管理内存。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628113618856.png" alt="image-20240628113618856"></p>
<h3 id="2-分段式虚拟存储器-2"><a href="#2-分段式虚拟存储器-2" class="headerlink" title="2.分段式虚拟存储器"></a>2.分段式虚拟存储器</h3><p>将内存划分为不同大小的段，按段进行地址转换。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628113739451.png" alt="image-20240628113739451"></p>
<h3 id="3-段页式虚拟存储器-2"><a href="#3-段页式虚拟存储器-2" class="headerlink" title="3.段页式虚拟存储器"></a>3.段页式虚拟存储器</h3><p>结合分页和分段的优点进行内存管理。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628113826632.png" alt="image-20240628113826632"></p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.地址空间扩展：提供比物理内存更大的地址空间。<br>2.内存保护：通过页表和访问权限控制，增强内存保护。<br>3.内存利用率：通过分页和页面置换，提高内存利用率，减少碎片。储器</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>虚拟存储器是一种计算机内存管理技术，通过将物理内存与磁盘等外部存储器结合，使得应用程序认为它有更大的连续内存空间。它通过地址转换和页面置换实现这一目标。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-虚拟地址空间-3"><a href="#1-虚拟地址空间-3" class="headerlink" title="1.虚拟地址空间"></a>1.虚拟地址空间</h3><p>应用程序使用的地址空间，抽象层面上的连续内存。</p>
<h3 id="2-物理内存-3"><a href="#2-物理内存-3" class="headerlink" title="2.物理内存"></a>2.物理内存</h3><p>实际的硬件内存（RAM），存储当前活动的数据和程序。</p>
<h3 id="3-磁盘存储-3"><a href="#3-磁盘存储-3" class="headerlink" title="3.磁盘存储"></a>3.磁盘存储</h3><p>外部存储设备，如硬盘，用于存储不在物理内存中的数据。</p>
<h3 id="4-页表-3"><a href="#4-页表-3" class="headerlink" title="4.页表"></a>4.页表</h3><p>存储虚拟地址到物理地址映射关系的数据结构。</p>
<h3 id="5-页面（Page）-3"><a href="#5-页面（Page）-3" class="headerlink" title="5.页面（Page）"></a>5.页面（Page）</h3><p>虚拟地址空间中的固定大小块。</p>
<h3 id="6-页框（Page-Frame）-3"><a href="#6-页框（Page-Frame）-3" class="headerlink" title="6.页框（Page Frame）"></a>6.页框（Page Frame）</h3><p>物理内存中的固定大小块，与页面对应。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-虚拟地址到物理地址的映射-3"><a href="#1-虚拟地址到物理地址的映射-3" class="headerlink" title="1.虚拟地址到物理地址的映射"></a>1.虚拟地址到物理地址的映射</h3><p>通过页表实现虚拟地址到物理地址的映射。</p>
<h3 id="2-分页机制-3"><a href="#2-分页机制-3" class="headerlink" title="2.分页机制"></a>2.分页机制</h3><p>将虚拟地址空间和物理内存划分为固定大小的页和页框</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-分页式虚拟存储器-3"><a href="#1-分页式虚拟存储器-3" class="headerlink" title="1.分页式虚拟存储器"></a>1.分页式虚拟存储器</h3><p>通过固定大小的页面和页框管理内存。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628113618856.png" alt="image-20240628113618856"></p>
<h3 id="2-分段式虚拟存储器-3"><a href="#2-分段式虚拟存储器-3" class="headerlink" title="2.分段式虚拟存储器"></a>2.分段式虚拟存储器</h3><p>将内存划分为不同大小的段，按段进行地址转换。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628113739451.png" alt="image-20240628113739451"></p>
<h3 id="3-段页式虚拟存储器-3"><a href="#3-段页式虚拟存储器-3" class="headerlink" title="3.段页式虚拟存储器"></a>3.段页式虚拟存储器</h3><p>结合分页和分段的优点进行内存管理。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628113826632.png" alt="image-20240628113826632"></p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.地址空间扩展：提供比物理内存更大的地址空间。<br>2.内存保护：通过页表和访问权限控制，增强内存保护。<br>3.内存利用率：通过分页和页面置换，提高内存利用率，减少碎片。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>补码乘法</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%A1%A5%E7%A0%81%E4%B9%98%E6%B3%95/</url>
    <content><![CDATA[<h1 id="补码乘法"><a href="#补码乘法" class="headerlink" title="补码乘法"></a>补码乘法</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>采用BOOTH算法</strong></p>
<p>这里的右移，是<strong>算数右移</strong>。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626104043735.png" alt="image-20240626104043735"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626103533176.png" alt="image-20240626103533176"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626104519088.png" alt="image-20240626104519088"></p>
<p>PS：补码需要多来一次加法，因为有符号位。</p>
<p>最后的结果需要进行ACC、MQ的一部分拼接。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626103857623.png" alt="image-20240626103857623">乘法</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>采用BOOTH算法</strong></p>
<p>这里的右移，是<strong>算数右移</strong>。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626104043735.png" alt="image-20240626104043735"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626103533176.png" alt="image-20240626103533176"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626104519088.png" alt="image-20240626104519088"></p>
<p>PS：补码需要多来一次加法，因为有符号位。</p>
<p>最后的结果需要进行ACC、MQ的一部分拼接。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626103857623.png" alt="image-20240626103857623"># 补码乘法</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>采用BOOTH算法</strong></p>
<p>这里的右移，是<strong>算数右移</strong>。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626104043735.png" alt="image-20240626104043735"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626103533176.png" alt="image-20240626103533176"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626104519088.png" alt="image-20240626104519088"></p>
<p>PS：补码需要多来一次加法，因为有符号位。</p>
<p>最后的结果需要进行ACC、MQ的一部分拼接。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626103857623.png" alt="image-20240626103857623">乘法</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>采用BOOTH算法</strong></p>
<p>这里的右移，是<strong>算数右移</strong>。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626104043735.png" alt="image-20240626104043735"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626103533176.png" alt="image-20240626103533176"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626104519088.png" alt="image-20240626104519088"></p>
<p>PS：补码需要多来一次加法，因为有符号位。</p>
<p>最后的结果需要进行ACC、MQ的一部分拼接。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626103857623.png" alt="image-20240626103857623"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>补码加减运算器</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%A1%A5%E7%A0%81%E5%8A%A0%E5%87%8F%E8%BF%90%E7%AE%97%E5%99%A8/</url>
    <content><![CDATA[<h1 id="补码加减运算器"><a href="#补码加减运算器" class="headerlink" title="补码加减运算器"></a>补码加减运算器</h1><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172834719.png" alt="image-20240625172834719"></p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172739502.png" alt="image-20240625172739502">算器</p>
<h2 id="具体实现-1"><a href="#具体实现-1" class="headerlink" title="具体实现"></a>具体实现</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172834719.png" alt="image-20240625172834719"></p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172739502.png" alt="image-20240625172739502"># 补码加减运算器</p>
<h2 id="具体实现-2"><a href="#具体实现-2" class="headerlink" title="具体实现"></a>具体实现</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172834719.png" alt="image-20240625172834719"></p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172739502.png" alt="image-20240625172739502">算器</p>
<h2 id="具体实现-3"><a href="#具体实现-3" class="headerlink" title="具体实现"></a>具体实现</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172834719.png" alt="image-20240625172834719"></p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240625172739502.png" alt="image-20240625172739502"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>补码除法</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%A1%A5%E7%A0%81%E9%99%A4%E6%B3%95/</url>
    <content><![CDATA[<h1 id="补码除法（同样是加减交替法）"><a href="#补码除法（同样是加减交替法）" class="headerlink" title="补码除法（同样是加减交替法）"></a>补码除法（同样是加减交替法）</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626111138509.png" alt="image-20240626111138509"></p>
<p>PS：</p>
<p><strong>原码除法第一步是先减除数；</strong></p>
<p>而<strong>补码除法的第一步需要根据情况判断</strong>，如果是<strong>同号</strong>，则<strong>相减</strong>；<strong>异号</strong>则被除数<strong>加上除数</strong></p>
<p>法）</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626111138509.png" alt="image-20240626111138509"></p>
<p>PS：</p>
<p><strong>原码除法第一步是先减除数；</strong></p>
<p>而<strong>补码除法的第一步需要根据情况判断</strong>，如果是<strong>同号</strong>，则<strong>相减</strong>；<strong>异号</strong>则被除数<strong>加上除数</strong># 补码除法（同样是加减交替法）</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626111138509.png" alt="image-20240626111138509"></p>
<p>PS：</p>
<p><strong>原码除法第一步是先减除数；</strong></p>
<p>而<strong>补码除法的第一步需要根据情况判断</strong>，如果是<strong>同号</strong>，则<strong>相减</strong>；<strong>异号</strong>则被除数<strong>加上除数</strong></p>
<p>法）</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240626111138509.png" alt="image-20240626111138509"></p>
<p>PS：</p>
<p><strong>原码除法第一步是先减除数；</strong></p>
<p>而<strong>补码除法的第一步需要根据情况判断</strong>，如果是<strong>同号</strong>，则<strong>相减</strong>；<strong>异号</strong>则被除数<strong>加上除数</strong></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>计算机的发展</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%8F%91%E5%B1%95/</url>
    <content><![CDATA[<h1 id="计算机的发展"><a href="#计算机的发展" class="headerlink" title="计算机的发展"></a>计算机的发展</h1><h2 id="计算机的定义"><a href="#计算机的定义" class="headerlink" title="计算机的定义"></a>计算机的定义</h2><p>计算机&#x3D;硬件+软件。</p>
<h2 id="硬件的发展"><a href="#硬件的发展" class="headerlink" title="硬件的发展"></a>硬件的发展</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624154618187.png" alt="image-20240624154618187"></p>
<p>第一台计算机ENIAC（1946）</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624154808164.png" alt="image-20240624154808164"></p>
<h2 id="软件的发展"><a href="#软件的发展" class="headerlink" title="软件的发展"></a>软件的发展</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155019340.png" alt="image-20240624155019340"></p>
<h2 id="目前的发展趋势"><a href="#目前的发展趋势" class="headerlink" title="目前的发展趋势"></a>目前的发展趋势</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155049923.png" alt="image-20240624155049923"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-软件的分类"><a href="#1-软件的分类" class="headerlink" title="1.软件的分类"></a>1.软件的分类</h3><h4 id="1-系统软件"><a href="#1-系统软件" class="headerlink" title="1.系统软件"></a>1.系统软件</h4><p>操作系统、标准程序库、服务程序、语言处理程序</p>
<h4 id="2-应用软件"><a href="#2-应用软件" class="headerlink" title="2.应用软件"></a>2.应用软件</h4><p>抖音等。</p>
<h3 id="2-摩尔定律"><a href="#2-摩尔定律" class="headerlink" title="2.摩尔定律"></a>2.摩尔定律</h3><p>摩尔定律是由英特尔创始人之一戈登·摩尔在1965年提出的一个观察，它指出集成电路上可容纳的晶体管数量大约每两年翻一番，同时成本减半。这一定律揭示了半导体行业技术进步的速度和成本下降的趋势。</p>
<p>发展</p>
<h2 id="计算机的定义-1"><a href="#计算机的定义-1" class="headerlink" title="计算机的定义"></a>计算机的定义</h2><p>计算机&#x3D;硬件+软件。</p>
<h2 id="硬件的发展-1"><a href="#硬件的发展-1" class="headerlink" title="硬件的发展"></a>硬件的发展</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624154618187.png" alt="image-20240624154618187"></p>
<p>第一台计算机ENIAC（1946）</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624154808164.png" alt="image-20240624154808164"></p>
<h2 id="软件的发展-1"><a href="#软件的发展-1" class="headerlink" title="软件的发展"></a>软件的发展</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155019340.png" alt="image-20240624155019340"></p>
<h2 id="目前的发展趋势-1"><a href="#目前的发展趋势-1" class="headerlink" title="目前的发展趋势"></a>目前的发展趋势</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155049923.png" alt="image-20240624155049923"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-软件的分类-1"><a href="#1-软件的分类-1" class="headerlink" title="1.软件的分类"></a>1.软件的分类</h3><h4 id="1-系统软件-1"><a href="#1-系统软件-1" class="headerlink" title="1.系统软件"></a>1.系统软件</h4><p>操作系统、标准程序库、服务程序、语言处理程序</p>
<h4 id="2-应用软件-1"><a href="#2-应用软件-1" class="headerlink" title="2.应用软件"></a>2.应用软件</h4><p>抖音等。</p>
<h3 id="2-摩尔定律-1"><a href="#2-摩尔定律-1" class="headerlink" title="2.摩尔定律"></a>2.摩尔定律</h3><p>摩尔定律是由英特尔创始人之一戈登·摩尔在1965年提出的一个观察，它指出集成电路上可容纳的晶体管数量大约每两年翻一番，同时成本减半。这一定律揭示了半导体行业技术进步的速度和成本下降的趋势。# 计算机的发展</p>
<h2 id="计算机的定义-2"><a href="#计算机的定义-2" class="headerlink" title="计算机的定义"></a>计算机的定义</h2><p>计算机&#x3D;硬件+软件。</p>
<h2 id="硬件的发展-2"><a href="#硬件的发展-2" class="headerlink" title="硬件的发展"></a>硬件的发展</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624154618187.png" alt="image-20240624154618187"></p>
<p>第一台计算机ENIAC（1946）</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624154808164.png" alt="image-20240624154808164"></p>
<h2 id="软件的发展-2"><a href="#软件的发展-2" class="headerlink" title="软件的发展"></a>软件的发展</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155019340.png" alt="image-20240624155019340"></p>
<h2 id="目前的发展趋势-2"><a href="#目前的发展趋势-2" class="headerlink" title="目前的发展趋势"></a>目前的发展趋势</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155049923.png" alt="image-20240624155049923"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-软件的分类-2"><a href="#1-软件的分类-2" class="headerlink" title="1.软件的分类"></a>1.软件的分类</h3><h4 id="1-系统软件-2"><a href="#1-系统软件-2" class="headerlink" title="1.系统软件"></a>1.系统软件</h4><p>操作系统、标准程序库、服务程序、语言处理程序</p>
<h4 id="2-应用软件-2"><a href="#2-应用软件-2" class="headerlink" title="2.应用软件"></a>2.应用软件</h4><p>抖音等。</p>
<h3 id="2-摩尔定律-2"><a href="#2-摩尔定律-2" class="headerlink" title="2.摩尔定律"></a>2.摩尔定律</h3><p>摩尔定律是由英特尔创始人之一戈登·摩尔在1965年提出的一个观察，它指出集成电路上可容纳的晶体管数量大约每两年翻一番，同时成本减半。这一定律揭示了半导体行业技术进步的速度和成本下降的趋势。</p>
<p>发展</p>
<h2 id="计算机的定义-3"><a href="#计算机的定义-3" class="headerlink" title="计算机的定义"></a>计算机的定义</h2><p>计算机&#x3D;硬件+软件。</p>
<h2 id="硬件的发展-3"><a href="#硬件的发展-3" class="headerlink" title="硬件的发展"></a>硬件的发展</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624154618187.png" alt="image-20240624154618187"></p>
<p>第一台计算机ENIAC（1946）</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624154808164.png" alt="image-20240624154808164"></p>
<h2 id="软件的发展-3"><a href="#软件的发展-3" class="headerlink" title="软件的发展"></a>软件的发展</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155019340.png" alt="image-20240624155019340"></p>
<h2 id="目前的发展趋势-3"><a href="#目前的发展趋势-3" class="headerlink" title="目前的发展趋势"></a>目前的发展趋势</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155049923.png" alt="image-20240624155049923"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-软件的分类-3"><a href="#1-软件的分类-3" class="headerlink" title="1.软件的分类"></a>1.软件的分类</h3><h4 id="1-系统软件-3"><a href="#1-系统软件-3" class="headerlink" title="1.系统软件"></a>1.系统软件</h4><p>操作系统、标准程序库、服务程序、语言处理程序</p>
<h4 id="2-应用软件-3"><a href="#2-应用软件-3" class="headerlink" title="2.应用软件"></a>2.应用软件</h4><p>抖音等。</p>
<h3 id="2-摩尔定律-3"><a href="#2-摩尔定律-3" class="headerlink" title="2.摩尔定律"></a>2.摩尔定律</h3><p>摩尔定律是由英特尔创始人之一戈登·摩尔在1965年提出的一个观察，它指出集成电路上可容纳的晶体管数量大约每两年翻一番，同时成本减半。这一定律揭示了半导体行业技术进步的速度和成本下降的趋势。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>计算机性能指标</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/</url>
    <content><![CDATA[<h1 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h1><h2 id="存储器"><a href="#存储器" class="headerlink" title="存储器"></a>存储器</h2><h3 id="1-MAR"><a href="#1-MAR" class="headerlink" title="1.MAR"></a>1.MAR</h3><h3 id="2-MDR"><a href="#2-MDR" class="headerlink" title="2.MDR"></a>2.MDR</h3><h3 id="3-总容量"><a href="#3-总容量" class="headerlink" title="3.总容量"></a>3.总容量</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174249711.png" alt="image-20240624174249711"></p>
<h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><h3 id="1-主频"><a href="#1-主频" class="headerlink" title="1.主频"></a>1.主频</h3><h3 id="2-时钟周期"><a href="#2-时钟周期" class="headerlink" title="2.时钟周期"></a>2.时钟周期</h3><h3 id="3-CPI：执行一条指令需要的时钟周期数"><a href="#3-CPI：执行一条指令需要的时钟周期数" class="headerlink" title="3.CPI：执行一条指令需要的时钟周期数"></a>3.CPI：执行一条指令需要的时钟周期数</h3><h3 id="4-IPS：每秒执行多少条指令"><a href="#4-IPS：每秒执行多少条指令" class="headerlink" title="4.IPS：每秒执行多少条指令"></a>4.IPS：每秒执行多少条指令</h3><h3 id="5-FLOPS：每秒执行多少次浮点运算"><a href="#5-FLOPS：每秒执行多少次浮点运算" class="headerlink" title="5.FLOPS：每秒执行多少次浮点运算"></a>5.FLOPS：每秒执行多少次浮点运算</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174445089.png" alt="image-20240624174445089"></p>
<h2 id="系统整体"><a href="#系统整体" class="headerlink" title="系统整体"></a>系统整体</h2><h3 id="1-数据通路带宽"><a href="#1-数据通路带宽" class="headerlink" title="1.数据通路带宽"></a>1.数据通路带宽</h3><h3 id="2-吞吐量"><a href="#2-吞吐量" class="headerlink" title="2.吞吐量"></a>2.吞吐量</h3><h3 id="3-响应时间"><a href="#3-响应时间" class="headerlink" title="3.响应时间"></a>3.响应时间</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174613065.png" alt="image-20240624174613065"></p>
<p>指标</p>
<h2 id="存储器-1"><a href="#存储器-1" class="headerlink" title="存储器"></a>存储器</h2><h3 id="1-MAR-1"><a href="#1-MAR-1" class="headerlink" title="1.MAR"></a>1.MAR</h3><h3 id="2-MDR-1"><a href="#2-MDR-1" class="headerlink" title="2.MDR"></a>2.MDR</h3><h3 id="3-总容量-1"><a href="#3-总容量-1" class="headerlink" title="3.总容量"></a>3.总容量</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174249711.png" alt="image-20240624174249711"></p>
<h2 id="CPU-1"><a href="#CPU-1" class="headerlink" title="CPU"></a>CPU</h2><h3 id="1-主频-1"><a href="#1-主频-1" class="headerlink" title="1.主频"></a>1.主频</h3><h3 id="2-时钟周期-1"><a href="#2-时钟周期-1" class="headerlink" title="2.时钟周期"></a>2.时钟周期</h3><h3 id="3-CPI：执行一条指令需要的时钟周期数-1"><a href="#3-CPI：执行一条指令需要的时钟周期数-1" class="headerlink" title="3.CPI：执行一条指令需要的时钟周期数"></a>3.CPI：执行一条指令需要的时钟周期数</h3><h3 id="4-IPS：每秒执行多少条指令-1"><a href="#4-IPS：每秒执行多少条指令-1" class="headerlink" title="4.IPS：每秒执行多少条指令"></a>4.IPS：每秒执行多少条指令</h3><h3 id="5-FLOPS：每秒执行多少次浮点运算-1"><a href="#5-FLOPS：每秒执行多少次浮点运算-1" class="headerlink" title="5.FLOPS：每秒执行多少次浮点运算"></a>5.FLOPS：每秒执行多少次浮点运算</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174445089.png" alt="image-20240624174445089"></p>
<h2 id="系统整体-1"><a href="#系统整体-1" class="headerlink" title="系统整体"></a>系统整体</h2><h3 id="1-数据通路带宽-1"><a href="#1-数据通路带宽-1" class="headerlink" title="1.数据通路带宽"></a>1.数据通路带宽</h3><h3 id="2-吞吐量-1"><a href="#2-吞吐量-1" class="headerlink" title="2.吞吐量"></a>2.吞吐量</h3><h3 id="3-响应时间-1"><a href="#3-响应时间-1" class="headerlink" title="3.响应时间"></a>3.响应时间</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174613065.png" alt="image-20240624174613065"># 性能指标</p>
<h2 id="存储器-2"><a href="#存储器-2" class="headerlink" title="存储器"></a>存储器</h2><h3 id="1-MAR-2"><a href="#1-MAR-2" class="headerlink" title="1.MAR"></a>1.MAR</h3><h3 id="2-MDR-2"><a href="#2-MDR-2" class="headerlink" title="2.MDR"></a>2.MDR</h3><h3 id="3-总容量-2"><a href="#3-总容量-2" class="headerlink" title="3.总容量"></a>3.总容量</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174249711.png" alt="image-20240624174249711"></p>
<h2 id="CPU-2"><a href="#CPU-2" class="headerlink" title="CPU"></a>CPU</h2><h3 id="1-主频-2"><a href="#1-主频-2" class="headerlink" title="1.主频"></a>1.主频</h3><h3 id="2-时钟周期-2"><a href="#2-时钟周期-2" class="headerlink" title="2.时钟周期"></a>2.时钟周期</h3><h3 id="3-CPI：执行一条指令需要的时钟周期数-2"><a href="#3-CPI：执行一条指令需要的时钟周期数-2" class="headerlink" title="3.CPI：执行一条指令需要的时钟周期数"></a>3.CPI：执行一条指令需要的时钟周期数</h3><h3 id="4-IPS：每秒执行多少条指令-2"><a href="#4-IPS：每秒执行多少条指令-2" class="headerlink" title="4.IPS：每秒执行多少条指令"></a>4.IPS：每秒执行多少条指令</h3><h3 id="5-FLOPS：每秒执行多少次浮点运算-2"><a href="#5-FLOPS：每秒执行多少次浮点运算-2" class="headerlink" title="5.FLOPS：每秒执行多少次浮点运算"></a>5.FLOPS：每秒执行多少次浮点运算</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174445089.png" alt="image-20240624174445089"></p>
<h2 id="系统整体-2"><a href="#系统整体-2" class="headerlink" title="系统整体"></a>系统整体</h2><h3 id="1-数据通路带宽-2"><a href="#1-数据通路带宽-2" class="headerlink" title="1.数据通路带宽"></a>1.数据通路带宽</h3><h3 id="2-吞吐量-2"><a href="#2-吞吐量-2" class="headerlink" title="2.吞吐量"></a>2.吞吐量</h3><h3 id="3-响应时间-2"><a href="#3-响应时间-2" class="headerlink" title="3.响应时间"></a>3.响应时间</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174613065.png" alt="image-20240624174613065"></p>
<p>指标</p>
<h2 id="存储器-3"><a href="#存储器-3" class="headerlink" title="存储器"></a>存储器</h2><h3 id="1-MAR-3"><a href="#1-MAR-3" class="headerlink" title="1.MAR"></a>1.MAR</h3><h3 id="2-MDR-3"><a href="#2-MDR-3" class="headerlink" title="2.MDR"></a>2.MDR</h3><h3 id="3-总容量-3"><a href="#3-总容量-3" class="headerlink" title="3.总容量"></a>3.总容量</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174249711.png" alt="image-20240624174249711"></p>
<h2 id="CPU-3"><a href="#CPU-3" class="headerlink" title="CPU"></a>CPU</h2><h3 id="1-主频-3"><a href="#1-主频-3" class="headerlink" title="1.主频"></a>1.主频</h3><h3 id="2-时钟周期-3"><a href="#2-时钟周期-3" class="headerlink" title="2.时钟周期"></a>2.时钟周期</h3><h3 id="3-CPI：执行一条指令需要的时钟周期数-3"><a href="#3-CPI：执行一条指令需要的时钟周期数-3" class="headerlink" title="3.CPI：执行一条指令需要的时钟周期数"></a>3.CPI：执行一条指令需要的时钟周期数</h3><h3 id="4-IPS：每秒执行多少条指令-3"><a href="#4-IPS：每秒执行多少条指令-3" class="headerlink" title="4.IPS：每秒执行多少条指令"></a>4.IPS：每秒执行多少条指令</h3><h3 id="5-FLOPS：每秒执行多少次浮点运算-3"><a href="#5-FLOPS：每秒执行多少次浮点运算-3" class="headerlink" title="5.FLOPS：每秒执行多少次浮点运算"></a>5.FLOPS：每秒执行多少次浮点运算</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174445089.png" alt="image-20240624174445089"></p>
<h2 id="系统整体-3"><a href="#系统整体-3" class="headerlink" title="系统整体"></a>系统整体</h2><h3 id="1-数据通路带宽-3"><a href="#1-数据通路带宽-3" class="headerlink" title="1.数据通路带宽"></a>1.数据通路带宽</h3><h3 id="2-吞吐量-3"><a href="#2-吞吐量-3" class="headerlink" title="2.吞吐量"></a>2.吞吐量</h3><h3 id="3-响应时间-3"><a href="#3-响应时间-3" class="headerlink" title="3.响应时间"></a>3.响应时间</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174613065.png" alt="image-20240624174613065"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>计算机硬件的基本组成</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%84%E6%88%90/</url>
    <content><![CDATA[<h1 id="计算机硬件的基本组成"><a href="#计算机硬件的基本组成" class="headerlink" title="计算机硬件的基本组成"></a>计算机硬件的基本组成</h1><h2 id="早期冯诺依曼机"><a href="#早期冯诺依曼机" class="headerlink" title="早期冯诺依曼机"></a>早期冯诺依曼机</h2><h3 id="组成结构"><a href="#组成结构" class="headerlink" title="组成结构"></a>组成结构</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155321449.png" alt="image-20240624155321449"></p>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155505695.png" alt="image-20240624155505695"></p>
<h2 id="现代计算机"><a href="#现代计算机" class="headerlink" title="现代计算机"></a>现代计算机</h2><h3 id="组成结构-1"><a href="#组成结构-1" class="headerlink" title="组成结构"></a>组成结构</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155555094.png" alt="image-20240624155555094"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155637203.png" alt="image-20240624155637203">组成</p>
<h2 id="早期冯诺依曼机-1"><a href="#早期冯诺依曼机-1" class="headerlink" title="早期冯诺依曼机"></a>早期冯诺依曼机</h2><h3 id="组成结构-2"><a href="#组成结构-2" class="headerlink" title="组成结构"></a>组成结构</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155321449.png" alt="image-20240624155321449"></p>
<h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155505695.png" alt="image-20240624155505695"></p>
<h2 id="现代计算机-1"><a href="#现代计算机-1" class="headerlink" title="现代计算机"></a>现代计算机</h2><h3 id="组成结构-3"><a href="#组成结构-3" class="headerlink" title="组成结构"></a>组成结构</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155555094.png" alt="image-20240624155555094"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155637203.png" alt="image-20240624155637203"># 计算机硬件的基本组成</p>
<h2 id="早期冯诺依曼机-2"><a href="#早期冯诺依曼机-2" class="headerlink" title="早期冯诺依曼机"></a>早期冯诺依曼机</h2><h3 id="组成结构-4"><a href="#组成结构-4" class="headerlink" title="组成结构"></a>组成结构</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155321449.png" alt="image-20240624155321449"></p>
<h3 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155505695.png" alt="image-20240624155505695"></p>
<h2 id="现代计算机-2"><a href="#现代计算机-2" class="headerlink" title="现代计算机"></a>现代计算机</h2><h3 id="组成结构-5"><a href="#组成结构-5" class="headerlink" title="组成结构"></a>组成结构</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155555094.png" alt="image-20240624155555094"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155637203.png" alt="image-20240624155637203">组成</p>
<h2 id="早期冯诺依曼机-3"><a href="#早期冯诺依曼机-3" class="headerlink" title="早期冯诺依曼机"></a>早期冯诺依曼机</h2><h3 id="组成结构-6"><a href="#组成结构-6" class="headerlink" title="组成结构"></a>组成结构</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155321449.png" alt="image-20240624155321449"></p>
<h3 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155505695.png" alt="image-20240624155505695"></p>
<h2 id="现代计算机-3"><a href="#现代计算机-3" class="headerlink" title="现代计算机"></a>现代计算机</h2><h3 id="组成结构-7"><a href="#组成结构-7" class="headerlink" title="组成结构"></a>组成结构</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155555094.png" alt="image-20240624155555094"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624155637203.png" alt="image-20240624155637203"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>计算机系统的层级结构</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%B1%82%E7%BA%A7%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="多级层次结构"><a href="#多级层次结构" class="headerlink" title="多级层次结构"></a>多级层次结构</h1><h2 id="计算机系统层级结构"><a href="#计算机系统层级结构" class="headerlink" title="计算机系统层级结构"></a>计算机系统层级结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173911920.png" alt="image-20240624173911920"></p>
<h2 id="语言层级结构"><a href="#语言层级结构" class="headerlink" title="语言层级结构"></a>语言层级结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174024821.png" alt="image-20240624174024821">结构</p>
<h2 id="计算机系统层级结构-1"><a href="#计算机系统层级结构-1" class="headerlink" title="计算机系统层级结构"></a>计算机系统层级结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173911920.png" alt="image-20240624173911920"></p>
<h2 id="语言层级结构-1"><a href="#语言层级结构-1" class="headerlink" title="语言层级结构"></a>语言层级结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174024821.png" alt="image-20240624174024821"># 多级层次结构</p>
<h2 id="计算机系统层级结构-2"><a href="#计算机系统层级结构-2" class="headerlink" title="计算机系统层级结构"></a>计算机系统层级结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173911920.png" alt="image-20240624173911920"></p>
<h2 id="语言层级结构-2"><a href="#语言层级结构-2" class="headerlink" title="语言层级结构"></a>语言层级结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174024821.png" alt="image-20240624174024821">结构</p>
<h2 id="计算机系统层级结构-3"><a href="#计算机系统层级结构-3" class="headerlink" title="计算机系统层级结构"></a>计算机系统层级结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624173911920.png" alt="image-20240624173911920"></p>
<h2 id="语言层级结构-3"><a href="#语言层级结构-3" class="headerlink" title="语言层级结构"></a>语言层级结构</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174024821.png" alt="image-20240624174024821"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>进位计数制</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%BF%9B%E4%BD%8D%E8%AE%A1%E6%95%B0%E5%88%B6/</url>
    <content><![CDATA[<h1 id="进位计数制"><a href="#进位计数制" class="headerlink" title="进位计数制"></a>进位计数制</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="1-基数"><a href="#1-基数" class="headerlink" title="1.基数"></a>1.基数</h3><h3 id="2-位权"><a href="#2-位权" class="headerlink" title="2.位权"></a>2.位权</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174902801.png" alt="image-20240624174902801"></p>
<h2 id="任意进制到十进制"><a href="#任意进制到十进制" class="headerlink" title="任意进制到十进制"></a>任意进制到十进制</h2><p>1.每一位上的数值*位权</p>
<p>2.相加</p>
<h2 id="十进制到任意进制"><a href="#十进制到任意进制" class="headerlink" title="十进制到任意进制"></a>十进制到任意进制</h2><p>分为整数部分和小数部分的计算。</p>
<p>1.整数部分，采用除基取余法。将最后的余数倒过来写</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624175514934.png" alt="image-20240624175514934"></p>
<p>2.小数部分，采用乘基取整法。将整数顺序写。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624175618682.png" alt="image-20240624175618682"></p>
<h2 id="二进制、八进制、十六进制的相互转换"><a href="#二进制、八进制、十六进制的相互转换" class="headerlink" title="二进制、八进制、十六进制的相互转换"></a>二进制、八进制、十六进制的相互转换</h2><h3 id="1-二进制到八进制、十六进制"><a href="#1-二进制到八进制、十六进制" class="headerlink" title="1.二进制到八进制、十六进制"></a>1.二进制到八进制、十六进制</h3><p>就是三位一组、四位一组</p>
<h3 id="2、十六进制到八进制"><a href="#2、十六进制到八进制" class="headerlink" title="2、十六进制到八进制"></a>2、十六进制到八进制</h3><p>可以把十六进制转换成二进制，再转换成八进制。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.真值</p>
<p>符合人类习惯的数字</p>
<p>2.机器数</p>
<p>真值的机器化表示。</p>
<p>数制</p>
<h2 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="1-基数-1"><a href="#1-基数-1" class="headerlink" title="1.基数"></a>1.基数</h3><h3 id="2-位权-1"><a href="#2-位权-1" class="headerlink" title="2.位权"></a>2.位权</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174902801.png" alt="image-20240624174902801"></p>
<h2 id="任意进制到十进制-1"><a href="#任意进制到十进制-1" class="headerlink" title="任意进制到十进制"></a>任意进制到十进制</h2><p>1.每一位上的数值*位权</p>
<p>2.相加</p>
<h2 id="十进制到任意进制-1"><a href="#十进制到任意进制-1" class="headerlink" title="十进制到任意进制"></a>十进制到任意进制</h2><p>分为整数部分和小数部分的计算。</p>
<p>1.整数部分，采用除基取余法。将最后的余数倒过来写</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624175514934.png" alt="image-20240624175514934"></p>
<p>2.小数部分，采用乘基取整法。将整数顺序写。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624175618682.png" alt="image-20240624175618682"></p>
<h2 id="二进制、八进制、十六进制的相互转换-1"><a href="#二进制、八进制、十六进制的相互转换-1" class="headerlink" title="二进制、八进制、十六进制的相互转换"></a>二进制、八进制、十六进制的相互转换</h2><h3 id="1-二进制到八进制、十六进制-1"><a href="#1-二进制到八进制、十六进制-1" class="headerlink" title="1.二进制到八进制、十六进制"></a>1.二进制到八进制、十六进制</h3><p>就是三位一组、四位一组</p>
<h3 id="2、十六进制到八进制-1"><a href="#2、十六进制到八进制-1" class="headerlink" title="2、十六进制到八进制"></a>2、十六进制到八进制</h3><p>可以把十六进制转换成二进制，再转换成八进制。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.真值</p>
<p>符合人类习惯的数字</p>
<p>2.机器数</p>
<p>真值的机器化表示。# 进位计数制</p>
<h2 id="基本概念-2"><a href="#基本概念-2" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="1-基数-2"><a href="#1-基数-2" class="headerlink" title="1.基数"></a>1.基数</h3><h3 id="2-位权-2"><a href="#2-位权-2" class="headerlink" title="2.位权"></a>2.位权</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174902801.png" alt="image-20240624174902801"></p>
<h2 id="任意进制到十进制-2"><a href="#任意进制到十进制-2" class="headerlink" title="任意进制到十进制"></a>任意进制到十进制</h2><p>1.每一位上的数值*位权</p>
<p>2.相加</p>
<h2 id="十进制到任意进制-2"><a href="#十进制到任意进制-2" class="headerlink" title="十进制到任意进制"></a>十进制到任意进制</h2><p>分为整数部分和小数部分的计算。</p>
<p>1.整数部分，采用除基取余法。将最后的余数倒过来写</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624175514934.png" alt="image-20240624175514934"></p>
<p>2.小数部分，采用乘基取整法。将整数顺序写。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624175618682.png" alt="image-20240624175618682"></p>
<h2 id="二进制、八进制、十六进制的相互转换-2"><a href="#二进制、八进制、十六进制的相互转换-2" class="headerlink" title="二进制、八进制、十六进制的相互转换"></a>二进制、八进制、十六进制的相互转换</h2><h3 id="1-二进制到八进制、十六进制-2"><a href="#1-二进制到八进制、十六进制-2" class="headerlink" title="1.二进制到八进制、十六进制"></a>1.二进制到八进制、十六进制</h3><p>就是三位一组、四位一组</p>
<h3 id="2、十六进制到八进制-2"><a href="#2、十六进制到八进制-2" class="headerlink" title="2、十六进制到八进制"></a>2、十六进制到八进制</h3><p>可以把十六进制转换成二进制，再转换成八进制。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.真值</p>
<p>符合人类习惯的数字</p>
<p>2.机器数</p>
<p>真值的机器化表示。</p>
<p>数制</p>
<h2 id="基本概念-3"><a href="#基本概念-3" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="1-基数-3"><a href="#1-基数-3" class="headerlink" title="1.基数"></a>1.基数</h3><h3 id="2-位权-3"><a href="#2-位权-3" class="headerlink" title="2.位权"></a>2.位权</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624174902801.png" alt="image-20240624174902801"></p>
<h2 id="任意进制到十进制-3"><a href="#任意进制到十进制-3" class="headerlink" title="任意进制到十进制"></a>任意进制到十进制</h2><p>1.每一位上的数值*位权</p>
<p>2.相加</p>
<h2 id="十进制到任意进制-3"><a href="#十进制到任意进制-3" class="headerlink" title="十进制到任意进制"></a>十进制到任意进制</h2><p>分为整数部分和小数部分的计算。</p>
<p>1.整数部分，采用除基取余法。将最后的余数倒过来写</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624175514934.png" alt="image-20240624175514934"></p>
<p>2.小数部分，采用乘基取整法。将整数顺序写。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240624175618682.png" alt="image-20240624175618682"></p>
<h2 id="二进制、八进制、十六进制的相互转换-3"><a href="#二进制、八进制、十六进制的相互转换-3" class="headerlink" title="二进制、八进制、十六进制的相互转换"></a>二进制、八进制、十六进制的相互转换</h2><h3 id="1-二进制到八进制、十六进制-3"><a href="#1-二进制到八进制、十六进制-3" class="headerlink" title="1.二进制到八进制、十六进制"></a>1.二进制到八进制、十六进制</h3><p>就是三位一组、四位一组</p>
<h3 id="2、十六进制到八进制-3"><a href="#2、十六进制到八进制-3" class="headerlink" title="2、十六进制到八进制"></a>2、十六进制到八进制</h3><p>可以把十六进制转换成二进制，再转换成八进制。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.真值</p>
<p>符合人类习惯的数字</p>
<p>2.机器数</p>
<p>真值的机器化表示。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>选择语句的机器级表示</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E9%80%89%E6%8B%A9%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%9C%BA%E5%99%A8%E7%BA%A7%E8%A1%A8%E7%A4%BA/</url>
    <content><![CDATA[<h1 id="选择语句的机器级表示"><a href="#选择语句的机器级表示" class="headerlink" title="选择语句的机器级表示"></a>选择语句的机器级表示</h1><h2 id="1-无条件转移指令"><a href="#1-无条件转移指令" class="headerlink" title="1.无条件转移指令"></a>1.无条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135907562.png" alt="image-20240629135907562"></p>
<h2 id="2-条件转移指令"><a href="#2-条件转移指令" class="headerlink" title="2.条件转移指令"></a>2.条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135952298.png" alt="image-20240629135952298"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-cmp指令的底层原理"><a href="#1-cmp指令的底层原理" class="headerlink" title="1.cmp指令的底层原理"></a>1.cmp指令的底层原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140027586.png" alt="image-20240629140027586">表示</p>
<h2 id="1-无条件转移指令-1"><a href="#1-无条件转移指令-1" class="headerlink" title="1.无条件转移指令"></a>1.无条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135907562.png" alt="image-20240629135907562"></p>
<h2 id="2-条件转移指令-1"><a href="#2-条件转移指令-1" class="headerlink" title="2.条件转移指令"></a>2.条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135952298.png" alt="image-20240629135952298"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-cmp指令的底层原理-1"><a href="#1-cmp指令的底层原理-1" class="headerlink" title="1.cmp指令的底层原理"></a>1.cmp指令的底层原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140027586.png" alt="image-20240629140027586"># 选择语句的机器级表示</p>
<h2 id="1-无条件转移指令-2"><a href="#1-无条件转移指令-2" class="headerlink" title="1.无条件转移指令"></a>1.无条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135907562.png" alt="image-20240629135907562"></p>
<h2 id="2-条件转移指令-2"><a href="#2-条件转移指令-2" class="headerlink" title="2.条件转移指令"></a>2.条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135952298.png" alt="image-20240629135952298"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-cmp指令的底层原理-2"><a href="#1-cmp指令的底层原理-2" class="headerlink" title="1.cmp指令的底层原理"></a>1.cmp指令的底层原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140027586.png" alt="image-20240629140027586">表示</p>
<h2 id="1-无条件转移指令-3"><a href="#1-无条件转移指令-3" class="headerlink" title="1.无条件转移指令"></a>1.无条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135907562.png" alt="image-20240629135907562"></p>
<h2 id="2-条件转移指令-3"><a href="#2-条件转移指令-3" class="headerlink" title="2.条件转移指令"></a>2.条件转移指令</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135952298.png" alt="image-20240629135952298"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-cmp指令的底层原理-3"><a href="#1-cmp指令的底层原理-3" class="headerlink" title="1.cmp指令的底层原理"></a>1.cmp指令的底层原理</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629140027586.png" alt="image-20240629140027586"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>页式存储器</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E9%A1%B5%E5%BC%8F%E5%AD%98%E5%82%A8%E5%99%A8/</url>
    <content><![CDATA[<h1 id="页式存储器"><a href="#页式存储器" class="headerlink" title="页式存储器"></a>页式存储器</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>页式存储器是一种计算机内存管理方案，将物理内存和虚拟内存划分为大小固定的块，称为页和页框，通过页表实现虚拟地址到物理地址的映射，旨在提高内存利用率和管理效率。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-页（Page）"><a href="#1-页（Page）" class="headerlink" title="1.页（Page）"></a>1.页（Page）</h3><p>虚拟内存中的固定大小的块。</p>
<h3 id="2-页框（Page-Frame）"><a href="#2-页框（Page-Frame）" class="headerlink" title="2.页框（Page Frame）"></a>2.页框（Page Frame）</h3><p>物理内存中的固定大小的块，与页一一对应。</p>
<h3 id="3-页表（Page-Table）"><a href="#3-页表（Page-Table）" class="headerlink" title="3.页表（Page Table）"></a>3.页表（Page Table）</h3><p>存储页和页框映射关系的数据结构。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628112227812.png" alt="image-20240628112227812"></p>
<h3 id="4-页表项（Page-Table-Entry-PTE）"><a href="#4-页表项（Page-Table-Entry-PTE）" class="headerlink" title="4.页表项（Page Table Entry, PTE）"></a>4.页表项（Page Table Entry, PTE）</h3><p>页表中的每一项，包含虚拟页到物理页框的映射信息。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单级页表"><a href="#1-单级页表" class="headerlink" title="1.单级页表"></a>1.单级页表</h3><p>单一层次结构的页表，每个虚拟地址直接映射到一个物理地址。</p>
<h3 id="2-多级页表"><a href="#2-多级页表" class="headerlink" title="2.多级页表"></a>2.多级页表</h3><p>多层次结构的页表，将页表分成多个级别，适用于大规模内存管理。</p>
<h3 id="3-反向页表"><a href="#3-反向页表" class="headerlink" title="3.反向页表"></a>3.反向页表</h3><p>通过物理地址查找虚拟地址的结构，适用于大型系统。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-单级页表-1"><a href="#1-单级页表-1" class="headerlink" title="1.单级页表"></a>1.单级页表</h3><p>简单的页表结构，适用于小规模内存管理。</p>
<h3 id="2-多级页表-1"><a href="#2-多级页表-1" class="headerlink" title="2.多级页表"></a>2.多级页表</h3><p>适用于大规模内存管理，减少页表占用的内存空间。</p>
<h3 id="3-反向页表-1"><a href="#3-反向页表-1" class="headerlink" title="3.反向页表"></a>3.反向页表</h3><p>用于大型系统，提高地址映射效率。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.地址转换：通过页表实现虚拟地址到物理地址的转换。<br>2.内存保护：每个页可以有独立的访问权限，增强内存保护。<br>3.内存利用率：通过分页机制，提高内存利用率，减少内存碎片。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628112152522.png" alt="image-20240628112152522"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628112659447.png" alt="image-20240628112659447"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.页</p>
<p>是虚拟内存管理中将内存划分为固定大小块的基本单位。每个页在内存中的大小相同，通过页表映射到物理内存中的页框（Page Frame）。</p>
<p>2.实地址与虚地址</p>
<p>3.快表（Translation Lookaside Buffer，TLB）</p>
<p>储器</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>页式存储器是一种计算机内存管理方案，将物理内存和虚拟内存划分为大小固定的块，称为页和页框，通过页表实现虚拟地址到物理地址的映射，旨在提高内存利用率和管理效率。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-页（Page）-1"><a href="#1-页（Page）-1" class="headerlink" title="1.页（Page）"></a>1.页（Page）</h3><p>虚拟内存中的固定大小的块。</p>
<h3 id="2-页框（Page-Frame）-1"><a href="#2-页框（Page-Frame）-1" class="headerlink" title="2.页框（Page Frame）"></a>2.页框（Page Frame）</h3><p>物理内存中的固定大小的块，与页一一对应。</p>
<h3 id="3-页表（Page-Table）-1"><a href="#3-页表（Page-Table）-1" class="headerlink" title="3.页表（Page Table）"></a>3.页表（Page Table）</h3><p>存储页和页框映射关系的数据结构。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628112227812.png" alt="image-20240628112227812"></p>
<h3 id="4-页表项（Page-Table-Entry-PTE）-1"><a href="#4-页表项（Page-Table-Entry-PTE）-1" class="headerlink" title="4.页表项（Page Table Entry, PTE）"></a>4.页表项（Page Table Entry, PTE）</h3><p>页表中的每一项，包含虚拟页到物理页框的映射信息。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单级页表-2"><a href="#1-单级页表-2" class="headerlink" title="1.单级页表"></a>1.单级页表</h3><p>单一层次结构的页表，每个虚拟地址直接映射到一个物理地址。</p>
<h3 id="2-多级页表-2"><a href="#2-多级页表-2" class="headerlink" title="2.多级页表"></a>2.多级页表</h3><p>多层次结构的页表，将页表分成多个级别，适用于大规模内存管理。</p>
<h3 id="3-反向页表-2"><a href="#3-反向页表-2" class="headerlink" title="3.反向页表"></a>3.反向页表</h3><p>通过物理地址查找虚拟地址的结构，适用于大型系统。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-单级页表-3"><a href="#1-单级页表-3" class="headerlink" title="1.单级页表"></a>1.单级页表</h3><p>简单的页表结构，适用于小规模内存管理。</p>
<h3 id="2-多级页表-3"><a href="#2-多级页表-3" class="headerlink" title="2.多级页表"></a>2.多级页表</h3><p>适用于大规模内存管理，减少页表占用的内存空间。</p>
<h3 id="3-反向页表-3"><a href="#3-反向页表-3" class="headerlink" title="3.反向页表"></a>3.反向页表</h3><p>用于大型系统，提高地址映射效率。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.地址转换：通过页表实现虚拟地址到物理地址的转换。<br>2.内存保护：每个页可以有独立的访问权限，增强内存保护。<br>3.内存利用率：通过分页机制，提高内存利用率，减少内存碎片。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628112152522.png" alt="image-20240628112152522"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628112659447.png" alt="image-20240628112659447"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.页</p>
<p>是虚拟内存管理中将内存划分为固定大小块的基本单位。每个页在内存中的大小相同，通过页表映射到物理内存中的页框（Page Frame）。</p>
<p>2.实地址与虚地址</p>
<p>3.快表（Translation Lookaside Buffer，TLB）# 页式存储器</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>页式存储器是一种计算机内存管理方案，将物理内存和虚拟内存划分为大小固定的块，称为页和页框，通过页表实现虚拟地址到物理地址的映射，旨在提高内存利用率和管理效率。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-页（Page）-2"><a href="#1-页（Page）-2" class="headerlink" title="1.页（Page）"></a>1.页（Page）</h3><p>虚拟内存中的固定大小的块。</p>
<h3 id="2-页框（Page-Frame）-2"><a href="#2-页框（Page-Frame）-2" class="headerlink" title="2.页框（Page Frame）"></a>2.页框（Page Frame）</h3><p>物理内存中的固定大小的块，与页一一对应。</p>
<h3 id="3-页表（Page-Table）-2"><a href="#3-页表（Page-Table）-2" class="headerlink" title="3.页表（Page Table）"></a>3.页表（Page Table）</h3><p>存储页和页框映射关系的数据结构。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628112227812.png" alt="image-20240628112227812"></p>
<h3 id="4-页表项（Page-Table-Entry-PTE）-2"><a href="#4-页表项（Page-Table-Entry-PTE）-2" class="headerlink" title="4.页表项（Page Table Entry, PTE）"></a>4.页表项（Page Table Entry, PTE）</h3><p>页表中的每一项，包含虚拟页到物理页框的映射信息。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单级页表-4"><a href="#1-单级页表-4" class="headerlink" title="1.单级页表"></a>1.单级页表</h3><p>单一层次结构的页表，每个虚拟地址直接映射到一个物理地址。</p>
<h3 id="2-多级页表-4"><a href="#2-多级页表-4" class="headerlink" title="2.多级页表"></a>2.多级页表</h3><p>多层次结构的页表，将页表分成多个级别，适用于大规模内存管理。</p>
<h3 id="3-反向页表-4"><a href="#3-反向页表-4" class="headerlink" title="3.反向页表"></a>3.反向页表</h3><p>通过物理地址查找虚拟地址的结构，适用于大型系统。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-单级页表-5"><a href="#1-单级页表-5" class="headerlink" title="1.单级页表"></a>1.单级页表</h3><p>简单的页表结构，适用于小规模内存管理。</p>
<h3 id="2-多级页表-5"><a href="#2-多级页表-5" class="headerlink" title="2.多级页表"></a>2.多级页表</h3><p>适用于大规模内存管理，减少页表占用的内存空间。</p>
<h3 id="3-反向页表-5"><a href="#3-反向页表-5" class="headerlink" title="3.反向页表"></a>3.反向页表</h3><p>用于大型系统，提高地址映射效率。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.地址转换：通过页表实现虚拟地址到物理地址的转换。<br>2.内存保护：每个页可以有独立的访问权限，增强内存保护。<br>3.内存利用率：通过分页机制，提高内存利用率，减少内存碎片。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628112152522.png" alt="image-20240628112152522"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628112659447.png" alt="image-20240628112659447"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.页</p>
<p>是虚拟内存管理中将内存划分为固定大小块的基本单位。每个页在内存中的大小相同，通过页表映射到物理内存中的页框（Page Frame）。</p>
<p>2.实地址与虚地址</p>
<p>3.快表（Translation Lookaside Buffer，TLB）</p>
<p>储器</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>页式存储器是一种计算机内存管理方案，将物理内存和虚拟内存划分为大小固定的块，称为页和页框，通过页表实现虚拟地址到物理地址的映射，旨在提高内存利用率和管理效率。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-页（Page）-3"><a href="#1-页（Page）-3" class="headerlink" title="1.页（Page）"></a>1.页（Page）</h3><p>虚拟内存中的固定大小的块。</p>
<h3 id="2-页框（Page-Frame）-3"><a href="#2-页框（Page-Frame）-3" class="headerlink" title="2.页框（Page Frame）"></a>2.页框（Page Frame）</h3><p>物理内存中的固定大小的块，与页一一对应。</p>
<h3 id="3-页表（Page-Table）-3"><a href="#3-页表（Page-Table）-3" class="headerlink" title="3.页表（Page Table）"></a>3.页表（Page Table）</h3><p>存储页和页框映射关系的数据结构。</p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628112227812.png" alt="image-20240628112227812"></p>
<h3 id="4-页表项（Page-Table-Entry-PTE）-3"><a href="#4-页表项（Page-Table-Entry-PTE）-3" class="headerlink" title="4.页表项（Page Table Entry, PTE）"></a>4.页表项（Page Table Entry, PTE）</h3><p>页表中的每一项，包含虚拟页到物理页框的映射信息。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-单级页表-6"><a href="#1-单级页表-6" class="headerlink" title="1.单级页表"></a>1.单级页表</h3><p>单一层次结构的页表，每个虚拟地址直接映射到一个物理地址。</p>
<h3 id="2-多级页表-6"><a href="#2-多级页表-6" class="headerlink" title="2.多级页表"></a>2.多级页表</h3><p>多层次结构的页表，将页表分成多个级别，适用于大规模内存管理。</p>
<h3 id="3-反向页表-6"><a href="#3-反向页表-6" class="headerlink" title="3.反向页表"></a>3.反向页表</h3><p>通过物理地址查找虚拟地址的结构，适用于大型系统。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-单级页表-7"><a href="#1-单级页表-7" class="headerlink" title="1.单级页表"></a>1.单级页表</h3><p>简单的页表结构，适用于小规模内存管理。</p>
<h3 id="2-多级页表-7"><a href="#2-多级页表-7" class="headerlink" title="2.多级页表"></a>2.多级页表</h3><p>适用于大规模内存管理，减少页表占用的内存空间。</p>
<h3 id="3-反向页表-7"><a href="#3-反向页表-7" class="headerlink" title="3.反向页表"></a>3.反向页表</h3><p>用于大型系统，提高地址映射效率。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.地址转换：通过页表实现虚拟地址到物理地址的转换。<br>2.内存保护：每个页可以有独立的访问权限，增强内存保护。<br>3.内存利用率：通过分页机制，提高内存利用率，减少内存碎片。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628112152522.png" alt="image-20240628112152522"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240628112659447.png" alt="image-20240628112659447"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.页</p>
<p>是虚拟内存管理中将内存划分为固定大小块的基本单位。每个页在内存中的大小相同，通过页表映射到物理内存中的页框（Page Frame）。</p>
<p>2.实地址与虚地址</p>
<p>3.快表（Translation Lookaside Buffer，TLB）</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>高级语言和机器级代码的对应</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80%E5%92%8C%E6%9C%BA%E5%99%A8%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%9A%84%E5%AF%B9%E5%BA%94/</url>
    <content><![CDATA[<h1 id="高级语言和机器级代码的对应"><a href="#高级语言和机器级代码的对应" class="headerlink" title="高级语言和机器级代码的对应"></a>高级语言和机器级代码的对应</h1><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135118077.png" alt="image-20240629135118077"></p>
<h2 id="x86架构"><a href="#x86架构" class="headerlink" title="x86架构"></a>x86架构</h2><h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135203567.png" alt="image-20240629135203567"></p>
<h3 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135303321.png" alt="image-20240629135303321"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135318532.png" alt="image-20240629135318532"></p>
<p><img src="../TyporaImage/计算机组成原理图片/image-20240629135248133.png" alt="image-20240629135248133"  />对应</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135118077.png" alt="image-20240629135118077"></p>
<h2 id="x86架构-1"><a href="#x86架构-1" class="headerlink" title="x86架构"></a>x86架构</h2><h3 id="指令-1"><a href="#指令-1" class="headerlink" title="指令"></a>指令</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135203567.png" alt="image-20240629135203567"></p>
<h3 id="寄存器-1"><a href="#寄存器-1" class="headerlink" title="寄存器"></a>寄存器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135303321.png" alt="image-20240629135303321"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135318532.png" alt="image-20240629135318532"></p>
<p><img src="../TyporaImage/计算机组成原理图片/image-20240629135248133.png" alt="image-20240629135248133"  /># 高级语言和机器级代码的对应</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135118077.png" alt="image-20240629135118077"></p>
<h2 id="x86架构-2"><a href="#x86架构-2" class="headerlink" title="x86架构"></a>x86架构</h2><h3 id="指令-2"><a href="#指令-2" class="headerlink" title="指令"></a>指令</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135203567.png" alt="image-20240629135203567"></p>
<h3 id="寄存器-2"><a href="#寄存器-2" class="headerlink" title="寄存器"></a>寄存器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135303321.png" alt="image-20240629135303321"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135318532.png" alt="image-20240629135318532"></p>
<p><img src="../TyporaImage/计算机组成原理图片/image-20240629135248133.png" alt="image-20240629135248133"  />对应</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135118077.png" alt="image-20240629135118077"></p>
<h2 id="x86架构-3"><a href="#x86架构-3" class="headerlink" title="x86架构"></a>x86架构</h2><h3 id="指令-3"><a href="#指令-3" class="headerlink" title="指令"></a>指令</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135203567.png" alt="image-20240629135203567"></p>
<h3 id="寄存器-3"><a href="#寄存器-3" class="headerlink" title="寄存器"></a>寄存器</h3><p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135303321.png" alt="image-20240629135303321"></p>
<p><img src="/../TyporaImage/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%9B%BE%E7%89%87/image-20240629135318532.png" alt="image-20240629135318532"></p>
<img src="../TyporaImage/计算机组成原理图片/image-20240629135248133.png" alt="image-20240629135248133"  />]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>5层参考模型</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/5%E5%B1%82%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="5层参考模型"><a href="#5层参考模型" class="headerlink" title="5层参考模型"></a>5层参考模型</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.应用层</p>
<p>2.传输层</p>
<p>3.网络层</p>
<p>4.数据链路层</p>
<p>5.物理层</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240603204208075.png" alt="image-20240603204208075">模型</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.应用层</p>
<p>2.传输层</p>
<p>3.网络层</p>
<p>4.数据链路层</p>
<p>5.物理层</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240603204208075.png" alt="image-20240603204208075"># 5层参考模型</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.应用层</p>
<p>2.传输层</p>
<p>3.网络层</p>
<p>4.数据链路层</p>
<p>5.物理层</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240603204208075.png" alt="image-20240603204208075">模型</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.应用层</p>
<p>2.传输层</p>
<p>3.网络层</p>
<p>4.数据链路层</p>
<p>5.物理层</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240603204208075.png" alt="image-20240603204208075"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>ALOHA协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/ALOHA%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="ALOHA协议"><a href="#ALOHA协议" class="headerlink" title="ALOHA协议"></a>ALOHA协议</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.纯ALOHA协议</p>
<p>2.时隙ALOHA协议</p>
<h1 id="纯ALOHA协议"><a href="#纯ALOHA协议" class="headerlink" title="纯ALOHA协议"></a>纯ALOHA协议</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>不监听信道，不按时间槽发送，随机发送。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613175259934.png" alt="image-20240613175259934"></p>
<h1 id="时隙ALOHA协议"><a href="#时隙ALOHA协议" class="headerlink" title="时隙ALOHA协议"></a>时隙ALOHA协议</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>将时间分成若干个时间片，所有用户在时间片开始时刻接入网络信道，若发生冲突，则必须等到下一个时间片开始时刻再发送。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613175459218.png" alt="image-20240613175459218"></p>
<h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p>1.纯ALOHA协议比时隙版吞吐量更低，效率更低。</p>
<p>2.纯ALOHA协议，想法就发；但是时隙版只能在时间片的开始发送。<br>协议</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.纯ALOHA协议</p>
<p>2.时隙ALOHA协议</p>
<h1 id="纯ALOHA协议-1"><a href="#纯ALOHA协议-1" class="headerlink" title="纯ALOHA协议"></a>纯ALOHA协议</h1><h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>不监听信道，不按时间槽发送，随机发送。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613175259934.png" alt="image-20240613175259934"></p>
<h1 id="时隙ALOHA协议-1"><a href="#时隙ALOHA协议-1" class="headerlink" title="时隙ALOHA协议"></a>时隙ALOHA协议</h1><h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>将时间分成若干个时间片，所有用户在时间片开始时刻接入网络信道，若发生冲突，则必须等到下一个时间片开始时刻再发送。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613175459218.png" alt="image-20240613175459218"></p>
<h2 id="对比-1"><a href="#对比-1" class="headerlink" title="对比"></a>对比</h2><p>1.纯ALOHA协议比时隙版吞吐量更低，效率更低。</p>
<p>2.纯ALOHA协议，想法就发；但是时隙版只能在时间片的开始发送。# ALOHA协议</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.纯ALOHA协议</p>
<p>2.时隙ALOHA协议</p>
<h1 id="纯ALOHA协议-2"><a href="#纯ALOHA协议-2" class="headerlink" title="纯ALOHA协议"></a>纯ALOHA协议</h1><h2 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h2><p>不监听信道，不按时间槽发送，随机发送。</p>
<h2 id="结构形式-4"><a href="#结构形式-4" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613175259934.png" alt="image-20240613175259934"></p>
<h1 id="时隙ALOHA协议-2"><a href="#时隙ALOHA协议-2" class="headerlink" title="时隙ALOHA协议"></a>时隙ALOHA协议</h1><h2 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h2><p>将时间分成若干个时间片，所有用户在时间片开始时刻接入网络信道，若发生冲突，则必须等到下一个时间片开始时刻再发送。</p>
<h2 id="结构形式-5"><a href="#结构形式-5" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613175459218.png" alt="image-20240613175459218"></p>
<h2 id="对比-2"><a href="#对比-2" class="headerlink" title="对比"></a>对比</h2><p>1.纯ALOHA协议比时隙版吞吐量更低，效率更低。</p>
<p>2.纯ALOHA协议，想法就发；但是时隙版只能在时间片的开始发送。<br>协议</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.纯ALOHA协议</p>
<p>2.时隙ALOHA协议</p>
<h1 id="纯ALOHA协议-3"><a href="#纯ALOHA协议-3" class="headerlink" title="纯ALOHA协议"></a>纯ALOHA协议</h1><h2 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h2><p>不监听信道，不按时间槽发送，随机发送。</p>
<h2 id="结构形式-6"><a href="#结构形式-6" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613175259934.png" alt="image-20240613175259934"></p>
<h1 id="时隙ALOHA协议-3"><a href="#时隙ALOHA协议-3" class="headerlink" title="时隙ALOHA协议"></a>时隙ALOHA协议</h1><h2 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h2><p>将时间分成若干个时间片，所有用户在时间片开始时刻接入网络信道，若发生冲突，则必须等到下一个时间片开始时刻再发送。</p>
<h2 id="结构形式-7"><a href="#结构形式-7" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613175459218.png" alt="image-20240613175459218"></p>
<h2 id="对比-3"><a href="#对比-3" class="headerlink" title="对比"></a>对比</h2><p>1.纯ALOHA协议比时隙版吞吐量更低，效率更低。</p>
<p>2.纯ALOHA协议，想法就发；但是时隙版只能在时间片的开始发送。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>ARP协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/ARP%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>地址解析协议（ARP，Address Resolution Protocol）是一个用于IPv4网络的通信协议，其主要功能是通过已知的IP地址获取对应的MAC地址（硬件地址），以实现网络设备间的数据帧传输。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.请求消息</p>
<p>ARP请求包含发送者的IP地址和MAC地址，以及目标设备的IP地址。</p>
<p>2.应答消息</p>
<p>ARP应答包含目标设备的IP地址和对应的MAC地址。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.ARP请求包</p>
<p>用于请求目标设备的MAC地址。</p>
<p>2.ARP应答包</p>
<p>用于回复请求并提供目标设备的MAC地址。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>ARP请求：广播给网络中所有设备，询问目标IP地址对应的MAC地址。<br>ARP应答：单播给请求者，提供目标IP地址对应的MAC地址。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.发送ARP请求</p>
<p>设备A需要与设备B通信时，先发送ARP请求，广播询问设备B的MAC地址。</p>
<p>2.接收ARP应答</p>
<p>设备B接收到ARP请求后，发送ARP应答，单播回复其MAC地址。</p>
<p>3.更新ARP缓存</p>
<p>设备A接收到ARP应答后，将IP-MAC映射结果缓存起来，以备后续通信使用。协议</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>地址解析协议（ARP，Address Resolution Protocol）是一个用于IPv4网络的通信协议，其主要功能是通过已知的IP地址获取对应的MAC地址（硬件地址），以实现网络设备间的数据帧传输。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.请求消息</p>
<p>ARP请求包含发送者的IP地址和MAC地址，以及目标设备的IP地址。</p>
<p>2.应答消息</p>
<p>ARP应答包含目标设备的IP地址和对应的MAC地址。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.ARP请求包</p>
<p>用于请求目标设备的MAC地址。</p>
<p>2.ARP应答包</p>
<p>用于回复请求并提供目标设备的MAC地址。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>ARP请求：广播给网络中所有设备，询问目标IP地址对应的MAC地址。<br>ARP应答：单播给请求者，提供目标IP地址对应的MAC地址。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.发送ARP请求</p>
<p>设备A需要与设备B通信时，先发送ARP请求，广播询问设备B的MAC地址。</p>
<p>2.接收ARP应答</p>
<p>设备B接收到ARP请求后，发送ARP应答，单播回复其MAC地址。</p>
<p>3.更新ARP缓存</p>
<p>设备A接收到ARP应答后，将IP-MAC映射结果缓存起来，以备后续通信使用。# ARP协议</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>地址解析协议（ARP，Address Resolution Protocol）是一个用于IPv4网络的通信协议，其主要功能是通过已知的IP地址获取对应的MAC地址（硬件地址），以实现网络设备间的数据帧传输。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.请求消息</p>
<p>ARP请求包含发送者的IP地址和MAC地址，以及目标设备的IP地址。</p>
<p>2.应答消息</p>
<p>ARP应答包含目标设备的IP地址和对应的MAC地址。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.ARP请求包</p>
<p>用于请求目标设备的MAC地址。</p>
<p>2.ARP应答包</p>
<p>用于回复请求并提供目标设备的MAC地址。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>ARP请求：广播给网络中所有设备，询问目标IP地址对应的MAC地址。<br>ARP应答：单播给请求者，提供目标IP地址对应的MAC地址。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.发送ARP请求</p>
<p>设备A需要与设备B通信时，先发送ARP请求，广播询问设备B的MAC地址。</p>
<p>2.接收ARP应答</p>
<p>设备B接收到ARP请求后，发送ARP应答，单播回复其MAC地址。</p>
<p>3.更新ARP缓存</p>
<p>设备A接收到ARP应答后，将IP-MAC映射结果缓存起来，以备后续通信使用。协议</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>地址解析协议（ARP，Address Resolution Protocol）是一个用于IPv4网络的通信协议，其主要功能是通过已知的IP地址获取对应的MAC地址（硬件地址），以实现网络设备间的数据帧传输。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.请求消息</p>
<p>ARP请求包含发送者的IP地址和MAC地址，以及目标设备的IP地址。</p>
<p>2.应答消息</p>
<p>ARP应答包含目标设备的IP地址和对应的MAC地址。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.ARP请求包</p>
<p>用于请求目标设备的MAC地址。</p>
<p>2.ARP应答包</p>
<p>用于回复请求并提供目标设备的MAC地址。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>ARP请求：广播给网络中所有设备，询问目标IP地址对应的MAC地址。<br>ARP应答：单播给请求者，提供目标IP地址对应的MAC地址。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.发送ARP请求</p>
<p>设备A需要与设备B通信时，先发送ARP请求，广播询问设备B的MAC地址。</p>
<p>2.接收ARP应答</p>
<p>设备B接收到ARP请求后，发送ARP应答，单播回复其MAC地址。</p>
<p>3.更新ARP缓存</p>
<p>设备A接收到ARP应答后，将IP-MAC映射结果缓存起来，以备后续通信使用。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>CSMA-CA协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/CSMA-CA%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="CA协议"><a href="#CA协议" class="headerlink" title="CA协议"></a>CA协议</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>载波监听多点接入&#x2F;碰撞避免协议。</p>
<h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p><img src="/../TyporaImage/image-20240617153539876.png" alt="image-20240617153539876"></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>为了无线局域网的正常运行。</p>
<p><img src="/../TyporaImage/image-20240617153435500.png" alt="image-20240617153435500"></p>
<h2 id="CD协议和CA协议的对比："><a href="#CD协议和CA协议的对比：" class="headerlink" title="CD协议和CA协议的对比："></a>CD协议和CA协议的对比：</h2><p><img src="/../TyporaImage/image-20240617153607717.png" alt="image-20240617153607717">协议</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>载波监听多点接入&#x2F;碰撞避免协议。</p>
<h2 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h2><p><img src="/../TyporaImage/image-20240617153539876.png" alt="image-20240617153539876"></p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>为了无线局域网的正常运行。</p>
<p><img src="/../TyporaImage/image-20240617153435500.png" alt="image-20240617153435500"></p>
<h2 id="CD协议和CA协议的对比：-1"><a href="#CD协议和CA协议的对比：-1" class="headerlink" title="CD协议和CA协议的对比："></a>CD协议和CA协议的对比：</h2><p><img src="/../TyporaImage/image-20240617153607717.png" alt="image-20240617153607717"># CA协议</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>载波监听多点接入&#x2F;碰撞避免协议。</p>
<h2 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h2><p><img src="/../TyporaImage/image-20240617153539876.png" alt="image-20240617153539876"></p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>为了无线局域网的正常运行。</p>
<p><img src="/../TyporaImage/image-20240617153435500.png" alt="image-20240617153435500"></p>
<h2 id="CD协议和CA协议的对比：-2"><a href="#CD协议和CA协议的对比：-2" class="headerlink" title="CD协议和CA协议的对比："></a>CD协议和CA协议的对比：</h2><p><img src="/../TyporaImage/image-20240617153607717.png" alt="image-20240617153607717">协议</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>载波监听多点接入&#x2F;碰撞避免协议。</p>
<h2 id="使用方式-3"><a href="#使用方式-3" class="headerlink" title="使用方式"></a>使用方式</h2><p><img src="/../TyporaImage/image-20240617153539876.png" alt="image-20240617153539876"></p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>为了无线局域网的正常运行。</p>
<p><img src="/../TyporaImage/image-20240617153435500.png" alt="image-20240617153435500"></p>
<h2 id="CD协议和CA协议的对比：-3"><a href="#CD协议和CA协议的对比：-3" class="headerlink" title="CD协议和CA协议的对比："></a>CD协议和CA协议的对比：</h2><p><img src="/../TyporaImage/image-20240617153607717.png" alt="image-20240617153607717"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>CSMA-CD协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/CSMA-CD%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="CSMA-CD协议"><a href="#CSMA-CD协议" class="headerlink" title="CSMA-CD协议"></a>CSMA-CD协议</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="确定碰撞后的时机："><a href="#确定碰撞后的时机：" class="headerlink" title="确定碰撞后的时机："></a>确定碰撞后的时机：</h3><p>阶段二进制指数规避算法</p>
<p><img src="/../TyporaImage/image-20240617152959951.png" alt="image-20240617152959951"></p>
<h3 id="最小帧长的确定："><a href="#最小帧长的确定：" class="headerlink" title="最小帧长的确定："></a>最小帧长的确定：</h3><p><img src="/../TyporaImage/image-20240617153218920.png" alt="image-20240617153218920"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>CS:</p>
<p>载波监听，每一个站在发送数据之前以及发送数据时都要检测一下总线上是否有其他计算机在发送数据。</p>
<p>MA：</p>
<p>多点接入。表示许多计算机以多点接入的方式连接在一个总线上</p>
<p>CD：</p>
<p>碰撞检测（冲突检测），“边发送边监听”，适配器边发送数据边检测信道上电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。</p>
<p>协议</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="确定碰撞后的时机：-1"><a href="#确定碰撞后的时机：-1" class="headerlink" title="确定碰撞后的时机："></a>确定碰撞后的时机：</h3><p>阶段二进制指数规避算法</p>
<p><img src="/../TyporaImage/image-20240617152959951.png" alt="image-20240617152959951"></p>
<h3 id="最小帧长的确定：-1"><a href="#最小帧长的确定：-1" class="headerlink" title="最小帧长的确定："></a>最小帧长的确定：</h3><p><img src="/../TyporaImage/image-20240617153218920.png" alt="image-20240617153218920"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>CS:</p>
<p>载波监听，每一个站在发送数据之前以及发送数据时都要检测一下总线上是否有其他计算机在发送数据。</p>
<p>MA：</p>
<p>多点接入。表示许多计算机以多点接入的方式连接在一个总线上</p>
<p>CD：</p>
<p>碰撞检测（冲突检测），“边发送边监听”，适配器边发送数据边检测信道上电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。# CSMA-CD协议</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="确定碰撞后的时机：-2"><a href="#确定碰撞后的时机：-2" class="headerlink" title="确定碰撞后的时机："></a>确定碰撞后的时机：</h3><p>阶段二进制指数规避算法</p>
<p><img src="/../TyporaImage/image-20240617152959951.png" alt="image-20240617152959951"></p>
<h3 id="最小帧长的确定：-2"><a href="#最小帧长的确定：-2" class="headerlink" title="最小帧长的确定："></a>最小帧长的确定：</h3><p><img src="/../TyporaImage/image-20240617153218920.png" alt="image-20240617153218920"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>CS:</p>
<p>载波监听，每一个站在发送数据之前以及发送数据时都要检测一下总线上是否有其他计算机在发送数据。</p>
<p>MA：</p>
<p>多点接入。表示许多计算机以多点接入的方式连接在一个总线上</p>
<p>CD：</p>
<p>碰撞检测（冲突检测），“边发送边监听”，适配器边发送数据边检测信道上电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。</p>
<p>协议</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="确定碰撞后的时机：-3"><a href="#确定碰撞后的时机：-3" class="headerlink" title="确定碰撞后的时机："></a>确定碰撞后的时机：</h3><p>阶段二进制指数规避算法</p>
<p><img src="/../TyporaImage/image-20240617152959951.png" alt="image-20240617152959951"></p>
<h3 id="最小帧长的确定：-3"><a href="#最小帧长的确定：-3" class="headerlink" title="最小帧长的确定："></a>最小帧长的确定：</h3><p><img src="/../TyporaImage/image-20240617153218920.png" alt="image-20240617153218920"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>CS:</p>
<p>载波监听，每一个站在发送数据之前以及发送数据时都要检测一下总线上是否有其他计算机在发送数据。</p>
<p>MA：</p>
<p>多点接入。表示许多计算机以多点接入的方式连接在一个总线上</p>
<p>CD：</p>
<p>碰撞检测（冲突检测），“边发送边监听”，适配器边发送数据边检测信道上电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>BGP协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/BGP%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="BGP协议（应用层）"><a href="#BGP协议（应用层）" class="headerlink" title="BGP协议（应用层）"></a>BGP协议（应用层）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>BGP（Border Gateway Protocol，边界网关协议）是一种用于在互联网中交换路由信息的标准协议。它主要用于控制互联网中不同自治系统（AS）之间的路由选择。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-路由器"><a href="#1-路由器" class="headerlink" title="1.路由器"></a>1.路由器</h3><p>运行BGP协议的设备，负责与其他BGP路由器交换路由信息。</p>
<h3 id="2-BGP会话"><a href="#2-BGP会话" class="headerlink" title="2.BGP会话"></a>2.BGP会话</h3><p>建立在TCP连接上，用于交换路由信息。</p>
<h3 id="3-路由策略"><a href="#3-路由策略" class="headerlink" title="3.路由策略"></a>3.路由策略</h3><p>定义路由器如何选择和传播路由信息的规则和配置。</p>
<h3 id="4-路由信息库（RIB）"><a href="#4-路由信息库（RIB）" class="headerlink" title="4.路由信息库（RIB）"></a>4.路由信息库（RIB）</h3><p>存储BGP路由器已知的所有路由信息。</p>
<h3 id="5-BGP决策过程"><a href="#5-BGP决策过程" class="headerlink" title="5.BGP决策过程"></a>5.BGP决策过程</h3><p>决定最佳路径的算法，基于各种属性如AS路径长度、路由前缀长度等。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.BGP协议报文</p>
<p><img src="/../TyporaImage/image-20240622220139732.png" alt="image-20240622220139732"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-外部BGP（eBGP）"><a href="#1-外部BGP（eBGP）" class="headerlink" title="1.外部BGP（eBGP）"></a>1.外部BGP（eBGP）</h3><h3 id="2-内部BGP（iBGP）"><a href="#2-内部BGP（iBGP）" class="headerlink" title="2.内部BGP（iBGP）"></a>2.内部BGP（iBGP）</h3><h2 id="特征："><a href="#特征：" class="headerlink" title="特征："></a>特征：</h2><p>1.BGP是一种路径矢量协议，它不仅考虑网络拓扑结构，还考虑政策和策略。<br>2.BGP通过TCP连接传输路由信息，具有可靠性和安全性。<br>3.BGP支持复杂的路由策略和过滤规则，允许网络管理员细粒度地控制路由选择。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.BGP-4的四种报文</p>
<p><img src="/../TyporaImage/image-20240622220252826.png" alt="image-20240622220252826"></p>
<p>2.RIP、OSPF、BGP的对比</p>
<p><img src="/../TyporaImage/image-20240622220414783.png" alt="image-20240622220414783"></p>
<p><img src="/../TyporaImage/image-20240622220421165.png" alt="image-20240622220421165"><br>层）</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>BGP（Border Gateway Protocol，边界网关协议）是一种用于在互联网中交换路由信息的标准协议。它主要用于控制互联网中不同自治系统（AS）之间的路由选择。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-路由器-1"><a href="#1-路由器-1" class="headerlink" title="1.路由器"></a>1.路由器</h3><p>运行BGP协议的设备，负责与其他BGP路由器交换路由信息。</p>
<h3 id="2-BGP会话-1"><a href="#2-BGP会话-1" class="headerlink" title="2.BGP会话"></a>2.BGP会话</h3><p>建立在TCP连接上，用于交换路由信息。</p>
<h3 id="3-路由策略-1"><a href="#3-路由策略-1" class="headerlink" title="3.路由策略"></a>3.路由策略</h3><p>定义路由器如何选择和传播路由信息的规则和配置。</p>
<h3 id="4-路由信息库（RIB）-1"><a href="#4-路由信息库（RIB）-1" class="headerlink" title="4.路由信息库（RIB）"></a>4.路由信息库（RIB）</h3><p>存储BGP路由器已知的所有路由信息。</p>
<h3 id="5-BGP决策过程-1"><a href="#5-BGP决策过程-1" class="headerlink" title="5.BGP决策过程"></a>5.BGP决策过程</h3><p>决定最佳路径的算法，基于各种属性如AS路径长度、路由前缀长度等。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.BGP协议报文</p>
<p><img src="/../TyporaImage/image-20240622220139732.png" alt="image-20240622220139732"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-外部BGP（eBGP）-1"><a href="#1-外部BGP（eBGP）-1" class="headerlink" title="1.外部BGP（eBGP）"></a>1.外部BGP（eBGP）</h3><h3 id="2-内部BGP（iBGP）-1"><a href="#2-内部BGP（iBGP）-1" class="headerlink" title="2.内部BGP（iBGP）"></a>2.内部BGP（iBGP）</h3><h2 id="特征：-1"><a href="#特征：-1" class="headerlink" title="特征："></a>特征：</h2><p>1.BGP是一种路径矢量协议，它不仅考虑网络拓扑结构，还考虑政策和策略。<br>2.BGP通过TCP连接传输路由信息，具有可靠性和安全性。<br>3.BGP支持复杂的路由策略和过滤规则，允许网络管理员细粒度地控制路由选择。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.BGP-4的四种报文</p>
<p><img src="/../TyporaImage/image-20240622220252826.png" alt="image-20240622220252826"></p>
<p>2.RIP、OSPF、BGP的对比</p>
<p><img src="/../TyporaImage/image-20240622220414783.png" alt="image-20240622220414783"></p>
<p><img src="/../TyporaImage/image-20240622220421165.png" alt="image-20240622220421165"># BGP协议（应用层）</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>BGP（Border Gateway Protocol，边界网关协议）是一种用于在互联网中交换路由信息的标准协议。它主要用于控制互联网中不同自治系统（AS）之间的路由选择。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-路由器-2"><a href="#1-路由器-2" class="headerlink" title="1.路由器"></a>1.路由器</h3><p>运行BGP协议的设备，负责与其他BGP路由器交换路由信息。</p>
<h3 id="2-BGP会话-2"><a href="#2-BGP会话-2" class="headerlink" title="2.BGP会话"></a>2.BGP会话</h3><p>建立在TCP连接上，用于交换路由信息。</p>
<h3 id="3-路由策略-2"><a href="#3-路由策略-2" class="headerlink" title="3.路由策略"></a>3.路由策略</h3><p>定义路由器如何选择和传播路由信息的规则和配置。</p>
<h3 id="4-路由信息库（RIB）-2"><a href="#4-路由信息库（RIB）-2" class="headerlink" title="4.路由信息库（RIB）"></a>4.路由信息库（RIB）</h3><p>存储BGP路由器已知的所有路由信息。</p>
<h3 id="5-BGP决策过程-2"><a href="#5-BGP决策过程-2" class="headerlink" title="5.BGP决策过程"></a>5.BGP决策过程</h3><p>决定最佳路径的算法，基于各种属性如AS路径长度、路由前缀长度等。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.BGP协议报文</p>
<p><img src="/../TyporaImage/image-20240622220139732.png" alt="image-20240622220139732"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-外部BGP（eBGP）-2"><a href="#1-外部BGP（eBGP）-2" class="headerlink" title="1.外部BGP（eBGP）"></a>1.外部BGP（eBGP）</h3><h3 id="2-内部BGP（iBGP）-2"><a href="#2-内部BGP（iBGP）-2" class="headerlink" title="2.内部BGP（iBGP）"></a>2.内部BGP（iBGP）</h3><h2 id="特征：-2"><a href="#特征：-2" class="headerlink" title="特征："></a>特征：</h2><p>1.BGP是一种路径矢量协议，它不仅考虑网络拓扑结构，还考虑政策和策略。<br>2.BGP通过TCP连接传输路由信息，具有可靠性和安全性。<br>3.BGP支持复杂的路由策略和过滤规则，允许网络管理员细粒度地控制路由选择。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.BGP-4的四种报文</p>
<p><img src="/../TyporaImage/image-20240622220252826.png" alt="image-20240622220252826"></p>
<p>2.RIP、OSPF、BGP的对比</p>
<p><img src="/../TyporaImage/image-20240622220414783.png" alt="image-20240622220414783"></p>
<p><img src="/../TyporaImage/image-20240622220421165.png" alt="image-20240622220421165"><br>层）</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>BGP（Border Gateway Protocol，边界网关协议）是一种用于在互联网中交换路由信息的标准协议。它主要用于控制互联网中不同自治系统（AS）之间的路由选择。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-路由器-3"><a href="#1-路由器-3" class="headerlink" title="1.路由器"></a>1.路由器</h3><p>运行BGP协议的设备，负责与其他BGP路由器交换路由信息。</p>
<h3 id="2-BGP会话-3"><a href="#2-BGP会话-3" class="headerlink" title="2.BGP会话"></a>2.BGP会话</h3><p>建立在TCP连接上，用于交换路由信息。</p>
<h3 id="3-路由策略-3"><a href="#3-路由策略-3" class="headerlink" title="3.路由策略"></a>3.路由策略</h3><p>定义路由器如何选择和传播路由信息的规则和配置。</p>
<h3 id="4-路由信息库（RIB）-3"><a href="#4-路由信息库（RIB）-3" class="headerlink" title="4.路由信息库（RIB）"></a>4.路由信息库（RIB）</h3><p>存储BGP路由器已知的所有路由信息。</p>
<h3 id="5-BGP决策过程-3"><a href="#5-BGP决策过程-3" class="headerlink" title="5.BGP决策过程"></a>5.BGP决策过程</h3><p>决定最佳路径的算法，基于各种属性如AS路径长度、路由前缀长度等。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.BGP协议报文</p>
<p><img src="/../TyporaImage/image-20240622220139732.png" alt="image-20240622220139732"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-外部BGP（eBGP）-3"><a href="#1-外部BGP（eBGP）-3" class="headerlink" title="1.外部BGP（eBGP）"></a>1.外部BGP（eBGP）</h3><h3 id="2-内部BGP（iBGP）-3"><a href="#2-内部BGP（iBGP）-3" class="headerlink" title="2.内部BGP（iBGP）"></a>2.内部BGP（iBGP）</h3><h2 id="特征：-3"><a href="#特征：-3" class="headerlink" title="特征："></a>特征：</h2><p>1.BGP是一种路径矢量协议，它不仅考虑网络拓扑结构，还考虑政策和策略。<br>2.BGP通过TCP连接传输路由信息，具有可靠性和安全性。<br>3.BGP支持复杂的路由策略和过滤规则，允许网络管理员细粒度地控制路由选择。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.BGP-4的四种报文</p>
<p><img src="/../TyporaImage/image-20240622220252826.png" alt="image-20240622220252826"></p>
<p>2.RIP、OSPF、BGP的对比</p>
<p><img src="/../TyporaImage/image-20240622220414783.png" alt="image-20240622220414783"></p>
<p><img src="/../TyporaImage/image-20240622220421165.png" alt="image-20240622220421165"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>DHCP协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/DHCP%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="DHCP协议（应用层）"><a href="#DHCP协议（应用层）" class="headerlink" title="DHCP协议（应用层）"></a>DHCP协议（应用层）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>动态主机配置协议（DHCP，Dynamic Host Configuration Protocol）是一种网络管理协议，用于自动分配IP地址及其他网络配置信息（如子网掩码、网关、DNS服务器等）给网络中的设备，从而简化了网络管理员的配置工作。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.DHCP服务器：</p>
<p>负责管理和分配IP地址及其他网络配置参数。</p>
<p>2.DHCP客户端：</p>
<p>请求网络配置参数的设备。</p>
<p>3.DHCP中继代理：</p>
<p>转发客户端和服务器之间的DHCP消息，适用于不同子网之间的DHCP通信。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.DHCP发现（DHCP Discover）：客户端广播寻找可用的DHCP服务器。<br>2.DHCP提供（DHCP Offer）：DHCP服务器回应，分配一个可用的IP地址。<br>3.DHCP请求（DHCP Request）：客户端选择一个DHCP服务器并广播请求使用IP地址。<br>4.DHCP确认（DHCP Acknowledgment）：DHCP服务器确认IP地址的分配，客户端可以使用此地址。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.静态DHCP分配：预先配置每个设备的MAC地址与IP地址的映射，确保特定设备始终获得相同的IP地址。<br>2.动态DHCP分配：根据需要动态分配IP地址，租期结束后IP地址可被重新分配给其他设备。<br>3.自动DHCP分配：一次性分配IP地址，设备下次请求时仍会获得相同的IP地址。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.自动化</p>
<p>自动分配IP地址和网络配置参数，减少手动配置的复杂性。</p>
<p>2.灵活性</p>
<p>支持静态、动态和自动三种分配方式，适应不同网络需求。</p>
<p>3.集中管理</p>
<p>通过DHCP服务器集中管理网络配置，提高管理效率。</p>
<p>4.基于UDP 	</p>
<p>层）</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>动态主机配置协议（DHCP，Dynamic Host Configuration Protocol）是一种网络管理协议，用于自动分配IP地址及其他网络配置信息（如子网掩码、网关、DNS服务器等）给网络中的设备，从而简化了网络管理员的配置工作。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.DHCP服务器：</p>
<p>负责管理和分配IP地址及其他网络配置参数。</p>
<p>2.DHCP客户端：</p>
<p>请求网络配置参数的设备。</p>
<p>3.DHCP中继代理：</p>
<p>转发客户端和服务器之间的DHCP消息，适用于不同子网之间的DHCP通信。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.DHCP发现（DHCP Discover）：客户端广播寻找可用的DHCP服务器。<br>2.DHCP提供（DHCP Offer）：DHCP服务器回应，分配一个可用的IP地址。<br>3.DHCP请求（DHCP Request）：客户端选择一个DHCP服务器并广播请求使用IP地址。<br>4.DHCP确认（DHCP Acknowledgment）：DHCP服务器确认IP地址的分配，客户端可以使用此地址。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.静态DHCP分配：预先配置每个设备的MAC地址与IP地址的映射，确保特定设备始终获得相同的IP地址。<br>2.动态DHCP分配：根据需要动态分配IP地址，租期结束后IP地址可被重新分配给其他设备。<br>3.自动DHCP分配：一次性分配IP地址，设备下次请求时仍会获得相同的IP地址。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.自动化</p>
<p>自动分配IP地址和网络配置参数，减少手动配置的复杂性。</p>
<p>2.灵活性</p>
<p>支持静态、动态和自动三种分配方式，适应不同网络需求。</p>
<p>3.集中管理</p>
<p>通过DHCP服务器集中管理网络配置，提高管理效率。</p>
<p>4.基于UDP# DHCP协议（应用层）</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>动态主机配置协议（DHCP，Dynamic Host Configuration Protocol）是一种网络管理协议，用于自动分配IP地址及其他网络配置信息（如子网掩码、网关、DNS服务器等）给网络中的设备，从而简化了网络管理员的配置工作。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.DHCP服务器：</p>
<p>负责管理和分配IP地址及其他网络配置参数。</p>
<p>2.DHCP客户端：</p>
<p>请求网络配置参数的设备。</p>
<p>3.DHCP中继代理：</p>
<p>转发客户端和服务器之间的DHCP消息，适用于不同子网之间的DHCP通信。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.DHCP发现（DHCP Discover）：客户端广播寻找可用的DHCP服务器。<br>2.DHCP提供（DHCP Offer）：DHCP服务器回应，分配一个可用的IP地址。<br>3.DHCP请求（DHCP Request）：客户端选择一个DHCP服务器并广播请求使用IP地址。<br>4.DHCP确认（DHCP Acknowledgment）：DHCP服务器确认IP地址的分配，客户端可以使用此地址。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.静态DHCP分配：预先配置每个设备的MAC地址与IP地址的映射，确保特定设备始终获得相同的IP地址。<br>2.动态DHCP分配：根据需要动态分配IP地址，租期结束后IP地址可被重新分配给其他设备。<br>3.自动DHCP分配：一次性分配IP地址，设备下次请求时仍会获得相同的IP地址。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.自动化</p>
<p>自动分配IP地址和网络配置参数，减少手动配置的复杂性。</p>
<p>2.灵活性</p>
<p>支持静态、动态和自动三种分配方式，适应不同网络需求。</p>
<p>3.集中管理</p>
<p>通过DHCP服务器集中管理网络配置，提高管理效率。</p>
<p>4.基于UDP 	</p>
<p>层）</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>动态主机配置协议（DHCP，Dynamic Host Configuration Protocol）是一种网络管理协议，用于自动分配IP地址及其他网络配置信息（如子网掩码、网关、DNS服务器等）给网络中的设备，从而简化了网络管理员的配置工作。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.DHCP服务器：</p>
<p>负责管理和分配IP地址及其他网络配置参数。</p>
<p>2.DHCP客户端：</p>
<p>请求网络配置参数的设备。</p>
<p>3.DHCP中继代理：</p>
<p>转发客户端和服务器之间的DHCP消息，适用于不同子网之间的DHCP通信。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.DHCP发现（DHCP Discover）：客户端广播寻找可用的DHCP服务器。<br>2.DHCP提供（DHCP Offer）：DHCP服务器回应，分配一个可用的IP地址。<br>3.DHCP请求（DHCP Request）：客户端选择一个DHCP服务器并广播请求使用IP地址。<br>4.DHCP确认（DHCP Acknowledgment）：DHCP服务器确认IP地址的分配，客户端可以使用此地址。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.静态DHCP分配：预先配置每个设备的MAC地址与IP地址的映射，确保特定设备始终获得相同的IP地址。<br>2.动态DHCP分配：根据需要动态分配IP地址，租期结束后IP地址可被重新分配给其他设备。<br>3.自动DHCP分配：一次性分配IP地址，设备下次请求时仍会获得相同的IP地址。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.自动化</p>
<p>自动分配IP地址和网络配置参数，减少手动配置的复杂性。</p>
<p>2.灵活性</p>
<p>支持静态、动态和自动三种分配方式，适应不同网络需求。</p>
<p>3.集中管理</p>
<p>通过DHCP服务器集中管理网络配置，提高管理效率。</p>
<p>4.基于UDP</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>DNS系统</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/DNS%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="DNS系统"><a href="#DNS系统" class="headerlink" title="DNS系统"></a>DNS系统</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>域名系统（Domain Name System，DNS）是一个分布式数据库，用于将人类可读的域名（如 <a href="http://www.example.com)转换为机器可读的ip地址(如/">www.example.com）转换为机器可读的IP地址（如</a> 192.0.2.1），以便网络上的设备能够相互通信。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.域名</p>
<p>用于识别互联网上的设备和服务的人类可读名称。</p>
<p><img src="/../TyporaImage/image-20240623145429533.png" alt="image-20240623145429533"></p>
<p>2.IP地址</p>
<p>用于标识网络上的设备的唯一地址。</p>
<p>3.DNS服务器</p>
<p>负责存储域名和IP地址映射信息，并响应用户的查询请求。</p>
<p>4.DNS记录</p>
<p>存储在DNS服务器上的域名和IP地址映射信息。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>DNS系统采用层次结构，包括根域名服务器、顶级域名服务器、权威域名服务器和递归域名服务器。</p>
<p><img src="/../TyporaImage/image-20240623145540540.png" alt="image-20240623145540540"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>DNS系统可以分为权威DNS服务器和递归DNS服务器。权威DNS服务器负责存储特定域名的DNS记录，递归DNS服务器负责响应用户的查询请求，并在必要时向其他DNS服务器查询。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.分布式</p>
<p>DNS系统是一个分布式数据库，数据存储在全球各地的DNS服务器上。</p>
<p>2.高可用性</p>
<p>DNS系统设计为高可用性，即使某些服务器不可用，系统仍然可以正常工作。</p>
<p>3.可扩展性</p>
<p>DNS系统可以轻松扩展，以支持新的域名和IP地址。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623145640324.png" alt="image-20240623145640324">系统</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>域名系统（Domain Name System，DNS）是一个分布式数据库，用于将人类可读的域名（如 <a href="http://www.example.com)转换为机器可读的ip地址(如/">www.example.com）转换为机器可读的IP地址（如</a> 192.0.2.1），以便网络上的设备能够相互通信。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.域名</p>
<p>用于识别互联网上的设备和服务的人类可读名称。</p>
<p><img src="/../TyporaImage/image-20240623145429533.png" alt="image-20240623145429533"></p>
<p>2.IP地址</p>
<p>用于标识网络上的设备的唯一地址。</p>
<p>3.DNS服务器</p>
<p>负责存储域名和IP地址映射信息，并响应用户的查询请求。</p>
<p>4.DNS记录</p>
<p>存储在DNS服务器上的域名和IP地址映射信息。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>DNS系统采用层次结构，包括根域名服务器、顶级域名服务器、权威域名服务器和递归域名服务器。</p>
<p><img src="/../TyporaImage/image-20240623145540540.png" alt="image-20240623145540540"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>DNS系统可以分为权威DNS服务器和递归DNS服务器。权威DNS服务器负责存储特定域名的DNS记录，递归DNS服务器负责响应用户的查询请求，并在必要时向其他DNS服务器查询。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.分布式</p>
<p>DNS系统是一个分布式数据库，数据存储在全球各地的DNS服务器上。</p>
<p>2.高可用性</p>
<p>DNS系统设计为高可用性，即使某些服务器不可用，系统仍然可以正常工作。</p>
<p>3.可扩展性</p>
<p>DNS系统可以轻松扩展，以支持新的域名和IP地址。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623145640324.png" alt="image-20240623145640324"># DNS系统</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>域名系统（Domain Name System，DNS）是一个分布式数据库，用于将人类可读的域名（如 <a href="http://www.example.com)转换为机器可读的ip地址(如/">www.example.com）转换为机器可读的IP地址（如</a> 192.0.2.1），以便网络上的设备能够相互通信。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.域名</p>
<p>用于识别互联网上的设备和服务的人类可读名称。</p>
<p><img src="/../TyporaImage/image-20240623145429533.png" alt="image-20240623145429533"></p>
<p>2.IP地址</p>
<p>用于标识网络上的设备的唯一地址。</p>
<p>3.DNS服务器</p>
<p>负责存储域名和IP地址映射信息，并响应用户的查询请求。</p>
<p>4.DNS记录</p>
<p>存储在DNS服务器上的域名和IP地址映射信息。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>DNS系统采用层次结构，包括根域名服务器、顶级域名服务器、权威域名服务器和递归域名服务器。</p>
<p><img src="/../TyporaImage/image-20240623145540540.png" alt="image-20240623145540540"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>DNS系统可以分为权威DNS服务器和递归DNS服务器。权威DNS服务器负责存储特定域名的DNS记录，递归DNS服务器负责响应用户的查询请求，并在必要时向其他DNS服务器查询。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.分布式</p>
<p>DNS系统是一个分布式数据库，数据存储在全球各地的DNS服务器上。</p>
<p>2.高可用性</p>
<p>DNS系统设计为高可用性，即使某些服务器不可用，系统仍然可以正常工作。</p>
<p>3.可扩展性</p>
<p>DNS系统可以轻松扩展，以支持新的域名和IP地址。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623145640324.png" alt="image-20240623145640324">系统</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>域名系统（Domain Name System，DNS）是一个分布式数据库，用于将人类可读的域名（如 <a href="http://www.example.com)转换为机器可读的ip地址(如/">www.example.com）转换为机器可读的IP地址（如</a> 192.0.2.1），以便网络上的设备能够相互通信。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.域名</p>
<p>用于识别互联网上的设备和服务的人类可读名称。</p>
<p><img src="/../TyporaImage/image-20240623145429533.png" alt="image-20240623145429533"></p>
<p>2.IP地址</p>
<p>用于标识网络上的设备的唯一地址。</p>
<p>3.DNS服务器</p>
<p>负责存储域名和IP地址映射信息，并响应用户的查询请求。</p>
<p>4.DNS记录</p>
<p>存储在DNS服务器上的域名和IP地址映射信息。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>DNS系统采用层次结构，包括根域名服务器、顶级域名服务器、权威域名服务器和递归域名服务器。</p>
<p><img src="/../TyporaImage/image-20240623145540540.png" alt="image-20240623145540540"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>DNS系统可以分为权威DNS服务器和递归DNS服务器。权威DNS服务器负责存储特定域名的DNS记录，递归DNS服务器负责响应用户的查询请求，并在必要时向其他DNS服务器查询。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.分布式</p>
<p>DNS系统是一个分布式数据库，数据存储在全球各地的DNS服务器上。</p>
<p>2.高可用性</p>
<p>DNS系统设计为高可用性，即使某些服务器不可用，系统仍然可以正常工作。</p>
<p>3.可扩展性</p>
<p>DNS系统可以轻松扩展，以支持新的域名和IP地址。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623145640324.png" alt="image-20240623145640324"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>CSMA协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/CSMA%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="CSMA协议"><a href="#CSMA协议" class="headerlink" title="CSMA协议"></a>CSMA协议</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>载波侦听多路访问（Carrier Sense Multiple Access, CSMA）是一种网络协议，用于控制多个设备如何共享同一通信介质，特别是在以太网等局域网技术中。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.1-坚持CSMA</p>
<p>2.非坚持CSMA</p>
<p>3.p-坚持CSMA</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>1.发送帧之前，先监听信道。</p>
<h1 id="1-坚持CSMA"><a href="#1-坚持CSMA" class="headerlink" title="1-坚持CSMA"></a>1-坚持CSMA</h1><p><img src="/../TyporaImage/image-20240613180057835.png" alt="image-20240613180057835"></p>
<h1 id="非坚持CSMA"><a href="#非坚持CSMA" class="headerlink" title="非坚持CSMA"></a>非坚持CSMA</h1><p><img src="/../TyporaImage/image-20240613180301094.png" alt="image-20240613180301094"></p>
<h1 id="p-坚持CSMA"><a href="#p-坚持CSMA" class="headerlink" title="p-坚持CSMA"></a>p-坚持CSMA</h1><p><img src="/../TyporaImage/image-20240613180441341.png" alt="image-20240613180441341"></p>
<h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p><img src="/../TyporaImage/image-20240613180822252.png" alt="image-20240613180822252">协议</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>载波侦听多路访问（Carrier Sense Multiple Access, CSMA）是一种网络协议，用于控制多个设备如何共享同一通信介质，特别是在以太网等局域网技术中。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.1-坚持CSMA</p>
<p>2.非坚持CSMA</p>
<p>3.p-坚持CSMA</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p>1.发送帧之前，先监听信道。</p>
<h1 id="1-坚持CSMA-1"><a href="#1-坚持CSMA-1" class="headerlink" title="1-坚持CSMA"></a>1-坚持CSMA</h1><p><img src="/../TyporaImage/image-20240613180057835.png" alt="image-20240613180057835"></p>
<h1 id="非坚持CSMA-1"><a href="#非坚持CSMA-1" class="headerlink" title="非坚持CSMA"></a>非坚持CSMA</h1><p><img src="/../TyporaImage/image-20240613180301094.png" alt="image-20240613180301094"></p>
<h1 id="p-坚持CSMA-1"><a href="#p-坚持CSMA-1" class="headerlink" title="p-坚持CSMA"></a>p-坚持CSMA</h1><p><img src="/../TyporaImage/image-20240613180441341.png" alt="image-20240613180441341"></p>
<h2 id="对比-1"><a href="#对比-1" class="headerlink" title="对比"></a>对比</h2><p><img src="/../TyporaImage/image-20240613180822252.png" alt="image-20240613180822252"># CSMA协议</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>载波侦听多路访问（Carrier Sense Multiple Access, CSMA）是一种网络协议，用于控制多个设备如何共享同一通信介质，特别是在以太网等局域网技术中。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.1-坚持CSMA</p>
<p>2.非坚持CSMA</p>
<p>3.p-坚持CSMA</p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p>1.发送帧之前，先监听信道。</p>
<h1 id="1-坚持CSMA-2"><a href="#1-坚持CSMA-2" class="headerlink" title="1-坚持CSMA"></a>1-坚持CSMA</h1><p><img src="/../TyporaImage/image-20240613180057835.png" alt="image-20240613180057835"></p>
<h1 id="非坚持CSMA-2"><a href="#非坚持CSMA-2" class="headerlink" title="非坚持CSMA"></a>非坚持CSMA</h1><p><img src="/../TyporaImage/image-20240613180301094.png" alt="image-20240613180301094"></p>
<h1 id="p-坚持CSMA-2"><a href="#p-坚持CSMA-2" class="headerlink" title="p-坚持CSMA"></a>p-坚持CSMA</h1><p><img src="/../TyporaImage/image-20240613180441341.png" alt="image-20240613180441341"></p>
<h2 id="对比-2"><a href="#对比-2" class="headerlink" title="对比"></a>对比</h2><p><img src="/../TyporaImage/image-20240613180822252.png" alt="image-20240613180822252">协议</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>载波侦听多路访问（Carrier Sense Multiple Access, CSMA）是一种网络协议，用于控制多个设备如何共享同一通信介质，特别是在以太网等局域网技术中。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.1-坚持CSMA</p>
<p>2.非坚持CSMA</p>
<p>3.p-坚持CSMA</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p>1.发送帧之前，先监听信道。</p>
<h1 id="1-坚持CSMA-3"><a href="#1-坚持CSMA-3" class="headerlink" title="1-坚持CSMA"></a>1-坚持CSMA</h1><p><img src="/../TyporaImage/image-20240613180057835.png" alt="image-20240613180057835"></p>
<h1 id="非坚持CSMA-3"><a href="#非坚持CSMA-3" class="headerlink" title="非坚持CSMA"></a>非坚持CSMA</h1><p><img src="/../TyporaImage/image-20240613180301094.png" alt="image-20240613180301094"></p>
<h1 id="p-坚持CSMA-3"><a href="#p-坚持CSMA-3" class="headerlink" title="p-坚持CSMA"></a>p-坚持CSMA</h1><p><img src="/../TyporaImage/image-20240613180441341.png" alt="image-20240613180441341"></p>
<h2 id="对比-3"><a href="#对比-3" class="headerlink" title="对比"></a>对比</h2><p><img src="/../TyporaImage/image-20240613180822252.png" alt="image-20240613180822252"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>ICMP协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/ICMP%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="ICMP协议"><a href="#ICMP协议" class="headerlink" title="ICMP协议"></a>ICMP协议</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>因特网控制报文协议（ICMP，Internet Control Message Protocol）是网络层协议的一部分，主要用于在主机和路由器之间传递控制消息和错误报告。它为网络设备提供一种机制来发送和接收错误报文和其他控制消息，以诊断网络问题和管理网络流量。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.类型字段</p>
<p>标识ICMP消息的类型，如回显请求、回显应答、目标不可达等。</p>
<p>2.代码字段</p>
<p>为每种ICMP消息类型提供详细的解释。</p>
<p>3.校验和</p>
<p>用于验证ICMP报文的完整性。</p>
<p>4.消息数据</p>
<p>根据不同的ICMP类型包含不同的数据内容。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.ICMP报文头</p>
<p>包含类型、代码和校验和字段。</p>
<p>2.ICMP报文数据部分</p>
<p>根据具体的ICMP类型，可能包含IP报文的头部和数据。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-差错报告报文"><a href="#1-差错报告报文" class="headerlink" title="1.差错报告报文"></a>1.差错报告报文</h3><p>如目标不可达、时间超过、参数问题等。</p>
<h3 id="2-查询消息"><a href="#2-查询消息" class="headerlink" title="2.查询消息"></a>2.查询消息</h3><p>如回显请求和回显应答，用于诊断和测试网络连接。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.诊断功能：用于网络故障排除和性能测试。<br>2.控制和管理：协助路由器和主机管理网络流量。<br>3.简单性：报文格式简单，开销小。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>1.提供网络设备间的控制和错误报告机制。<br>2.帮助管理员监控和管理网络，解决网络问题。协议</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>因特网控制报文协议（ICMP，Internet Control Message Protocol）是网络层协议的一部分，主要用于在主机和路由器之间传递控制消息和错误报告。它为网络设备提供一种机制来发送和接收错误报文和其他控制消息，以诊断网络问题和管理网络流量。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.类型字段</p>
<p>标识ICMP消息的类型，如回显请求、回显应答、目标不可达等。</p>
<p>2.代码字段</p>
<p>为每种ICMP消息类型提供详细的解释。</p>
<p>3.校验和</p>
<p>用于验证ICMP报文的完整性。</p>
<p>4.消息数据</p>
<p>根据不同的ICMP类型包含不同的数据内容。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.ICMP报文头</p>
<p>包含类型、代码和校验和字段。</p>
<p>2.ICMP报文数据部分</p>
<p>根据具体的ICMP类型，可能包含IP报文的头部和数据。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-差错报告报文-1"><a href="#1-差错报告报文-1" class="headerlink" title="1.差错报告报文"></a>1.差错报告报文</h3><p>如目标不可达、时间超过、参数问题等。</p>
<h3 id="2-查询消息-1"><a href="#2-查询消息-1" class="headerlink" title="2.查询消息"></a>2.查询消息</h3><p>如回显请求和回显应答，用于诊断和测试网络连接。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.诊断功能：用于网络故障排除和性能测试。<br>2.控制和管理：协助路由器和主机管理网络流量。<br>3.简单性：报文格式简单，开销小。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>1.提供网络设备间的控制和错误报告机制。<br>2.帮助管理员监控和管理网络，解决网络问题。# ICMP协议</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>因特网控制报文协议（ICMP，Internet Control Message Protocol）是网络层协议的一部分，主要用于在主机和路由器之间传递控制消息和错误报告。它为网络设备提供一种机制来发送和接收错误报文和其他控制消息，以诊断网络问题和管理网络流量。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.类型字段</p>
<p>标识ICMP消息的类型，如回显请求、回显应答、目标不可达等。</p>
<p>2.代码字段</p>
<p>为每种ICMP消息类型提供详细的解释。</p>
<p>3.校验和</p>
<p>用于验证ICMP报文的完整性。</p>
<p>4.消息数据</p>
<p>根据不同的ICMP类型包含不同的数据内容。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.ICMP报文头</p>
<p>包含类型、代码和校验和字段。</p>
<p>2.ICMP报文数据部分</p>
<p>根据具体的ICMP类型，可能包含IP报文的头部和数据。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-差错报告报文-2"><a href="#1-差错报告报文-2" class="headerlink" title="1.差错报告报文"></a>1.差错报告报文</h3><p>如目标不可达、时间超过、参数问题等。</p>
<h3 id="2-查询消息-2"><a href="#2-查询消息-2" class="headerlink" title="2.查询消息"></a>2.查询消息</h3><p>如回显请求和回显应答，用于诊断和测试网络连接。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.诊断功能：用于网络故障排除和性能测试。<br>2.控制和管理：协助路由器和主机管理网络流量。<br>3.简单性：报文格式简单，开销小。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>1.提供网络设备间的控制和错误报告机制。<br>2.帮助管理员监控和管理网络，解决网络问题。协议</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>因特网控制报文协议（ICMP，Internet Control Message Protocol）是网络层协议的一部分，主要用于在主机和路由器之间传递控制消息和错误报告。它为网络设备提供一种机制来发送和接收错误报文和其他控制消息，以诊断网络问题和管理网络流量。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.类型字段</p>
<p>标识ICMP消息的类型，如回显请求、回显应答、目标不可达等。</p>
<p>2.代码字段</p>
<p>为每种ICMP消息类型提供详细的解释。</p>
<p>3.校验和</p>
<p>用于验证ICMP报文的完整性。</p>
<p>4.消息数据</p>
<p>根据不同的ICMP类型包含不同的数据内容。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.ICMP报文头</p>
<p>包含类型、代码和校验和字段。</p>
<p>2.ICMP报文数据部分</p>
<p>根据具体的ICMP类型，可能包含IP报文的头部和数据。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-差错报告报文-3"><a href="#1-差错报告报文-3" class="headerlink" title="1.差错报告报文"></a>1.差错报告报文</h3><p>如目标不可达、时间超过、参数问题等。</p>
<h3 id="2-查询消息-3"><a href="#2-查询消息-3" class="headerlink" title="2.查询消息"></a>2.查询消息</h3><p>如回显请求和回显应答，用于诊断和测试网络连接。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.诊断功能：用于网络故障排除和性能测试。<br>2.控制和管理：协助路由器和主机管理网络流量。<br>3.简单性：报文格式简单，开销小。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>1.提供网络设备间的控制和错误报告机制。<br>2.帮助管理员监控和管理网络，解决网络问题。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>HTTP协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/HTTP%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>超文本传输协议（Hypertext Transfer Protocol，HTTP）是一种用于分布式、协作式和超媒体信息系统的应用层协议。它是万维网数据通信的基础，定义了客户端和服务器之间交换数据的规则。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-客户端"><a href="#1-客户端" class="headerlink" title="1.客户端"></a>1.客户端</h3><p>发起HTTP请求的设备或应用程序，通常是网页浏览器。</p>
<h3 id="2-服务器"><a href="#2-服务器" class="headerlink" title="2.服务器"></a>2.服务器</h3><p>接收HTTP请求并提供响应的设备或应用程序。</p>
<h3 id="3-请求"><a href="#3-请求" class="headerlink" title="3.请求"></a>3.请求</h3><p>客户端发送给服务器的数据包，包含请求方法和请求信息。</p>
<h3 id="4-响应"><a href="#4-响应" class="headerlink" title="4.响应"></a>4.响应</h3><p>服务器返回给客户端的数据包，包含状态码和响应数据。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>HTTP协议采用请求-响应模型，客户端发送请求，服务器处理请求并返回响应。</p>
<p><img src="/../TyporaImage/image-20240623152358071.png" alt="image-20240623152358071"></p>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/../TyporaImage/image-20240623152447547.png" alt="image-20240623152447547"></h2><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>HTTP协议可以分为HTTP&#x2F;1.0、HTTP&#x2F;1.1、HTTP&#x2F;2等多个版本，每个版本都有不同的特性和优化。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><h3 id="1-简单性"><a href="#1-简单性" class="headerlink" title="1.简单性"></a>1.简单性</h3><p>HTTP协议设计简单，易于理解和实现。</p>
<h3 id="2-无状态性"><a href="#2-无状态性" class="headerlink" title="2.无状态性"></a>2.无状态性</h3><p>HTTP协议是无状态的，每个请求都是独立的，服务器不保存客户端的状态信息。</p>
<h3 id="3-可扩展性"><a href="#3-可扩展性" class="headerlink" title="3.可扩展性"></a>3.可扩展性</h3><p>HTTP协议可以通过头部字段进行扩展，支持新的功能和特性。</p>
<h3 id="4-明确的请求和响应格式"><a href="#4-明确的请求和响应格式" class="headerlink" title="4.明确的请求和响应格式"></a>4.明确的请求和响应格式</h3><p>HTTP请求和响应都有明确的格式，包括请求方法、URL、状态码等。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623152043687.png" alt="image-20240623152043687"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-HTTP协议的连接方式"><a href="#1-HTTP协议的连接方式" class="headerlink" title="1.HTTP协议的连接方式"></a>1.HTTP协议的连接方式</h3><p><img src="/../TyporaImage/image-20240623152302970.png" alt="image-20240623152302970"><br>协议</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>超文本传输协议（Hypertext Transfer Protocol，HTTP）是一种用于分布式、协作式和超媒体信息系统的应用层协议。它是万维网数据通信的基础，定义了客户端和服务器之间交换数据的规则。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-客户端-1"><a href="#1-客户端-1" class="headerlink" title="1.客户端"></a>1.客户端</h3><p>发起HTTP请求的设备或应用程序，通常是网页浏览器。</p>
<h3 id="2-服务器-1"><a href="#2-服务器-1" class="headerlink" title="2.服务器"></a>2.服务器</h3><p>接收HTTP请求并提供响应的设备或应用程序。</p>
<h3 id="3-请求-1"><a href="#3-请求-1" class="headerlink" title="3.请求"></a>3.请求</h3><p>客户端发送给服务器的数据包，包含请求方法和请求信息。</p>
<h3 id="4-响应-1"><a href="#4-响应-1" class="headerlink" title="4.响应"></a>4.响应</h3><p>服务器返回给客户端的数据包，包含状态码和响应数据。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>HTTP协议采用请求-响应模型，客户端发送请求，服务器处理请求并返回响应。</p>
<p><img src="/../TyporaImage/image-20240623152358071.png" alt="image-20240623152358071"></p>
<h2 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="/../TyporaImage/image-20240623152447547.png" alt="image-20240623152447547"></h2><h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>HTTP协议可以分为HTTP&#x2F;1.0、HTTP&#x2F;1.1、HTTP&#x2F;2等多个版本，每个版本都有不同的特性和优化。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><h3 id="1-简单性-1"><a href="#1-简单性-1" class="headerlink" title="1.简单性"></a>1.简单性</h3><p>HTTP协议设计简单，易于理解和实现。</p>
<h3 id="2-无状态性-1"><a href="#2-无状态性-1" class="headerlink" title="2.无状态性"></a>2.无状态性</h3><p>HTTP协议是无状态的，每个请求都是独立的，服务器不保存客户端的状态信息。</p>
<h3 id="3-可扩展性-1"><a href="#3-可扩展性-1" class="headerlink" title="3.可扩展性"></a>3.可扩展性</h3><p>HTTP协议可以通过头部字段进行扩展，支持新的功能和特性。</p>
<h3 id="4-明确的请求和响应格式-1"><a href="#4-明确的请求和响应格式-1" class="headerlink" title="4.明确的请求和响应格式"></a>4.明确的请求和响应格式</h3><p>HTTP请求和响应都有明确的格式，包括请求方法、URL、状态码等。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623152043687.png" alt="image-20240623152043687"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-HTTP协议的连接方式-1"><a href="#1-HTTP协议的连接方式-1" class="headerlink" title="1.HTTP协议的连接方式"></a>1.HTTP协议的连接方式</h3><p><img src="/../TyporaImage/image-20240623152302970.png" alt="image-20240623152302970"># HTTP协议</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>超文本传输协议（Hypertext Transfer Protocol，HTTP）是一种用于分布式、协作式和超媒体信息系统的应用层协议。它是万维网数据通信的基础，定义了客户端和服务器之间交换数据的规则。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-客户端-2"><a href="#1-客户端-2" class="headerlink" title="1.客户端"></a>1.客户端</h3><p>发起HTTP请求的设备或应用程序，通常是网页浏览器。</p>
<h3 id="2-服务器-2"><a href="#2-服务器-2" class="headerlink" title="2.服务器"></a>2.服务器</h3><p>接收HTTP请求并提供响应的设备或应用程序。</p>
<h3 id="3-请求-2"><a href="#3-请求-2" class="headerlink" title="3.请求"></a>3.请求</h3><p>客户端发送给服务器的数据包，包含请求方法和请求信息。</p>
<h3 id="4-响应-2"><a href="#4-响应-2" class="headerlink" title="4.响应"></a>4.响应</h3><p>服务器返回给客户端的数据包，包含状态码和响应数据。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>HTTP协议采用请求-响应模型，客户端发送请求，服务器处理请求并返回响应。</p>
<p><img src="/../TyporaImage/image-20240623152358071.png" alt="image-20240623152358071"></p>
<h2 id="-2"><a href="#-2" class="headerlink" title=""></a><img src="/../TyporaImage/image-20240623152447547.png" alt="image-20240623152447547"></h2><h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>HTTP协议可以分为HTTP&#x2F;1.0、HTTP&#x2F;1.1、HTTP&#x2F;2等多个版本，每个版本都有不同的特性和优化。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><h3 id="1-简单性-2"><a href="#1-简单性-2" class="headerlink" title="1.简单性"></a>1.简单性</h3><p>HTTP协议设计简单，易于理解和实现。</p>
<h3 id="2-无状态性-2"><a href="#2-无状态性-2" class="headerlink" title="2.无状态性"></a>2.无状态性</h3><p>HTTP协议是无状态的，每个请求都是独立的，服务器不保存客户端的状态信息。</p>
<h3 id="3-可扩展性-2"><a href="#3-可扩展性-2" class="headerlink" title="3.可扩展性"></a>3.可扩展性</h3><p>HTTP协议可以通过头部字段进行扩展，支持新的功能和特性。</p>
<h3 id="4-明确的请求和响应格式-2"><a href="#4-明确的请求和响应格式-2" class="headerlink" title="4.明确的请求和响应格式"></a>4.明确的请求和响应格式</h3><p>HTTP请求和响应都有明确的格式，包括请求方法、URL、状态码等。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623152043687.png" alt="image-20240623152043687"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-HTTP协议的连接方式-2"><a href="#1-HTTP协议的连接方式-2" class="headerlink" title="1.HTTP协议的连接方式"></a>1.HTTP协议的连接方式</h3><p><img src="/../TyporaImage/image-20240623152302970.png" alt="image-20240623152302970"><br>协议</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>超文本传输协议（Hypertext Transfer Protocol，HTTP）是一种用于分布式、协作式和超媒体信息系统的应用层协议。它是万维网数据通信的基础，定义了客户端和服务器之间交换数据的规则。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-客户端-3"><a href="#1-客户端-3" class="headerlink" title="1.客户端"></a>1.客户端</h3><p>发起HTTP请求的设备或应用程序，通常是网页浏览器。</p>
<h3 id="2-服务器-3"><a href="#2-服务器-3" class="headerlink" title="2.服务器"></a>2.服务器</h3><p>接收HTTP请求并提供响应的设备或应用程序。</p>
<h3 id="3-请求-3"><a href="#3-请求-3" class="headerlink" title="3.请求"></a>3.请求</h3><p>客户端发送给服务器的数据包，包含请求方法和请求信息。</p>
<h3 id="4-响应-3"><a href="#4-响应-3" class="headerlink" title="4.响应"></a>4.响应</h3><p>服务器返回给客户端的数据包，包含状态码和响应数据。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>HTTP协议采用请求-响应模型，客户端发送请求，服务器处理请求并返回响应。</p>
<p><img src="/../TyporaImage/image-20240623152358071.png" alt="image-20240623152358071"></p>
<h2 id="-3"><a href="#-3" class="headerlink" title=""></a><img src="/../TyporaImage/image-20240623152447547.png" alt="image-20240623152447547"></h2><h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>HTTP协议可以分为HTTP&#x2F;1.0、HTTP&#x2F;1.1、HTTP&#x2F;2等多个版本，每个版本都有不同的特性和优化。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><h3 id="1-简单性-3"><a href="#1-简单性-3" class="headerlink" title="1.简单性"></a>1.简单性</h3><p>HTTP协议设计简单，易于理解和实现。</p>
<h3 id="2-无状态性-3"><a href="#2-无状态性-3" class="headerlink" title="2.无状态性"></a>2.无状态性</h3><p>HTTP协议是无状态的，每个请求都是独立的，服务器不保存客户端的状态信息。</p>
<h3 id="3-可扩展性-3"><a href="#3-可扩展性-3" class="headerlink" title="3.可扩展性"></a>3.可扩展性</h3><p>HTTP协议可以通过头部字段进行扩展，支持新的功能和特性。</p>
<h3 id="4-明确的请求和响应格式-3"><a href="#4-明确的请求和响应格式-3" class="headerlink" title="4.明确的请求和响应格式"></a>4.明确的请求和响应格式</h3><p>HTTP请求和响应都有明确的格式，包括请求方法、URL、状态码等。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623152043687.png" alt="image-20240623152043687"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-HTTP协议的连接方式-3"><a href="#1-HTTP协议的连接方式-3" class="headerlink" title="1.HTTP协议的连接方式"></a>1.HTTP协议的连接方式</h3><p><img src="/../TyporaImage/image-20240623152302970.png" alt="image-20240623152302970"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>IPV6</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/IPV6/</url>
    <content><![CDATA[<h1 id="IPV6"><a href="#IPV6" class="headerlink" title="IPV6"></a>IPV6</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>IPv6（Internet Protocol version 6）是互联网协议的第六版，也是当前广泛使用的IPv4的继任者。它由IETF（互联网工程任务组）开发，旨在解决IPv4地址耗尽问题，并提供更高效的路由、增强的安全性和改进的网络自动配置功能。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.地址空间</p>
<p>IPv6地址为128位，可以提供约3.4×10^38个独立的IP地址。</p>
<p>2.地址格式</p>
<p>采用八组四个十六进制数字的表示法，每组用冒号分隔，例如2001:0db8:85a3:0000:0000:8a2e:0370:7334</p>
<p><img src="/../TyporaImage/image-20240622210805416.png" alt="image-20240622210805416"></p>
<p>3.报头结构</p>
<p>IPv6报头比IPv4简化，包含固定长度的基本报头和可选扩展报头。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.基本报头</p>
<p>包含版本号、流标签、有效载荷长度、下一个报头、跳限制、源地址和目的地址等字段。</p>
<p>2.扩展报头</p>
<p>用于支持IPv6的各种附加功能，如路由、分段、认证和加密等。</p>
<p><img src="/../TyporaImage/image-20240622210312072.png" alt="image-20240622210312072"></p>
<p><img src="/../TyporaImage/image-20240622210537357.png" alt="image-20240622210537357"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.单播地址：标识单个接口，用于一对一通信。<br>2.组播地址：标识一组接口，用于一对多通信。<br>3.任播地址：标识一组接口，但数据包只发送给最邻近的接口，用于一对最近通信。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.庞大的地址空间：提供大量的IP地址，满足未来互联网发展的需求。<br>2.简化的报头结构：提高了处理效率和路由性能。<br>3.自动配置支持：包括无状态地址自动配置（SLAAC）和DHCPv6。<br>4.内置安全性：强制支持IPsec，增强网络安全。<br>5.改进的组播和任播：提高了多播通信和服务发现的效率。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.ipv4和ipv6的对比</p>
<p><img src="/../TyporaImage/image-20240622210710219.png" alt="image-20240622210710219"></p>
<p>2.ipv6向ipv4过渡的策略</p>
<p>①双栈协议</p>
<p><img src="/../TyporaImage/image-20240622210928238.png" alt="image-20240622210928238"></p>
<p>②隧道技术</p>
<p><img src="/../TyporaImage/image-20240622210937001.png" alt="image-20240622210937001">V6</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>IPv6（Internet Protocol version 6）是互联网协议的第六版，也是当前广泛使用的IPv4的继任者。它由IETF（互联网工程任务组）开发，旨在解决IPv4地址耗尽问题，并提供更高效的路由、增强的安全性和改进的网络自动配置功能。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.地址空间</p>
<p>IPv6地址为128位，可以提供约3.4×10^38个独立的IP地址。</p>
<p>2.地址格式</p>
<p>采用八组四个十六进制数字的表示法，每组用冒号分隔，例如2001:0db8:85a3:0000:0000:8a2e:0370:7334</p>
<p><img src="/../TyporaImage/image-20240622210805416.png" alt="image-20240622210805416"></p>
<p>3.报头结构</p>
<p>IPv6报头比IPv4简化，包含固定长度的基本报头和可选扩展报头。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.基本报头</p>
<p>包含版本号、流标签、有效载荷长度、下一个报头、跳限制、源地址和目的地址等字段。</p>
<p>2.扩展报头</p>
<p>用于支持IPv6的各种附加功能，如路由、分段、认证和加密等。</p>
<p><img src="/../TyporaImage/image-20240622210312072.png" alt="image-20240622210312072"></p>
<p><img src="/../TyporaImage/image-20240622210537357.png" alt="image-20240622210537357"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.单播地址：标识单个接口，用于一对一通信。<br>2.组播地址：标识一组接口，用于一对多通信。<br>3.任播地址：标识一组接口，但数据包只发送给最邻近的接口，用于一对最近通信。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.庞大的地址空间：提供大量的IP地址，满足未来互联网发展的需求。<br>2.简化的报头结构：提高了处理效率和路由性能。<br>3.自动配置支持：包括无状态地址自动配置（SLAAC）和DHCPv6。<br>4.内置安全性：强制支持IPsec，增强网络安全。<br>5.改进的组播和任播：提高了多播通信和服务发现的效率。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.ipv4和ipv6的对比</p>
<p><img src="/../TyporaImage/image-20240622210710219.png" alt="image-20240622210710219"></p>
<p>2.ipv6向ipv4过渡的策略</p>
<p>①双栈协议</p>
<p><img src="/../TyporaImage/image-20240622210928238.png" alt="image-20240622210928238"></p>
<p>②隧道技术</p>
<p><img src="/../TyporaImage/image-20240622210937001.png" alt="image-20240622210937001"># IPV6</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>IPv6（Internet Protocol version 6）是互联网协议的第六版，也是当前广泛使用的IPv4的继任者。它由IETF（互联网工程任务组）开发，旨在解决IPv4地址耗尽问题，并提供更高效的路由、增强的安全性和改进的网络自动配置功能。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.地址空间</p>
<p>IPv6地址为128位，可以提供约3.4×10^38个独立的IP地址。</p>
<p>2.地址格式</p>
<p>采用八组四个十六进制数字的表示法，每组用冒号分隔，例如2001:0db8:85a3:0000:0000:8a2e:0370:7334</p>
<p><img src="/../TyporaImage/image-20240622210805416.png" alt="image-20240622210805416"></p>
<p>3.报头结构</p>
<p>IPv6报头比IPv4简化，包含固定长度的基本报头和可选扩展报头。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.基本报头</p>
<p>包含版本号、流标签、有效载荷长度、下一个报头、跳限制、源地址和目的地址等字段。</p>
<p>2.扩展报头</p>
<p>用于支持IPv6的各种附加功能，如路由、分段、认证和加密等。</p>
<p><img src="/../TyporaImage/image-20240622210312072.png" alt="image-20240622210312072"></p>
<p><img src="/../TyporaImage/image-20240622210537357.png" alt="image-20240622210537357"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.单播地址：标识单个接口，用于一对一通信。<br>2.组播地址：标识一组接口，用于一对多通信。<br>3.任播地址：标识一组接口，但数据包只发送给最邻近的接口，用于一对最近通信。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.庞大的地址空间：提供大量的IP地址，满足未来互联网发展的需求。<br>2.简化的报头结构：提高了处理效率和路由性能。<br>3.自动配置支持：包括无状态地址自动配置（SLAAC）和DHCPv6。<br>4.内置安全性：强制支持IPsec，增强网络安全。<br>5.改进的组播和任播：提高了多播通信和服务发现的效率。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.ipv4和ipv6的对比</p>
<p><img src="/../TyporaImage/image-20240622210710219.png" alt="image-20240622210710219"></p>
<p>2.ipv6向ipv4过渡的策略</p>
<p>①双栈协议</p>
<p><img src="/../TyporaImage/image-20240622210928238.png" alt="image-20240622210928238"></p>
<p>②隧道技术</p>
<p><img src="/../TyporaImage/image-20240622210937001.png" alt="image-20240622210937001">V6</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>IPv6（Internet Protocol version 6）是互联网协议的第六版，也是当前广泛使用的IPv4的继任者。它由IETF（互联网工程任务组）开发，旨在解决IPv4地址耗尽问题，并提供更高效的路由、增强的安全性和改进的网络自动配置功能。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.地址空间</p>
<p>IPv6地址为128位，可以提供约3.4×10^38个独立的IP地址。</p>
<p>2.地址格式</p>
<p>采用八组四个十六进制数字的表示法，每组用冒号分隔，例如2001:0db8:85a3:0000:0000:8a2e:0370:7334</p>
<p><img src="/../TyporaImage/image-20240622210805416.png" alt="image-20240622210805416"></p>
<p>3.报头结构</p>
<p>IPv6报头比IPv4简化，包含固定长度的基本报头和可选扩展报头。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.基本报头</p>
<p>包含版本号、流标签、有效载荷长度、下一个报头、跳限制、源地址和目的地址等字段。</p>
<p>2.扩展报头</p>
<p>用于支持IPv6的各种附加功能，如路由、分段、认证和加密等。</p>
<p><img src="/../TyporaImage/image-20240622210312072.png" alt="image-20240622210312072"></p>
<p><img src="/../TyporaImage/image-20240622210537357.png" alt="image-20240622210537357"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.单播地址：标识单个接口，用于一对一通信。<br>2.组播地址：标识一组接口，用于一对多通信。<br>3.任播地址：标识一组接口，但数据包只发送给最邻近的接口，用于一对最近通信。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.庞大的地址空间：提供大量的IP地址，满足未来互联网发展的需求。<br>2.简化的报头结构：提高了处理效率和路由性能。<br>3.自动配置支持：包括无状态地址自动配置（SLAAC）和DHCPv6。<br>4.内置安全性：强制支持IPsec，增强网络安全。<br>5.改进的组播和任播：提高了多播通信和服务发现的效率。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.ipv4和ipv6的对比</p>
<p><img src="/../TyporaImage/image-20240622210710219.png" alt="image-20240622210710219"></p>
<p>2.ipv6向ipv4过渡的策略</p>
<p>①双栈协议</p>
<p><img src="/../TyporaImage/image-20240622210928238.png" alt="image-20240622210928238"></p>
<p>②隧道技术</p>
<p><img src="/../TyporaImage/image-20240622210937001.png" alt="image-20240622210937001"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>IPv4地址</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/IPv4%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<h1 id="IPV4地址"><a href="#IPV4地址" class="headerlink" title="IPV4地址"></a>IPV4地址</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>IPv4地址是指在Internet协议版本4（IPv4）中用于标识网络中的设备（如计算机、路由器等）的32位二进制地址。每个IPv4地址唯一标识一个网络接口。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>网络部分：表示网络的标识，确定设备所属的网络。<br>主机部分：表示网络内具体设备的标识。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>①点分十进制表示</p>
<p>IPv4地址由四个8位二进制数组成，每个8位二进制数转换为十进制，用”.”分隔。例如：192.168.1.1。<br>②二进制表示</p>
<p>每个IPv4地址由32位二进制数组成，如11000000.10101000.00000001.00000001。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.A类地址</p>
<p>范围是0.0.0.0到127.255.255.255，网络部分占8位。</p>
<p>2.B类地址</p>
<p>范围是128.0.0.0到191.255.255.255，网络部分占16位。</p>
<p>3.C类地址</p>
<p>范围是192.0.0.0到223.255.255.255，网络部分占24位。</p>
<p>4.D类地址</p>
<p>范围是224.0.0.0到239.255.255.255，用于多播。</p>
<p>5.E类地址</p>
<p>范围是240.0.0.0到255.255.255.255，保留为实验用途。</p>
<p><img src="/../TyporaImage/image-20240622163500241.png" alt="image-20240622163500241"></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>1.实现网络设备的唯一标识和定位。<br>2.保障数据包在网络中的正确传输。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.ip地址</p>
<p>全世界唯一的32位标识符，用来标识路由器主机的<strong>接口</strong>。</p>
<p>2.特殊的IP地址</p>
<p><img src="/../TyporaImage/image-20240622163344548.png" alt="image-20240622163344548"></p>
<p>3.私有IP地址</p>
<p><img src="/../TyporaImage/image-20240622163409801.png" alt="image-20240622163409801">地址</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>IPv4地址是指在Internet协议版本4（IPv4）中用于标识网络中的设备（如计算机、路由器等）的32位二进制地址。每个IPv4地址唯一标识一个网络接口。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>网络部分：表示网络的标识，确定设备所属的网络。<br>主机部分：表示网络内具体设备的标识。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>①点分十进制表示</p>
<p>IPv4地址由四个8位二进制数组成，每个8位二进制数转换为十进制，用”.”分隔。例如：192.168.1.1。<br>②二进制表示</p>
<p>每个IPv4地址由32位二进制数组成，如11000000.10101000.00000001.00000001。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.A类地址</p>
<p>范围是0.0.0.0到127.255.255.255，网络部分占8位。</p>
<p>2.B类地址</p>
<p>范围是128.0.0.0到191.255.255.255，网络部分占16位。</p>
<p>3.C类地址</p>
<p>范围是192.0.0.0到223.255.255.255，网络部分占24位。</p>
<p>4.D类地址</p>
<p>范围是224.0.0.0到239.255.255.255，用于多播。</p>
<p>5.E类地址</p>
<p>范围是240.0.0.0到255.255.255.255，保留为实验用途。</p>
<p><img src="/../TyporaImage/image-20240622163500241.png" alt="image-20240622163500241"></p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>1.实现网络设备的唯一标识和定位。<br>2.保障数据包在网络中的正确传输。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.ip地址</p>
<p>全世界唯一的32位标识符，用来标识路由器主机的<strong>接口</strong>。</p>
<p>2.特殊的IP地址</p>
<p><img src="/../TyporaImage/image-20240622163344548.png" alt="image-20240622163344548"></p>
<p>3.私有IP地址</p>
<p><img src="/../TyporaImage/image-20240622163409801.png" alt="image-20240622163409801"># IPV4地址</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>IPv4地址是指在Internet协议版本4（IPv4）中用于标识网络中的设备（如计算机、路由器等）的32位二进制地址。每个IPv4地址唯一标识一个网络接口。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>网络部分：表示网络的标识，确定设备所属的网络。<br>主机部分：表示网络内具体设备的标识。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>①点分十进制表示</p>
<p>IPv4地址由四个8位二进制数组成，每个8位二进制数转换为十进制，用”.”分隔。例如：192.168.1.1。<br>②二进制表示</p>
<p>每个IPv4地址由32位二进制数组成，如11000000.10101000.00000001.00000001。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.A类地址</p>
<p>范围是0.0.0.0到127.255.255.255，网络部分占8位。</p>
<p>2.B类地址</p>
<p>范围是128.0.0.0到191.255.255.255，网络部分占16位。</p>
<p>3.C类地址</p>
<p>范围是192.0.0.0到223.255.255.255，网络部分占24位。</p>
<p>4.D类地址</p>
<p>范围是224.0.0.0到239.255.255.255，用于多播。</p>
<p>5.E类地址</p>
<p>范围是240.0.0.0到255.255.255.255，保留为实验用途。</p>
<p><img src="/../TyporaImage/image-20240622163500241.png" alt="image-20240622163500241"></p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>1.实现网络设备的唯一标识和定位。<br>2.保障数据包在网络中的正确传输。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.ip地址</p>
<p>全世界唯一的32位标识符，用来标识路由器主机的<strong>接口</strong>。</p>
<p>2.特殊的IP地址</p>
<p><img src="/../TyporaImage/image-20240622163344548.png" alt="image-20240622163344548"></p>
<p>3.私有IP地址</p>
<p><img src="/../TyporaImage/image-20240622163409801.png" alt="image-20240622163409801">地址</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>IPv4地址是指在Internet协议版本4（IPv4）中用于标识网络中的设备（如计算机、路由器等）的32位二进制地址。每个IPv4地址唯一标识一个网络接口。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>网络部分：表示网络的标识，确定设备所属的网络。<br>主机部分：表示网络内具体设备的标识。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>①点分十进制表示</p>
<p>IPv4地址由四个8位二进制数组成，每个8位二进制数转换为十进制，用”.”分隔。例如：192.168.1.1。<br>②二进制表示</p>
<p>每个IPv4地址由32位二进制数组成，如11000000.10101000.00000001.00000001。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.A类地址</p>
<p>范围是0.0.0.0到127.255.255.255，网络部分占8位。</p>
<p>2.B类地址</p>
<p>范围是128.0.0.0到191.255.255.255，网络部分占16位。</p>
<p>3.C类地址</p>
<p>范围是192.0.0.0到223.255.255.255，网络部分占24位。</p>
<p>4.D类地址</p>
<p>范围是224.0.0.0到239.255.255.255，用于多播。</p>
<p>5.E类地址</p>
<p>范围是240.0.0.0到255.255.255.255，保留为实验用途。</p>
<p><img src="/../TyporaImage/image-20240622163500241.png" alt="image-20240622163500241"></p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>1.实现网络设备的唯一标识和定位。<br>2.保障数据包在网络中的正确传输。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.ip地址</p>
<p>全世界唯一的32位标识符，用来标识路由器主机的<strong>接口</strong>。</p>
<p>2.特殊的IP地址</p>
<p><img src="/../TyporaImage/image-20240622163344548.png" alt="image-20240622163344548"></p>
<p>3.私有IP地址</p>
<p><img src="/../TyporaImage/image-20240622163409801.png" alt="image-20240622163409801"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>IP数据报分片</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/IP%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%88%86%E7%89%87/</url>
    <content><![CDATA[<h1 id="IP数据报分片"><a href="#IP数据报分片" class="headerlink" title="IP数据报分片"></a>IP数据报分片</h1><p>结构形式</p>
<p><img src="/../TyporaImage/image-20240622161437273.png" alt="image-20240622161437273"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.最大传送单元MTU</p>
<p>以太网MTU是1500B。</p>
<p>分片</p>
<p>结构形式</p>
<p><img src="/../TyporaImage/image-20240622161437273.png" alt="image-20240622161437273"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.最大传送单元MTU</p>
<p>以太网MTU是1500B。# IP数据报分片</p>
<p>结构形式</p>
<p><img src="/../TyporaImage/image-20240622161437273.png" alt="image-20240622161437273"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.最大传送单元MTU</p>
<p>以太网MTU是1500B。</p>
<p>分片</p>
<p>结构形式</p>
<p><img src="/../TyporaImage/image-20240622161437273.png" alt="image-20240622161437273"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.最大传送单元MTU</p>
<p>以太网MTU是1500B。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>IP数据报格式</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/IP%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%A0%BC%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="IP数据报格式"><a href="#IP数据报格式" class="headerlink" title="IP数据报格式"></a>IP数据报格式</h1><h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240622161006223.png" alt="image-20240622161006223"></p>
<p><img src="/../TyporaImage/image-20240622161035763.png" alt="image-20240622161035763"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.TCP&#x2F;ip协议栈</p>
<p><img src="/../TyporaImage/image-20240622160849321.png" alt="image-20240622160849321">格式</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240622161006223.png" alt="image-20240622161006223"></p>
<p><img src="/../TyporaImage/image-20240622161035763.png" alt="image-20240622161035763"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.TCP&#x2F;ip协议栈</p>
<p><img src="/../TyporaImage/image-20240622160849321.png" alt="image-20240622160849321"># IP数据报格式</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240622161006223.png" alt="image-20240622161006223"></p>
<p><img src="/../TyporaImage/image-20240622161035763.png" alt="image-20240622161035763"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.TCP&#x2F;ip协议栈</p>
<p><img src="/../TyporaImage/image-20240622160849321.png" alt="image-20240622160849321">格式</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240622161006223.png" alt="image-20240622161006223"></p>
<p><img src="/../TyporaImage/image-20240622161035763.png" alt="image-20240622161035763"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.TCP&#x2F;ip协议栈</p>
<p><img src="/../TyporaImage/image-20240622160849321.png" alt="image-20240622160849321"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>IP组播</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/IP%E7%BB%84%E6%92%AD/</url>
    <content><![CDATA[<h1 id="IP组播"><a href="#IP组播" class="headerlink" title="IP组播"></a>IP组播</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>IP组播是一种在网络中发送数据包到多个接收者的技术。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-组播地址"><a href="#1-组播地址" class="headerlink" title="1.组播地址"></a>1.组播地址</h3><h3 id="2-组播路由器"><a href="#2-组播路由器" class="headerlink" title="2.组播路由器"></a>2.组播路由器</h3><h3 id="3-组播协议（如IGMP-Internet-Group-Management-Protocol）。"><a href="#3-组播协议（如IGMP-Internet-Group-Management-Protocol）。" class="headerlink" title="3.组播协议（如IGMP - Internet Group Management Protocol）。"></a>3.组播协议（如IGMP - Internet Group Management Protocol）。</h3><h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>组播数据包发送到一个特定的组播地址，路由器根据组播协议将数据包转发到所有订阅该地址的设备。</p>
<p><img src="/../TyporaImage/image-20240622221703150.png" alt="image-20240622221703150"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>根据应用场景，组播可以分为单播、广播和组播。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.高效、减少网络带宽使用、降低网络延迟。</p>
<p>2.只能作为目的地址，不可以作为源地址。源地址总是单播地址</p>
<p>3.组播数据包也是最大努力交付</p>
<p>4.不是所有D类地址都可以作为组播地址</p>
<h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-IGMP协议"><a href="#1-IGMP协议" class="headerlink" title="1.IGMP协议"></a>1.IGMP协议</h3><p><img src="/../TyporaImage/image-20240622222246342.png" alt="image-20240622222246342"></p>
<h3 id="2-组播路由选择协议"><a href="#2-组播路由选择协议" class="headerlink" title="2.组播路由选择协议"></a>2.组播路由选择协议</h3><p><img src="/../TyporaImage/image-20240622222352762.png" alt="image-20240622222352762"></p>
<p><img src="/../TyporaImage/image-20240622222359896.png" alt="image-20240622222359896"></p>
<p>组播</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>IP组播是一种在网络中发送数据包到多个接收者的技术。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-组播地址-1"><a href="#1-组播地址-1" class="headerlink" title="1.组播地址"></a>1.组播地址</h3><h3 id="2-组播路由器-1"><a href="#2-组播路由器-1" class="headerlink" title="2.组播路由器"></a>2.组播路由器</h3><h3 id="3-组播协议（如IGMP-Internet-Group-Management-Protocol）。-1"><a href="#3-组播协议（如IGMP-Internet-Group-Management-Protocol）。-1" class="headerlink" title="3.组播协议（如IGMP - Internet Group Management Protocol）。"></a>3.组播协议（如IGMP - Internet Group Management Protocol）。</h3><h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>组播数据包发送到一个特定的组播地址，路由器根据组播协议将数据包转发到所有订阅该地址的设备。</p>
<p><img src="/../TyporaImage/image-20240622221703150.png" alt="image-20240622221703150"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>根据应用场景，组播可以分为单播、广播和组播。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.高效、减少网络带宽使用、降低网络延迟。</p>
<p>2.只能作为目的地址，不可以作为源地址。源地址总是单播地址</p>
<p>3.组播数据包也是最大努力交付</p>
<p>4.不是所有D类地址都可以作为组播地址</p>
<h2 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h2><h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-IGMP协议-1"><a href="#1-IGMP协议-1" class="headerlink" title="1.IGMP协议"></a>1.IGMP协议</h3><p><img src="/../TyporaImage/image-20240622222246342.png" alt="image-20240622222246342"></p>
<h3 id="2-组播路由选择协议-1"><a href="#2-组播路由选择协议-1" class="headerlink" title="2.组播路由选择协议"></a>2.组播路由选择协议</h3><p><img src="/../TyporaImage/image-20240622222352762.png" alt="image-20240622222352762"></p>
<p><img src="/../TyporaImage/image-20240622222359896.png" alt="image-20240622222359896"># IP组播</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>IP组播是一种在网络中发送数据包到多个接收者的技术。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-组播地址-2"><a href="#1-组播地址-2" class="headerlink" title="1.组播地址"></a>1.组播地址</h3><h3 id="2-组播路由器-2"><a href="#2-组播路由器-2" class="headerlink" title="2.组播路由器"></a>2.组播路由器</h3><h3 id="3-组播协议（如IGMP-Internet-Group-Management-Protocol）。-2"><a href="#3-组播协议（如IGMP-Internet-Group-Management-Protocol）。-2" class="headerlink" title="3.组播协议（如IGMP - Internet Group Management Protocol）。"></a>3.组播协议（如IGMP - Internet Group Management Protocol）。</h3><h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>组播数据包发送到一个特定的组播地址，路由器根据组播协议将数据包转发到所有订阅该地址的设备。</p>
<p><img src="/../TyporaImage/image-20240622221703150.png" alt="image-20240622221703150"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>根据应用场景，组播可以分为单播、广播和组播。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.高效、减少网络带宽使用、降低网络延迟。</p>
<p>2.只能作为目的地址，不可以作为源地址。源地址总是单播地址</p>
<p>3.组播数据包也是最大努力交付</p>
<p>4.不是所有D类地址都可以作为组播地址</p>
<h2 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h2><h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-IGMP协议-2"><a href="#1-IGMP协议-2" class="headerlink" title="1.IGMP协议"></a>1.IGMP协议</h3><p><img src="/../TyporaImage/image-20240622222246342.png" alt="image-20240622222246342"></p>
<h3 id="2-组播路由选择协议-2"><a href="#2-组播路由选择协议-2" class="headerlink" title="2.组播路由选择协议"></a>2.组播路由选择协议</h3><p><img src="/../TyporaImage/image-20240622222352762.png" alt="image-20240622222352762"></p>
<p><img src="/../TyporaImage/image-20240622222359896.png" alt="image-20240622222359896"></p>
<p>组播</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>IP组播是一种在网络中发送数据包到多个接收者的技术。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-组播地址-3"><a href="#1-组播地址-3" class="headerlink" title="1.组播地址"></a>1.组播地址</h3><h3 id="2-组播路由器-3"><a href="#2-组播路由器-3" class="headerlink" title="2.组播路由器"></a>2.组播路由器</h3><h3 id="3-组播协议（如IGMP-Internet-Group-Management-Protocol）。-3"><a href="#3-组播协议（如IGMP-Internet-Group-Management-Protocol）。-3" class="headerlink" title="3.组播协议（如IGMP - Internet Group Management Protocol）。"></a>3.组播协议（如IGMP - Internet Group Management Protocol）。</h3><h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>组播数据包发送到一个特定的组播地址，路由器根据组播协议将数据包转发到所有订阅该地址的设备。</p>
<p><img src="/../TyporaImage/image-20240622221703150.png" alt="image-20240622221703150"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>根据应用场景，组播可以分为单播、广播和组播。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.高效、减少网络带宽使用、降低网络延迟。</p>
<p>2.只能作为目的地址，不可以作为源地址。源地址总是单播地址</p>
<p>3.组播数据包也是最大努力交付</p>
<p>4.不是所有D类地址都可以作为组播地址</p>
<h2 id="使用方式-3"><a href="#使用方式-3" class="headerlink" title="使用方式"></a>使用方式</h2><h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-IGMP协议-3"><a href="#1-IGMP协议-3" class="headerlink" title="1.IGMP协议"></a>1.IGMP协议</h3><p><img src="/../TyporaImage/image-20240622222246342.png" alt="image-20240622222246342"></p>
<h3 id="2-组播路由选择协议-3"><a href="#2-组播路由选择协议-3" class="headerlink" title="2.组播路由选择协议"></a>2.组播路由选择协议</h3><p><img src="/../TyporaImage/image-20240622222352762.png" alt="image-20240622222352762"></p>
<p><img src="/../TyporaImage/image-20240622222359896.png" alt="image-20240622222359896"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>OSI模型</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/OSI%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="OSI模型"><a href="#OSI模型" class="headerlink" title="OSI模型"></a>OSI模型</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-应用层"><a href="#1-应用层" class="headerlink" title="1.应用层"></a>1.应用层</h3><p>所有能和用户交互可以产生网络流量的程序。</p>
<p>应用层服务：</p>
<p><img src="/../TyporaImage/image-20240603201550965.png" alt="image-20240603201550965"></p>
<h3 id="2-表示层"><a href="#2-表示层" class="headerlink" title="2.表示层"></a>2.表示层</h3><p>用于处理在两个通信系统中交换信息的表示方式。（语法和语义）</p>
<p>功能：</p>
<p>①数据格式变化</p>
<p>②数据加密表示</p>
<p>③数据压缩和恢复</p>
<p>主要协议：</p>
<p>JPEG、ASCII</p>
<h3 id="3-会话层"><a href="#3-会话层" class="headerlink" title="3.会话层"></a>3.会话层</h3><p>向表示层实体&#x2F;用户进程，提供建立连接并在连接上有序地传输数据。</p>
<p>功能：</p>
<p>①建立、管理、终止会话</p>
<p>②使用校验点可以使会话在通信失效时，从检验点&#x2F;同步点继续回复通信，实现数据同步。</p>
<p>主要协议：</p>
<p>ADSP、ASP</p>
<h3 id="4-传输层"><a href="#4-传输层" class="headerlink" title="4.传输层"></a>4.传输层</h3><p>负责两个主机中两个进程的通信，即端到端的通信。</p>
<p>功能：</p>
<p>①可靠传输</p>
<p>②不可靠传输</p>
<p>③差错控制</p>
<p>④流量控制</p>
<p>⑤复用分用</p>
<h3 id="5-网络层"><a href="#5-网络层" class="headerlink" title="5.网络层"></a>5.网络层</h3><p>网络层是计算机网络分层结构中的一个关键层次，它主要负责在分组交换网络中，将数据从源主机传输到目的主机。</p>
<p>功能：</p>
<p>①路由选择</p>
<p>②流量控制</p>
<p>③差错控制</p>
<p>④拥塞控制</p>
<h3 id="6-数据链路层"><a href="#6-数据链路层" class="headerlink" title="6.数据链路层"></a>6.数据链路层</h3><p>把网络层传下来的数据封装成帧。</p>
<p>功能：</p>
<p>①成帧（定义帧的开始和结束）</p>
<p>②差错控制（帧错+位错）</p>
<p>③流量控制</p>
<p>④访问（接入）控制：控制对信道的访问</p>
<h3 id="7-物理层"><a href="#7-物理层" class="headerlink" title="7.物理层"></a>7.物理层</h3><p>在物理媒体上实现比特流的透明传输。</p>
<p>功能：</p>
<p>①定义接口特性</p>
<p>②定义传输模式</p>
<p>③定义传输速率</p>
<p>④比特同步</p>
<p>⑤比特编码</p>
<p>主要协议：</p>
<p>RJ45、802.3</p>
<h2 id="相关知识"><a href="#相关知识" class="headerlink" title="相关知识"></a>相关知识</h2><p>复用：</p>
<p>多个应用层进程，可以同时使用下面的运输层服务。</p>
<p>分用：</p>
<p>运输层把收到的信息分别交付给上面应用层中相应的进程。</p>
<p>透明传输：</p>
<p>不管所传的数据是什么比特组合，都应当能在链路上传送。</p>
<p>模型</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-应用层-1"><a href="#1-应用层-1" class="headerlink" title="1.应用层"></a>1.应用层</h3><p>所有能和用户交互可以产生网络流量的程序。</p>
<p>应用层服务：</p>
<p><img src="/../TyporaImage/image-20240603201550965.png" alt="image-20240603201550965"></p>
<h3 id="2-表示层-1"><a href="#2-表示层-1" class="headerlink" title="2.表示层"></a>2.表示层</h3><p>用于处理在两个通信系统中交换信息的表示方式。（语法和语义）</p>
<p>功能：</p>
<p>①数据格式变化</p>
<p>②数据加密表示</p>
<p>③数据压缩和恢复</p>
<p>主要协议：</p>
<p>JPEG、ASCII</p>
<h3 id="3-会话层-1"><a href="#3-会话层-1" class="headerlink" title="3.会话层"></a>3.会话层</h3><p>向表示层实体&#x2F;用户进程，提供建立连接并在连接上有序地传输数据。</p>
<p>功能：</p>
<p>①建立、管理、终止会话</p>
<p>②使用校验点可以使会话在通信失效时，从检验点&#x2F;同步点继续回复通信，实现数据同步。</p>
<p>主要协议：</p>
<p>ADSP、ASP</p>
<h3 id="4-传输层-1"><a href="#4-传输层-1" class="headerlink" title="4.传输层"></a>4.传输层</h3><p>负责两个主机中两个进程的通信，即端到端的通信。</p>
<p>功能：</p>
<p>①可靠传输</p>
<p>②不可靠传输</p>
<p>③差错控制</p>
<p>④流量控制</p>
<p>⑤复用分用</p>
<h3 id="5-网络层-1"><a href="#5-网络层-1" class="headerlink" title="5.网络层"></a>5.网络层</h3><p>网络层是计算机网络分层结构中的一个关键层次，它主要负责在分组交换网络中，将数据从源主机传输到目的主机。</p>
<p>功能：</p>
<p>①路由选择</p>
<p>②流量控制</p>
<p>③差错控制</p>
<p>④拥塞控制</p>
<h3 id="6-数据链路层-1"><a href="#6-数据链路层-1" class="headerlink" title="6.数据链路层"></a>6.数据链路层</h3><p>把网络层传下来的数据封装成帧。</p>
<p>功能：</p>
<p>①成帧（定义帧的开始和结束）</p>
<p>②差错控制（帧错+位错）</p>
<p>③流量控制</p>
<p>④访问（接入）控制：控制对信道的访问</p>
<h3 id="7-物理层-1"><a href="#7-物理层-1" class="headerlink" title="7.物理层"></a>7.物理层</h3><p>在物理媒体上实现比特流的透明传输。</p>
<p>功能：</p>
<p>①定义接口特性</p>
<p>②定义传输模式</p>
<p>③定义传输速率</p>
<p>④比特同步</p>
<p>⑤比特编码</p>
<p>主要协议：</p>
<p>RJ45、802.3</p>
<h2 id="相关知识-1"><a href="#相关知识-1" class="headerlink" title="相关知识"></a>相关知识</h2><p>复用：</p>
<p>多个应用层进程，可以同时使用下面的运输层服务。</p>
<p>分用：</p>
<p>运输层把收到的信息分别交付给上面应用层中相应的进程。</p>
<p>透明传输：</p>
<p>不管所传的数据是什么比特组合，都应当能在链路上传送。# OSI模型</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-应用层-2"><a href="#1-应用层-2" class="headerlink" title="1.应用层"></a>1.应用层</h3><p>所有能和用户交互可以产生网络流量的程序。</p>
<p>应用层服务：</p>
<p><img src="/../TyporaImage/image-20240603201550965.png" alt="image-20240603201550965"></p>
<h3 id="2-表示层-2"><a href="#2-表示层-2" class="headerlink" title="2.表示层"></a>2.表示层</h3><p>用于处理在两个通信系统中交换信息的表示方式。（语法和语义）</p>
<p>功能：</p>
<p>①数据格式变化</p>
<p>②数据加密表示</p>
<p>③数据压缩和恢复</p>
<p>主要协议：</p>
<p>JPEG、ASCII</p>
<h3 id="3-会话层-2"><a href="#3-会话层-2" class="headerlink" title="3.会话层"></a>3.会话层</h3><p>向表示层实体&#x2F;用户进程，提供建立连接并在连接上有序地传输数据。</p>
<p>功能：</p>
<p>①建立、管理、终止会话</p>
<p>②使用校验点可以使会话在通信失效时，从检验点&#x2F;同步点继续回复通信，实现数据同步。</p>
<p>主要协议：</p>
<p>ADSP、ASP</p>
<h3 id="4-传输层-2"><a href="#4-传输层-2" class="headerlink" title="4.传输层"></a>4.传输层</h3><p>负责两个主机中两个进程的通信，即端到端的通信。</p>
<p>功能：</p>
<p>①可靠传输</p>
<p>②不可靠传输</p>
<p>③差错控制</p>
<p>④流量控制</p>
<p>⑤复用分用</p>
<h3 id="5-网络层-2"><a href="#5-网络层-2" class="headerlink" title="5.网络层"></a>5.网络层</h3><p>网络层是计算机网络分层结构中的一个关键层次，它主要负责在分组交换网络中，将数据从源主机传输到目的主机。</p>
<p>功能：</p>
<p>①路由选择</p>
<p>②流量控制</p>
<p>③差错控制</p>
<p>④拥塞控制</p>
<h3 id="6-数据链路层-2"><a href="#6-数据链路层-2" class="headerlink" title="6.数据链路层"></a>6.数据链路层</h3><p>把网络层传下来的数据封装成帧。</p>
<p>功能：</p>
<p>①成帧（定义帧的开始和结束）</p>
<p>②差错控制（帧错+位错）</p>
<p>③流量控制</p>
<p>④访问（接入）控制：控制对信道的访问</p>
<h3 id="7-物理层-2"><a href="#7-物理层-2" class="headerlink" title="7.物理层"></a>7.物理层</h3><p>在物理媒体上实现比特流的透明传输。</p>
<p>功能：</p>
<p>①定义接口特性</p>
<p>②定义传输模式</p>
<p>③定义传输速率</p>
<p>④比特同步</p>
<p>⑤比特编码</p>
<p>主要协议：</p>
<p>RJ45、802.3</p>
<h2 id="相关知识-2"><a href="#相关知识-2" class="headerlink" title="相关知识"></a>相关知识</h2><p>复用：</p>
<p>多个应用层进程，可以同时使用下面的运输层服务。</p>
<p>分用：</p>
<p>运输层把收到的信息分别交付给上面应用层中相应的进程。</p>
<p>透明传输：</p>
<p>不管所传的数据是什么比特组合，都应当能在链路上传送。</p>
<p>模型</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-应用层-3"><a href="#1-应用层-3" class="headerlink" title="1.应用层"></a>1.应用层</h3><p>所有能和用户交互可以产生网络流量的程序。</p>
<p>应用层服务：</p>
<p><img src="/../TyporaImage/image-20240603201550965.png" alt="image-20240603201550965"></p>
<h3 id="2-表示层-3"><a href="#2-表示层-3" class="headerlink" title="2.表示层"></a>2.表示层</h3><p>用于处理在两个通信系统中交换信息的表示方式。（语法和语义）</p>
<p>功能：</p>
<p>①数据格式变化</p>
<p>②数据加密表示</p>
<p>③数据压缩和恢复</p>
<p>主要协议：</p>
<p>JPEG、ASCII</p>
<h3 id="3-会话层-3"><a href="#3-会话层-3" class="headerlink" title="3.会话层"></a>3.会话层</h3><p>向表示层实体&#x2F;用户进程，提供建立连接并在连接上有序地传输数据。</p>
<p>功能：</p>
<p>①建立、管理、终止会话</p>
<p>②使用校验点可以使会话在通信失效时，从检验点&#x2F;同步点继续回复通信，实现数据同步。</p>
<p>主要协议：</p>
<p>ADSP、ASP</p>
<h3 id="4-传输层-3"><a href="#4-传输层-3" class="headerlink" title="4.传输层"></a>4.传输层</h3><p>负责两个主机中两个进程的通信，即端到端的通信。</p>
<p>功能：</p>
<p>①可靠传输</p>
<p>②不可靠传输</p>
<p>③差错控制</p>
<p>④流量控制</p>
<p>⑤复用分用</p>
<h3 id="5-网络层-3"><a href="#5-网络层-3" class="headerlink" title="5.网络层"></a>5.网络层</h3><p>网络层是计算机网络分层结构中的一个关键层次，它主要负责在分组交换网络中，将数据从源主机传输到目的主机。</p>
<p>功能：</p>
<p>①路由选择</p>
<p>②流量控制</p>
<p>③差错控制</p>
<p>④拥塞控制</p>
<h3 id="6-数据链路层-3"><a href="#6-数据链路层-3" class="headerlink" title="6.数据链路层"></a>6.数据链路层</h3><p>把网络层传下来的数据封装成帧。</p>
<p>功能：</p>
<p>①成帧（定义帧的开始和结束）</p>
<p>②差错控制（帧错+位错）</p>
<p>③流量控制</p>
<p>④访问（接入）控制：控制对信道的访问</p>
<h3 id="7-物理层-3"><a href="#7-物理层-3" class="headerlink" title="7.物理层"></a>7.物理层</h3><p>在物理媒体上实现比特流的透明传输。</p>
<p>功能：</p>
<p>①定义接口特性</p>
<p>②定义传输模式</p>
<p>③定义传输速率</p>
<p>④比特同步</p>
<p>⑤比特编码</p>
<p>主要协议：</p>
<p>RJ45、802.3</p>
<h2 id="相关知识-3"><a href="#相关知识-3" class="headerlink" title="相关知识"></a>相关知识</h2><p>复用：</p>
<p>多个应用层进程，可以同时使用下面的运输层服务。</p>
<p>分用：</p>
<p>运输层把收到的信息分别交付给上面应用层中相应的进程。</p>
<p>透明传输：</p>
<p>不管所传的数据是什么比特组合，都应当能在链路上传送。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>OSPF协议和链路状态算法</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/OSPF%E5%8D%8F%E8%AE%AE%E5%92%8C%E9%93%BE%E8%B7%AF%E7%8A%B6%E6%80%81%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h1 id="OSPF协议（传输层协议）"><a href="#OSPF协议（传输层协议）" class="headerlink" title="OSPF协议（传输层协议）"></a>OSPF协议（传输层协议）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>开放最短路径优先（OSPF，Open Shortest Path First）是一个基于链路状态的内部网关协议（IGP），用于在单一自治系统（AS）内进行路由选择。它由IETF开发，设计为在大型和复杂网络中高效和快速地确定最佳路由路径。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.OSPF区域</p>
<p>通过将大型网络划分为多个区域，简化路由管理和减小路由表的大小。</p>
<p>2.链路状态广告（LSA）</p>
<p>路由器定期生成和交换链路状态信息，构建网络拓扑图。</p>
<p>3.OSPF数据库</p>
<p>每个路由器维护一个链路状态数据库，存储从所有其他路由器收到的LSA。</p>
<p>4.OSPF报文</p>
<p>包括Hello、DBD、LSR、LSU、LSAck等，用于邻居发现、链路状态更新等功能。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.区域间路由</p>
<p>通过ABR（区域边界路由器）连接不同区域，实现区域间通信。</p>
<p>2.骨干区域（Area 0）</p>
<p>所有区域必须连接到骨干区域，用于区域间路由信息交换。</p>
<p>3.链路状态数据库同步</p>
<p>路由器通过交换LSA保持链路状态数据库的同步。</p>
<p>4.OSPF分组</p>
<p><img src="/../TyporaImage/image-20240622214135855.png" alt="image-20240622214135855"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.单区域OSPF</p>
<p>整个网络作为一个区域，适用于小型网络。</p>
<p>2.多区域OSPF将</p>
<p>网络划分为多个区域，适用于大型和复杂网络。</p>
<p>3.OSPFv2</p>
<p>用于IPv4网络的OSPF版本。</p>
<p>4.OSPFv3</p>
<p>用于IPv6网络的OSPF版本。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.快速收敛：路由变化能够快速传播到整个网络。<br>2.基于链路状态：每个路由器维护整个网络的拓扑视图。<br>3.支持多区域：通过划分区域简化路由管理，减小路由表。<br>4.支持VLSM和CIDR：能够处理可变长度子网掩码和无类域间路由选择。<br>5.安全性：支持路由更新认证，确保路由信息的完整性和真实性。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-链路状态信息交换"><a href="#1-链路状态信息交换" class="headerlink" title="1.链路状态信息交换"></a>1.链路状态信息交换</h3><h4 id="①使用洪泛法向自治系统内所有路由器发送信息"><a href="#①使用洪泛法向自治系统内所有路由器发送信息" class="headerlink" title="①使用洪泛法向自治系统内所有路由器发送信息"></a>①使用洪泛法向自治系统内所有路由器发送信息</h4><p>即路由器通过输出端口向所有相邻路由器发送信息，而每一个相邻路由器又再次将此信息发送往其所有的相邻路由器。最终整个区域内所有路由器都得到了这个信息的一个副本。</p>
<h4 id="②发送的信息是什么"><a href="#②发送的信息是什么" class="headerlink" title="②发送的信息是什么"></a>②发送的信息是什么</h4><p>发送的信息是与本路由器相邻的所有路由器的链路状态（本路由器和哪些路由器相邻，以及该链路的度量&#x2F;代价——费用、距离、时延、带宽等）。</p>
<h4 id="③多久交换"><a href="#③多久交换" class="headerlink" title="③多久交换"></a>③多久交换</h4><p>只有当链路状态发生变化时，路由器才向所有路由器洪泛发送此信息。<br>最后，所有路由器都能建立一个链路状态数据库，即全网拓扑图。</p>
<h1 id="链路状态路由算法"><a href="#链路状态路由算法" class="headerlink" title="链路状态路由算法"></a>链路状态路由算法</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>链路状态路由算法（Link State Routing Algorithm）是一种动态路由算法，基于网络中每个节点对其直接连接的链路状态的全面了解来计算路由。每个节点将其链路状态信息广播给网络中的其他节点，最终所有节点都能构建出整个网络的拓扑图，并使用最短路径算法（如Dijkstra算法）计算到其他节点的最短路径。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.链路状态包（LSP）</p>
<p>节点生成的包含其链路状态信息的数据包。</p>
<p>2.拓扑数据库</p>
<p>每个节点维护的链路状态信息数据库，存储从网络中其他节点收到的LSP。</p>
<p>3.路由计算</p>
<p>使用Dijkstra算法或其他最短路径算法计算到其他节点的最短路径。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.链路状态信息交换</p>
<p>节点通过洪泛法将LSP广播给网络中的所有其他节点。</p>
<p>2.拓扑图构建</p>
<p>每个节点根据收到的LSP构建整个网络的拓扑图。</p>
<p>3.路径计算</p>
<p>使用最短路径算法计算最佳路由路径。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.Dijkstra算法</p>
<p>经典的链路状态算法，用于计算从源节点到所有其他节点的最短路径。</p>
<p>2.OSPF协议</p>
<p>基于链路状态算法的路由协议，应用于内部网关路由选择。	</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.全局视图：每个节点维护整个网络的拓扑图，具备全局视图。<br>2.快速收敛：路由变化能迅速传播和处理，确保网络快速收敛。<br>3.精确路由选择：基于精确的拓扑图计算最短路径，提供最优路由选择。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.链路状态信息生成</p>
<p>每个节点生成包含其链路状态信息的LSP。</p>
<p>2.信息洪泛</p>
<p>节点将LSP广播给网络中的所有其他节点。</p>
<p>3.拓扑数据库更新</p>
<p>节点接收并存储其他节点的LSP，更新其拓扑数据库。</p>
<p>4.路径计算</p>
<p>使用Dijkstra算法计算最短路径，更新路由表。议）</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>开放最短路径优先（OSPF，Open Shortest Path First）是一个基于链路状态的内部网关协议（IGP），用于在单一自治系统（AS）内进行路由选择。它由IETF开发，设计为在大型和复杂网络中高效和快速地确定最佳路由路径。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.OSPF区域</p>
<p>通过将大型网络划分为多个区域，简化路由管理和减小路由表的大小。</p>
<p>2.链路状态广告（LSA）</p>
<p>路由器定期生成和交换链路状态信息，构建网络拓扑图。</p>
<p>3.OSPF数据库</p>
<p>每个路由器维护一个链路状态数据库，存储从所有其他路由器收到的LSA。</p>
<p>4.OSPF报文</p>
<p>包括Hello、DBD、LSR、LSU、LSAck等，用于邻居发现、链路状态更新等功能。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.区域间路由</p>
<p>通过ABR（区域边界路由器）连接不同区域，实现区域间通信。</p>
<p>2.骨干区域（Area 0）</p>
<p>所有区域必须连接到骨干区域，用于区域间路由信息交换。</p>
<p>3.链路状态数据库同步</p>
<p>路由器通过交换LSA保持链路状态数据库的同步。</p>
<p>4.OSPF分组</p>
<p><img src="/../TyporaImage/image-20240622214135855.png" alt="image-20240622214135855"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.单区域OSPF</p>
<p>整个网络作为一个区域，适用于小型网络。</p>
<p>2.多区域OSPF将</p>
<p>网络划分为多个区域，适用于大型和复杂网络。</p>
<p>3.OSPFv2</p>
<p>用于IPv4网络的OSPF版本。</p>
<p>4.OSPFv3</p>
<p>用于IPv6网络的OSPF版本。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.快速收敛：路由变化能够快速传播到整个网络。<br>2.基于链路状态：每个路由器维护整个网络的拓扑视图。<br>3.支持多区域：通过划分区域简化路由管理，减小路由表。<br>4.支持VLSM和CIDR：能够处理可变长度子网掩码和无类域间路由选择。<br>5.安全性：支持路由更新认证，确保路由信息的完整性和真实性。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-链路状态信息交换-1"><a href="#1-链路状态信息交换-1" class="headerlink" title="1.链路状态信息交换"></a>1.链路状态信息交换</h3><h4 id="①使用洪泛法向自治系统内所有路由器发送信息-1"><a href="#①使用洪泛法向自治系统内所有路由器发送信息-1" class="headerlink" title="①使用洪泛法向自治系统内所有路由器发送信息"></a>①使用洪泛法向自治系统内所有路由器发送信息</h4><p>即路由器通过输出端口向所有相邻路由器发送信息，而每一个相邻路由器又再次将此信息发送往其所有的相邻路由器。最终整个区域内所有路由器都得到了这个信息的一个副本。</p>
<h4 id="②发送的信息是什么-1"><a href="#②发送的信息是什么-1" class="headerlink" title="②发送的信息是什么"></a>②发送的信息是什么</h4><p>发送的信息是与本路由器相邻的所有路由器的链路状态（本路由器和哪些路由器相邻，以及该链路的度量&#x2F;代价——费用、距离、时延、带宽等）。</p>
<h4 id="③多久交换-1"><a href="#③多久交换-1" class="headerlink" title="③多久交换"></a>③多久交换</h4><p>只有当链路状态发生变化时，路由器才向所有路由器洪泛发送此信息。<br>最后，所有路由器都能建立一个链路状态数据库，即全网拓扑图。</p>
<h1 id="链路状态路由算法-1"><a href="#链路状态路由算法-1" class="headerlink" title="链路状态路由算法"></a>链路状态路由算法</h1><h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>链路状态路由算法（Link State Routing Algorithm）是一种动态路由算法，基于网络中每个节点对其直接连接的链路状态的全面了解来计算路由。每个节点将其链路状态信息广播给网络中的其他节点，最终所有节点都能构建出整个网络的拓扑图，并使用最短路径算法（如Dijkstra算法）计算到其他节点的最短路径。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.链路状态包（LSP）</p>
<p>节点生成的包含其链路状态信息的数据包。</p>
<p>2.拓扑数据库</p>
<p>每个节点维护的链路状态信息数据库，存储从网络中其他节点收到的LSP。</p>
<p>3.路由计算</p>
<p>使用Dijkstra算法或其他最短路径算法计算到其他节点的最短路径。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.链路状态信息交换</p>
<p>节点通过洪泛法将LSP广播给网络中的所有其他节点。</p>
<p>2.拓扑图构建</p>
<p>每个节点根据收到的LSP构建整个网络的拓扑图。</p>
<p>3.路径计算</p>
<p>使用最短路径算法计算最佳路由路径。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.Dijkstra算法</p>
<p>经典的链路状态算法，用于计算从源节点到所有其他节点的最短路径。</p>
<p>2.OSPF协议</p>
<p>基于链路状态算法的路由协议，应用于内部网关路由选择。	</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.全局视图：每个节点维护整个网络的拓扑图，具备全局视图。<br>2.快速收敛：路由变化能迅速传播和处理，确保网络快速收敛。<br>3.精确路由选择：基于精确的拓扑图计算最短路径，提供最优路由选择。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.链路状态信息生成</p>
<p>每个节点生成包含其链路状态信息的LSP。</p>
<p>2.信息洪泛</p>
<p>节点将LSP广播给网络中的所有其他节点。</p>
<p>3.拓扑数据库更新</p>
<p>节点接收并存储其他节点的LSP，更新其拓扑数据库。</p>
<p>4.路径计算</p>
<p>使用Dijkstra算法计算最短路径，更新路由表。# OSPF协议（传输层协议）</p>
<h2 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h2><p>开放最短路径优先（OSPF，Open Shortest Path First）是一个基于链路状态的内部网关协议（IGP），用于在单一自治系统（AS）内进行路由选择。它由IETF开发，设计为在大型和复杂网络中高效和快速地确定最佳路由路径。</p>
<h2 id="组成部分-4"><a href="#组成部分-4" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.OSPF区域</p>
<p>通过将大型网络划分为多个区域，简化路由管理和减小路由表的大小。</p>
<p>2.链路状态广告（LSA）</p>
<p>路由器定期生成和交换链路状态信息，构建网络拓扑图。</p>
<p>3.OSPF数据库</p>
<p>每个路由器维护一个链路状态数据库，存储从所有其他路由器收到的LSA。</p>
<p>4.OSPF报文</p>
<p>包括Hello、DBD、LSR、LSU、LSAck等，用于邻居发现、链路状态更新等功能。</p>
<h2 id="结构形式-4"><a href="#结构形式-4" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.区域间路由</p>
<p>通过ABR（区域边界路由器）连接不同区域，实现区域间通信。</p>
<p>2.骨干区域（Area 0）</p>
<p>所有区域必须连接到骨干区域，用于区域间路由信息交换。</p>
<p>3.链路状态数据库同步</p>
<p>路由器通过交换LSA保持链路状态数据库的同步。</p>
<p>4.OSPF分组</p>
<p><img src="/../TyporaImage/image-20240622214135855.png" alt="image-20240622214135855"></p>
<h2 id="分类-4"><a href="#分类-4" class="headerlink" title="分类"></a>分类</h2><p>1.单区域OSPF</p>
<p>整个网络作为一个区域，适用于小型网络。</p>
<p>2.多区域OSPF将</p>
<p>网络划分为多个区域，适用于大型和复杂网络。</p>
<p>3.OSPFv2</p>
<p>用于IPv4网络的OSPF版本。</p>
<p>4.OSPFv3</p>
<p>用于IPv6网络的OSPF版本。</p>
<h2 id="特征-4"><a href="#特征-4" class="headerlink" title="特征"></a>特征</h2><p>1.快速收敛：路由变化能够快速传播到整个网络。<br>2.基于链路状态：每个路由器维护整个网络的拓扑视图。<br>3.支持多区域：通过划分区域简化路由管理，减小路由表。<br>4.支持VLSM和CIDR：能够处理可变长度子网掩码和无类域间路由选择。<br>5.安全性：支持路由更新认证，确保路由信息的完整性和真实性。</p>
<h2 id="使用方法-4"><a href="#使用方法-4" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-链路状态信息交换-2"><a href="#1-链路状态信息交换-2" class="headerlink" title="1.链路状态信息交换"></a>1.链路状态信息交换</h3><h4 id="①使用洪泛法向自治系统内所有路由器发送信息-2"><a href="#①使用洪泛法向自治系统内所有路由器发送信息-2" class="headerlink" title="①使用洪泛法向自治系统内所有路由器发送信息"></a>①使用洪泛法向自治系统内所有路由器发送信息</h4><p>即路由器通过输出端口向所有相邻路由器发送信息，而每一个相邻路由器又再次将此信息发送往其所有的相邻路由器。最终整个区域内所有路由器都得到了这个信息的一个副本。</p>
<h4 id="②发送的信息是什么-2"><a href="#②发送的信息是什么-2" class="headerlink" title="②发送的信息是什么"></a>②发送的信息是什么</h4><p>发送的信息是与本路由器相邻的所有路由器的链路状态（本路由器和哪些路由器相邻，以及该链路的度量&#x2F;代价——费用、距离、时延、带宽等）。</p>
<h4 id="③多久交换-2"><a href="#③多久交换-2" class="headerlink" title="③多久交换"></a>③多久交换</h4><p>只有当链路状态发生变化时，路由器才向所有路由器洪泛发送此信息。<br>最后，所有路由器都能建立一个链路状态数据库，即全网拓扑图。</p>
<h1 id="链路状态路由算法-2"><a href="#链路状态路由算法-2" class="headerlink" title="链路状态路由算法"></a>链路状态路由算法</h1><h2 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h2><p>链路状态路由算法（Link State Routing Algorithm）是一种动态路由算法，基于网络中每个节点对其直接连接的链路状态的全面了解来计算路由。每个节点将其链路状态信息广播给网络中的其他节点，最终所有节点都能构建出整个网络的拓扑图，并使用最短路径算法（如Dijkstra算法）计算到其他节点的最短路径。</p>
<h2 id="组成部分-5"><a href="#组成部分-5" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.链路状态包（LSP）</p>
<p>节点生成的包含其链路状态信息的数据包。</p>
<p>2.拓扑数据库</p>
<p>每个节点维护的链路状态信息数据库，存储从网络中其他节点收到的LSP。</p>
<p>3.路由计算</p>
<p>使用Dijkstra算法或其他最短路径算法计算到其他节点的最短路径。</p>
<h2 id="结构形式-5"><a href="#结构形式-5" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.链路状态信息交换</p>
<p>节点通过洪泛法将LSP广播给网络中的所有其他节点。</p>
<p>2.拓扑图构建</p>
<p>每个节点根据收到的LSP构建整个网络的拓扑图。</p>
<p>3.路径计算</p>
<p>使用最短路径算法计算最佳路由路径。</p>
<h2 id="分类-5"><a href="#分类-5" class="headerlink" title="分类"></a>分类</h2><p>1.Dijkstra算法</p>
<p>经典的链路状态算法，用于计算从源节点到所有其他节点的最短路径。</p>
<p>2.OSPF协议</p>
<p>基于链路状态算法的路由协议，应用于内部网关路由选择。	</p>
<h2 id="特征-5"><a href="#特征-5" class="headerlink" title="特征"></a>特征</h2><p>1.全局视图：每个节点维护整个网络的拓扑图，具备全局视图。<br>2.快速收敛：路由变化能迅速传播和处理，确保网络快速收敛。<br>3.精确路由选择：基于精确的拓扑图计算最短路径，提供最优路由选择。</p>
<h2 id="使用方法-5"><a href="#使用方法-5" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.链路状态信息生成</p>
<p>每个节点生成包含其链路状态信息的LSP。</p>
<p>2.信息洪泛</p>
<p>节点将LSP广播给网络中的所有其他节点。</p>
<p>3.拓扑数据库更新</p>
<p>节点接收并存储其他节点的LSP，更新其拓扑数据库。</p>
<p>4.路径计算</p>
<p>使用Dijkstra算法计算最短路径，更新路由表。议）</p>
<h2 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h2><p>开放最短路径优先（OSPF，Open Shortest Path First）是一个基于链路状态的内部网关协议（IGP），用于在单一自治系统（AS）内进行路由选择。它由IETF开发，设计为在大型和复杂网络中高效和快速地确定最佳路由路径。</p>
<h2 id="组成部分-6"><a href="#组成部分-6" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.OSPF区域</p>
<p>通过将大型网络划分为多个区域，简化路由管理和减小路由表的大小。</p>
<p>2.链路状态广告（LSA）</p>
<p>路由器定期生成和交换链路状态信息，构建网络拓扑图。</p>
<p>3.OSPF数据库</p>
<p>每个路由器维护一个链路状态数据库，存储从所有其他路由器收到的LSA。</p>
<p>4.OSPF报文</p>
<p>包括Hello、DBD、LSR、LSU、LSAck等，用于邻居发现、链路状态更新等功能。</p>
<h2 id="结构形式-6"><a href="#结构形式-6" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.区域间路由</p>
<p>通过ABR（区域边界路由器）连接不同区域，实现区域间通信。</p>
<p>2.骨干区域（Area 0）</p>
<p>所有区域必须连接到骨干区域，用于区域间路由信息交换。</p>
<p>3.链路状态数据库同步</p>
<p>路由器通过交换LSA保持链路状态数据库的同步。</p>
<p>4.OSPF分组</p>
<p><img src="/../TyporaImage/image-20240622214135855.png" alt="image-20240622214135855"></p>
<h2 id="分类-6"><a href="#分类-6" class="headerlink" title="分类"></a>分类</h2><p>1.单区域OSPF</p>
<p>整个网络作为一个区域，适用于小型网络。</p>
<p>2.多区域OSPF将</p>
<p>网络划分为多个区域，适用于大型和复杂网络。</p>
<p>3.OSPFv2</p>
<p>用于IPv4网络的OSPF版本。</p>
<p>4.OSPFv3</p>
<p>用于IPv6网络的OSPF版本。</p>
<h2 id="特征-6"><a href="#特征-6" class="headerlink" title="特征"></a>特征</h2><p>1.快速收敛：路由变化能够快速传播到整个网络。<br>2.基于链路状态：每个路由器维护整个网络的拓扑视图。<br>3.支持多区域：通过划分区域简化路由管理，减小路由表。<br>4.支持VLSM和CIDR：能够处理可变长度子网掩码和无类域间路由选择。<br>5.安全性：支持路由更新认证，确保路由信息的完整性和真实性。</p>
<h2 id="使用方法-6"><a href="#使用方法-6" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-链路状态信息交换-3"><a href="#1-链路状态信息交换-3" class="headerlink" title="1.链路状态信息交换"></a>1.链路状态信息交换</h3><h4 id="①使用洪泛法向自治系统内所有路由器发送信息-3"><a href="#①使用洪泛法向自治系统内所有路由器发送信息-3" class="headerlink" title="①使用洪泛法向自治系统内所有路由器发送信息"></a>①使用洪泛法向自治系统内所有路由器发送信息</h4><p>即路由器通过输出端口向所有相邻路由器发送信息，而每一个相邻路由器又再次将此信息发送往其所有的相邻路由器。最终整个区域内所有路由器都得到了这个信息的一个副本。</p>
<h4 id="②发送的信息是什么-3"><a href="#②发送的信息是什么-3" class="headerlink" title="②发送的信息是什么"></a>②发送的信息是什么</h4><p>发送的信息是与本路由器相邻的所有路由器的链路状态（本路由器和哪些路由器相邻，以及该链路的度量&#x2F;代价——费用、距离、时延、带宽等）。</p>
<h4 id="③多久交换-3"><a href="#③多久交换-3" class="headerlink" title="③多久交换"></a>③多久交换</h4><p>只有当链路状态发生变化时，路由器才向所有路由器洪泛发送此信息。<br>最后，所有路由器都能建立一个链路状态数据库，即全网拓扑图。</p>
<h1 id="链路状态路由算法-3"><a href="#链路状态路由算法-3" class="headerlink" title="链路状态路由算法"></a>链路状态路由算法</h1><h2 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h2><p>链路状态路由算法（Link State Routing Algorithm）是一种动态路由算法，基于网络中每个节点对其直接连接的链路状态的全面了解来计算路由。每个节点将其链路状态信息广播给网络中的其他节点，最终所有节点都能构建出整个网络的拓扑图，并使用最短路径算法（如Dijkstra算法）计算到其他节点的最短路径。</p>
<h2 id="组成部分-7"><a href="#组成部分-7" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.链路状态包（LSP）</p>
<p>节点生成的包含其链路状态信息的数据包。</p>
<p>2.拓扑数据库</p>
<p>每个节点维护的链路状态信息数据库，存储从网络中其他节点收到的LSP。</p>
<p>3.路由计算</p>
<p>使用Dijkstra算法或其他最短路径算法计算到其他节点的最短路径。</p>
<h2 id="结构形式-7"><a href="#结构形式-7" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.链路状态信息交换</p>
<p>节点通过洪泛法将LSP广播给网络中的所有其他节点。</p>
<p>2.拓扑图构建</p>
<p>每个节点根据收到的LSP构建整个网络的拓扑图。</p>
<p>3.路径计算</p>
<p>使用最短路径算法计算最佳路由路径。</p>
<h2 id="分类-7"><a href="#分类-7" class="headerlink" title="分类"></a>分类</h2><p>1.Dijkstra算法</p>
<p>经典的链路状态算法，用于计算从源节点到所有其他节点的最短路径。</p>
<p>2.OSPF协议</p>
<p>基于链路状态算法的路由协议，应用于内部网关路由选择。	</p>
<h2 id="特征-7"><a href="#特征-7" class="headerlink" title="特征"></a>特征</h2><p>1.全局视图：每个节点维护整个网络的拓扑图，具备全局视图。<br>2.快速收敛：路由变化能迅速传播和处理，确保网络快速收敛。<br>3.精确路由选择：基于精确的拓扑图计算最短路径，提供最优路由选择。</p>
<h2 id="使用方法-7"><a href="#使用方法-7" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.链路状态信息生成</p>
<p>每个节点生成包含其链路状态信息的LSP。</p>
<p>2.信息洪泛</p>
<p>节点将LSP广播给网络中的所有其他节点。</p>
<p>3.拓扑数据库更新</p>
<p>节点接收并存储其他节点的LSP，更新其拓扑数据库。</p>
<p>4.路径计算</p>
<p>使用Dijkstra算法计算最短路径，更新路由表。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>RIP协议与距离向量算法</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/RIP%E5%8D%8F%E8%AE%AE%E4%B8%8E%E8%B7%9D%E7%A6%BB%E5%90%91%E9%87%8F%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h1 id="RIP协议（应用层协议）"><a href="#RIP协议（应用层协议）" class="headerlink" title="RIP协议（应用层协议）"></a>RIP协议（应用层协议）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>路由信息协议（RIP，Routing Information Protocol）是一种基于距离矢量的内部网关协议（IGP），用于小型和中型网络中的动态路由选择。它通过定期交换路由信息来更新路由表，以确定到达各个目标网络的最佳路径。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.路由更新</p>
<p>RIP路由器定期广播其路由表中的所有路由信息给相邻路由器。</p>
<p>2.跳数限制</p>
<p>RIP使用跳数（Hop Count）作为度量，每个跳表示一个路由器，最大跳数为15，16表示不可达。</p>
<p>3.定时器</p>
<p>RIP包括更新定时器、过期定时器和垃圾回收定时器，以管理路由信息的更新和失效。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.路由表</p>
<p>每个RIP路由器维护一个路由表，包含目的网络、下一跳路由器和跳数等信息。</p>
<p>2.RIP报文</p>
<p>包含命令、版本号、路由条目等，用于路由信息的传输。</p>
<p><img src="/../TyporaImage/image-20240622211852605.png" alt="image-20240622211852605"></p>
<p><img src="/../TyporaImage/image-20240622211538779.png" alt="image-20240622211538779"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.RIPv1</p>
<p>第一版的RIP协议，不支持子网掩码信息，属于无类域间路由选择（Classful Routing）。</p>
<p>2.RIPv2</p>
<p>第二版的RIP协议，支持子网掩码信息，属于有类域间路由选择（Classless Routing），并且支持认证。<br>3.RIPng</p>
<p>RIP的下一代版本，用于IPv6网络，扩展了RIPv2的功能以支持IPv6地址。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.简单性</p>
<p>实现和配置相对简单，适用于小型和中型网络。</p>
<p>2.定期更新</p>
<p>路由器定期发送其路由表，无需触发更新。</p>
<p>3.有限跳数</p>
<p>最大跳数为15，适合小规模网络，防止路由环路。</p>
<p>4.好消息传的快，坏消息传的慢</p>
<p><img src="/../TyporaImage/image-20240622212018717.png" alt="image-20240622212018717"></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>1.提供一种简单的动态路由协议，用于小型和中型网络的路由管理。<br>2.自动更新路由信息，减少手动配置的复杂性。</p>
<h1 id="距离向量算法"><a href="#距离向量算法" class="headerlink" title="距离向量算法"></a>距离向量算法</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240622211717052.png" alt="image-20240622211717052"></p>
<p>议）</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>路由信息协议（RIP，Routing Information Protocol）是一种基于距离矢量的内部网关协议（IGP），用于小型和中型网络中的动态路由选择。它通过定期交换路由信息来更新路由表，以确定到达各个目标网络的最佳路径。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.路由更新</p>
<p>RIP路由器定期广播其路由表中的所有路由信息给相邻路由器。</p>
<p>2.跳数限制</p>
<p>RIP使用跳数（Hop Count）作为度量，每个跳表示一个路由器，最大跳数为15，16表示不可达。</p>
<p>3.定时器</p>
<p>RIP包括更新定时器、过期定时器和垃圾回收定时器，以管理路由信息的更新和失效。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.路由表</p>
<p>每个RIP路由器维护一个路由表，包含目的网络、下一跳路由器和跳数等信息。</p>
<p>2.RIP报文</p>
<p>包含命令、版本号、路由条目等，用于路由信息的传输。</p>
<p><img src="/../TyporaImage/image-20240622211852605.png" alt="image-20240622211852605"></p>
<p><img src="/../TyporaImage/image-20240622211538779.png" alt="image-20240622211538779"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.RIPv1</p>
<p>第一版的RIP协议，不支持子网掩码信息，属于无类域间路由选择（Classful Routing）。</p>
<p>2.RIPv2</p>
<p>第二版的RIP协议，支持子网掩码信息，属于有类域间路由选择（Classless Routing），并且支持认证。<br>3.RIPng</p>
<p>RIP的下一代版本，用于IPv6网络，扩展了RIPv2的功能以支持IPv6地址。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.简单性</p>
<p>实现和配置相对简单，适用于小型和中型网络。</p>
<p>2.定期更新</p>
<p>路由器定期发送其路由表，无需触发更新。</p>
<p>3.有限跳数</p>
<p>最大跳数为15，适合小规模网络，防止路由环路。</p>
<p>4.好消息传的快，坏消息传的慢</p>
<p><img src="/../TyporaImage/image-20240622212018717.png" alt="image-20240622212018717"></p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>1.提供一种简单的动态路由协议，用于小型和中型网络的路由管理。<br>2.自动更新路由信息，减少手动配置的复杂性。</p>
<h1 id="距离向量算法-1"><a href="#距离向量算法-1" class="headerlink" title="距离向量算法"></a>距离向量算法</h1><h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240622211717052.png" alt="image-20240622211717052"># RIP协议（应用层协议）</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>路由信息协议（RIP，Routing Information Protocol）是一种基于距离矢量的内部网关协议（IGP），用于小型和中型网络中的动态路由选择。它通过定期交换路由信息来更新路由表，以确定到达各个目标网络的最佳路径。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.路由更新</p>
<p>RIP路由器定期广播其路由表中的所有路由信息给相邻路由器。</p>
<p>2.跳数限制</p>
<p>RIP使用跳数（Hop Count）作为度量，每个跳表示一个路由器，最大跳数为15，16表示不可达。</p>
<p>3.定时器</p>
<p>RIP包括更新定时器、过期定时器和垃圾回收定时器，以管理路由信息的更新和失效。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.路由表</p>
<p>每个RIP路由器维护一个路由表，包含目的网络、下一跳路由器和跳数等信息。</p>
<p>2.RIP报文</p>
<p>包含命令、版本号、路由条目等，用于路由信息的传输。</p>
<p><img src="/../TyporaImage/image-20240622211852605.png" alt="image-20240622211852605"></p>
<p><img src="/../TyporaImage/image-20240622211538779.png" alt="image-20240622211538779"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.RIPv1</p>
<p>第一版的RIP协议，不支持子网掩码信息，属于无类域间路由选择（Classful Routing）。</p>
<p>2.RIPv2</p>
<p>第二版的RIP协议，支持子网掩码信息，属于有类域间路由选择（Classless Routing），并且支持认证。<br>3.RIPng</p>
<p>RIP的下一代版本，用于IPv6网络，扩展了RIPv2的功能以支持IPv6地址。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.简单性</p>
<p>实现和配置相对简单，适用于小型和中型网络。</p>
<p>2.定期更新</p>
<p>路由器定期发送其路由表，无需触发更新。</p>
<p>3.有限跳数</p>
<p>最大跳数为15，适合小规模网络，防止路由环路。</p>
<p>4.好消息传的快，坏消息传的慢</p>
<p><img src="/../TyporaImage/image-20240622212018717.png" alt="image-20240622212018717"></p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>1.提供一种简单的动态路由协议，用于小型和中型网络的路由管理。<br>2.自动更新路由信息，减少手动配置的复杂性。</p>
<h1 id="距离向量算法-2"><a href="#距离向量算法-2" class="headerlink" title="距离向量算法"></a>距离向量算法</h1><h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240622211717052.png" alt="image-20240622211717052"></p>
<p>议）</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>路由信息协议（RIP，Routing Information Protocol）是一种基于距离矢量的内部网关协议（IGP），用于小型和中型网络中的动态路由选择。它通过定期交换路由信息来更新路由表，以确定到达各个目标网络的最佳路径。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.路由更新</p>
<p>RIP路由器定期广播其路由表中的所有路由信息给相邻路由器。</p>
<p>2.跳数限制</p>
<p>RIP使用跳数（Hop Count）作为度量，每个跳表示一个路由器，最大跳数为15，16表示不可达。</p>
<p>3.定时器</p>
<p>RIP包括更新定时器、过期定时器和垃圾回收定时器，以管理路由信息的更新和失效。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.路由表</p>
<p>每个RIP路由器维护一个路由表，包含目的网络、下一跳路由器和跳数等信息。</p>
<p>2.RIP报文</p>
<p>包含命令、版本号、路由条目等，用于路由信息的传输。</p>
<p><img src="/../TyporaImage/image-20240622211852605.png" alt="image-20240622211852605"></p>
<p><img src="/../TyporaImage/image-20240622211538779.png" alt="image-20240622211538779"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.RIPv1</p>
<p>第一版的RIP协议，不支持子网掩码信息，属于无类域间路由选择（Classful Routing）。</p>
<p>2.RIPv2</p>
<p>第二版的RIP协议，支持子网掩码信息，属于有类域间路由选择（Classless Routing），并且支持认证。<br>3.RIPng</p>
<p>RIP的下一代版本，用于IPv6网络，扩展了RIPv2的功能以支持IPv6地址。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.简单性</p>
<p>实现和配置相对简单，适用于小型和中型网络。</p>
<p>2.定期更新</p>
<p>路由器定期发送其路由表，无需触发更新。</p>
<p>3.有限跳数</p>
<p>最大跳数为15，适合小规模网络，防止路由环路。</p>
<p>4.好消息传的快，坏消息传的慢</p>
<p><img src="/../TyporaImage/image-20240622212018717.png" alt="image-20240622212018717"></p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>1.提供一种简单的动态路由协议，用于小型和中型网络的路由管理。<br>2.自动更新路由信息，减少手动配置的复杂性。</p>
<h1 id="距离向量算法-3"><a href="#距离向量算法-3" class="headerlink" title="距离向量算法"></a>距离向量算法</h1><h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240622211717052.png" alt="image-20240622211717052"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>SDN基本概念</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/SDN%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h1 id="SDN基本概念"><a href="#SDN基本概念" class="headerlink" title="SDN基本概念"></a>SDN基本概念</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p> 软件定义网络（SDN，Software-Defined Networking）是一种网络架构方法，通过将网络的控制平面和数据平面分离，实现网络的集中控制和动态管理。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.控制平面（Control Plane）：负责网络的智能决策和流量管理。<br>2.数据平面（Data Plane）：负责数据的实际转发和处理。<br>3.SDN控制器（Controller）：集中管理网络设备和流量路由。<br>4.南向接口（Southbound API）：控制器与数据平面设备之间的通信接口，常见协议如OpenFlow。<br>5.北向接口（Northbound API）：控制器与应用程序之间的通信接口，允许应用程序控制网络资源。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240622155239009.png" alt="image-20240622155239009"></p>
<p><img src="/../TyporaImage/image-20240622155408441.png" alt="image-20240622155408441"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-数据平面"><a href="#1-数据平面" class="headerlink" title="1.数据平面"></a>1.数据平面</h3><p>处理各种具体处理转发过程，根据转发表进行转发。</p>
<h3 id="2-控制平面"><a href="#2-控制平面" class="headerlink" title="2.控制平面"></a>2.控制平面</h3><p>用于控制和管理网络协议的运行，比如OSPF协议、RIP协议、BGP协议</p>
<h3 id="3-网络控制应用程序"><a href="#3-网络控制应用程序" class="headerlink" title="3.网络控制应用程序"></a>3.网络控制应用程序</h3><p>根据SDN控制器提供的方法，这个应用通过这些方法能够监视、编程和控制下面的网络</p>
<p>概念</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p> 软件定义网络（SDN，Software-Defined Networking）是一种网络架构方法，通过将网络的控制平面和数据平面分离，实现网络的集中控制和动态管理。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.控制平面（Control Plane）：负责网络的智能决策和流量管理。<br>2.数据平面（Data Plane）：负责数据的实际转发和处理。<br>3.SDN控制器（Controller）：集中管理网络设备和流量路由。<br>4.南向接口（Southbound API）：控制器与数据平面设备之间的通信接口，常见协议如OpenFlow。<br>5.北向接口（Northbound API）：控制器与应用程序之间的通信接口，允许应用程序控制网络资源。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240622155239009.png" alt="image-20240622155239009"></p>
<p><img src="/../TyporaImage/image-20240622155408441.png" alt="image-20240622155408441"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-数据平面-1"><a href="#1-数据平面-1" class="headerlink" title="1.数据平面"></a>1.数据平面</h3><p>处理各种具体处理转发过程，根据转发表进行转发。</p>
<h3 id="2-控制平面-1"><a href="#2-控制平面-1" class="headerlink" title="2.控制平面"></a>2.控制平面</h3><p>用于控制和管理网络协议的运行，比如OSPF协议、RIP协议、BGP协议</p>
<h3 id="3-网络控制应用程序-1"><a href="#3-网络控制应用程序-1" class="headerlink" title="3.网络控制应用程序"></a>3.网络控制应用程序</h3><p>根据SDN控制器提供的方法，这个应用通过这些方法能够监视、编程和控制下面的网络# SDN基本概念</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p> 软件定义网络（SDN，Software-Defined Networking）是一种网络架构方法，通过将网络的控制平面和数据平面分离，实现网络的集中控制和动态管理。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.控制平面（Control Plane）：负责网络的智能决策和流量管理。<br>2.数据平面（Data Plane）：负责数据的实际转发和处理。<br>3.SDN控制器（Controller）：集中管理网络设备和流量路由。<br>4.南向接口（Southbound API）：控制器与数据平面设备之间的通信接口，常见协议如OpenFlow。<br>5.北向接口（Northbound API）：控制器与应用程序之间的通信接口，允许应用程序控制网络资源。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240622155239009.png" alt="image-20240622155239009"></p>
<p><img src="/../TyporaImage/image-20240622155408441.png" alt="image-20240622155408441"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-数据平面-2"><a href="#1-数据平面-2" class="headerlink" title="1.数据平面"></a>1.数据平面</h3><p>处理各种具体处理转发过程，根据转发表进行转发。</p>
<h3 id="2-控制平面-2"><a href="#2-控制平面-2" class="headerlink" title="2.控制平面"></a>2.控制平面</h3><p>用于控制和管理网络协议的运行，比如OSPF协议、RIP协议、BGP协议</p>
<h3 id="3-网络控制应用程序-2"><a href="#3-网络控制应用程序-2" class="headerlink" title="3.网络控制应用程序"></a>3.网络控制应用程序</h3><p>根据SDN控制器提供的方法，这个应用通过这些方法能够监视、编程和控制下面的网络</p>
<p>概念</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p> 软件定义网络（SDN，Software-Defined Networking）是一种网络架构方法，通过将网络的控制平面和数据平面分离，实现网络的集中控制和动态管理。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.控制平面（Control Plane）：负责网络的智能决策和流量管理。<br>2.数据平面（Data Plane）：负责数据的实际转发和处理。<br>3.SDN控制器（Controller）：集中管理网络设备和流量路由。<br>4.南向接口（Southbound API）：控制器与数据平面设备之间的通信接口，常见协议如OpenFlow。<br>5.北向接口（Northbound API）：控制器与应用程序之间的通信接口，允许应用程序控制网络资源。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240622155239009.png" alt="image-20240622155239009"></p>
<p><img src="/../TyporaImage/image-20240622155408441.png" alt="image-20240622155408441"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-数据平面-3"><a href="#1-数据平面-3" class="headerlink" title="1.数据平面"></a>1.数据平面</h3><p>处理各种具体处理转发过程，根据转发表进行转发。</p>
<h3 id="2-控制平面-3"><a href="#2-控制平面-3" class="headerlink" title="2.控制平面"></a>2.控制平面</h3><p>用于控制和管理网络协议的运行，比如OSPF协议、RIP协议、BGP协议</p>
<h3 id="3-网络控制应用程序-3"><a href="#3-网络控制应用程序-3" class="headerlink" title="3.网络控制应用程序"></a>3.网络控制应用程序</h3><p>根据SDN控制器提供的方法，这个应用通过这些方法能够监视、编程和控制下面的网络</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>TCP、IP模型</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCP%E3%80%81IP%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="TCP-IP模型"><a href="#TCP-IP模型" class="headerlink" title="TCP&#x2F;IP模型"></a>TCP&#x2F;IP模型</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.应用层</p>
<p>2.传输层</p>
<p>3.网际层</p>
<p>4.网络接口层</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><img src="../TyporaImage/image-20240603203724670.png" alt="image-20240603203724670" style="zoom: 50%;" />

<h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><img src="../TyporaImage/image-20240603203820689.png" alt="image-20240603203820689" style="zoom:50%;" />

<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>OSI和TCP&#x2F;IP的比较：</p>
<p><img src="/../TyporaImage/image-20240603203921046.png" alt="image-20240603203921046">模型</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.应用层</p>
<p>2.传输层</p>
<p>3.网际层</p>
<p>4.网络接口层</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><img src="../TyporaImage/image-20240603203724670.png" alt="image-20240603203724670" style="zoom: 50%;" />

<h2 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h2><img src="../TyporaImage/image-20240603203820689.png" alt="image-20240603203820689" style="zoom:50%;" />

<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>OSI和TCP&#x2F;IP的比较：</p>
<p><img src="/../TyporaImage/image-20240603203921046.png" alt="image-20240603203921046"># TCP&#x2F;IP模型</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.应用层</p>
<p>2.传输层</p>
<p>3.网际层</p>
<p>4.网络接口层</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><img src="../TyporaImage/image-20240603203724670.png" alt="image-20240603203724670" style="zoom: 50%;" />

<h2 id="应用-2"><a href="#应用-2" class="headerlink" title="应用"></a>应用</h2><img src="../TyporaImage/image-20240603203820689.png" alt="image-20240603203820689" style="zoom:50%;" />

<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>OSI和TCP&#x2F;IP的比较：</p>
<p><img src="/../TyporaImage/image-20240603203921046.png" alt="image-20240603203921046">模型</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.应用层</p>
<p>2.传输层</p>
<p>3.网际层</p>
<p>4.网络接口层</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><img src="../TyporaImage/image-20240603203724670.png" alt="image-20240603203724670" style="zoom: 50%;" />

<h2 id="应用-3"><a href="#应用-3" class="headerlink" title="应用"></a>应用</h2><img src="../TyporaImage/image-20240603203820689.png" alt="image-20240603203820689" style="zoom:50%;" />

<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>OSI和TCP&#x2F;IP的比较：</p>
<p><img src="/../TyporaImage/image-20240603203921046.png" alt="image-20240603203921046"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>TCP协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCP%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>传输控制协议（Transmission Control Protocol，TCP）是一种面向连接的、可靠的、基于字节流的传输层协议。它为应用程序提供可靠的数据传输服务，确保数据按照发送顺序到达目标地址，并提供错误校验和流量控制。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.源端口号：16位字段，标识发送方端口。<br>2.目标端口号：16位字段，标识接收方端口。<br>3.序列号：32位字段，标识字节流的序号，用于数据重组。<br>4.确认号：32位字段，确认已成功接收的数据序号。<br>5.数据偏移：4位字段，指示TCP头部长度。<br>6.保留位：6位字段，保留以备将来使用。<br>7.标志位：6位字段，控制数据流和连接状态（URG、ACK、PSH、RST、SYN、FIN）。<br>8.窗口大小：16位字段，指示接收方的缓冲区大小，用于流量控制。<br>9.校验和：16位字段，提供头部和数据部分的错误检测。<br>10.紧急指针：16位字段，指出紧急数据的结束位置。<br>11.选项：可变长度字段，用于扩展TCP头部功能。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240623130418412.png" alt="image-20240623130418412"></p>
<img src="../TyporaImage/image-20240623130508661.png" alt="image-20240623130508661" style="zoom:50%;" />

<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>TCP没有具体的子分类，但可以根据应用层协议分类，如HTTP over TCP、FTP over TCP等。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.面向连接：在数据传输前需要建立连接。</p>
<p>2.可靠性：通过确认和重传机制保证数据可靠传输。</p>
<p>3.顺序性：保证数据按序到达。</p>
<p>4，流量控制：通过窗口机制控制数据流量。</p>
<p>5.拥塞控制：通过算法控制网络拥。</p>
<p>6.提供全双工通信</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a><strong>目的</strong></h2><p>提供可靠的、按序的数据传输服务，适用于需要高可靠性的数据传输场景。协议</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>传输控制协议（Transmission Control Protocol，TCP）是一种面向连接的、可靠的、基于字节流的传输层协议。它为应用程序提供可靠的数据传输服务，确保数据按照发送顺序到达目标地址，并提供错误校验和流量控制。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.源端口号：16位字段，标识发送方端口。<br>2.目标端口号：16位字段，标识接收方端口。<br>3.序列号：32位字段，标识字节流的序号，用于数据重组。<br>4.确认号：32位字段，确认已成功接收的数据序号。<br>5.数据偏移：4位字段，指示TCP头部长度。<br>6.保留位：6位字段，保留以备将来使用。<br>7.标志位：6位字段，控制数据流和连接状态（URG、ACK、PSH、RST、SYN、FIN）。<br>8.窗口大小：16位字段，指示接收方的缓冲区大小，用于流量控制。<br>9.校验和：16位字段，提供头部和数据部分的错误检测。<br>10.紧急指针：16位字段，指出紧急数据的结束位置。<br>11.选项：可变长度字段，用于扩展TCP头部功能。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240623130418412.png" alt="image-20240623130418412"></p>
<img src="../TyporaImage/image-20240623130508661.png" alt="image-20240623130508661" style="zoom:50%;" />

<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>TCP没有具体的子分类，但可以根据应用层协议分类，如HTTP over TCP、FTP over TCP等。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.面向连接：在数据传输前需要建立连接。</p>
<p>2.可靠性：通过确认和重传机制保证数据可靠传输。</p>
<p>3.顺序性：保证数据按序到达。</p>
<p>4，流量控制：通过窗口机制控制数据流量。</p>
<p>5.拥塞控制：通过算法控制网络拥。</p>
<p>6.提供全双工通信</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a><strong>目的</strong></h2><p>提供可靠的、按序的数据传输服务，适用于需要高可靠性的数据传输场景。# TCP协议</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>传输控制协议（Transmission Control Protocol，TCP）是一种面向连接的、可靠的、基于字节流的传输层协议。它为应用程序提供可靠的数据传输服务，确保数据按照发送顺序到达目标地址，并提供错误校验和流量控制。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.源端口号：16位字段，标识发送方端口。<br>2.目标端口号：16位字段，标识接收方端口。<br>3.序列号：32位字段，标识字节流的序号，用于数据重组。<br>4.确认号：32位字段，确认已成功接收的数据序号。<br>5.数据偏移：4位字段，指示TCP头部长度。<br>6.保留位：6位字段，保留以备将来使用。<br>7.标志位：6位字段，控制数据流和连接状态（URG、ACK、PSH、RST、SYN、FIN）。<br>8.窗口大小：16位字段，指示接收方的缓冲区大小，用于流量控制。<br>9.校验和：16位字段，提供头部和数据部分的错误检测。<br>10.紧急指针：16位字段，指出紧急数据的结束位置。<br>11.选项：可变长度字段，用于扩展TCP头部功能。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240623130418412.png" alt="image-20240623130418412"></p>
<img src="../TyporaImage/image-20240623130508661.png" alt="image-20240623130508661" style="zoom:50%;" />

<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>TCP没有具体的子分类，但可以根据应用层协议分类，如HTTP over TCP、FTP over TCP等。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.面向连接：在数据传输前需要建立连接。</p>
<p>2.可靠性：通过确认和重传机制保证数据可靠传输。</p>
<p>3.顺序性：保证数据按序到达。</p>
<p>4，流量控制：通过窗口机制控制数据流量。</p>
<p>5.拥塞控制：通过算法控制网络拥。</p>
<p>6.提供全双工通信</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a><strong>目的</strong></h2><p>提供可靠的、按序的数据传输服务，适用于需要高可靠性的数据传输场景。协议</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>传输控制协议（Transmission Control Protocol，TCP）是一种面向连接的、可靠的、基于字节流的传输层协议。它为应用程序提供可靠的数据传输服务，确保数据按照发送顺序到达目标地址，并提供错误校验和流量控制。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.源端口号：16位字段，标识发送方端口。<br>2.目标端口号：16位字段，标识接收方端口。<br>3.序列号：32位字段，标识字节流的序号，用于数据重组。<br>4.确认号：32位字段，确认已成功接收的数据序号。<br>5.数据偏移：4位字段，指示TCP头部长度。<br>6.保留位：6位字段，保留以备将来使用。<br>7.标志位：6位字段，控制数据流和连接状态（URG、ACK、PSH、RST、SYN、FIN）。<br>8.窗口大小：16位字段，指示接收方的缓冲区大小，用于流量控制。<br>9.校验和：16位字段，提供头部和数据部分的错误检测。<br>10.紧急指针：16位字段，指出紧急数据的结束位置。<br>11.选项：可变长度字段，用于扩展TCP头部功能。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240623130418412.png" alt="image-20240623130418412"></p>
<img src="../TyporaImage/image-20240623130508661.png" alt="image-20240623130508661" style="zoom:50%;" />

<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>TCP没有具体的子分类，但可以根据应用层协议分类，如HTTP over TCP、FTP over TCP等。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.面向连接：在数据传输前需要建立连接。</p>
<p>2.可靠性：通过确认和重传机制保证数据可靠传输。</p>
<p>3.顺序性：保证数据按序到达。</p>
<p>4，流量控制：通过窗口机制控制数据流量。</p>
<p>5.拥塞控制：通过算法控制网络拥。</p>
<p>6.提供全双工通信</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a><strong>目的</strong></h2><p>提供可靠的、按序的数据传输服务，适用于需要高可靠性的数据传输场景。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>TCP可靠传输</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCP%E5%8F%AF%E9%9D%A0%E4%BC%A0%E8%BE%93/</url>
    <content><![CDATA[<h1 id="TCP可靠传输"><a href="#TCP可靠传输" class="headerlink" title="TCP可靠传输"></a>TCP可靠传输</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>TCP可靠传输是指传输控制协议（TCP）通过一系列机制确保数据在传输过程中不丢失、不重复且按序到达接收方。这些机制包括错误检测、确认应答、重传、流量控制和拥塞控制。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.错误检测：利用校验和机制检测数据包中的错误。<br>2.确认应答（ACK）：接收方对成功接收到的数据包发送确认应答。<br>3.重传机制：发送方在未收到确认应答时重新发送数据包。<br>4.序列号：每个数据包都有唯一的序列号，确保数据包按序到达。<br>5.窗口控制：通过滑动窗口协议管理数据流，防止网络拥塞。<br>6.拥塞控制：控制发送数据的速率，避免网络拥塞。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-连接建立"><a href="#1-连接建立" class="headerlink" title="1.连接建立"></a>1.连接建立</h3><p>客户端发送SYN（同步序列号）报文，要求建立连接。<br>服务器回复SYN-ACK（同步序列号+确认应答）报文，确认连接请求。<br>客户端发送ACK（确认应答）报文，确认连接建立。</p>
<h3 id="2-数据传输"><a href="#2-数据传输" class="headerlink" title="2.数据传输"></a>2.数据传输</h3><p>发送方将数据分段，赋予每个段唯一的序列号。<br>接收方收到数据段后，发送ACK报文确认接收。<br>若发送方未在超时时间内收到ACK报文，则重传数据段。</p>
<h3 id="3-连接终止"><a href="#3-连接终止" class="headerlink" title="3.连接终止"></a>3.连接终止</h3><p>发送方发送FIN（结束）报文，要求关闭连接。<br>接收方回复ACK报文，确认关闭请求。<br>接收方发送FIN报文，要求关闭连接。<br>发送方回复ACK报文，确认连接关闭。传输</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>TCP可靠传输是指传输控制协议（TCP）通过一系列机制确保数据在传输过程中不丢失、不重复且按序到达接收方。这些机制包括错误检测、确认应答、重传、流量控制和拥塞控制。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.错误检测：利用校验和机制检测数据包中的错误。<br>2.确认应答（ACK）：接收方对成功接收到的数据包发送确认应答。<br>3.重传机制：发送方在未收到确认应答时重新发送数据包。<br>4.序列号：每个数据包都有唯一的序列号，确保数据包按序到达。<br>5.窗口控制：通过滑动窗口协议管理数据流，防止网络拥塞。<br>6.拥塞控制：控制发送数据的速率，避免网络拥塞。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-连接建立-1"><a href="#1-连接建立-1" class="headerlink" title="1.连接建立"></a>1.连接建立</h3><p>客户端发送SYN（同步序列号）报文，要求建立连接。<br>服务器回复SYN-ACK（同步序列号+确认应答）报文，确认连接请求。<br>客户端发送ACK（确认应答）报文，确认连接建立。</p>
<h3 id="2-数据传输-1"><a href="#2-数据传输-1" class="headerlink" title="2.数据传输"></a>2.数据传输</h3><p>发送方将数据分段，赋予每个段唯一的序列号。<br>接收方收到数据段后，发送ACK报文确认接收。<br>若发送方未在超时时间内收到ACK报文，则重传数据段。</p>
<h3 id="3-连接终止-1"><a href="#3-连接终止-1" class="headerlink" title="3.连接终止"></a>3.连接终止</h3><p>发送方发送FIN（结束）报文，要求关闭连接。<br>接收方回复ACK报文，确认关闭请求。<br>接收方发送FIN报文，要求关闭连接。<br>发送方回复ACK报文，确认连接关闭。# TCP可靠传输</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>TCP可靠传输是指传输控制协议（TCP）通过一系列机制确保数据在传输过程中不丢失、不重复且按序到达接收方。这些机制包括错误检测、确认应答、重传、流量控制和拥塞控制。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.错误检测：利用校验和机制检测数据包中的错误。<br>2.确认应答（ACK）：接收方对成功接收到的数据包发送确认应答。<br>3.重传机制：发送方在未收到确认应答时重新发送数据包。<br>4.序列号：每个数据包都有唯一的序列号，确保数据包按序到达。<br>5.窗口控制：通过滑动窗口协议管理数据流，防止网络拥塞。<br>6.拥塞控制：控制发送数据的速率，避免网络拥塞。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-连接建立-2"><a href="#1-连接建立-2" class="headerlink" title="1.连接建立"></a>1.连接建立</h3><p>客户端发送SYN（同步序列号）报文，要求建立连接。<br>服务器回复SYN-ACK（同步序列号+确认应答）报文，确认连接请求。<br>客户端发送ACK（确认应答）报文，确认连接建立。</p>
<h3 id="2-数据传输-2"><a href="#2-数据传输-2" class="headerlink" title="2.数据传输"></a>2.数据传输</h3><p>发送方将数据分段，赋予每个段唯一的序列号。<br>接收方收到数据段后，发送ACK报文确认接收。<br>若发送方未在超时时间内收到ACK报文，则重传数据段。</p>
<h3 id="3-连接终止-2"><a href="#3-连接终止-2" class="headerlink" title="3.连接终止"></a>3.连接终止</h3><p>发送方发送FIN（结束）报文，要求关闭连接。<br>接收方回复ACK报文，确认关闭请求。<br>接收方发送FIN报文，要求关闭连接。<br>发送方回复ACK报文，确认连接关闭。传输</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>TCP可靠传输是指传输控制协议（TCP）通过一系列机制确保数据在传输过程中不丢失、不重复且按序到达接收方。这些机制包括错误检测、确认应答、重传、流量控制和拥塞控制。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.错误检测：利用校验和机制检测数据包中的错误。<br>2.确认应答（ACK）：接收方对成功接收到的数据包发送确认应答。<br>3.重传机制：发送方在未收到确认应答时重新发送数据包。<br>4.序列号：每个数据包都有唯一的序列号，确保数据包按序到达。<br>5.窗口控制：通过滑动窗口协议管理数据流，防止网络拥塞。<br>6.拥塞控制：控制发送数据的速率，避免网络拥塞。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-连接建立-3"><a href="#1-连接建立-3" class="headerlink" title="1.连接建立"></a>1.连接建立</h3><p>客户端发送SYN（同步序列号）报文，要求建立连接。<br>服务器回复SYN-ACK（同步序列号+确认应答）报文，确认连接请求。<br>客户端发送ACK（确认应答）报文，确认连接建立。</p>
<h3 id="2-数据传输-3"><a href="#2-数据传输-3" class="headerlink" title="2.数据传输"></a>2.数据传输</h3><p>发送方将数据分段，赋予每个段唯一的序列号。<br>接收方收到数据段后，发送ACK报文确认接收。<br>若发送方未在超时时间内收到ACK报文，则重传数据段。</p>
<h3 id="3-连接终止-3"><a href="#3-连接终止-3" class="headerlink" title="3.连接终止"></a>3.连接终止</h3><p>发送方发送FIN（结束）报文，要求关闭连接。<br>接收方回复ACK报文，确认关闭请求。<br>接收方发送FIN报文，要求关闭连接。<br>发送方回复ACK报文，确认连接关闭。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>TCP拥塞控制</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCP%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h1 id="TCP拥塞控制"><a href="#TCP拥塞控制" class="headerlink" title="TCP拥塞控制"></a>TCP拥塞控制</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>TCP拥塞控制是指传输控制协议（TCP）在数据传输过程中通过一系列机制防止网络拥塞，确保网络资源高效利用，并维护数据传输的可靠性和稳定性。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.慢启动（Slow Start）</p>
<p>逐步增加发送速率，避免初始发送量过大导致网络拥塞。</p>
<p>2.拥塞避免（Congestion Avoidance）</p>
<p>发送速率接近网络容量时，逐步调整发送量以避免拥塞。</p>
<p>3.快速重传（Fast Retransmit）</p>
<p>在检测到数据包丢失时，快速重传未确认的数据包。</p>
<p>4.快速恢复（Fast Recovery）</p>
<p>在丢包后快速恢复数据发送速率，避免完全重新开始慢启动。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.拥塞窗口（Congestion Window，cwnd）</p>
<p>用于控制发送方的最大数据发送量。</p>
<p>2.慢启动门限（Slow Start Threshold，ssthresh）</p>
<p>定义慢启动和拥塞避免的切换点。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623132354169.png" alt="image-20240623132354169"></p>
<p><img src="/../TyporaImage/image-20240623132450512.png" alt="image-20240623132450512"></p>
<p><img src="/../TyporaImage/image-20240623132506958.png" alt="image-20240623132506958">控制</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>TCP拥塞控制是指传输控制协议（TCP）在数据传输过程中通过一系列机制防止网络拥塞，确保网络资源高效利用，并维护数据传输的可靠性和稳定性。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.慢启动（Slow Start）</p>
<p>逐步增加发送速率，避免初始发送量过大导致网络拥塞。</p>
<p>2.拥塞避免（Congestion Avoidance）</p>
<p>发送速率接近网络容量时，逐步调整发送量以避免拥塞。</p>
<p>3.快速重传（Fast Retransmit）</p>
<p>在检测到数据包丢失时，快速重传未确认的数据包。</p>
<p>4.快速恢复（Fast Recovery）</p>
<p>在丢包后快速恢复数据发送速率，避免完全重新开始慢启动。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.拥塞窗口（Congestion Window，cwnd）</p>
<p>用于控制发送方的最大数据发送量。</p>
<p>2.慢启动门限（Slow Start Threshold，ssthresh）</p>
<p>定义慢启动和拥塞避免的切换点。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623132354169.png" alt="image-20240623132354169"></p>
<p><img src="/../TyporaImage/image-20240623132450512.png" alt="image-20240623132450512"></p>
<p><img src="/../TyporaImage/image-20240623132506958.png" alt="image-20240623132506958"># TCP拥塞控制</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>TCP拥塞控制是指传输控制协议（TCP）在数据传输过程中通过一系列机制防止网络拥塞，确保网络资源高效利用，并维护数据传输的可靠性和稳定性。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.慢启动（Slow Start）</p>
<p>逐步增加发送速率，避免初始发送量过大导致网络拥塞。</p>
<p>2.拥塞避免（Congestion Avoidance）</p>
<p>发送速率接近网络容量时，逐步调整发送量以避免拥塞。</p>
<p>3.快速重传（Fast Retransmit）</p>
<p>在检测到数据包丢失时，快速重传未确认的数据包。</p>
<p>4.快速恢复（Fast Recovery）</p>
<p>在丢包后快速恢复数据发送速率，避免完全重新开始慢启动。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.拥塞窗口（Congestion Window，cwnd）</p>
<p>用于控制发送方的最大数据发送量。</p>
<p>2.慢启动门限（Slow Start Threshold，ssthresh）</p>
<p>定义慢启动和拥塞避免的切换点。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623132354169.png" alt="image-20240623132354169"></p>
<p><img src="/../TyporaImage/image-20240623132450512.png" alt="image-20240623132450512"></p>
<p><img src="/../TyporaImage/image-20240623132506958.png" alt="image-20240623132506958">控制</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>TCP拥塞控制是指传输控制协议（TCP）在数据传输过程中通过一系列机制防止网络拥塞，确保网络资源高效利用，并维护数据传输的可靠性和稳定性。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.慢启动（Slow Start）</p>
<p>逐步增加发送速率，避免初始发送量过大导致网络拥塞。</p>
<p>2.拥塞避免（Congestion Avoidance）</p>
<p>发送速率接近网络容量时，逐步调整发送量以避免拥塞。</p>
<p>3.快速重传（Fast Retransmit）</p>
<p>在检测到数据包丢失时，快速重传未确认的数据包。</p>
<p>4.快速恢复（Fast Recovery）</p>
<p>在丢包后快速恢复数据发送速率，避免完全重新开始慢启动。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.拥塞窗口（Congestion Window，cwnd）</p>
<p>用于控制发送方的最大数据发送量。</p>
<p>2.慢启动门限（Slow Start Threshold，ssthresh）</p>
<p>定义慢启动和拥塞避免的切换点。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623132354169.png" alt="image-20240623132354169"></p>
<p><img src="/../TyporaImage/image-20240623132450512.png" alt="image-20240623132450512"></p>
<p><img src="/../TyporaImage/image-20240623132506958.png" alt="image-20240623132506958"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>TCP流量控制</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCP%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h1 id="TCP流量控制"><a href="#TCP流量控制" class="headerlink" title="TCP流量控制"></a>TCP流量控制</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>TCP流量控制是一种机制，用于管理发送方的数据发送速率，以防止接收方缓冲区溢出。它确保发送方发送的数据不会超过接收方的处理能力，从而保证数据传输的平稳和可靠。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.滑动窗口</p>
<p>接收方通过滑动窗口告知发送方可以发送的数据量大小。</p>
<p>2.窗口大小</p>
<p>接收方根据自身缓冲区的可用空间动态调整窗口大小，并将其通知发送方。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-TCP报文段头部"><a href="#1-TCP报文段头部" class="headerlink" title="1.TCP报文段头部"></a>1.TCP报文段头部</h3><p>包含窗口大小字段，用于传达接收方的缓冲区状态。</p>
<h3 id="2-滑动窗口机制"><a href="#2-滑动窗口机制" class="headerlink" title="2.滑动窗口机制"></a>2.滑动窗口机制</h3><p>通过滑动窗口控制数据流量，动态调整发送的数据量。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>滑动窗口协议</strong>：</p>
<ol>
<li>发送方将数据按段分割并编号。</li>
<li>接收方收到数据段后，更新接收窗口，并通过ACK报文通知发送方。</li>
<li>发送方根据接收方反馈的窗口大小调整数据发送速率。</li>
<li>当接收方缓冲区有足够空间时，发送方继续发送新的数据段。</li>
</ol>
<p><strong>窗口更新</strong>：</p>
<ul>
<li>接收方在ACK报文中包含窗口大小字段，表示当前可以接受的最大数据量。</li>
<li>发送方依据接收方提供的窗口大小控制数据发送。</li>
</ul>
<p><img src="/../TyporaImage/image-20240623131913997.png" alt="image-20240623131913997">控制</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>TCP流量控制是一种机制，用于管理发送方的数据发送速率，以防止接收方缓冲区溢出。它确保发送方发送的数据不会超过接收方的处理能力，从而保证数据传输的平稳和可靠。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.滑动窗口</p>
<p>接收方通过滑动窗口告知发送方可以发送的数据量大小。</p>
<p>2.窗口大小</p>
<p>接收方根据自身缓冲区的可用空间动态调整窗口大小，并将其通知发送方。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-TCP报文段头部-1"><a href="#1-TCP报文段头部-1" class="headerlink" title="1.TCP报文段头部"></a>1.TCP报文段头部</h3><p>包含窗口大小字段，用于传达接收方的缓冲区状态。</p>
<h3 id="2-滑动窗口机制-1"><a href="#2-滑动窗口机制-1" class="headerlink" title="2.滑动窗口机制"></a>2.滑动窗口机制</h3><p>通过滑动窗口控制数据流量，动态调整发送的数据量。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>滑动窗口协议</strong>：</p>
<ol>
<li>发送方将数据按段分割并编号。</li>
<li>接收方收到数据段后，更新接收窗口，并通过ACK报文通知发送方。</li>
<li>发送方根据接收方反馈的窗口大小调整数据发送速率。</li>
<li>当接收方缓冲区有足够空间时，发送方继续发送新的数据段。</li>
</ol>
<p><strong>窗口更新</strong>：</p>
<ul>
<li>接收方在ACK报文中包含窗口大小字段，表示当前可以接受的最大数据量。</li>
<li>发送方依据接收方提供的窗口大小控制数据发送。</li>
</ul>
<p><img src="/../TyporaImage/image-20240623131913997.png" alt="image-20240623131913997"># TCP流量控制</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>TCP流量控制是一种机制，用于管理发送方的数据发送速率，以防止接收方缓冲区溢出。它确保发送方发送的数据不会超过接收方的处理能力，从而保证数据传输的平稳和可靠。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.滑动窗口</p>
<p>接收方通过滑动窗口告知发送方可以发送的数据量大小。</p>
<p>2.窗口大小</p>
<p>接收方根据自身缓冲区的可用空间动态调整窗口大小，并将其通知发送方。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-TCP报文段头部-2"><a href="#1-TCP报文段头部-2" class="headerlink" title="1.TCP报文段头部"></a>1.TCP报文段头部</h3><p>包含窗口大小字段，用于传达接收方的缓冲区状态。</p>
<h3 id="2-滑动窗口机制-2"><a href="#2-滑动窗口机制-2" class="headerlink" title="2.滑动窗口机制"></a>2.滑动窗口机制</h3><p>通过滑动窗口控制数据流量，动态调整发送的数据量。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>滑动窗口协议</strong>：</p>
<ol>
<li>发送方将数据按段分割并编号。</li>
<li>接收方收到数据段后，更新接收窗口，并通过ACK报文通知发送方。</li>
<li>发送方根据接收方反馈的窗口大小调整数据发送速率。</li>
<li>当接收方缓冲区有足够空间时，发送方继续发送新的数据段。</li>
</ol>
<p><strong>窗口更新</strong>：</p>
<ul>
<li>接收方在ACK报文中包含窗口大小字段，表示当前可以接受的最大数据量。</li>
<li>发送方依据接收方提供的窗口大小控制数据发送。</li>
</ul>
<p><img src="/../TyporaImage/image-20240623131913997.png" alt="image-20240623131913997">控制</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>TCP流量控制是一种机制，用于管理发送方的数据发送速率，以防止接收方缓冲区溢出。它确保发送方发送的数据不会超过接收方的处理能力，从而保证数据传输的平稳和可靠。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.滑动窗口</p>
<p>接收方通过滑动窗口告知发送方可以发送的数据量大小。</p>
<p>2.窗口大小</p>
<p>接收方根据自身缓冲区的可用空间动态调整窗口大小，并将其通知发送方。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-TCP报文段头部-3"><a href="#1-TCP报文段头部-3" class="headerlink" title="1.TCP报文段头部"></a>1.TCP报文段头部</h3><p>包含窗口大小字段，用于传达接收方的缓冲区状态。</p>
<h3 id="2-滑动窗口机制-3"><a href="#2-滑动窗口机制-3" class="headerlink" title="2.滑动窗口机制"></a>2.滑动窗口机制</h3><p>通过滑动窗口控制数据流量，动态调整发送的数据量。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>滑动窗口协议</strong>：</p>
<ol>
<li>发送方将数据按段分割并编号。</li>
<li>接收方收到数据段后，更新接收窗口，并通过ACK报文通知发送方。</li>
<li>发送方根据接收方反馈的窗口大小调整数据发送速率。</li>
<li>当接收方缓冲区有足够空间时，发送方继续发送新的数据段。</li>
</ol>
<p><strong>窗口更新</strong>：</p>
<ul>
<li>接收方在ACK报文中包含窗口大小字段，表示当前可以接受的最大数据量。</li>
<li>发送方依据接收方提供的窗口大小控制数据发送。</li>
</ul>
<p><img src="/../TyporaImage/image-20240623131913997.png" alt="image-20240623131913997"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>TCP连接管理</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCP%E8%BF%9E%E6%8E%A5%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h1 id="TCP连接管理"><a href="#TCP连接管理" class="headerlink" title="TCP连接管理"></a>TCP连接管理</h1><h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240623130626592.png" alt="image-20240623130626592"></p>
<p><img src="/../TyporaImage/image-20240623130648712.png" alt="image-20240623130648712"></p>
<p><img src="/../TyporaImage/image-20240623131005184.png" alt="image-20240623131005184"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.SYN洪泛攻击（SYN Flood Attack）</p>
<p>是一种网络攻击手段，攻击者通过发送大量伪造的SYN请求到目标服务器，耗尽服务器资源，使其无法处理正常的网络请求。</p>
<p>攻击者发送大量伪造的SYN请求，目标服务器响应这些请求并等待完成TCP三次握手，但由于源地址是伪造的，无法完成握手，导致服务器资源被占用，无法响应正常请求。管理</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240623130626592.png" alt="image-20240623130626592"></p>
<p><img src="/../TyporaImage/image-20240623130648712.png" alt="image-20240623130648712"></p>
<p><img src="/../TyporaImage/image-20240623131005184.png" alt="image-20240623131005184"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.SYN洪泛攻击（SYN Flood Attack）</p>
<p>是一种网络攻击手段，攻击者通过发送大量伪造的SYN请求到目标服务器，耗尽服务器资源，使其无法处理正常的网络请求。</p>
<p>攻击者发送大量伪造的SYN请求，目标服务器响应这些请求并等待完成TCP三次握手，但由于源地址是伪造的，无法完成握手，导致服务器资源被占用，无法响应正常请求。# TCP连接管理</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240623130626592.png" alt="image-20240623130626592"></p>
<p><img src="/../TyporaImage/image-20240623130648712.png" alt="image-20240623130648712"></p>
<p><img src="/../TyporaImage/image-20240623131005184.png" alt="image-20240623131005184"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.SYN洪泛攻击（SYN Flood Attack）</p>
<p>是一种网络攻击手段，攻击者通过发送大量伪造的SYN请求到目标服务器，耗尽服务器资源，使其无法处理正常的网络请求。</p>
<p>攻击者发送大量伪造的SYN请求，目标服务器响应这些请求并等待完成TCP三次握手，但由于源地址是伪造的，无法完成握手，导致服务器资源被占用，无法响应正常请求。管理</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240623130626592.png" alt="image-20240623130626592"></p>
<p><img src="/../TyporaImage/image-20240623130648712.png" alt="image-20240623130648712"></p>
<p><img src="/../TyporaImage/image-20240623131005184.png" alt="image-20240623131005184"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.SYN洪泛攻击（SYN Flood Attack）</p>
<p>是一种网络攻击手段，攻击者通过发送大量伪造的SYN请求到目标服务器，耗尽服务器资源，使其无法处理正常的网络请求。</p>
<p>攻击者发送大量伪造的SYN请求，目标服务器响应这些请求并等待完成TCP三次握手，但由于源地址是伪造的，无法完成握手，导致服务器资源被占用，无法响应正常请求。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>UDP协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/UDP%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="UDP协议"><a href="#UDP协议" class="headerlink" title="UDP协议"></a>UDP协议</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>用户数据报协议（User Datagram Protocol，UDP）是一种简单的传输层协议，提供无连接、不可靠的数据传输服务。UDP协议不提供传输可靠性、顺序保证和流量控制。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.源端口号：16位字段，用于标识源端口。<br>2.目标端口号：16位字段，用于标识目标端口。<br>3.长度：16位字段，表示UDP数据报的总长度，包括头部和数据部分。<br>4.校验和：16位字段，用于检测头部和数据部分的错误。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-UDP首部格式"><a href="#1-UDP首部格式" class="headerlink" title="1.UDP首部格式"></a>1.UDP首部格式</h3><p><img src="/../TyporaImage/image-20240623125141222.png" alt="image-20240623125141222"></p>
<h3 id="2-UDP校验"><a href="#2-UDP校验" class="headerlink" title="2.UDP校验"></a>2.UDP校验</h3><p><img src="/../TyporaImage/image-20240623125533809.png" alt="image-20240623125533809"></p>
<p><img src="/../TyporaImage/image-20240623125909681.png" alt="image-20240623125909681"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>无分类，所有UDP数据报都具有相同的格式。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.无连接：数据报独立传输，不建立连接。<br>2.不可靠：不保证数据传输的成功和顺序。<br>3.轻量级：头部开销小，适用于对速度和效率要求高的应用。<br>4.无流量控制和拥塞控制：适合实时应用。<br>协议</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>用户数据报协议（User Datagram Protocol，UDP）是一种简单的传输层协议，提供无连接、不可靠的数据传输服务。UDP协议不提供传输可靠性、顺序保证和流量控制。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.源端口号：16位字段，用于标识源端口。<br>2.目标端口号：16位字段，用于标识目标端口。<br>3.长度：16位字段，表示UDP数据报的总长度，包括头部和数据部分。<br>4.校验和：16位字段，用于检测头部和数据部分的错误。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-UDP首部格式-1"><a href="#1-UDP首部格式-1" class="headerlink" title="1.UDP首部格式"></a>1.UDP首部格式</h3><p><img src="/../TyporaImage/image-20240623125141222.png" alt="image-20240623125141222"></p>
<h3 id="2-UDP校验-1"><a href="#2-UDP校验-1" class="headerlink" title="2.UDP校验"></a>2.UDP校验</h3><p><img src="/../TyporaImage/image-20240623125533809.png" alt="image-20240623125533809"></p>
<p><img src="/../TyporaImage/image-20240623125909681.png" alt="image-20240623125909681"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>无分类，所有UDP数据报都具有相同的格式。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.无连接：数据报独立传输，不建立连接。<br>2.不可靠：不保证数据传输的成功和顺序。<br>3.轻量级：头部开销小，适用于对速度和效率要求高的应用。<br>4.无流量控制和拥塞控制：适合实时应用。# UDP协议</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>用户数据报协议（User Datagram Protocol，UDP）是一种简单的传输层协议，提供无连接、不可靠的数据传输服务。UDP协议不提供传输可靠性、顺序保证和流量控制。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.源端口号：16位字段，用于标识源端口。<br>2.目标端口号：16位字段，用于标识目标端口。<br>3.长度：16位字段，表示UDP数据报的总长度，包括头部和数据部分。<br>4.校验和：16位字段，用于检测头部和数据部分的错误。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-UDP首部格式-2"><a href="#1-UDP首部格式-2" class="headerlink" title="1.UDP首部格式"></a>1.UDP首部格式</h3><p><img src="/../TyporaImage/image-20240623125141222.png" alt="image-20240623125141222"></p>
<h3 id="2-UDP校验-2"><a href="#2-UDP校验-2" class="headerlink" title="2.UDP校验"></a>2.UDP校验</h3><p><img src="/../TyporaImage/image-20240623125533809.png" alt="image-20240623125533809"></p>
<p><img src="/../TyporaImage/image-20240623125909681.png" alt="image-20240623125909681"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>无分类，所有UDP数据报都具有相同的格式。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.无连接：数据报独立传输，不建立连接。<br>2.不可靠：不保证数据传输的成功和顺序。<br>3.轻量级：头部开销小，适用于对速度和效率要求高的应用。<br>4.无流量控制和拥塞控制：适合实时应用。<br>协议</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>用户数据报协议（User Datagram Protocol，UDP）是一种简单的传输层协议，提供无连接、不可靠的数据传输服务。UDP协议不提供传输可靠性、顺序保证和流量控制。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.源端口号：16位字段，用于标识源端口。<br>2.目标端口号：16位字段，用于标识目标端口。<br>3.长度：16位字段，表示UDP数据报的总长度，包括头部和数据部分。<br>4.校验和：16位字段，用于检测头部和数据部分的错误。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-UDP首部格式-3"><a href="#1-UDP首部格式-3" class="headerlink" title="1.UDP首部格式"></a>1.UDP首部格式</h3><p><img src="/../TyporaImage/image-20240623125141222.png" alt="image-20240623125141222"></p>
<h3 id="2-UDP校验-3"><a href="#2-UDP校验-3" class="headerlink" title="2.UDP校验"></a>2.UDP校验</h3><p><img src="/../TyporaImage/image-20240623125533809.png" alt="image-20240623125533809"></p>
<p><img src="/../TyporaImage/image-20240623125909681.png" alt="image-20240623125909681"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>无分类，所有UDP数据报都具有相同的格式。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.无连接：数据报独立传输，不建立连接。<br>2.不可靠：不保证数据传输的成功和顺序。<br>3.轻量级：头部开销小，适用于对速度和效率要求高的应用。<br>4.无流量控制和拥塞控制：适合实时应用。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>VLAN的基本概念</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/VLAN%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h1 id="VLAN的基本概念"><a href="#VLAN的基本概念" class="headerlink" title="VLAN的基本概念"></a>VLAN的基本概念</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>VLAN（Virtual Local Area Network）是一种逻辑上的概念，它允许在物理网络中创建多个独立的逻辑网络，每个逻辑网络称为一个VLAN。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.IEEE802.1Q标准</p>
<p><img src="/../TyporaImage/image-20240617220212339.png" alt="image-20240617220212339"></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>为了解决传统局域网的缺乏流量隔离、管理用户不便、路由器成本高的问题。</p>
<p>概念</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>VLAN（Virtual Local Area Network）是一种逻辑上的概念，它允许在物理网络中创建多个独立的逻辑网络，每个逻辑网络称为一个VLAN。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.IEEE802.1Q标准</p>
<p><img src="/../TyporaImage/image-20240617220212339.png" alt="image-20240617220212339"></p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>为了解决传统局域网的缺乏流量隔离、管理用户不便、路由器成本高的问题。# VLAN的基本概念</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>VLAN（Virtual Local Area Network）是一种逻辑上的概念，它允许在物理网络中创建多个独立的逻辑网络，每个逻辑网络称为一个VLAN。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.IEEE802.1Q标准</p>
<p><img src="/../TyporaImage/image-20240617220212339.png" alt="image-20240617220212339"></p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>为了解决传统局域网的缺乏流量隔离、管理用户不便、路由器成本高的问题。</p>
<p>概念</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>VLAN（Virtual Local Area Network）是一种逻辑上的概念，它允许在物理网络中创建多个独立的逻辑网络，每个逻辑网络称为一个VLAN。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.IEEE802.1Q标准</p>
<p><img src="/../TyporaImage/image-20240617220212339.png" alt="image-20240617220212339"></p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>为了解决传统局域网的缺乏流量隔离、管理用户不便、路由器成本高的问题。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>万维网</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%B8%87%E7%BB%B4%E7%BD%91/</url>
    <content><![CDATA[<h1 id="万维网"><a href="#万维网" class="headerlink" title="万维网"></a>万维网</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>万维网（World Wide Web，简称Web）是一个由相互链接的文档和资源组成的系统，这些文档和资源可以通过互联网访问。它是互联网上的一种信息服务，允许用户通过超链接浏览和访问各种信息。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-网页"><a href="#1-网页" class="headerlink" title="1.网页"></a>1.网页</h3><p>万维网的基本信息单位，通常由HTML（HyperText Markup Language）编写。</p>
<h3 id="2-超链接"><a href="#2-超链接" class="headerlink" title="2.超链接"></a>2.超链接</h3><p>网页中的链接，允许用户导航到其他网页或资源。</p>
<h3 id="3-浏览器"><a href="#3-浏览器" class="headerlink" title="3.浏览器"></a>3.浏览器</h3><p>用于访问和浏览网页的软件，如Chrome、Firefox、Safari等。</p>
<h3 id="4-服务器"><a href="#4-服务器" class="headerlink" title="4.服务器"></a>4.服务器</h3><p>存储网页内容并提供给用户访问的计算机系统。</p>
<h3 id="5-URL（Uniform-Resource-Locator）"><a href="#5-URL（Uniform-Resource-Locator）" class="headerlink" title="5.URL（Uniform Resource Locator）"></a>5.URL（Uniform Resource Locator）</h3><p>网页的地址，用于定位互联网上的资源。</p>
<p><img src="/../TyporaImage/image-20240623151913983.png" alt="image-20240623151913983"></p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>万维网采用客户端-服务器模型，用户通过浏览器向服务器请求网页，服务器响应请求并提供网页内容。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>万维网可以根据内容类型分为静态网页和动态网页。静态网页内容固定不变，动态网页内容可以根据用户请求或数据库信息动态生成。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><h3 id="1-互连性"><a href="#1-互连性" class="headerlink" title="1.互连性"></a>1.互连性</h3><p>万维网上的网页通过超链接相互连接，形成一个巨大的信息网络。</p>
<h3 id="2-易用性"><a href="#2-易用性" class="headerlink" title="2.易用性"></a>2.易用性</h3><p>用户只需通过浏览器即可访问和浏览网页，操作简单方便。</p>
<h3 id="3-多媒体支持"><a href="#3-多媒体支持" class="headerlink" title="3.多媒体支持"></a>3.多媒体支持</h3><p>网页可以包含文本、图片、音频和视频等多种格式的信息。</p>
<h3 id="4-动态性"><a href="#4-动态性" class="headerlink" title="4.动态性"></a>4.动态性</h3><p>动态网页可以根据用户请求或数据库信息动态生成内容。</p>
<p>维网</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>万维网（World Wide Web，简称Web）是一个由相互链接的文档和资源组成的系统，这些文档和资源可以通过互联网访问。它是互联网上的一种信息服务，允许用户通过超链接浏览和访问各种信息。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-网页-1"><a href="#1-网页-1" class="headerlink" title="1.网页"></a>1.网页</h3><p>万维网的基本信息单位，通常由HTML（HyperText Markup Language）编写。</p>
<h3 id="2-超链接-1"><a href="#2-超链接-1" class="headerlink" title="2.超链接"></a>2.超链接</h3><p>网页中的链接，允许用户导航到其他网页或资源。</p>
<h3 id="3-浏览器-1"><a href="#3-浏览器-1" class="headerlink" title="3.浏览器"></a>3.浏览器</h3><p>用于访问和浏览网页的软件，如Chrome、Firefox、Safari等。</p>
<h3 id="4-服务器-1"><a href="#4-服务器-1" class="headerlink" title="4.服务器"></a>4.服务器</h3><p>存储网页内容并提供给用户访问的计算机系统。</p>
<h3 id="5-URL（Uniform-Resource-Locator）-1"><a href="#5-URL（Uniform-Resource-Locator）-1" class="headerlink" title="5.URL（Uniform Resource Locator）"></a>5.URL（Uniform Resource Locator）</h3><p>网页的地址，用于定位互联网上的资源。</p>
<p><img src="/../TyporaImage/image-20240623151913983.png" alt="image-20240623151913983"></p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>万维网采用客户端-服务器模型，用户通过浏览器向服务器请求网页，服务器响应请求并提供网页内容。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>万维网可以根据内容类型分为静态网页和动态网页。静态网页内容固定不变，动态网页内容可以根据用户请求或数据库信息动态生成。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><h3 id="1-互连性-1"><a href="#1-互连性-1" class="headerlink" title="1.互连性"></a>1.互连性</h3><p>万维网上的网页通过超链接相互连接，形成一个巨大的信息网络。</p>
<h3 id="2-易用性-1"><a href="#2-易用性-1" class="headerlink" title="2.易用性"></a>2.易用性</h3><p>用户只需通过浏览器即可访问和浏览网页，操作简单方便。</p>
<h3 id="3-多媒体支持-1"><a href="#3-多媒体支持-1" class="headerlink" title="3.多媒体支持"></a>3.多媒体支持</h3><p>网页可以包含文本、图片、音频和视频等多种格式的信息。</p>
<h3 id="4-动态性-1"><a href="#4-动态性-1" class="headerlink" title="4.动态性"></a>4.动态性</h3><p>动态网页可以根据用户请求或数据库信息动态生成内容。# 万维网</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>万维网（World Wide Web，简称Web）是一个由相互链接的文档和资源组成的系统，这些文档和资源可以通过互联网访问。它是互联网上的一种信息服务，允许用户通过超链接浏览和访问各种信息。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-网页-2"><a href="#1-网页-2" class="headerlink" title="1.网页"></a>1.网页</h3><p>万维网的基本信息单位，通常由HTML（HyperText Markup Language）编写。</p>
<h3 id="2-超链接-2"><a href="#2-超链接-2" class="headerlink" title="2.超链接"></a>2.超链接</h3><p>网页中的链接，允许用户导航到其他网页或资源。</p>
<h3 id="3-浏览器-2"><a href="#3-浏览器-2" class="headerlink" title="3.浏览器"></a>3.浏览器</h3><p>用于访问和浏览网页的软件，如Chrome、Firefox、Safari等。</p>
<h3 id="4-服务器-2"><a href="#4-服务器-2" class="headerlink" title="4.服务器"></a>4.服务器</h3><p>存储网页内容并提供给用户访问的计算机系统。</p>
<h3 id="5-URL（Uniform-Resource-Locator）-2"><a href="#5-URL（Uniform-Resource-Locator）-2" class="headerlink" title="5.URL（Uniform Resource Locator）"></a>5.URL（Uniform Resource Locator）</h3><p>网页的地址，用于定位互联网上的资源。</p>
<p><img src="/../TyporaImage/image-20240623151913983.png" alt="image-20240623151913983"></p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>万维网采用客户端-服务器模型，用户通过浏览器向服务器请求网页，服务器响应请求并提供网页内容。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>万维网可以根据内容类型分为静态网页和动态网页。静态网页内容固定不变，动态网页内容可以根据用户请求或数据库信息动态生成。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><h3 id="1-互连性-2"><a href="#1-互连性-2" class="headerlink" title="1.互连性"></a>1.互连性</h3><p>万维网上的网页通过超链接相互连接，形成一个巨大的信息网络。</p>
<h3 id="2-易用性-2"><a href="#2-易用性-2" class="headerlink" title="2.易用性"></a>2.易用性</h3><p>用户只需通过浏览器即可访问和浏览网页，操作简单方便。</p>
<h3 id="3-多媒体支持-2"><a href="#3-多媒体支持-2" class="headerlink" title="3.多媒体支持"></a>3.多媒体支持</h3><p>网页可以包含文本、图片、音频和视频等多种格式的信息。</p>
<h3 id="4-动态性-2"><a href="#4-动态性-2" class="headerlink" title="4.动态性"></a>4.动态性</h3><p>动态网页可以根据用户请求或数据库信息动态生成内容。</p>
<p>维网</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>万维网（World Wide Web，简称Web）是一个由相互链接的文档和资源组成的系统，这些文档和资源可以通过互联网访问。它是互联网上的一种信息服务，允许用户通过超链接浏览和访问各种信息。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-网页-3"><a href="#1-网页-3" class="headerlink" title="1.网页"></a>1.网页</h3><p>万维网的基本信息单位，通常由HTML（HyperText Markup Language）编写。</p>
<h3 id="2-超链接-3"><a href="#2-超链接-3" class="headerlink" title="2.超链接"></a>2.超链接</h3><p>网页中的链接，允许用户导航到其他网页或资源。</p>
<h3 id="3-浏览器-3"><a href="#3-浏览器-3" class="headerlink" title="3.浏览器"></a>3.浏览器</h3><p>用于访问和浏览网页的软件，如Chrome、Firefox、Safari等。</p>
<h3 id="4-服务器-3"><a href="#4-服务器-3" class="headerlink" title="4.服务器"></a>4.服务器</h3><p>存储网页内容并提供给用户访问的计算机系统。</p>
<h3 id="5-URL（Uniform-Resource-Locator）-3"><a href="#5-URL（Uniform-Resource-Locator）-3" class="headerlink" title="5.URL（Uniform Resource Locator）"></a>5.URL（Uniform Resource Locator）</h3><p>网页的地址，用于定位互联网上的资源。</p>
<p><img src="/../TyporaImage/image-20240623151913983.png" alt="image-20240623151913983"></p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>万维网采用客户端-服务器模型，用户通过浏览器向服务器请求网页，服务器响应请求并提供网页内容。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>万维网可以根据内容类型分为静态网页和动态网页。静态网页内容固定不变，动态网页内容可以根据用户请求或数据库信息动态生成。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><h3 id="1-互连性-3"><a href="#1-互连性-3" class="headerlink" title="1.互连性"></a>1.互连性</h3><p>万维网上的网页通过超链接相互连接，形成一个巨大的信息网络。</p>
<h3 id="2-易用性-3"><a href="#2-易用性-3" class="headerlink" title="2.易用性"></a>2.易用性</h3><p>用户只需通过浏览器即可访问和浏览网页，操作简单方便。</p>
<h3 id="3-多媒体支持-3"><a href="#3-多媒体支持-3" class="headerlink" title="3.多媒体支持"></a>3.多媒体支持</h3><p>网页可以包含文本、图片、音频和视频等多种格式的信息。</p>
<h3 id="4-动态性-3"><a href="#4-动态性-3" class="headerlink" title="4.动态性"></a>4.动态性</h3><p>动态网页可以根据用户请求或数据库信息动态生成内容。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>互联网发展历程</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BA%92%E8%81%94%E7%BD%91%E5%8F%91%E5%B1%95%E5%8E%86%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="互联网发展历史"><a href="#互联网发展历史" class="headerlink" title="互联网发展历史"></a>互联网发展历史</h1><h2 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h2><p><img src="/../TyporaImage/image-20240602203413855.png" alt="image-20240602203413855"></p>
<h2 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h2><p><img src="/../TyporaImage/image-20240602203511806.png" alt="image-20240602203511806"></p>
<h3 id="第三阶段"><a href="#第三阶段" class="headerlink" title="第三阶段"></a>第三阶段</h3><p><img src="/../TyporaImage/image-20240602203548858.png" alt="image-20240602203548858"></p>
<p>历史</p>
<h2 id="第一阶段-1"><a href="#第一阶段-1" class="headerlink" title="第一阶段"></a>第一阶段</h2><p><img src="/../TyporaImage/image-20240602203413855.png" alt="image-20240602203413855"></p>
<h2 id="第二阶段-1"><a href="#第二阶段-1" class="headerlink" title="第二阶段"></a>第二阶段</h2><p><img src="/../TyporaImage/image-20240602203511806.png" alt="image-20240602203511806"></p>
<h3 id="第三阶段-1"><a href="#第三阶段-1" class="headerlink" title="第三阶段"></a>第三阶段</h3><p><img src="/../TyporaImage/image-20240602203548858.png" alt="image-20240602203548858"># 互联网发展历史</p>
<h2 id="第一阶段-2"><a href="#第一阶段-2" class="headerlink" title="第一阶段"></a>第一阶段</h2><p><img src="/../TyporaImage/image-20240602203413855.png" alt="image-20240602203413855"></p>
<h2 id="第二阶段-2"><a href="#第二阶段-2" class="headerlink" title="第二阶段"></a>第二阶段</h2><p><img src="/../TyporaImage/image-20240602203511806.png" alt="image-20240602203511806"></p>
<h3 id="第三阶段-2"><a href="#第三阶段-2" class="headerlink" title="第三阶段"></a>第三阶段</h3><p><img src="/../TyporaImage/image-20240602203548858.png" alt="image-20240602203548858"></p>
<p>历史</p>
<h2 id="第一阶段-3"><a href="#第一阶段-3" class="headerlink" title="第一阶段"></a>第一阶段</h2><p><img src="/../TyporaImage/image-20240602203413855.png" alt="image-20240602203413855"></p>
<h2 id="第二阶段-3"><a href="#第二阶段-3" class="headerlink" title="第二阶段"></a>第二阶段</h2><p><img src="/../TyporaImage/image-20240602203511806.png" alt="image-20240602203511806"></p>
<h3 id="第三阶段-3"><a href="#第三阶段-3" class="headerlink" title="第三阶段"></a>第三阶段</h3><p><img src="/../TyporaImage/image-20240602203548858.png" alt="image-20240602203548858"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>介质访问控制</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BB%8B%E8%B4%A8%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h1 id="介质访问控制"><a href="#介质访问控制" class="headerlink" title="介质访问控制"></a>介质访问控制</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>是计算机网络中的一项技术，用于控制多个设备如何共享一个通信介质</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态划分信道"><a href="#1-静态划分信道" class="headerlink" title="1.静态划分信道"></a>1.静态划分信道</h3><p>信道划分介质访问控制</p>
<p>①频分多路复用FDM</p>
<p>②时分多路复用TDM</p>
<p>③波分多路复用WDM</p>
<p>④码分多路复用CDM</p>
<h3 id="2-动态分配信道"><a href="#2-动态分配信道" class="headerlink" title="2.动态分配信道"></a>2.动态分配信道</h3><p>轮询访问介质访问控制</p>
<p>①令牌传递协议</p>
<p>随机访问介质访问控制</p>
<p>①ALOHA协议</p>
<p>②CSMA协议</p>
<p>③<strong>CSMA&#x2F;CD协议</strong></p>
<p>④<strong>CSMA&#x2F;CA协议</strong></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>传输数据使用的两种链路</p>
<p>1.点对点链路</p>
<p>是计算机网络中的一种通信链路，它直接连接两个网络设备。</p>
<p>2.广播式链路</p>
<p>一种通信链路，其中数据从一个发送者传输到多个接收者，通常是通过广播或多播的方式。</p>
<p>控制</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>是计算机网络中的一项技术，用于控制多个设备如何共享一个通信介质</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态划分信道-1"><a href="#1-静态划分信道-1" class="headerlink" title="1.静态划分信道"></a>1.静态划分信道</h3><p>信道划分介质访问控制</p>
<p>①频分多路复用FDM</p>
<p>②时分多路复用TDM</p>
<p>③波分多路复用WDM</p>
<p>④码分多路复用CDM</p>
<h3 id="2-动态分配信道-1"><a href="#2-动态分配信道-1" class="headerlink" title="2.动态分配信道"></a>2.动态分配信道</h3><p>轮询访问介质访问控制</p>
<p>①令牌传递协议</p>
<p>随机访问介质访问控制</p>
<p>①ALOHA协议</p>
<p>②CSMA协议</p>
<p>③<strong>CSMA&#x2F;CD协议</strong></p>
<p>④<strong>CSMA&#x2F;CA协议</strong></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>传输数据使用的两种链路</p>
<p>1.点对点链路</p>
<p>是计算机网络中的一种通信链路，它直接连接两个网络设备。</p>
<p>2.广播式链路</p>
<p>一种通信链路，其中数据从一个发送者传输到多个接收者，通常是通过广播或多播的方式。# 介质访问控制</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>是计算机网络中的一项技术，用于控制多个设备如何共享一个通信介质</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态划分信道-2"><a href="#1-静态划分信道-2" class="headerlink" title="1.静态划分信道"></a>1.静态划分信道</h3><p>信道划分介质访问控制</p>
<p>①频分多路复用FDM</p>
<p>②时分多路复用TDM</p>
<p>③波分多路复用WDM</p>
<p>④码分多路复用CDM</p>
<h3 id="2-动态分配信道-2"><a href="#2-动态分配信道-2" class="headerlink" title="2.动态分配信道"></a>2.动态分配信道</h3><p>轮询访问介质访问控制</p>
<p>①令牌传递协议</p>
<p>随机访问介质访问控制</p>
<p>①ALOHA协议</p>
<p>②CSMA协议</p>
<p>③<strong>CSMA&#x2F;CD协议</strong></p>
<p>④<strong>CSMA&#x2F;CA协议</strong></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>传输数据使用的两种链路</p>
<p>1.点对点链路</p>
<p>是计算机网络中的一种通信链路，它直接连接两个网络设备。</p>
<p>2.广播式链路</p>
<p>一种通信链路，其中数据从一个发送者传输到多个接收者，通常是通过广播或多播的方式。</p>
<p>控制</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>是计算机网络中的一项技术，用于控制多个设备如何共享一个通信介质</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态划分信道-3"><a href="#1-静态划分信道-3" class="headerlink" title="1.静态划分信道"></a>1.静态划分信道</h3><p>信道划分介质访问控制</p>
<p>①频分多路复用FDM</p>
<p>②时分多路复用TDM</p>
<p>③波分多路复用WDM</p>
<p>④码分多路复用CDM</p>
<h3 id="2-动态分配信道-3"><a href="#2-动态分配信道-3" class="headerlink" title="2.动态分配信道"></a>2.动态分配信道</h3><p>轮询访问介质访问控制</p>
<p>①令牌传递协议</p>
<p>随机访问介质访问控制</p>
<p>①ALOHA协议</p>
<p>②CSMA协议</p>
<p>③<strong>CSMA&#x2F;CD协议</strong></p>
<p>④<strong>CSMA&#x2F;CA协议</strong></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>传输数据使用的两种链路</p>
<p>1.点对点链路</p>
<p>是计算机网络中的一种通信链路，它直接连接两个网络设备。</p>
<p>2.广播式链路</p>
<p>一种通信链路，其中数据从一个发送者传输到多个接收者，通常是通过广播或多播的方式。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>以太网</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BB%A5%E5%A4%AA%E7%BD%91/</url>
    <content><![CDATA[<h1 id="以太网"><a href="#以太网" class="headerlink" title="以太网"></a>以太网</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>采用CSMA&#x2F;CD技术的网络。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-10BASE-T以太网"><a href="#1-10BASE-T以太网" class="headerlink" title="1.10BASE-T以太网"></a>1.10BASE-T以太网</h3><h3 id="2-100BASE-T以太网"><a href="#2-100BASE-T以太网" class="headerlink" title="2.100BASE-T以太网"></a>2.100BASE-T以太网</h3><p><img src="/../TyporaImage/image-20240617214251134.png" alt="image-20240617214251134"></p>
<h3 id="3-吉比特以太网"><a href="#3-吉比特以太网" class="headerlink" title="3.吉比特以太网"></a>3.吉比特以太网</h3><p><img src="/../TyporaImage/image-20240617214258643.png" alt="image-20240617214258643"></p>
<h3 id="4-10吉比特以太网"><a href="#4-10吉比特以太网" class="headerlink" title="4.10吉比特以太网"></a>4.10吉比特以太网</h3><p><img src="/../TyporaImage/image-20240617214310522.png" alt="image-20240617214310522"></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>1.无连接</p>
<p>2.不可靠传输</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.适配器：</p>
<p>ROM上有计算机硬件地址MAC地址。</p>
<p>2.MAC地址</p>
<p>是一个唯一的硬件地址，用于在网络中标识网络接口卡（NIC）或其他网络设备。</p>
<p>MAC地址由48位（6个字节）组成，通常表示为12个十六进制数字，每两个数字之间用冒号或连字符分隔。</p>
<p>MAC地址的前24位代表厂商的唯一标识符，后24位由厂商分配给其生产的每个设备。</p>
<p>3.以太网MAC帧格式</p>
<p><img src="/../TyporaImage/image-20240617214449008.png" alt="image-20240617214449008"></p>
<h1 id="10BASE-T以太网"><a href="#10BASE-T以太网" class="headerlink" title="10BASE-T以太网"></a>10BASE-T以太网</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>10BASE-T是以太网（Ethernet）的一种类型，它使用双绞线作为传输介质，数据传输速率为10 Mbps（兆比特每秒）。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>包括10BASE-T网卡、双绞线、集线器（或交换机）等。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>用星型拓扑结构，每个设备通过双绞线连接到集线器或交换机。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>提供较慢的数据传输速率，但成本较低，易于部署。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>旨在提供一种成本效益高、易于部署的局域网解决方案。</p>
<p>太网</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>采用CSMA&#x2F;CD技术的网络。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-10BASE-T以太网-1"><a href="#1-10BASE-T以太网-1" class="headerlink" title="1.10BASE-T以太网"></a>1.10BASE-T以太网</h3><h3 id="2-100BASE-T以太网-1"><a href="#2-100BASE-T以太网-1" class="headerlink" title="2.100BASE-T以太网"></a>2.100BASE-T以太网</h3><p><img src="/../TyporaImage/image-20240617214251134.png" alt="image-20240617214251134"></p>
<h3 id="3-吉比特以太网-1"><a href="#3-吉比特以太网-1" class="headerlink" title="3.吉比特以太网"></a>3.吉比特以太网</h3><p><img src="/../TyporaImage/image-20240617214258643.png" alt="image-20240617214258643"></p>
<h3 id="4-10吉比特以太网-1"><a href="#4-10吉比特以太网-1" class="headerlink" title="4.10吉比特以太网"></a>4.10吉比特以太网</h3><p><img src="/../TyporaImage/image-20240617214310522.png" alt="image-20240617214310522"></p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p>1.无连接</p>
<p>2.不可靠传输</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.适配器：</p>
<p>ROM上有计算机硬件地址MAC地址。</p>
<p>2.MAC地址</p>
<p>是一个唯一的硬件地址，用于在网络中标识网络接口卡（NIC）或其他网络设备。</p>
<p>MAC地址由48位（6个字节）组成，通常表示为12个十六进制数字，每两个数字之间用冒号或连字符分隔。</p>
<p>MAC地址的前24位代表厂商的唯一标识符，后24位由厂商分配给其生产的每个设备。</p>
<p>3.以太网MAC帧格式</p>
<p><img src="/../TyporaImage/image-20240617214449008.png" alt="image-20240617214449008"></p>
<h1 id="10BASE-T以太网-1"><a href="#10BASE-T以太网-1" class="headerlink" title="10BASE-T以太网"></a>10BASE-T以太网</h1><h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>10BASE-T是以太网（Ethernet）的一种类型，它使用双绞线作为传输介质，数据传输速率为10 Mbps（兆比特每秒）。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>包括10BASE-T网卡、双绞线、集线器（或交换机）等。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>用星型拓扑结构，每个设备通过双绞线连接到集线器或交换机。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>提供较慢的数据传输速率，但成本较低，易于部署。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>旨在提供一种成本效益高、易于部署的局域网解决方案。# 以太网</p>
<h2 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h2><p>采用CSMA&#x2F;CD技术的网络。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-10BASE-T以太网-2"><a href="#1-10BASE-T以太网-2" class="headerlink" title="1.10BASE-T以太网"></a>1.10BASE-T以太网</h3><h3 id="2-100BASE-T以太网-2"><a href="#2-100BASE-T以太网-2" class="headerlink" title="2.100BASE-T以太网"></a>2.100BASE-T以太网</h3><p><img src="/../TyporaImage/image-20240617214251134.png" alt="image-20240617214251134"></p>
<h3 id="3-吉比特以太网-2"><a href="#3-吉比特以太网-2" class="headerlink" title="3.吉比特以太网"></a>3.吉比特以太网</h3><p><img src="/../TyporaImage/image-20240617214258643.png" alt="image-20240617214258643"></p>
<h3 id="4-10吉比特以太网-2"><a href="#4-10吉比特以太网-2" class="headerlink" title="4.10吉比特以太网"></a>4.10吉比特以太网</h3><p><img src="/../TyporaImage/image-20240617214310522.png" alt="image-20240617214310522"></p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p>1.无连接</p>
<p>2.不可靠传输</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.适配器：</p>
<p>ROM上有计算机硬件地址MAC地址。</p>
<p>2.MAC地址</p>
<p>是一个唯一的硬件地址，用于在网络中标识网络接口卡（NIC）或其他网络设备。</p>
<p>MAC地址由48位（6个字节）组成，通常表示为12个十六进制数字，每两个数字之间用冒号或连字符分隔。</p>
<p>MAC地址的前24位代表厂商的唯一标识符，后24位由厂商分配给其生产的每个设备。</p>
<p>3.以太网MAC帧格式</p>
<p><img src="/../TyporaImage/image-20240617214449008.png" alt="image-20240617214449008"></p>
<h1 id="10BASE-T以太网-2"><a href="#10BASE-T以太网-2" class="headerlink" title="10BASE-T以太网"></a>10BASE-T以太网</h1><h2 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h2><p>10BASE-T是以太网（Ethernet）的一种类型，它使用双绞线作为传输介质，数据传输速率为10 Mbps（兆比特每秒）。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>包括10BASE-T网卡、双绞线、集线器（或交换机）等。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>用星型拓扑结构，每个设备通过双绞线连接到集线器或交换机。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>提供较慢的数据传输速率，但成本较低，易于部署。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>旨在提供一种成本效益高、易于部署的局域网解决方案。</p>
<p>太网</p>
<h2 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h2><p>采用CSMA&#x2F;CD技术的网络。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-10BASE-T以太网-3"><a href="#1-10BASE-T以太网-3" class="headerlink" title="1.10BASE-T以太网"></a>1.10BASE-T以太网</h3><h3 id="2-100BASE-T以太网-3"><a href="#2-100BASE-T以太网-3" class="headerlink" title="2.100BASE-T以太网"></a>2.100BASE-T以太网</h3><p><img src="/../TyporaImage/image-20240617214251134.png" alt="image-20240617214251134"></p>
<h3 id="3-吉比特以太网-3"><a href="#3-吉比特以太网-3" class="headerlink" title="3.吉比特以太网"></a>3.吉比特以太网</h3><p><img src="/../TyporaImage/image-20240617214258643.png" alt="image-20240617214258643"></p>
<h3 id="4-10吉比特以太网-3"><a href="#4-10吉比特以太网-3" class="headerlink" title="4.10吉比特以太网"></a>4.10吉比特以太网</h3><p><img src="/../TyporaImage/image-20240617214310522.png" alt="image-20240617214310522"></p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p>1.无连接</p>
<p>2.不可靠传输</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.适配器：</p>
<p>ROM上有计算机硬件地址MAC地址。</p>
<p>2.MAC地址</p>
<p>是一个唯一的硬件地址，用于在网络中标识网络接口卡（NIC）或其他网络设备。</p>
<p>MAC地址由48位（6个字节）组成，通常表示为12个十六进制数字，每两个数字之间用冒号或连字符分隔。</p>
<p>MAC地址的前24位代表厂商的唯一标识符，后24位由厂商分配给其生产的每个设备。</p>
<p>3.以太网MAC帧格式</p>
<p><img src="/../TyporaImage/image-20240617214449008.png" alt="image-20240617214449008"></p>
<h1 id="10BASE-T以太网-3"><a href="#10BASE-T以太网-3" class="headerlink" title="10BASE-T以太网"></a>10BASE-T以太网</h1><h2 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h2><p>10BASE-T是以太网（Ethernet）的一种类型，它使用双绞线作为传输介质，数据传输速率为10 Mbps（兆比特每秒）。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>包括10BASE-T网卡、双绞线、集线器（或交换机）等。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>用星型拓扑结构，每个设备通过双绞线连接到集线器或交换机。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>提供较慢的数据传输速率，但成本较低，易于部署。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>旨在提供一种成本效益高、易于部署的局域网解决方案。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>传输层概述</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BC%A0%E8%BE%93%E5%B1%82%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="传输层概述"><a href="#传输层概述" class="headerlink" title="传输层概述"></a>传输层概述</h1><p>1.<strong>定义</strong>：</p>
<p>传输层的主要作用是为两台计算机之间的通信提供端到端的数据传输服务。它通过提供可靠的数据传输机制和错误检测修复功能，确保数据在发送和接收之间的完整性和顺序性。</p>
<p>2.<strong>主要功能</strong>：</p>
<ul>
<li><p><strong>数据传输</strong>：</p>
<p>负责将上层应用程序发送的数据分割成适当的大小进行传输，并在接收端重新组装数据。</p>
</li>
<li><p><strong>可靠性</strong></p>
<p>通过使用流量控制和差错控制技术来确保数据的可靠传输，如确认和重传机制。</p>
</li>
<li><p><strong>流量控制</strong></p>
<p>管理发送方数据的速率，以防止接收方不堪重负或网络拥塞。</p>
</li>
<li><p><strong>复用与分用</strong></p>
<p>通过端口号实现多个应用程序同时使用网络资源，确保数据正确地路由到目标应用。</p>
</li>
</ul>
<p>3.<strong>传输层协议</strong>：</p>
<ul>
<li><p><strong>TCP（Transmission Control Protocol）</strong>：</p>
<p>面向连接的协议，提供可靠的、面向字节流的数据传输服务，适用于对数据可靠性要求高的应用，如网页浏览、文件传输等。</p>
</li>
<li><p><strong>UDP（User Datagram Protocol）</strong>：</p>
<p>无连接的协议，提供不可靠但高效的数据传输服务，适用于实时性要求高、数据丢失不会造成严重影响的应用，如音视频传输、在线游戏等。</p>
</li>
</ul>
<p>4.<strong>端口</strong>：</p>
<ul>
<li><p><strong>定义</strong>：</p>
<p>传输层通过端口号来标识不同的应用程序或服务，使得多个应用程序能够共享同一个网络接口。</p>
</li>
<li><p><strong>作用</strong>：</p>
<p>端口号标识了通信中的应用程序，例如HTTP使用端口号80，SMTP使用端口号25等。</p>
</li>
<li><p>分类：</p>
<p><img src="/../TyporaImage/image-20240623124333332.png" alt="image-20240623124333332"></p>
<p><img src="/../TyporaImage/image-20240623124355301.png" alt="image-20240623124355301"></p>
</li>
</ul>
<p>5.<strong>连接和非连接导向</strong>：</p>
<ul>
<li><strong>连接导向</strong>：TCP是连接导向的协议，建立连接后进行数据传输，确保数据的可靠性和顺序性。</li>
<li><strong>非连接导向</strong>：UDP是非连接导向的协议，发送数据时不需要建立连接，数据包可能会丢失或乱序，但传输效率高。概述</li>
</ul>
<p>1.<strong>定义</strong>：</p>
<p>传输层的主要作用是为两台计算机之间的通信提供端到端的数据传输服务。它通过提供可靠的数据传输机制和错误检测修复功能，确保数据在发送和接收之间的完整性和顺序性。</p>
<p>2.<strong>主要功能</strong>：</p>
<ul>
<li><p><strong>数据传输</strong>：</p>
<p>负责将上层应用程序发送的数据分割成适当的大小进行传输，并在接收端重新组装数据。</p>
</li>
<li><p><strong>可靠性</strong></p>
<p>通过使用流量控制和差错控制技术来确保数据的可靠传输，如确认和重传机制。</p>
</li>
<li><p><strong>流量控制</strong></p>
<p>管理发送方数据的速率，以防止接收方不堪重负或网络拥塞。</p>
</li>
<li><p><strong>复用与分用</strong></p>
<p>通过端口号实现多个应用程序同时使用网络资源，确保数据正确地路由到目标应用。</p>
</li>
</ul>
<p>3.<strong>传输层协议</strong>：</p>
<ul>
<li><p><strong>TCP（Transmission Control Protocol）</strong>：</p>
<p>面向连接的协议，提供可靠的、面向字节流的数据传输服务，适用于对数据可靠性要求高的应用，如网页浏览、文件传输等。</p>
</li>
<li><p><strong>UDP（User Datagram Protocol）</strong>：</p>
<p>无连接的协议，提供不可靠但高效的数据传输服务，适用于实时性要求高、数据丢失不会造成严重影响的应用，如音视频传输、在线游戏等。</p>
</li>
</ul>
<p>4.<strong>端口</strong>：</p>
<ul>
<li><p><strong>定义</strong>：</p>
<p>传输层通过端口号来标识不同的应用程序或服务，使得多个应用程序能够共享同一个网络接口。</p>
</li>
<li><p><strong>作用</strong>：</p>
<p>端口号标识了通信中的应用程序，例如HTTP使用端口号80，SMTP使用端口号25等。</p>
</li>
<li><p>分类：</p>
<p><img src="/../TyporaImage/image-20240623124333332.png" alt="image-20240623124333332"></p>
<p><img src="/../TyporaImage/image-20240623124355301.png" alt="image-20240623124355301"></p>
</li>
</ul>
<p>5.<strong>连接和非连接导向</strong>：</p>
<ul>
<li><strong>连接导向</strong>：TCP是连接导向的协议，建立连接后进行数据传输，确保数据的可靠性和顺序性。</li>
<li><strong>非连接导向</strong>：UDP是非连接导向的协议，发送数据时不需要建立连接，数据包可能会丢失或乱序，但传输效率高。# 传输层概述</li>
</ul>
<p>1.<strong>定义</strong>：</p>
<p>传输层的主要作用是为两台计算机之间的通信提供端到端的数据传输服务。它通过提供可靠的数据传输机制和错误检测修复功能，确保数据在发送和接收之间的完整性和顺序性。</p>
<p>2.<strong>主要功能</strong>：</p>
<ul>
<li><p><strong>数据传输</strong>：</p>
<p>负责将上层应用程序发送的数据分割成适当的大小进行传输，并在接收端重新组装数据。</p>
</li>
<li><p><strong>可靠性</strong></p>
<p>通过使用流量控制和差错控制技术来确保数据的可靠传输，如确认和重传机制。</p>
</li>
<li><p><strong>流量控制</strong></p>
<p>管理发送方数据的速率，以防止接收方不堪重负或网络拥塞。</p>
</li>
<li><p><strong>复用与分用</strong></p>
<p>通过端口号实现多个应用程序同时使用网络资源，确保数据正确地路由到目标应用。</p>
</li>
</ul>
<p>3.<strong>传输层协议</strong>：</p>
<ul>
<li><p><strong>TCP（Transmission Control Protocol）</strong>：</p>
<p>面向连接的协议，提供可靠的、面向字节流的数据传输服务，适用于对数据可靠性要求高的应用，如网页浏览、文件传输等。</p>
</li>
<li><p><strong>UDP（User Datagram Protocol）</strong>：</p>
<p>无连接的协议，提供不可靠但高效的数据传输服务，适用于实时性要求高、数据丢失不会造成严重影响的应用，如音视频传输、在线游戏等。</p>
</li>
</ul>
<p>4.<strong>端口</strong>：</p>
<ul>
<li><p><strong>定义</strong>：</p>
<p>传输层通过端口号来标识不同的应用程序或服务，使得多个应用程序能够共享同一个网络接口。</p>
</li>
<li><p><strong>作用</strong>：</p>
<p>端口号标识了通信中的应用程序，例如HTTP使用端口号80，SMTP使用端口号25等。</p>
</li>
<li><p>分类：</p>
<p><img src="/../TyporaImage/image-20240623124333332.png" alt="image-20240623124333332"></p>
<p><img src="/../TyporaImage/image-20240623124355301.png" alt="image-20240623124355301"></p>
</li>
</ul>
<p>5.<strong>连接和非连接导向</strong>：</p>
<ul>
<li><strong>连接导向</strong>：TCP是连接导向的协议，建立连接后进行数据传输，确保数据的可靠性和顺序性。</li>
<li><strong>非连接导向</strong>：UDP是非连接导向的协议，发送数据时不需要建立连接，数据包可能会丢失或乱序，但传输效率高。概述</li>
</ul>
<p>1.<strong>定义</strong>：</p>
<p>传输层的主要作用是为两台计算机之间的通信提供端到端的数据传输服务。它通过提供可靠的数据传输机制和错误检测修复功能，确保数据在发送和接收之间的完整性和顺序性。</p>
<p>2.<strong>主要功能</strong>：</p>
<ul>
<li><p><strong>数据传输</strong>：</p>
<p>负责将上层应用程序发送的数据分割成适当的大小进行传输，并在接收端重新组装数据。</p>
</li>
<li><p><strong>可靠性</strong></p>
<p>通过使用流量控制和差错控制技术来确保数据的可靠传输，如确认和重传机制。</p>
</li>
<li><p><strong>流量控制</strong></p>
<p>管理发送方数据的速率，以防止接收方不堪重负或网络拥塞。</p>
</li>
<li><p><strong>复用与分用</strong></p>
<p>通过端口号实现多个应用程序同时使用网络资源，确保数据正确地路由到目标应用。</p>
</li>
</ul>
<p>3.<strong>传输层协议</strong>：</p>
<ul>
<li><p><strong>TCP（Transmission Control Protocol）</strong>：</p>
<p>面向连接的协议，提供可靠的、面向字节流的数据传输服务，适用于对数据可靠性要求高的应用，如网页浏览、文件传输等。</p>
</li>
<li><p><strong>UDP（User Datagram Protocol）</strong>：</p>
<p>无连接的协议，提供不可靠但高效的数据传输服务，适用于实时性要求高、数据丢失不会造成严重影响的应用，如音视频传输、在线游戏等。</p>
</li>
</ul>
<p>4.<strong>端口</strong>：</p>
<ul>
<li><p><strong>定义</strong>：</p>
<p>传输层通过端口号来标识不同的应用程序或服务，使得多个应用程序能够共享同一个网络接口。</p>
</li>
<li><p><strong>作用</strong>：</p>
<p>端口号标识了通信中的应用程序，例如HTTP使用端口号80，SMTP使用端口号25等。</p>
</li>
<li><p>分类：</p>
<p><img src="/../TyporaImage/image-20240623124333332.png" alt="image-20240623124333332"></p>
<p><img src="/../TyporaImage/image-20240623124355301.png" alt="image-20240623124355301"></p>
</li>
</ul>
<p>5.<strong>连接和非连接导向</strong>：</p>
<ul>
<li><strong>连接导向</strong>：TCP是连接导向的协议，建立连接后进行数据传输，确保数据的可靠性和顺序性。</li>
<li><strong>非连接导向</strong>：UDP是非连接导向的协议，发送数据时不需要建立连接，数据包可能会丢失或乱序，但传输效率高。</li>
</ul>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>信道划分介质访问控制</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BF%A1%E9%81%93%E5%88%92%E5%88%86%E4%BB%8B%E8%B4%A8%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h1 id="信道划分介质访问控制"><a href="#信道划分介质访问控制" class="headerlink" title="信道划分介质访问控制"></a>信道划分介质访问控制</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>按照时域和频域资源划分信道，用于通过划分通信信道来控制多个设备对共享介质的访问。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="①频分多路复用FDM"><a href="#①频分多路复用FDM" class="headerlink" title="①频分多路复用FDM"></a>①频分多路复用FDM</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613173926207.png" alt="image-20240613173926207"></p>
<h3 id="②时分多路复用TDM"><a href="#②时分多路复用TDM" class="headerlink" title="②时分多路复用TDM"></a>②时分多路复用TDM</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613174006404.png" alt="image-20240613174006404"></p>
<h3 id="③改进的时分多路复用–统计时分复用："><a href="#③改进的时分多路复用–统计时分复用：" class="headerlink" title="③改进的时分多路复用–统计时分复用："></a>③改进的时分多路复用–统计时分复用：</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613174105240.png" alt="image-20240613174105240"></p>
<h3 id="④波分多路复用WDM"><a href="#④波分多路复用WDM" class="headerlink" title="④波分多路复用WDM"></a>④波分多路复用WDM</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613174211975.png" alt="image-20240613174211975"></p>
<h3 id="④码分多路复用CDM"><a href="#④码分多路复用CDM" class="headerlink" title="④码分多路复用CDM"></a>④码分多路复用CDM</h3><p><img src="/../TyporaImage/image-20240613174610736.png" alt="image-20240613174610736"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.多路复用</p>
<p>是一种通信技术，它允许多个信号或数据流通过同一传输介质同时传输，以提高介质的利用率和传输效率。</p>
<p>控制</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>按照时域和频域资源划分信道，用于通过划分通信信道来控制多个设备对共享介质的访问。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="①频分多路复用FDM-1"><a href="#①频分多路复用FDM-1" class="headerlink" title="①频分多路复用FDM"></a>①频分多路复用FDM</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613173926207.png" alt="image-20240613173926207"></p>
<h3 id="②时分多路复用TDM-1"><a href="#②时分多路复用TDM-1" class="headerlink" title="②时分多路复用TDM"></a>②时分多路复用TDM</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613174006404.png" alt="image-20240613174006404"></p>
<h3 id="③改进的时分多路复用–统计时分复用：-1"><a href="#③改进的时分多路复用–统计时分复用：-1" class="headerlink" title="③改进的时分多路复用–统计时分复用："></a>③改进的时分多路复用–统计时分复用：</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613174105240.png" alt="image-20240613174105240"></p>
<h3 id="④波分多路复用WDM-1"><a href="#④波分多路复用WDM-1" class="headerlink" title="④波分多路复用WDM"></a>④波分多路复用WDM</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613174211975.png" alt="image-20240613174211975"></p>
<h3 id="④码分多路复用CDM-1"><a href="#④码分多路复用CDM-1" class="headerlink" title="④码分多路复用CDM"></a>④码分多路复用CDM</h3><p><img src="/../TyporaImage/image-20240613174610736.png" alt="image-20240613174610736"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.多路复用</p>
<p>是一种通信技术，它允许多个信号或数据流通过同一传输介质同时传输，以提高介质的利用率和传输效率。# 信道划分介质访问控制</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>按照时域和频域资源划分信道，用于通过划分通信信道来控制多个设备对共享介质的访问。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="①频分多路复用FDM-2"><a href="#①频分多路复用FDM-2" class="headerlink" title="①频分多路复用FDM"></a>①频分多路复用FDM</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613173926207.png" alt="image-20240613173926207"></p>
<h3 id="②时分多路复用TDM-2"><a href="#②时分多路复用TDM-2" class="headerlink" title="②时分多路复用TDM"></a>②时分多路复用TDM</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613174006404.png" alt="image-20240613174006404"></p>
<h3 id="③改进的时分多路复用–统计时分复用：-2"><a href="#③改进的时分多路复用–统计时分复用：-2" class="headerlink" title="③改进的时分多路复用–统计时分复用："></a>③改进的时分多路复用–统计时分复用：</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613174105240.png" alt="image-20240613174105240"></p>
<h3 id="④波分多路复用WDM-2"><a href="#④波分多路复用WDM-2" class="headerlink" title="④波分多路复用WDM"></a>④波分多路复用WDM</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613174211975.png" alt="image-20240613174211975"></p>
<h3 id="④码分多路复用CDM-2"><a href="#④码分多路复用CDM-2" class="headerlink" title="④码分多路复用CDM"></a>④码分多路复用CDM</h3><p><img src="/../TyporaImage/image-20240613174610736.png" alt="image-20240613174610736"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.多路复用</p>
<p>是一种通信技术，它允许多个信号或数据流通过同一传输介质同时传输，以提高介质的利用率和传输效率。</p>
<p>控制</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>按照时域和频域资源划分信道，用于通过划分通信信道来控制多个设备对共享介质的访问。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="①频分多路复用FDM-3"><a href="#①频分多路复用FDM-3" class="headerlink" title="①频分多路复用FDM"></a>①频分多路复用FDM</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613173926207.png" alt="image-20240613173926207"></p>
<h3 id="②时分多路复用TDM-3"><a href="#②时分多路复用TDM-3" class="headerlink" title="②时分多路复用TDM"></a>②时分多路复用TDM</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613174006404.png" alt="image-20240613174006404"></p>
<h3 id="③改进的时分多路复用–统计时分复用：-3"><a href="#③改进的时分多路复用–统计时分复用：-3" class="headerlink" title="③改进的时分多路复用–统计时分复用："></a>③改进的时分多路复用–统计时分复用：</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613174105240.png" alt="image-20240613174105240"></p>
<h3 id="④波分多路复用WDM-3"><a href="#④波分多路复用WDM-3" class="headerlink" title="④波分多路复用WDM"></a>④波分多路复用WDM</h3><p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613174211975.png" alt="image-20240613174211975"></p>
<h3 id="④码分多路复用CDM-3"><a href="#④码分多路复用CDM-3" class="headerlink" title="④码分多路复用CDM"></a>④码分多路复用CDM</h3><p><img src="/../TyporaImage/image-20240613174610736.png" alt="image-20240613174610736"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.多路复用</p>
<p>是一种通信技术，它允许多个信号或数据流通过同一传输介质同时传输，以提高介质的利用率和传输效率。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>停止-等待协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%81%9C%E6%AD%A2-%E7%AD%89%E5%BE%85%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="停止等待协议"><a href="#停止等待协议" class="headerlink" title="停止等待协议"></a>停止等待协议</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>每发送完一个帧就停止发送，等待对方的确认。在收到确认后再发送下一个帧。</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>1.信道利用率低</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="无差错情况"><a href="#无差错情况" class="headerlink" title="无差错情况:"></a>无差错情况:</h3><p><img src="/../TyporaImage/image-20240613165053894.png" alt="image-20240613165053894"></p>
<h3 id="有差错情况"><a href="#有差错情况" class="headerlink" title="有差错情况"></a>有差错情况</h3><h4 id="1-数据帧丢失或者帧出错"><a href="#1-数据帧丢失或者帧出错" class="headerlink" title="1.数据帧丢失或者帧出错"></a>1.数据帧丢失或者帧出错</h4><p><img src="/../TyporaImage/image-20240613165143128.png" alt="image-20240613165143128"></p>
<h4 id="2-ACK丢失"><a href="#2-ACK丢失" class="headerlink" title="2.ACK丢失"></a>2.ACK丢失</h4><p><img src="/../TyporaImage/image-20240613165302257.png" alt="image-20240613165302257"></p>
<h4 id="3-ACK迟到"><a href="#3-ACK迟到" class="headerlink" title="3.ACK迟到"></a>3.ACK迟到</h4><p><img src="/../TyporaImage/image-20240613165349810.png" alt="image-20240613165349810"></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>解决丢包问题，和实现流量控制。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.信道利用率</p>
<p>数据通信中，信道实际用于传输数据的时间与总时间的比例。它是衡量通信信道效率的一个重要指标。</p>
<p><img src="/../TyporaImage/image-20240613165546249.png" alt="image-20240613165546249"></p>
<p>协议</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>每发送完一个帧就停止发送，等待对方的确认。在收到确认后再发送下一个帧。</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p>1.信道利用率低</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="无差错情况-1"><a href="#无差错情况-1" class="headerlink" title="无差错情况:"></a>无差错情况:</h3><p><img src="/../TyporaImage/image-20240613165053894.png" alt="image-20240613165053894"></p>
<h3 id="有差错情况-1"><a href="#有差错情况-1" class="headerlink" title="有差错情况"></a>有差错情况</h3><h4 id="1-数据帧丢失或者帧出错-1"><a href="#1-数据帧丢失或者帧出错-1" class="headerlink" title="1.数据帧丢失或者帧出错"></a>1.数据帧丢失或者帧出错</h4><p><img src="/../TyporaImage/image-20240613165143128.png" alt="image-20240613165143128"></p>
<h4 id="2-ACK丢失-1"><a href="#2-ACK丢失-1" class="headerlink" title="2.ACK丢失"></a>2.ACK丢失</h4><p><img src="/../TyporaImage/image-20240613165302257.png" alt="image-20240613165302257"></p>
<h4 id="3-ACK迟到-1"><a href="#3-ACK迟到-1" class="headerlink" title="3.ACK迟到"></a>3.ACK迟到</h4><p><img src="/../TyporaImage/image-20240613165349810.png" alt="image-20240613165349810"></p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>解决丢包问题，和实现流量控制。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.信道利用率</p>
<p>数据通信中，信道实际用于传输数据的时间与总时间的比例。它是衡量通信信道效率的一个重要指标。</p>
<p><img src="/../TyporaImage/image-20240613165546249.png" alt="image-20240613165546249"># 停止等待协议</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>每发送完一个帧就停止发送，等待对方的确认。在收到确认后再发送下一个帧。</p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p>1.信道利用率低</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="无差错情况-2"><a href="#无差错情况-2" class="headerlink" title="无差错情况:"></a>无差错情况:</h3><p><img src="/../TyporaImage/image-20240613165053894.png" alt="image-20240613165053894"></p>
<h3 id="有差错情况-2"><a href="#有差错情况-2" class="headerlink" title="有差错情况"></a>有差错情况</h3><h4 id="1-数据帧丢失或者帧出错-2"><a href="#1-数据帧丢失或者帧出错-2" class="headerlink" title="1.数据帧丢失或者帧出错"></a>1.数据帧丢失或者帧出错</h4><p><img src="/../TyporaImage/image-20240613165143128.png" alt="image-20240613165143128"></p>
<h4 id="2-ACK丢失-2"><a href="#2-ACK丢失-2" class="headerlink" title="2.ACK丢失"></a>2.ACK丢失</h4><p><img src="/../TyporaImage/image-20240613165302257.png" alt="image-20240613165302257"></p>
<h4 id="3-ACK迟到-2"><a href="#3-ACK迟到-2" class="headerlink" title="3.ACK迟到"></a>3.ACK迟到</h4><p><img src="/../TyporaImage/image-20240613165349810.png" alt="image-20240613165349810"></p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>解决丢包问题，和实现流量控制。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.信道利用率</p>
<p>数据通信中，信道实际用于传输数据的时间与总时间的比例。它是衡量通信信道效率的一个重要指标。</p>
<p><img src="/../TyporaImage/image-20240613165546249.png" alt="image-20240613165546249"></p>
<p>协议</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>每发送完一个帧就停止发送，等待对方的确认。在收到确认后再发送下一个帧。</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p>1.信道利用率低</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="无差错情况-3"><a href="#无差错情况-3" class="headerlink" title="无差错情况:"></a>无差错情况:</h3><p><img src="/../TyporaImage/image-20240613165053894.png" alt="image-20240613165053894"></p>
<h3 id="有差错情况-3"><a href="#有差错情况-3" class="headerlink" title="有差错情况"></a>有差错情况</h3><h4 id="1-数据帧丢失或者帧出错-3"><a href="#1-数据帧丢失或者帧出错-3" class="headerlink" title="1.数据帧丢失或者帧出错"></a>1.数据帧丢失或者帧出错</h4><p><img src="/../TyporaImage/image-20240613165143128.png" alt="image-20240613165143128"></p>
<h4 id="2-ACK丢失-3"><a href="#2-ACK丢失-3" class="headerlink" title="2.ACK丢失"></a>2.ACK丢失</h4><p><img src="/../TyporaImage/image-20240613165302257.png" alt="image-20240613165302257"></p>
<h4 id="3-ACK迟到-3"><a href="#3-ACK迟到-3" class="headerlink" title="3.ACK迟到"></a>3.ACK迟到</h4><p><img src="/../TyporaImage/image-20240613165349810.png" alt="image-20240613165349810"></p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>解决丢包问题，和实现流量控制。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.信道利用率</p>
<p>数据通信中，信道实际用于传输数据的时间与总时间的比例。它是衡量通信信道效率的一个重要指标。</p>
<p><img src="/../TyporaImage/image-20240613165546249.png" alt="image-20240613165546249"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>光纤</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%85%89%E7%BA%A4/</url>
    <content><![CDATA[<h1 id="光纤"><a href="#光纤" class="headerlink" title="光纤"></a>光纤</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>利用光导纤维传递光脉冲来进行通信。有光脉冲表示1，无表示0.</p>
<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.单模光纤</p>
<p>2.多模光纤</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240608163908039.png" alt="image-20240608163908039"></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240608164118992.png" alt="image-20240608164118992"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.可见光的频率大约为10的8次方。</p>
<p>2.两种光纤之间的比较：</p>
<p><img src="/../TyporaImage/image-20240608164054336.png" alt="image-20240608164054336">光纤</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>利用光导纤维传递光脉冲来进行通信。有光脉冲表示1，无表示0.</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.单模光纤</p>
<p>2.多模光纤</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240608163908039.png" alt="image-20240608163908039"></p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240608164118992.png" alt="image-20240608164118992"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.可见光的频率大约为10的8次方。</p>
<p>2.两种光纤之间的比较：</p>
<p><img src="/../TyporaImage/image-20240608164054336.png" alt="image-20240608164054336"># 光纤</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>利用光导纤维传递光脉冲来进行通信。有光脉冲表示1，无表示0.</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.单模光纤</p>
<p>2.多模光纤</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240608163908039.png" alt="image-20240608163908039"></p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240608164118992.png" alt="image-20240608164118992"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.可见光的频率大约为10的8次方。</p>
<p>2.两种光纤之间的比较：</p>
<p><img src="/../TyporaImage/image-20240608164054336.png" alt="image-20240608164054336">光纤</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>利用光导纤维传递光脉冲来进行通信。有光脉冲表示1，无表示0.</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.单模光纤</p>
<p>2.多模光纤</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240608163908039.png" alt="image-20240608163908039"></p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240608164118992.png" alt="image-20240608164118992"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.可见光的频率大约为10的8次方。</p>
<p>2.两种光纤之间的比较：</p>
<p><img src="/../TyporaImage/image-20240608164054336.png" alt="image-20240608164054336"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>分层结构、协议、接口、服务</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%88%86%E5%B1%82%E7%BB%93%E6%9E%84%E3%80%81%E5%8D%8F%E8%AE%AE%E3%80%81%E6%8E%A5%E5%8F%A3%E3%80%81%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="分层结构"><a href="#分层结构" class="headerlink" title="分层结构"></a>分层结构</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>网络的分层结构通常指的是计算机网络通信协议的分层模型，其中最著名的是OSI（开放式系统互联）模型和TCP&#x2F;IP模型。</p>
<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.实体</p>
<p><img src="/../TyporaImage/image-20240603195947460.png" alt="image-20240603195947460"></p>
<p>2.协议</p>
<p><img src="/../TyporaImage/image-20240603195956185.png" alt="image-20240603195956185"></p>
<p>3.接口</p>
<p><img src="/../TyporaImage/image-20240603200007044.png" alt="image-20240603200007044"></p>
<p>4.服务</p>
<p><img src="/../TyporaImage/image-20240603200027272.png" alt="image-20240603200027272"></p>
<h3 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240603200613959.png" alt="image-20240603200613959"></p>
<p>1.OSI</p>
<p>2.TCP&#x2F;IP</p>
<p>3.5层体系结构</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>将复杂的结构进行分层拆分，有利于解决复杂的问题。</p>
<h3 id="设计理念"><a href="#设计理念" class="headerlink" title="设计理念"></a>设计理念</h3><p><img src="/../TyporaImage/image-20240603195638523.png" alt="image-20240603195638523"></p>
<h3 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h3><p><img src="/../TyporaImage/image-20240603200057257.png" alt="image-20240603200057257"><br>结构</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>网络的分层结构通常指的是计算机网络通信协议的分层模型，其中最著名的是OSI（开放式系统互联）模型和TCP&#x2F;IP模型。</p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.实体</p>
<p><img src="/../TyporaImage/image-20240603195947460.png" alt="image-20240603195947460"></p>
<p>2.协议</p>
<p><img src="/../TyporaImage/image-20240603195956185.png" alt="image-20240603195956185"></p>
<p>3.接口</p>
<p><img src="/../TyporaImage/image-20240603200007044.png" alt="image-20240603200007044"></p>
<p>4.服务</p>
<p><img src="/../TyporaImage/image-20240603200027272.png" alt="image-20240603200027272"></p>
<h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240603200613959.png" alt="image-20240603200613959"></p>
<p>1.OSI</p>
<p>2.TCP&#x2F;IP</p>
<p>3.5层体系结构</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>将复杂的结构进行分层拆分，有利于解决复杂的问题。</p>
<h3 id="设计理念-1"><a href="#设计理念-1" class="headerlink" title="设计理念"></a>设计理念</h3><p><img src="/../TyporaImage/image-20240603195638523.png" alt="image-20240603195638523"></p>
<h3 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h3><p><img src="/../TyporaImage/image-20240603200057257.png" alt="image-20240603200057257"># 分层结构</p>
<h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>网络的分层结构通常指的是计算机网络通信协议的分层模型，其中最著名的是OSI（开放式系统互联）模型和TCP&#x2F;IP模型。</p>
<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.实体</p>
<p><img src="/../TyporaImage/image-20240603195947460.png" alt="image-20240603195947460"></p>
<p>2.协议</p>
<p><img src="/../TyporaImage/image-20240603195956185.png" alt="image-20240603195956185"></p>
<p>3.接口</p>
<p><img src="/../TyporaImage/image-20240603200007044.png" alt="image-20240603200007044"></p>
<p>4.服务</p>
<p><img src="/../TyporaImage/image-20240603200027272.png" alt="image-20240603200027272"></p>
<h3 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240603200613959.png" alt="image-20240603200613959"></p>
<p>1.OSI</p>
<p>2.TCP&#x2F;IP</p>
<p>3.5层体系结构</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h3><p>将复杂的结构进行分层拆分，有利于解决复杂的问题。</p>
<h3 id="设计理念-2"><a href="#设计理念-2" class="headerlink" title="设计理念"></a>设计理念</h3><p><img src="/../TyporaImage/image-20240603195638523.png" alt="image-20240603195638523"></p>
<h3 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h3><p><img src="/../TyporaImage/image-20240603200057257.png" alt="image-20240603200057257"><br>结构</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>网络的分层结构通常指的是计算机网络通信协议的分层模型，其中最著名的是OSI（开放式系统互联）模型和TCP&#x2F;IP模型。</p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>1.实体</p>
<p><img src="/../TyporaImage/image-20240603195947460.png" alt="image-20240603195947460"></p>
<p>2.协议</p>
<p><img src="/../TyporaImage/image-20240603195956185.png" alt="image-20240603195956185"></p>
<p>3.接口</p>
<p><img src="/../TyporaImage/image-20240603200007044.png" alt="image-20240603200007044"></p>
<p>4.服务</p>
<p><img src="/../TyporaImage/image-20240603200027272.png" alt="image-20240603200027272"></p>
<h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240603200613959.png" alt="image-20240603200613959"></p>
<p>1.OSI</p>
<p>2.TCP&#x2F;IP</p>
<p>3.5层体系结构</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h2 id="为什么-3"><a href="#为什么-3" class="headerlink" title="为什么"></a>为什么</h2><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h3><p>将复杂的结构进行分层拆分，有利于解决复杂的问题。</p>
<h3 id="设计理念-3"><a href="#设计理念-3" class="headerlink" title="设计理念"></a>设计理念</h3><p><img src="/../TyporaImage/image-20240603195638523.png" alt="image-20240603195638523"></p>
<h3 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h3><p><img src="/../TyporaImage/image-20240603200057257.png" alt="image-20240603200057257"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>分组交换</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2/</url>
    <content><![CDATA[<h1 id="分组交换"><a href="#分组交换" class="headerlink" title="分组交换"></a>分组交换</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-数据报方式"><a href="#1-数据报方式" class="headerlink" title="1.数据报方式"></a>1.数据报方式</h3><h3 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606221911415.png" alt="image-20240606221911415"></p>
<h3 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h3><p><img src="/../TyporaImage/image-20240606221953730.png" alt="image-20240606221953730"></p>
<h3 id="2-虚电路方式"><a href="#2-虚电路方式" class="headerlink" title="2.虚电路方式"></a>2.虚电路方式</h3><h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606222029706.png" alt="image-20240606222029706"></p>
<h3 id="特点：-1"><a href="#特点：-1" class="headerlink" title="特点："></a>特点：</h3><p><img src="/../TyporaImage/image-20240606222105404.png" alt="image-20240606222105404"></p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240606221548312.png" alt="image-20240606221548312"></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240606221607223.png" alt="image-20240606221607223"></p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><img src="/../TyporaImage/image-20240606221511932.png" alt="image-20240606221511932"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>两种方式的比较：</p>
<p><img src="/../TyporaImage/image-20240606222128524.png" alt="image-20240606222128524">交换</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-数据报方式-1"><a href="#1-数据报方式-1" class="headerlink" title="1.数据报方式"></a>1.数据报方式</h3><h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606221911415.png" alt="image-20240606221911415"></p>
<h3 id="特点：-2"><a href="#特点：-2" class="headerlink" title="特点："></a>特点：</h3><p><img src="/../TyporaImage/image-20240606221953730.png" alt="image-20240606221953730"></p>
<h3 id="2-虚电路方式-1"><a href="#2-虚电路方式-1" class="headerlink" title="2.虚电路方式"></a>2.虚电路方式</h3><h3 id="结构形式-4"><a href="#结构形式-4" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606222029706.png" alt="image-20240606222029706"></p>
<h3 id="特点：-3"><a href="#特点：-3" class="headerlink" title="特点："></a>特点：</h3><p><img src="/../TyporaImage/image-20240606222105404.png" alt="image-20240606222105404"></p>
<h2 id="结构形式-5"><a href="#结构形式-5" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240606221548312.png" alt="image-20240606221548312"></p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240606221607223.png" alt="image-20240606221607223"></p>
<h2 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h2><p><img src="/../TyporaImage/image-20240606221511932.png" alt="image-20240606221511932"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>两种方式的比较：</p>
<p><img src="/../TyporaImage/image-20240606222128524.png" alt="image-20240606222128524"># 分组交换</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-数据报方式-2"><a href="#1-数据报方式-2" class="headerlink" title="1.数据报方式"></a>1.数据报方式</h3><h3 id="结构形式-6"><a href="#结构形式-6" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606221911415.png" alt="image-20240606221911415"></p>
<h3 id="特点：-4"><a href="#特点：-4" class="headerlink" title="特点："></a>特点：</h3><p><img src="/../TyporaImage/image-20240606221953730.png" alt="image-20240606221953730"></p>
<h3 id="2-虚电路方式-2"><a href="#2-虚电路方式-2" class="headerlink" title="2.虚电路方式"></a>2.虚电路方式</h3><h3 id="结构形式-7"><a href="#结构形式-7" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606222029706.png" alt="image-20240606222029706"></p>
<h3 id="特点：-5"><a href="#特点：-5" class="headerlink" title="特点："></a>特点：</h3><p><img src="/../TyporaImage/image-20240606222105404.png" alt="image-20240606222105404"></p>
<h2 id="结构形式-8"><a href="#结构形式-8" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240606221548312.png" alt="image-20240606221548312"></p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240606221607223.png" alt="image-20240606221607223"></p>
<h2 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h2><p><img src="/../TyporaImage/image-20240606221511932.png" alt="image-20240606221511932"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>两种方式的比较：</p>
<p><img src="/../TyporaImage/image-20240606222128524.png" alt="image-20240606222128524">交换</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-数据报方式-3"><a href="#1-数据报方式-3" class="headerlink" title="1.数据报方式"></a>1.数据报方式</h3><h3 id="结构形式-9"><a href="#结构形式-9" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606221911415.png" alt="image-20240606221911415"></p>
<h3 id="特点：-6"><a href="#特点：-6" class="headerlink" title="特点："></a>特点：</h3><p><img src="/../TyporaImage/image-20240606221953730.png" alt="image-20240606221953730"></p>
<h3 id="2-虚电路方式-3"><a href="#2-虚电路方式-3" class="headerlink" title="2.虚电路方式"></a>2.虚电路方式</h3><h3 id="结构形式-10"><a href="#结构形式-10" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606222029706.png" alt="image-20240606222029706"></p>
<h3 id="特点：-7"><a href="#特点：-7" class="headerlink" title="特点："></a>特点：</h3><p><img src="/../TyporaImage/image-20240606222105404.png" alt="image-20240606222105404"></p>
<h2 id="结构形式-11"><a href="#结构形式-11" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240606221548312.png" alt="image-20240606221548312"></p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240606221607223.png" alt="image-20240606221607223"></p>
<h2 id="原理-3"><a href="#原理-3" class="headerlink" title="原理"></a>原理</h2><p><img src="/../TyporaImage/image-20240606221511932.png" alt="image-20240606221511932"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>两种方式的比较：</p>
<p><img src="/../TyporaImage/image-20240606222128524.png" alt="image-20240606222128524"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>动态分配信道</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E4%BF%A1%E9%81%93/</url>
    <content><![CDATA[<h1 id="动态分配信道"><a href="#动态分配信道" class="headerlink" title="动态分配信道"></a>动态分配信道</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>动态分配信道（Dynamic Channel Allocation）是一种网络通信技术，它根据实时网络需求和条件，动态地为用户或数据流分配传输信道。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-轮询访问介质访问控制"><a href="#1-轮询访问介质访问控制" class="headerlink" title="1.轮询访问介质访问控制"></a>1.轮询访问介质访问控制</h3><p>①令牌传递协议</p>
<h3 id="2-随机访问介质访问控制"><a href="#2-随机访问介质访问控制" class="headerlink" title="2.随机访问介质访问控制"></a>2.随机访问介质访问控制</h3><p>①ALOHA协议</p>
<p>②CSMA协议</p>
<p>③<strong>CSMA&#x2F;CD协议</strong></p>
<p>④<strong>CSMA&#x2F;CA协议</strong>信道</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>动态分配信道（Dynamic Channel Allocation）是一种网络通信技术，它根据实时网络需求和条件，动态地为用户或数据流分配传输信道。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-轮询访问介质访问控制-1"><a href="#1-轮询访问介质访问控制-1" class="headerlink" title="1.轮询访问介质访问控制"></a>1.轮询访问介质访问控制</h3><p>①令牌传递协议</p>
<h3 id="2-随机访问介质访问控制-1"><a href="#2-随机访问介质访问控制-1" class="headerlink" title="2.随机访问介质访问控制"></a>2.随机访问介质访问控制</h3><p>①ALOHA协议</p>
<p>②CSMA协议</p>
<p>③<strong>CSMA&#x2F;CD协议</strong></p>
<p>④<strong>CSMA&#x2F;CA协议</strong># 动态分配信道</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>动态分配信道（Dynamic Channel Allocation）是一种网络通信技术，它根据实时网络需求和条件，动态地为用户或数据流分配传输信道。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-轮询访问介质访问控制-2"><a href="#1-轮询访问介质访问控制-2" class="headerlink" title="1.轮询访问介质访问控制"></a>1.轮询访问介质访问控制</h3><p>①令牌传递协议</p>
<h3 id="2-随机访问介质访问控制-2"><a href="#2-随机访问介质访问控制-2" class="headerlink" title="2.随机访问介质访问控制"></a>2.随机访问介质访问控制</h3><p>①ALOHA协议</p>
<p>②CSMA协议</p>
<p>③<strong>CSMA&#x2F;CD协议</strong></p>
<p>④<strong>CSMA&#x2F;CA协议</strong>信道</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>动态分配信道（Dynamic Channel Allocation）是一种网络通信技术，它根据实时网络需求和条件，动态地为用户或数据流分配传输信道。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-轮询访问介质访问控制-3"><a href="#1-轮询访问介质访问控制-3" class="headerlink" title="1.轮询访问介质访问控制"></a>1.轮询访问介质访问控制</h3><p>①令牌传递协议</p>
<h3 id="2-随机访问介质访问控制-3"><a href="#2-随机访问介质访问控制-3" class="headerlink" title="2.随机访问介质访问控制"></a>2.随机访问介质访问控制</h3><p>①ALOHA协议</p>
<p>②CSMA协议</p>
<p>③<strong>CSMA&#x2F;CD协议</strong></p>
<p>④<strong>CSMA&#x2F;CA协议</strong></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>双绞线</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%8F%8C%E7%BB%9E%E7%BA%BF/</url>
    <content><![CDATA[<h1 id="双绞线"><a href="#双绞线" class="headerlink" title="双绞线"></a>双绞线</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>由两根采用一定规则并排绞合的、相互绝缘的铜导线组成。</p>
<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.无屏蔽双绞线</p>
<p>2.屏蔽双绞线</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-无屏蔽双绞线"><a href="#1-无屏蔽双绞线" class="headerlink" title="1.无屏蔽双绞线"></a>1.无屏蔽双绞线</h3><p><img src="/../TyporaImage/image-20240608163400191.png" alt="image-20240608163400191"></p>
<h3 id="2-屏蔽双绞线"><a href="#2-屏蔽双绞线" class="headerlink" title="2.屏蔽双绞线"></a>2.屏蔽双绞线</h3><p><img src="/../TyporaImage/image-20240608163407181.png" alt="image-20240608163407181">绞线</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>由两根采用一定规则并排绞合的、相互绝缘的铜导线组成。</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.无屏蔽双绞线</p>
<p>2.屏蔽双绞线</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-无屏蔽双绞线-1"><a href="#1-无屏蔽双绞线-1" class="headerlink" title="1.无屏蔽双绞线"></a>1.无屏蔽双绞线</h3><p><img src="/../TyporaImage/image-20240608163400191.png" alt="image-20240608163400191"></p>
<h3 id="2-屏蔽双绞线-1"><a href="#2-屏蔽双绞线-1" class="headerlink" title="2.屏蔽双绞线"></a>2.屏蔽双绞线</h3><p><img src="/../TyporaImage/image-20240608163407181.png" alt="image-20240608163407181"># 双绞线</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>由两根采用一定规则并排绞合的、相互绝缘的铜导线组成。</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.无屏蔽双绞线</p>
<p>2.屏蔽双绞线</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-无屏蔽双绞线-2"><a href="#1-无屏蔽双绞线-2" class="headerlink" title="1.无屏蔽双绞线"></a>1.无屏蔽双绞线</h3><p><img src="/../TyporaImage/image-20240608163400191.png" alt="image-20240608163400191"></p>
<h3 id="2-屏蔽双绞线-2"><a href="#2-屏蔽双绞线-2" class="headerlink" title="2.屏蔽双绞线"></a>2.屏蔽双绞线</h3><p><img src="/../TyporaImage/image-20240608163407181.png" alt="image-20240608163407181">绞线</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>由两根采用一定规则并排绞合的、相互绝缘的铜导线组成。</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.无屏蔽双绞线</p>
<p>2.屏蔽双绞线</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-无屏蔽双绞线-3"><a href="#1-无屏蔽双绞线-3" class="headerlink" title="1.无屏蔽双绞线"></a>1.无屏蔽双绞线</h3><p><img src="/../TyporaImage/image-20240608163400191.png" alt="image-20240608163400191"></p>
<h3 id="2-屏蔽双绞线-3"><a href="#2-屏蔽双绞线-3" class="headerlink" title="2.屏蔽双绞线"></a>2.屏蔽双绞线</h3><p><img src="/../TyporaImage/image-20240608163407181.png" alt="image-20240608163407181"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>后退N帧协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%90%8E%E9%80%80N%E5%B8%A7%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="后退N帧协议"><a href="#后退N帧协议" class="headerlink" title="后退N帧协议"></a>后退N帧协议</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>用于在不可靠的通信信道上实现可靠的数据传输。在出现错误时，发送方会回退N个帧，重新发送这些帧。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613170615747.png" alt="image-20240613170615747"></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><h3 id="GBN发送方："><a href="#GBN发送方：" class="headerlink" title="GBN发送方："></a>GBN发送方：</h3><h4 id="①上层的调用"><a href="#①上层的调用" class="headerlink" title="①上层的调用"></a>①上层的调用</h4><p><img src="/../TyporaImage/image-20240613170242859.png" alt="image-20240613170242859"></p>
<h4 id="②收到了一个ACK"><a href="#②收到了一个ACK" class="headerlink" title="②收到了一个ACK"></a>②收到了一个ACK</h4><p><img src="/../TyporaImage/image-20240613170340065.png" alt="image-20240613170340065"></p>
<h4 id="③超时事件"><a href="#③超时事件" class="headerlink" title="③超时事件"></a>③超时事件<img src="/../TyporaImage/image-20240613170353604.png" alt="image-20240613170353604"></h4><h3 id="接收方："><a href="#接收方：" class="headerlink" title="接收方："></a>接收方：</h3><p><img src="/../TyporaImage/image-20240613170541961.png" alt="image-20240613170541961"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.滑动窗口大小：</p>
<p><img src="/../TyporaImage/image-20240613170712507.png" alt="image-20240613170712507"></p>
<p>协议</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>用于在不可靠的通信信道上实现可靠的数据传输。在出现错误时，发送方会回退N个帧，重新发送这些帧。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613170615747.png" alt="image-20240613170615747"></p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><h3 id="GBN发送方：-1"><a href="#GBN发送方：-1" class="headerlink" title="GBN发送方："></a>GBN发送方：</h3><h4 id="①上层的调用-1"><a href="#①上层的调用-1" class="headerlink" title="①上层的调用"></a>①上层的调用</h4><p><img src="/../TyporaImage/image-20240613170242859.png" alt="image-20240613170242859"></p>
<h4 id="②收到了一个ACK-1"><a href="#②收到了一个ACK-1" class="headerlink" title="②收到了一个ACK"></a>②收到了一个ACK</h4><p><img src="/../TyporaImage/image-20240613170340065.png" alt="image-20240613170340065"></p>
<h4 id="③超时事件-1"><a href="#③超时事件-1" class="headerlink" title="③超时事件"></a>③超时事件<img src="/../TyporaImage/image-20240613170353604.png" alt="image-20240613170353604"></h4><h3 id="接收方：-1"><a href="#接收方：-1" class="headerlink" title="接收方："></a>接收方：</h3><p><img src="/../TyporaImage/image-20240613170541961.png" alt="image-20240613170541961"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.滑动窗口大小：</p>
<p><img src="/../TyporaImage/image-20240613170712507.png" alt="image-20240613170712507"># 后退N帧协议</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>用于在不可靠的通信信道上实现可靠的数据传输。在出现错误时，发送方会回退N个帧，重新发送这些帧。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613170615747.png" alt="image-20240613170615747"></p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><h3 id="GBN发送方：-2"><a href="#GBN发送方：-2" class="headerlink" title="GBN发送方："></a>GBN发送方：</h3><h4 id="①上层的调用-2"><a href="#①上层的调用-2" class="headerlink" title="①上层的调用"></a>①上层的调用</h4><p><img src="/../TyporaImage/image-20240613170242859.png" alt="image-20240613170242859"></p>
<h4 id="②收到了一个ACK-2"><a href="#②收到了一个ACK-2" class="headerlink" title="②收到了一个ACK"></a>②收到了一个ACK</h4><p><img src="/../TyporaImage/image-20240613170340065.png" alt="image-20240613170340065"></p>
<h4 id="③超时事件-2"><a href="#③超时事件-2" class="headerlink" title="③超时事件"></a>③超时事件<img src="/../TyporaImage/image-20240613170353604.png" alt="image-20240613170353604"></h4><h3 id="接收方：-2"><a href="#接收方：-2" class="headerlink" title="接收方："></a>接收方：</h3><p><img src="/../TyporaImage/image-20240613170541961.png" alt="image-20240613170541961"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.滑动窗口大小：</p>
<p><img src="/../TyporaImage/image-20240613170712507.png" alt="image-20240613170712507"></p>
<p>协议</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>用于在不可靠的通信信道上实现可靠的数据传输。在出现错误时，发送方会回退N个帧，重新发送这些帧。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613170615747.png" alt="image-20240613170615747"></p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><h3 id="GBN发送方：-3"><a href="#GBN发送方：-3" class="headerlink" title="GBN发送方："></a>GBN发送方：</h3><h4 id="①上层的调用-3"><a href="#①上层的调用-3" class="headerlink" title="①上层的调用"></a>①上层的调用</h4><p><img src="/../TyporaImage/image-20240613170242859.png" alt="image-20240613170242859"></p>
<h4 id="②收到了一个ACK-3"><a href="#②收到了一个ACK-3" class="headerlink" title="②收到了一个ACK"></a>②收到了一个ACK</h4><p><img src="/../TyporaImage/image-20240613170340065.png" alt="image-20240613170340065"></p>
<h4 id="③超时事件-3"><a href="#③超时事件-3" class="headerlink" title="③超时事件"></a>③超时事件<img src="/../TyporaImage/image-20240613170353604.png" alt="image-20240613170353604"></h4><h3 id="接收方：-3"><a href="#接收方：-3" class="headerlink" title="接收方："></a>接收方：</h3><p><img src="/../TyporaImage/image-20240613170541961.png" alt="image-20240613170541961"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.滑动窗口大小：</p>
<p><img src="/../TyporaImage/image-20240613170712507.png" alt="image-20240613170712507"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>同轴电缆</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%90%8C%E8%BD%B4%E7%94%B5%E7%BC%86/</url>
    <content><![CDATA[<h1 id="同轴电缆"><a href="#同轴电缆" class="headerlink" title="同轴电缆"></a>同轴电缆</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>由导体铜质芯线、绝缘层、网状编织屏蔽层和塑料外壳构成。</p>
<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.基带同轴电缆：主要用于传送基带数字信号</p>
<p>2.宽带同轴电缆：主要用于传送宽带信号</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240608163709245.png" alt="image-20240608163709245"></p>
<p>电缆</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>由导体铜质芯线、绝缘层、网状编织屏蔽层和塑料外壳构成。</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.基带同轴电缆：主要用于传送基带数字信号</p>
<p>2.宽带同轴电缆：主要用于传送宽带信号</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240608163709245.png" alt="image-20240608163709245"># 同轴电缆</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>由导体铜质芯线、绝缘层、网状编织屏蔽层和塑料外壳构成。</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.基带同轴电缆：主要用于传送基带数字信号</p>
<p>2.宽带同轴电缆：主要用于传送宽带信号</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240608163709245.png" alt="image-20240608163709245"></p>
<p>电缆</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>由导体铜质芯线、绝缘层、网状编织屏蔽层和塑料外壳构成。</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.基带同轴电缆：主要用于传送基带数字信号</p>
<p>2.宽带同轴电缆：主要用于传送宽带信号</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240608163709245.png" alt="image-20240608163709245"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>奈氏准则和香农定理</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%A5%88%E6%B0%8F%E5%87%86%E5%88%99%E5%92%8C%E9%A6%99%E5%86%9C%E5%AE%9A%E7%90%86/</url>
    <content><![CDATA[<h1 id="奈氏准则和香农定理"><a href="#奈氏准则和香农定理" class="headerlink" title="奈氏准则和香农定理"></a>奈氏准则和香农定理</h1><h2 id="奈氏准则"><a href="#奈氏准则" class="headerlink" title="奈氏准则"></a>奈氏准则</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>在理想低通（无噪声，宽带受限）条件下，为了避免码间串扰，极限码元传输速率为2W Baud ，W是信道带宽，单位是Hz</p>
<h3 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606213820694.png" alt="image-20240606213820694"></p>
<h2 id="香农定理"><a href="#香农定理" class="headerlink" title="香农定理"></a>香农定理</h2><p>在带宽受限切有噪声的信道中，为了不产生误差，信息的数据传输速率有上限值。</p>
<h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606214136641.png" alt="image-20240606214136641"></p>
<h2 id="两个定理的对比："><a href="#两个定理的对比：" class="headerlink" title="两个定理的对比："></a>两个定理的对比：</h2><p><img src="/../TyporaImage/image-20240606214248000.png" alt="image-20240606214248000"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="失真："><a href="#失真：" class="headerlink" title="失真："></a>失真：</h3><p>影响失真的因素：</p>
<p>1.码元传输速率</p>
<p>2.信号传输距离</p>
<p>3.噪声干扰</p>
<p>4.传输媒体质量。</p>
<h3 id="码间串扰："><a href="#码间串扰：" class="headerlink" title="码间串扰："></a>码间串扰：</h3><p>一种失真现象。接收到的信号波形，失去了码元之间清晰界限的现象。定理</p>
<h2 id="奈氏准则-1"><a href="#奈氏准则-1" class="headerlink" title="奈氏准则"></a>奈氏准则</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>在理想低通（无噪声，宽带受限）条件下，为了避免码间串扰，极限码元传输速率为2W Baud ，W是信道带宽，单位是Hz</p>
<h3 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606213820694.png" alt="image-20240606213820694"></p>
<h2 id="香农定理-1"><a href="#香农定理-1" class="headerlink" title="香农定理"></a>香农定理</h2><p>在带宽受限切有噪声的信道中，为了不产生误差，信息的数据传输速率有上限值。</p>
<h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606214136641.png" alt="image-20240606214136641"></p>
<h2 id="两个定理的对比：-1"><a href="#两个定理的对比：-1" class="headerlink" title="两个定理的对比："></a>两个定理的对比：</h2><p><img src="/../TyporaImage/image-20240606214248000.png" alt="image-20240606214248000"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="失真：-1"><a href="#失真：-1" class="headerlink" title="失真："></a>失真：</h3><p>影响失真的因素：</p>
<p>1.码元传输速率</p>
<p>2.信号传输距离</p>
<p>3.噪声干扰</p>
<p>4.传输媒体质量。</p>
<h3 id="码间串扰：-1"><a href="#码间串扰：-1" class="headerlink" title="码间串扰："></a>码间串扰：</h3><p>一种失真现象。接收到的信号波形，失去了码元之间清晰界限的现象。# 奈氏准则和香农定理</p>
<h2 id="奈氏准则-2"><a href="#奈氏准则-2" class="headerlink" title="奈氏准则"></a>奈氏准则</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>在理想低通（无噪声，宽带受限）条件下，为了避免码间串扰，极限码元传输速率为2W Baud ，W是信道带宽，单位是Hz</p>
<h3 id="结构形式-4"><a href="#结构形式-4" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606213820694.png" alt="image-20240606213820694"></p>
<h2 id="香农定理-2"><a href="#香农定理-2" class="headerlink" title="香农定理"></a>香农定理</h2><p>在带宽受限切有噪声的信道中，为了不产生误差，信息的数据传输速率有上限值。</p>
<h3 id="结构形式-5"><a href="#结构形式-5" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606214136641.png" alt="image-20240606214136641"></p>
<h2 id="两个定理的对比：-2"><a href="#两个定理的对比：-2" class="headerlink" title="两个定理的对比："></a>两个定理的对比：</h2><p><img src="/../TyporaImage/image-20240606214248000.png" alt="image-20240606214248000"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="失真：-2"><a href="#失真：-2" class="headerlink" title="失真："></a>失真：</h3><p>影响失真的因素：</p>
<p>1.码元传输速率</p>
<p>2.信号传输距离</p>
<p>3.噪声干扰</p>
<p>4.传输媒体质量。</p>
<h3 id="码间串扰：-2"><a href="#码间串扰：-2" class="headerlink" title="码间串扰："></a>码间串扰：</h3><p>一种失真现象。接收到的信号波形，失去了码元之间清晰界限的现象。定理</p>
<h2 id="奈氏准则-3"><a href="#奈氏准则-3" class="headerlink" title="奈氏准则"></a>奈氏准则</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>在理想低通（无噪声，宽带受限）条件下，为了避免码间串扰，极限码元传输速率为2W Baud ，W是信道带宽，单位是Hz</p>
<h3 id="结构形式-6"><a href="#结构形式-6" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606213820694.png" alt="image-20240606213820694"></p>
<h2 id="香农定理-3"><a href="#香农定理-3" class="headerlink" title="香农定理"></a>香农定理</h2><p>在带宽受限切有噪声的信道中，为了不产生误差，信息的数据传输速率有上限值。</p>
<h3 id="结构形式-7"><a href="#结构形式-7" class="headerlink" title="结构形式"></a>结构形式</h3><p><img src="/../TyporaImage/image-20240606214136641.png" alt="image-20240606214136641"></p>
<h2 id="两个定理的对比：-3"><a href="#两个定理的对比：-3" class="headerlink" title="两个定理的对比："></a>两个定理的对比：</h2><p><img src="/../TyporaImage/image-20240606214248000.png" alt="image-20240606214248000"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="失真：-3"><a href="#失真：-3" class="headerlink" title="失真："></a>失真：</h3><p>影响失真的因素：</p>
<p>1.码元传输速率</p>
<p>2.信号传输距离</p>
<p>3.噪声干扰</p>
<p>4.传输媒体质量。</p>
<h3 id="码间串扰：-3"><a href="#码间串扰：-3" class="headerlink" title="码间串扰："></a>码间串扰：</h3><p>一种失真现象。接收到的信号波形，失去了码元之间清晰界限的现象。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>子网划分和子网掩码</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86%E5%92%8C%E5%AD%90%E7%BD%91%E6%8E%A9%E7%A0%81/</url>
    <content><![CDATA[<h1 id="子网划分"><a href="#子网划分" class="headerlink" title="子网划分"></a>子网划分</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>子网划分（Subnetting）是一种网络设计技术，用于将一个大的IP网络划分成多个较小的子网络（子网）。通过子网划分，可以更有效地管理和利用IP地址，提高网络的性能和安全性。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-网络地址"><a href="#1-网络地址" class="headerlink" title="1.网络地址"></a>1.网络地址</h3><p>标识一个IP网络的地址。</p>
<h3 id="2-子网地址"><a href="#2-子网地址" class="headerlink" title="2.子网地址"></a>2.子网地址</h3><p>标识子网的地址，由网络地址和子网掩码共同确定。</p>
<h3 id="3-主机地址"><a href="#3-主机地址" class="headerlink" title="3.主机地址"></a>3.主机地址</h3><p>标识子网内具体设备的地址。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.子网掩码：</p>
<p>通过划分IP地址中的网络部分和主机部分，定义子网的范围。</p>
<p>2.CIDR表示法：</p>
<p>使用斜杠后跟子网掩码位数来表示子网，例如192.168.1.0&#x2F;24。</p>
<h1 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a>子网掩码</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>子网掩码（Subnet Mask）是一个32位的二进制数，用于将IP地址划分为网络部分和主机部分。子网掩码通过掩码位的设置确定子网的范围和大小。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-网络部分"><a href="#1-网络部分" class="headerlink" title="1.网络部分"></a>1.网络部分</h3><p>由连续的1位表示，用于标识网络。</p>
<h3 id="2-主机部分"><a href="#2-主机部分" class="headerlink" title="2.主机部分"></a>2.主机部分</h3><p>由连续的0位表示，用于标识子网内的具体设备。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="①二进制表示"><a href="#①二进制表示" class="headerlink" title="①二进制表示"></a>①二进制表示</h3><p>子网掩码由32位二进制数表示，例如：11111111.11111111.11111111.00000000。</p>
<h3 id="②点分十进制表示"><a href="#②点分十进制表示" class="headerlink" title="②点分十进制表示"></a>②点分十进制表示</h3><p>将二进制数转换为十进制，用”.”分隔，例如：255.255.255.0。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-标准子网掩码"><a href="#1-标准子网掩码" class="headerlink" title="1.标准子网掩码"></a>1.标准子网掩码</h3><p>适用于A类、B类和C类网络的固定长度子网掩码。</p>
<h3 id="2-自定义子网掩码"><a href="#2-自定义子网掩码" class="headerlink" title="2.自定义子网掩码"></a>2.自定义子网掩码</h3><p>根据具体需求自定义的子网掩码，用于VLSM。</p>
<h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="1-计算子网网络"><a href="#1-计算子网网络" class="headerlink" title="1.计算子网网络"></a>1.计算子网网络</h3><p>通过将目的子网地址与其自身的子网掩码进行相与操作。</p>
<h3 id="2-使用子网时的转发分组"><a href="#2-使用子网时的转发分组" class="headerlink" title="2.使用子网时的转发分组"></a>2.使用子网时的转发分组</h3><p><img src="/../TyporaImage/image-20240622173712479.png" alt="image-20240622173712479"></p>
<p>划分</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>子网划分（Subnetting）是一种网络设计技术，用于将一个大的IP网络划分成多个较小的子网络（子网）。通过子网划分，可以更有效地管理和利用IP地址，提高网络的性能和安全性。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-网络地址-1"><a href="#1-网络地址-1" class="headerlink" title="1.网络地址"></a>1.网络地址</h3><p>标识一个IP网络的地址。</p>
<h3 id="2-子网地址-1"><a href="#2-子网地址-1" class="headerlink" title="2.子网地址"></a>2.子网地址</h3><p>标识子网的地址，由网络地址和子网掩码共同确定。</p>
<h3 id="3-主机地址-1"><a href="#3-主机地址-1" class="headerlink" title="3.主机地址"></a>3.主机地址</h3><p>标识子网内具体设备的地址。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.子网掩码：</p>
<p>通过划分IP地址中的网络部分和主机部分，定义子网的范围。</p>
<p>2.CIDR表示法：</p>
<p>使用斜杠后跟子网掩码位数来表示子网，例如192.168.1.0&#x2F;24。</p>
<h1 id="子网掩码-1"><a href="#子网掩码-1" class="headerlink" title="子网掩码"></a>子网掩码</h1><h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>子网掩码（Subnet Mask）是一个32位的二进制数，用于将IP地址划分为网络部分和主机部分。子网掩码通过掩码位的设置确定子网的范围和大小。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-网络部分-1"><a href="#1-网络部分-1" class="headerlink" title="1.网络部分"></a>1.网络部分</h3><p>由连续的1位表示，用于标识网络。</p>
<h3 id="2-主机部分-1"><a href="#2-主机部分-1" class="headerlink" title="2.主机部分"></a>2.主机部分</h3><p>由连续的0位表示，用于标识子网内的具体设备。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="①二进制表示-1"><a href="#①二进制表示-1" class="headerlink" title="①二进制表示"></a>①二进制表示</h3><p>子网掩码由32位二进制数表示，例如：11111111.11111111.11111111.00000000。</p>
<h3 id="②点分十进制表示-1"><a href="#②点分十进制表示-1" class="headerlink" title="②点分十进制表示"></a>②点分十进制表示</h3><p>将二进制数转换为十进制，用”.”分隔，例如：255.255.255.0。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-标准子网掩码-1"><a href="#1-标准子网掩码-1" class="headerlink" title="1.标准子网掩码"></a>1.标准子网掩码</h3><p>适用于A类、B类和C类网络的固定长度子网掩码。</p>
<h3 id="2-自定义子网掩码-1"><a href="#2-自定义子网掩码-1" class="headerlink" title="2.自定义子网掩码"></a>2.自定义子网掩码</h3><p>根据具体需求自定义的子网掩码，用于VLSM。</p>
<h2 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="1-计算子网网络-1"><a href="#1-计算子网网络-1" class="headerlink" title="1.计算子网网络"></a>1.计算子网网络</h3><p>通过将目的子网地址与其自身的子网掩码进行相与操作。</p>
<h3 id="2-使用子网时的转发分组-1"><a href="#2-使用子网时的转发分组-1" class="headerlink" title="2.使用子网时的转发分组"></a>2.使用子网时的转发分组</h3><p><img src="/../TyporaImage/image-20240622173712479.png" alt="image-20240622173712479"># 子网划分</p>
<h2 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h2><p>子网划分（Subnetting）是一种网络设计技术，用于将一个大的IP网络划分成多个较小的子网络（子网）。通过子网划分，可以更有效地管理和利用IP地址，提高网络的性能和安全性。</p>
<h2 id="组成部分-4"><a href="#组成部分-4" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-网络地址-2"><a href="#1-网络地址-2" class="headerlink" title="1.网络地址"></a>1.网络地址</h3><p>标识一个IP网络的地址。</p>
<h3 id="2-子网地址-2"><a href="#2-子网地址-2" class="headerlink" title="2.子网地址"></a>2.子网地址</h3><p>标识子网的地址，由网络地址和子网掩码共同确定。</p>
<h3 id="3-主机地址-2"><a href="#3-主机地址-2" class="headerlink" title="3.主机地址"></a>3.主机地址</h3><p>标识子网内具体设备的地址。</p>
<h2 id="结构形式-4"><a href="#结构形式-4" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.子网掩码：</p>
<p>通过划分IP地址中的网络部分和主机部分，定义子网的范围。</p>
<p>2.CIDR表示法：</p>
<p>使用斜杠后跟子网掩码位数来表示子网，例如192.168.1.0&#x2F;24。</p>
<h1 id="子网掩码-2"><a href="#子网掩码-2" class="headerlink" title="子网掩码"></a>子网掩码</h1><h2 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h2><p>子网掩码（Subnet Mask）是一个32位的二进制数，用于将IP地址划分为网络部分和主机部分。子网掩码通过掩码位的设置确定子网的范围和大小。</p>
<h2 id="组成部分-5"><a href="#组成部分-5" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-网络部分-2"><a href="#1-网络部分-2" class="headerlink" title="1.网络部分"></a>1.网络部分</h3><p>由连续的1位表示，用于标识网络。</p>
<h3 id="2-主机部分-2"><a href="#2-主机部分-2" class="headerlink" title="2.主机部分"></a>2.主机部分</h3><p>由连续的0位表示，用于标识子网内的具体设备。</p>
<h2 id="结构形式-5"><a href="#结构形式-5" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="①二进制表示-2"><a href="#①二进制表示-2" class="headerlink" title="①二进制表示"></a>①二进制表示</h3><p>子网掩码由32位二进制数表示，例如：11111111.11111111.11111111.00000000。</p>
<h3 id="②点分十进制表示-2"><a href="#②点分十进制表示-2" class="headerlink" title="②点分十进制表示"></a>②点分十进制表示</h3><p>将二进制数转换为十进制，用”.”分隔，例如：255.255.255.0。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-标准子网掩码-2"><a href="#1-标准子网掩码-2" class="headerlink" title="1.标准子网掩码"></a>1.标准子网掩码</h3><p>适用于A类、B类和C类网络的固定长度子网掩码。</p>
<h3 id="2-自定义子网掩码-2"><a href="#2-自定义子网掩码-2" class="headerlink" title="2.自定义子网掩码"></a>2.自定义子网掩码</h3><p>根据具体需求自定义的子网掩码，用于VLSM。</p>
<h2 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="1-计算子网网络-2"><a href="#1-计算子网网络-2" class="headerlink" title="1.计算子网网络"></a>1.计算子网网络</h3><p>通过将目的子网地址与其自身的子网掩码进行相与操作。</p>
<h3 id="2-使用子网时的转发分组-2"><a href="#2-使用子网时的转发分组-2" class="headerlink" title="2.使用子网时的转发分组"></a>2.使用子网时的转发分组</h3><p><img src="/../TyporaImage/image-20240622173712479.png" alt="image-20240622173712479"></p>
<p>划分</p>
<h2 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h2><p>子网划分（Subnetting）是一种网络设计技术，用于将一个大的IP网络划分成多个较小的子网络（子网）。通过子网划分，可以更有效地管理和利用IP地址，提高网络的性能和安全性。</p>
<h2 id="组成部分-6"><a href="#组成部分-6" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-网络地址-3"><a href="#1-网络地址-3" class="headerlink" title="1.网络地址"></a>1.网络地址</h3><p>标识一个IP网络的地址。</p>
<h3 id="2-子网地址-3"><a href="#2-子网地址-3" class="headerlink" title="2.子网地址"></a>2.子网地址</h3><p>标识子网的地址，由网络地址和子网掩码共同确定。</p>
<h3 id="3-主机地址-3"><a href="#3-主机地址-3" class="headerlink" title="3.主机地址"></a>3.主机地址</h3><p>标识子网内具体设备的地址。</p>
<h2 id="结构形式-6"><a href="#结构形式-6" class="headerlink" title="结构形式"></a>结构形式</h2><p>1.子网掩码：</p>
<p>通过划分IP地址中的网络部分和主机部分，定义子网的范围。</p>
<p>2.CIDR表示法：</p>
<p>使用斜杠后跟子网掩码位数来表示子网，例如192.168.1.0&#x2F;24。</p>
<h1 id="子网掩码-3"><a href="#子网掩码-3" class="headerlink" title="子网掩码"></a>子网掩码</h1><h2 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h2><p>子网掩码（Subnet Mask）是一个32位的二进制数，用于将IP地址划分为网络部分和主机部分。子网掩码通过掩码位的设置确定子网的范围和大小。</p>
<h2 id="组成部分-7"><a href="#组成部分-7" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-网络部分-3"><a href="#1-网络部分-3" class="headerlink" title="1.网络部分"></a>1.网络部分</h3><p>由连续的1位表示，用于标识网络。</p>
<h3 id="2-主机部分-3"><a href="#2-主机部分-3" class="headerlink" title="2.主机部分"></a>2.主机部分</h3><p>由连续的0位表示，用于标识子网内的具体设备。</p>
<h2 id="结构形式-7"><a href="#结构形式-7" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="①二进制表示-3"><a href="#①二进制表示-3" class="headerlink" title="①二进制表示"></a>①二进制表示</h3><p>子网掩码由32位二进制数表示，例如：11111111.11111111.11111111.00000000。</p>
<h3 id="②点分十进制表示-3"><a href="#②点分十进制表示-3" class="headerlink" title="②点分十进制表示"></a>②点分十进制表示</h3><p>将二进制数转换为十进制，用”.”分隔，例如：255.255.255.0。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-标准子网掩码-3"><a href="#1-标准子网掩码-3" class="headerlink" title="1.标准子网掩码"></a>1.标准子网掩码</h3><p>适用于A类、B类和C类网络的固定长度子网掩码。</p>
<h3 id="2-自定义子网掩码-3"><a href="#2-自定义子网掩码-3" class="headerlink" title="2.自定义子网掩码"></a>2.自定义子网掩码</h3><p>根据具体需求自定义的子网掩码，用于VLSM。</p>
<h2 id="使用方式-3"><a href="#使用方式-3" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="1-计算子网网络-3"><a href="#1-计算子网网络-3" class="headerlink" title="1.计算子网网络"></a>1.计算子网网络</h3><p>通过将目的子网地址与其自身的子网掩码进行相与操作。</p>
<h3 id="2-使用子网时的转发分组-3"><a href="#2-使用子网时的转发分组-3" class="headerlink" title="2.使用子网时的转发分组"></a>2.使用子网时的转发分组</h3><p><img src="/../TyporaImage/image-20240622173712479.png" alt="image-20240622173712479"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>封装成帧和透明传输</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%B0%81%E8%A3%85%E6%88%90%E5%B8%A7%E5%92%8C%E9%80%8F%E6%98%8E%E4%BC%A0%E8%BE%93/</url>
    <content><![CDATA[<h1 id="封装成帧"><a href="#封装成帧" class="headerlink" title="封装成帧"></a>封装成帧</h1><p>定义：</p>
<p>就是在一段数据的前后添加首部和尾部，这就构成了一个帧。</p>
<p>组成部分：</p>
<p>帧首部、帧尾部、帧的数据部分</p>
<p>结构形式；</p>
<p><img src="/../TyporaImage/image-20240613152234674.png" alt="image-20240613152234674"></p>
<p>特点：</p>
<p>1.首部和尾部包含许多控制信息，他们有一个重要作用：帧界定。</p>
<p>组帧方法：</p>
<p>1.字符计数法</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613153344033.png" alt="image-20240613153344033"></p>
<p>2.字符填充法</p>
<p><img src="/../TyporaImage/image-20240613153520655.png" alt="image-20240613153520655"></p>
<p><img src="/../TyporaImage/image-20240613153612396.png" alt="image-20240613153612396"></p>
<p>3.零比特填充法</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613153646099.png" alt="image-20240613153646099"></p>
<p>4.违规编码法</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613153712327.png" alt="image-20240613153712327"></p>
<p>最佳实践：</p>
<p><img src="/../TyporaImage/image-20240613153806569.png" alt="image-20240613153806569"></p>
<h1 id="透明传输"><a href="#透明传输" class="headerlink" title="透明传输"></a>透明传输</h1><p>定义：</p>
<p>透明传输指的是在网络中传输数据时，数据的原始格式和内容保持不变，不因传输过程而改变。这意味着接收方接收到的数据应与发送方发送的数据完全一致。</p>
<p>成帧</p>
<p>定义：</p>
<p>就是在一段数据的前后添加首部和尾部，这就构成了一个帧。</p>
<p>组成部分：</p>
<p>帧首部、帧尾部、帧的数据部分</p>
<p>结构形式；</p>
<p><img src="/../TyporaImage/image-20240613152234674.png" alt="image-20240613152234674"></p>
<p>特点：</p>
<p>1.首部和尾部包含许多控制信息，他们有一个重要作用：帧界定。</p>
<p>组帧方法：</p>
<p>1.字符计数法</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613153344033.png" alt="image-20240613153344033"></p>
<p>2.字符填充法</p>
<p><img src="/../TyporaImage/image-20240613153520655.png" alt="image-20240613153520655"></p>
<p><img src="/../TyporaImage/image-20240613153612396.png" alt="image-20240613153612396"></p>
<p>3.零比特填充法</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613153646099.png" alt="image-20240613153646099"></p>
<p>4.违规编码法</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613153712327.png" alt="image-20240613153712327"></p>
<p>最佳实践：</p>
<p><img src="/../TyporaImage/image-20240613153806569.png" alt="image-20240613153806569"></p>
<h1 id="透明传输-1"><a href="#透明传输-1" class="headerlink" title="透明传输"></a>透明传输</h1><p>定义：</p>
<p>透明传输指的是在网络中传输数据时，数据的原始格式和内容保持不变，不因传输过程而改变。这意味着接收方接收到的数据应与发送方发送的数据完全一致。# 封装成帧</p>
<p>定义：</p>
<p>就是在一段数据的前后添加首部和尾部，这就构成了一个帧。</p>
<p>组成部分：</p>
<p>帧首部、帧尾部、帧的数据部分</p>
<p>结构形式；</p>
<p><img src="/../TyporaImage/image-20240613152234674.png" alt="image-20240613152234674"></p>
<p>特点：</p>
<p>1.首部和尾部包含许多控制信息，他们有一个重要作用：帧界定。</p>
<p>组帧方法：</p>
<p>1.字符计数法</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613153344033.png" alt="image-20240613153344033"></p>
<p>2.字符填充法</p>
<p><img src="/../TyporaImage/image-20240613153520655.png" alt="image-20240613153520655"></p>
<p><img src="/../TyporaImage/image-20240613153612396.png" alt="image-20240613153612396"></p>
<p>3.零比特填充法</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613153646099.png" alt="image-20240613153646099"></p>
<p>4.违规编码法</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613153712327.png" alt="image-20240613153712327"></p>
<p>最佳实践：</p>
<p><img src="/../TyporaImage/image-20240613153806569.png" alt="image-20240613153806569"></p>
<h1 id="透明传输-2"><a href="#透明传输-2" class="headerlink" title="透明传输"></a>透明传输</h1><p>定义：</p>
<p>透明传输指的是在网络中传输数据时，数据的原始格式和内容保持不变，不因传输过程而改变。这意味着接收方接收到的数据应与发送方发送的数据完全一致。</p>
<p>成帧</p>
<p>定义：</p>
<p>就是在一段数据的前后添加首部和尾部，这就构成了一个帧。</p>
<p>组成部分：</p>
<p>帧首部、帧尾部、帧的数据部分</p>
<p>结构形式；</p>
<p><img src="/../TyporaImage/image-20240613152234674.png" alt="image-20240613152234674"></p>
<p>特点：</p>
<p>1.首部和尾部包含许多控制信息，他们有一个重要作用：帧界定。</p>
<p>组帧方法：</p>
<p>1.字符计数法</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613153344033.png" alt="image-20240613153344033"></p>
<p>2.字符填充法</p>
<p><img src="/../TyporaImage/image-20240613153520655.png" alt="image-20240613153520655"></p>
<p><img src="/../TyporaImage/image-20240613153612396.png" alt="image-20240613153612396"></p>
<p>3.零比特填充法</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613153646099.png" alt="image-20240613153646099"></p>
<p>4.违规编码法</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613153712327.png" alt="image-20240613153712327"></p>
<p>最佳实践：</p>
<p><img src="/../TyporaImage/image-20240613153806569.png" alt="image-20240613153806569"></p>
<h1 id="透明传输-3"><a href="#透明传输-3" class="headerlink" title="透明传输"></a>透明传输</h1><p>定义：</p>
<p>透明传输指的是在网络中传输数据时，数据的原始格式和内容保持不变，不因传输过程而改变。这意味着接收方接收到的数据应与发送方发送的数据完全一致。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>局域网基本概念及体系结构</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%8F%8A%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="局域网基本概念及体系结构"><a href="#局域网基本概念及体系结构" class="headerlink" title="局域网基本概念及体系结构"></a>局域网基本概念及体系结构</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>简称LAN，是某一个区域内由多台计算机互联成的计算机组，使用广播信道。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>主要由网络硬件（如交换机、路由器、网卡）和网络传输介质（如双绞线、光纤、无线电波）组成，以及网络协议和软件。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-拓扑结构"><a href="#1-拓扑结构" class="headerlink" title="1.拓扑结构"></a>1.拓扑结构</h3><p><img src="/../TyporaImage/image-20240617211106178.png" alt="image-20240617211106178"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="按传输介质分类："><a href="#按传输介质分类：" class="headerlink" title="按传输介质分类："></a>按传输介质分类：</h3><p>1.有线局域网</p>
<p>常用介质：双绞线、同轴电缆、光纤</p>
<p>2.无线局域网</p>
<p>常用介质：电磁波</p>
<h3 id="按照网络协议分类："><a href="#按照网络协议分类：" class="headerlink" title="按照网络协议分类："></a>按照网络协议分类：</h3><p>1.以太网</p>
<p>2.令牌环网</p>
<p>3.FDDI网</p>
<p>4.ATM网</p>
<p>5.无线局域网</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>1.覆盖面积小</p>
<p>2.使用专门的传输介质</p>
<p>3.通信延迟短，可靠性高。</p>
<p>4.各站平等。</p>
<p>5.多采用分布式控制和广播式通信，可以进行广播和组播。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.决定局域网的主要因素：</p>
<p>网络拓扑、传输介质、介质访问控制方法	结构</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>简称LAN，是某一个区域内由多台计算机互联成的计算机组，使用广播信道。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>主要由网络硬件（如交换机、路由器、网卡）和网络传输介质（如双绞线、光纤、无线电波）组成，以及网络协议和软件。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-拓扑结构-1"><a href="#1-拓扑结构-1" class="headerlink" title="1.拓扑结构"></a>1.拓扑结构</h3><p><img src="/../TyporaImage/image-20240617211106178.png" alt="image-20240617211106178"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="按传输介质分类：-1"><a href="#按传输介质分类：-1" class="headerlink" title="按传输介质分类："></a>按传输介质分类：</h3><p>1.有线局域网</p>
<p>常用介质：双绞线、同轴电缆、光纤</p>
<p>2.无线局域网</p>
<p>常用介质：电磁波</p>
<h3 id="按照网络协议分类：-1"><a href="#按照网络协议分类：-1" class="headerlink" title="按照网络协议分类："></a>按照网络协议分类：</h3><p>1.以太网</p>
<p>2.令牌环网</p>
<p>3.FDDI网</p>
<p>4.ATM网</p>
<p>5.无线局域网</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p>1.覆盖面积小</p>
<p>2.使用专门的传输介质</p>
<p>3.通信延迟短，可靠性高。</p>
<p>4.各站平等。</p>
<p>5.多采用分布式控制和广播式通信，可以进行广播和组播。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.决定局域网的主要因素：</p>
<p>网络拓扑、传输介质、介质访问控制方法# 局域网基本概念及体系结构</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>简称LAN，是某一个区域内由多台计算机互联成的计算机组，使用广播信道。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>主要由网络硬件（如交换机、路由器、网卡）和网络传输介质（如双绞线、光纤、无线电波）组成，以及网络协议和软件。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-拓扑结构-2"><a href="#1-拓扑结构-2" class="headerlink" title="1.拓扑结构"></a>1.拓扑结构</h3><p><img src="/../TyporaImage/image-20240617211106178.png" alt="image-20240617211106178"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="按传输介质分类：-2"><a href="#按传输介质分类：-2" class="headerlink" title="按传输介质分类："></a>按传输介质分类：</h3><p>1.有线局域网</p>
<p>常用介质：双绞线、同轴电缆、光纤</p>
<p>2.无线局域网</p>
<p>常用介质：电磁波</p>
<h3 id="按照网络协议分类：-2"><a href="#按照网络协议分类：-2" class="headerlink" title="按照网络协议分类："></a>按照网络协议分类：</h3><p>1.以太网</p>
<p>2.令牌环网</p>
<p>3.FDDI网</p>
<p>4.ATM网</p>
<p>5.无线局域网</p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p>1.覆盖面积小</p>
<p>2.使用专门的传输介质</p>
<p>3.通信延迟短，可靠性高。</p>
<p>4.各站平等。</p>
<p>5.多采用分布式控制和广播式通信，可以进行广播和组播。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.决定局域网的主要因素：</p>
<p>网络拓扑、传输介质、介质访问控制方法	结构</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>简称LAN，是某一个区域内由多台计算机互联成的计算机组，使用广播信道。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>主要由网络硬件（如交换机、路由器、网卡）和网络传输介质（如双绞线、光纤、无线电波）组成，以及网络协议和软件。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-拓扑结构-3"><a href="#1-拓扑结构-3" class="headerlink" title="1.拓扑结构"></a>1.拓扑结构</h3><p><img src="/../TyporaImage/image-20240617211106178.png" alt="image-20240617211106178"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="按传输介质分类：-3"><a href="#按传输介质分类：-3" class="headerlink" title="按传输介质分类："></a>按传输介质分类：</h3><p>1.有线局域网</p>
<p>常用介质：双绞线、同轴电缆、光纤</p>
<p>2.无线局域网</p>
<p>常用介质：电磁波</p>
<h3 id="按照网络协议分类：-3"><a href="#按照网络协议分类：-3" class="headerlink" title="按照网络协议分类："></a>按照网络协议分类：</h3><p>1.以太网</p>
<p>2.令牌环网</p>
<p>3.FDDI网</p>
<p>4.ATM网</p>
<p>5.无线局域网</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p>1.覆盖面积小</p>
<p>2.使用专门的传输介质</p>
<p>3.通信延迟短，可靠性高。</p>
<p>4.各站平等。</p>
<p>5.多采用分布式控制和广播式通信，可以进行广播和组播。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.决定局域网的主要因素：</p>
<p>网络拓扑、传输介质、介质访问控制方法</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>差错控制</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%B7%AE%E9%94%99%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h1 id="差错控制"><a href="#差错控制" class="headerlink" title="差错控制"></a>差错控制</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>差错控制（Error Control）是一种通信协议或技术，用于检测和纠正数据在传输过程中可能发生的错误。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-检错编码"><a href="#1-检错编码" class="headerlink" title="1.检错编码"></a>1.检错编码</h3><h4 id="①奇偶校验码"><a href="#①奇偶校验码" class="headerlink" title="①奇偶校验码"></a>①奇偶校验码</h4><p>奇校验码：</p>
<p>在最后添加一位后，“1”的个数是奇数</p>
<p>偶校验码：</p>
<p>在最后添加一位后，“1”的个数是偶数</p>
<h4 id="②循环冗余码CRC"><a href="#②循环冗余码CRC" class="headerlink" title="②循环冗余码CRC"></a>②循环冗余码CRC</h4><p>组成部分：</p>
<p>要传的数据、生成式多项式、FCS帧检验序列、接收到的数据。</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613160701032.png" alt="image-20240613160701032"></p>
<p><img src="/../TyporaImage/image-20240613160906833.png" alt="image-20240613160906833"></p>
<h3 id="2-纠错编码"><a href="#2-纠错编码" class="headerlink" title="2.纠错编码"></a>2.纠错编码</h3><h4 id="①海明码：在奇偶校验码的基础上的一个概念。"><a href="#①海明码：在奇偶校验码的基础上的一个概念。" class="headerlink" title="①海明码：在奇偶校验码的基础上的一个概念。"></a>①海明码：在奇偶校验码的基础上的一个概念。</h4><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.确定校验码位数</p>
<p><img src="/../TyporaImage/image-20240613161443357.png" alt="image-20240613161443357"></p>
<p>2.确定校验码的位置和数据的位置。</p>
<p><img src="/../TyporaImage/image-20240613161615340.png" alt="image-20240613161615340"></p>
<p>3.求出校验码的值</p>
<p><img src="/../TyporaImage/image-20240613161942495.png" alt="image-20240613161942495"></p>
<p>4.检错和纠错</p>
<p>方法1：</p>
<p><img src="/../TyporaImage/image-20240613162256713.png" alt="image-20240613162256713"></p>
<p><img src="/../TyporaImage/image-20240613162308193.png" alt="image-20240613162308193"></p>
<p>方法2：</p>
<p><img src="/../TyporaImage/image-20240613162413785.png" alt="image-20240613162413785"></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>解决噪声引起的传输差错。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-噪音组成部分："><a href="#1-噪音组成部分：" class="headerlink" title="1.噪音组成部分："></a>1.噪音组成部分：</h3><p>全局性</p>
<p>由于线路本身的电气特性所产生的随机噪声（热噪声），是信道固有的，随机存在。</p>
<p>方法：提高信噪比来减少或者避免干扰。（对传感器改造）</p>
<p>局部性</p>
<p>外界特定的短暂原因所造成的冲击噪声。这是差错造成的主要原因。</p>
<h3 id="2-差错分类："><a href="#2-差错分类：" class="headerlink" title="2.差错分类："></a>2.差错分类：</h3><p>1.位错：比特位出错</p>
<p>2.帧错</p>
<p>①丢失</p>
<p>②重复</p>
<p>③失序</p>
<p>2.冗余编码：</p>
<p>通过在数据中添加额外的信息（冗余位），以便在数据传输或存储过程中检测和纠正错误。</p>
<p>3.海明距离</p>
<p>定义：两个等长字符串中在对应位置上不同字符的数量。</p>
<p>控制</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>差错控制（Error Control）是一种通信协议或技术，用于检测和纠正数据在传输过程中可能发生的错误。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-检错编码-1"><a href="#1-检错编码-1" class="headerlink" title="1.检错编码"></a>1.检错编码</h3><h4 id="①奇偶校验码-1"><a href="#①奇偶校验码-1" class="headerlink" title="①奇偶校验码"></a>①奇偶校验码</h4><p>奇校验码：</p>
<p>在最后添加一位后，“1”的个数是奇数</p>
<p>偶校验码：</p>
<p>在最后添加一位后，“1”的个数是偶数</p>
<h4 id="②循环冗余码CRC-1"><a href="#②循环冗余码CRC-1" class="headerlink" title="②循环冗余码CRC"></a>②循环冗余码CRC</h4><p>组成部分：</p>
<p>要传的数据、生成式多项式、FCS帧检验序列、接收到的数据。</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613160701032.png" alt="image-20240613160701032"></p>
<p><img src="/../TyporaImage/image-20240613160906833.png" alt="image-20240613160906833"></p>
<h3 id="2-纠错编码-1"><a href="#2-纠错编码-1" class="headerlink" title="2.纠错编码"></a>2.纠错编码</h3><h4 id="①海明码：在奇偶校验码的基础上的一个概念。-1"><a href="#①海明码：在奇偶校验码的基础上的一个概念。-1" class="headerlink" title="①海明码：在奇偶校验码的基础上的一个概念。"></a>①海明码：在奇偶校验码的基础上的一个概念。</h4><h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.确定校验码位数</p>
<p><img src="/../TyporaImage/image-20240613161443357.png" alt="image-20240613161443357"></p>
<p>2.确定校验码的位置和数据的位置。</p>
<p><img src="/../TyporaImage/image-20240613161615340.png" alt="image-20240613161615340"></p>
<p>3.求出校验码的值</p>
<p><img src="/../TyporaImage/image-20240613161942495.png" alt="image-20240613161942495"></p>
<p>4.检错和纠错</p>
<p>方法1：</p>
<p><img src="/../TyporaImage/image-20240613162256713.png" alt="image-20240613162256713"></p>
<p><img src="/../TyporaImage/image-20240613162308193.png" alt="image-20240613162308193"></p>
<p>方法2：</p>
<p><img src="/../TyporaImage/image-20240613162413785.png" alt="image-20240613162413785"></p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>解决噪声引起的传输差错。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-噪音组成部分：-1"><a href="#1-噪音组成部分：-1" class="headerlink" title="1.噪音组成部分："></a>1.噪音组成部分：</h3><p>全局性</p>
<p>由于线路本身的电气特性所产生的随机噪声（热噪声），是信道固有的，随机存在。</p>
<p>方法：提高信噪比来减少或者避免干扰。（对传感器改造）</p>
<p>局部性</p>
<p>外界特定的短暂原因所造成的冲击噪声。这是差错造成的主要原因。</p>
<h3 id="2-差错分类：-1"><a href="#2-差错分类：-1" class="headerlink" title="2.差错分类："></a>2.差错分类：</h3><p>1.位错：比特位出错</p>
<p>2.帧错</p>
<p>①丢失</p>
<p>②重复</p>
<p>③失序</p>
<p>2.冗余编码：</p>
<p>通过在数据中添加额外的信息（冗余位），以便在数据传输或存储过程中检测和纠正错误。</p>
<p>3.海明距离</p>
<p>定义：两个等长字符串中在对应位置上不同字符的数量。# 差错控制</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>差错控制（Error Control）是一种通信协议或技术，用于检测和纠正数据在传输过程中可能发生的错误。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-检错编码-2"><a href="#1-检错编码-2" class="headerlink" title="1.检错编码"></a>1.检错编码</h3><h4 id="①奇偶校验码-2"><a href="#①奇偶校验码-2" class="headerlink" title="①奇偶校验码"></a>①奇偶校验码</h4><p>奇校验码：</p>
<p>在最后添加一位后，“1”的个数是奇数</p>
<p>偶校验码：</p>
<p>在最后添加一位后，“1”的个数是偶数</p>
<h4 id="②循环冗余码CRC-2"><a href="#②循环冗余码CRC-2" class="headerlink" title="②循环冗余码CRC"></a>②循环冗余码CRC</h4><p>组成部分：</p>
<p>要传的数据、生成式多项式、FCS帧检验序列、接收到的数据。</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613160701032.png" alt="image-20240613160701032"></p>
<p><img src="/../TyporaImage/image-20240613160906833.png" alt="image-20240613160906833"></p>
<h3 id="2-纠错编码-2"><a href="#2-纠错编码-2" class="headerlink" title="2.纠错编码"></a>2.纠错编码</h3><h4 id="①海明码：在奇偶校验码的基础上的一个概念。-2"><a href="#①海明码：在奇偶校验码的基础上的一个概念。-2" class="headerlink" title="①海明码：在奇偶校验码的基础上的一个概念。"></a>①海明码：在奇偶校验码的基础上的一个概念。</h4><h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.确定校验码位数</p>
<p><img src="/../TyporaImage/image-20240613161443357.png" alt="image-20240613161443357"></p>
<p>2.确定校验码的位置和数据的位置。</p>
<p><img src="/../TyporaImage/image-20240613161615340.png" alt="image-20240613161615340"></p>
<p>3.求出校验码的值</p>
<p><img src="/../TyporaImage/image-20240613161942495.png" alt="image-20240613161942495"></p>
<p>4.检错和纠错</p>
<p>方法1：</p>
<p><img src="/../TyporaImage/image-20240613162256713.png" alt="image-20240613162256713"></p>
<p><img src="/../TyporaImage/image-20240613162308193.png" alt="image-20240613162308193"></p>
<p>方法2：</p>
<p><img src="/../TyporaImage/image-20240613162413785.png" alt="image-20240613162413785"></p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>解决噪声引起的传输差错。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-噪音组成部分：-2"><a href="#1-噪音组成部分：-2" class="headerlink" title="1.噪音组成部分："></a>1.噪音组成部分：</h3><p>全局性</p>
<p>由于线路本身的电气特性所产生的随机噪声（热噪声），是信道固有的，随机存在。</p>
<p>方法：提高信噪比来减少或者避免干扰。（对传感器改造）</p>
<p>局部性</p>
<p>外界特定的短暂原因所造成的冲击噪声。这是差错造成的主要原因。</p>
<h3 id="2-差错分类：-2"><a href="#2-差错分类：-2" class="headerlink" title="2.差错分类："></a>2.差错分类：</h3><p>1.位错：比特位出错</p>
<p>2.帧错</p>
<p>①丢失</p>
<p>②重复</p>
<p>③失序</p>
<p>2.冗余编码：</p>
<p>通过在数据中添加额外的信息（冗余位），以便在数据传输或存储过程中检测和纠正错误。</p>
<p>3.海明距离</p>
<p>定义：两个等长字符串中在对应位置上不同字符的数量。</p>
<p>控制</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>差错控制（Error Control）是一种通信协议或技术，用于检测和纠正数据在传输过程中可能发生的错误。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-检错编码-3"><a href="#1-检错编码-3" class="headerlink" title="1.检错编码"></a>1.检错编码</h3><h4 id="①奇偶校验码-3"><a href="#①奇偶校验码-3" class="headerlink" title="①奇偶校验码"></a>①奇偶校验码</h4><p>奇校验码：</p>
<p>在最后添加一位后，“1”的个数是奇数</p>
<p>偶校验码：</p>
<p>在最后添加一位后，“1”的个数是偶数</p>
<h4 id="②循环冗余码CRC-3"><a href="#②循环冗余码CRC-3" class="headerlink" title="②循环冗余码CRC"></a>②循环冗余码CRC</h4><p>组成部分：</p>
<p>要传的数据、生成式多项式、FCS帧检验序列、接收到的数据。</p>
<p>结构形式：</p>
<p><img src="/../TyporaImage/image-20240613160701032.png" alt="image-20240613160701032"></p>
<p><img src="/../TyporaImage/image-20240613160906833.png" alt="image-20240613160906833"></p>
<h3 id="2-纠错编码-3"><a href="#2-纠错编码-3" class="headerlink" title="2.纠错编码"></a>2.纠错编码</h3><h4 id="①海明码：在奇偶校验码的基础上的一个概念。-3"><a href="#①海明码：在奇偶校验码的基础上的一个概念。-3" class="headerlink" title="①海明码：在奇偶校验码的基础上的一个概念。"></a>①海明码：在奇偶校验码的基础上的一个概念。</h4><h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.确定校验码位数</p>
<p><img src="/../TyporaImage/image-20240613161443357.png" alt="image-20240613161443357"></p>
<p>2.确定校验码的位置和数据的位置。</p>
<p><img src="/../TyporaImage/image-20240613161615340.png" alt="image-20240613161615340"></p>
<p>3.求出校验码的值</p>
<p><img src="/../TyporaImage/image-20240613161942495.png" alt="image-20240613161942495"></p>
<p>4.检错和纠错</p>
<p>方法1：</p>
<p><img src="/../TyporaImage/image-20240613162256713.png" alt="image-20240613162256713"></p>
<p><img src="/../TyporaImage/image-20240613162308193.png" alt="image-20240613162308193"></p>
<p>方法2：</p>
<p><img src="/../TyporaImage/image-20240613162413785.png" alt="image-20240613162413785"></p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>解决噪声引起的传输差错。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-噪音组成部分：-3"><a href="#1-噪音组成部分：-3" class="headerlink" title="1.噪音组成部分："></a>1.噪音组成部分：</h3><p>全局性</p>
<p>由于线路本身的电气特性所产生的随机噪声（热噪声），是信道固有的，随机存在。</p>
<p>方法：提高信噪比来减少或者避免干扰。（对传感器改造）</p>
<p>局部性</p>
<p>外界特定的短暂原因所造成的冲击噪声。这是差错造成的主要原因。</p>
<h3 id="2-差错分类：-3"><a href="#2-差错分类：-3" class="headerlink" title="2.差错分类："></a>2.差错分类：</h3><p>1.位错：比特位出错</p>
<p>2.帧错</p>
<p>①丢失</p>
<p>②重复</p>
<p>③失序</p>
<p>2.冗余编码：</p>
<p>通过在数据中添加额外的信息（冗余位），以便在数据传输或存储过程中检测和纠正错误。</p>
<p>3.海明距离</p>
<p>定义：两个等长字符串中在对应位置上不同字符的数量。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>广域网</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%B9%BF%E5%9F%9F%E7%BD%91/</url>
    <content><![CDATA[<h1 id="广域网"><a href="#广域网" class="headerlink" title="广域网"></a>广域网</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>是一种覆盖大范围地理区域的计算机网络，连接不同的局域网（LAN）或其他类型的网络，通常跨越城市、国家甚至全球范围。广域网使用专用的通信链路或公用通信设施来传输数据。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.路由器：</p>
<p>连接不同网络的设备，负责数据包的转发和路径选择。</p>
<p>2.交换机：</p>
<p>用于连接和转发网络中的数据流。</p>
<p>3.通信链路：</p>
<p>包括光纤、电缆、卫星链路等，用于传输数据。</p>
<p>4.调制解调器：</p>
<p>将数字信号转换为模拟信号，以便在通信链路上传输。</p>
<p>5.网络接口：</p>
<p>连接网络设备的硬件接口，如以太网端口、光纤接口等。</p>
<p>6.PPP协议</p>
<p><img src="/../TyporaImage/image-20240617220836112.png" alt="image-20240617220836112"></p>
<p>7.HDLC协议</p>
<p><img src="/../TyporaImage/image-20240617221054789.png" alt="image-20240617221054789"></p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240617221131742.png" alt="image-20240617221131742"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.两个协议的对比</p>
<p><img src="/../TyporaImage/image-20240617221202148.png" alt="image-20240617221202148">域网</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>是一种覆盖大范围地理区域的计算机网络，连接不同的局域网（LAN）或其他类型的网络，通常跨越城市、国家甚至全球范围。广域网使用专用的通信链路或公用通信设施来传输数据。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.路由器：</p>
<p>连接不同网络的设备，负责数据包的转发和路径选择。</p>
<p>2.交换机：</p>
<p>用于连接和转发网络中的数据流。</p>
<p>3.通信链路：</p>
<p>包括光纤、电缆、卫星链路等，用于传输数据。</p>
<p>4.调制解调器：</p>
<p>将数字信号转换为模拟信号，以便在通信链路上传输。</p>
<p>5.网络接口：</p>
<p>连接网络设备的硬件接口，如以太网端口、光纤接口等。</p>
<p>6.PPP协议</p>
<p><img src="/../TyporaImage/image-20240617220836112.png" alt="image-20240617220836112"></p>
<p>7.HDLC协议</p>
<p><img src="/../TyporaImage/image-20240617221054789.png" alt="image-20240617221054789"></p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240617221131742.png" alt="image-20240617221131742"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.两个协议的对比</p>
<p><img src="/../TyporaImage/image-20240617221202148.png" alt="image-20240617221202148"># 广域网</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>是一种覆盖大范围地理区域的计算机网络，连接不同的局域网（LAN）或其他类型的网络，通常跨越城市、国家甚至全球范围。广域网使用专用的通信链路或公用通信设施来传输数据。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.路由器：</p>
<p>连接不同网络的设备，负责数据包的转发和路径选择。</p>
<p>2.交换机：</p>
<p>用于连接和转发网络中的数据流。</p>
<p>3.通信链路：</p>
<p>包括光纤、电缆、卫星链路等，用于传输数据。</p>
<p>4.调制解调器：</p>
<p>将数字信号转换为模拟信号，以便在通信链路上传输。</p>
<p>5.网络接口：</p>
<p>连接网络设备的硬件接口，如以太网端口、光纤接口等。</p>
<p>6.PPP协议</p>
<p><img src="/../TyporaImage/image-20240617220836112.png" alt="image-20240617220836112"></p>
<p>7.HDLC协议</p>
<p><img src="/../TyporaImage/image-20240617221054789.png" alt="image-20240617221054789"></p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240617221131742.png" alt="image-20240617221131742"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.两个协议的对比</p>
<p><img src="/../TyporaImage/image-20240617221202148.png" alt="image-20240617221202148">域网</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>是一种覆盖大范围地理区域的计算机网络，连接不同的局域网（LAN）或其他类型的网络，通常跨越城市、国家甚至全球范围。广域网使用专用的通信链路或公用通信设施来传输数据。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.路由器：</p>
<p>连接不同网络的设备，负责数据包的转发和路径选择。</p>
<p>2.交换机：</p>
<p>用于连接和转发网络中的数据流。</p>
<p>3.通信链路：</p>
<p>包括光纤、电缆、卫星链路等，用于传输数据。</p>
<p>4.调制解调器：</p>
<p>将数字信号转换为模拟信号，以便在通信链路上传输。</p>
<p>5.网络接口：</p>
<p>连接网络设备的硬件接口，如以太网端口、光纤接口等。</p>
<p>6.PPP协议</p>
<p><img src="/../TyporaImage/image-20240617220836112.png" alt="image-20240617220836112"></p>
<p>7.HDLC协议</p>
<p><img src="/../TyporaImage/image-20240617221054789.png" alt="image-20240617221054789"></p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240617221131742.png" alt="image-20240617221131742"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.两个协议的对比</p>
<p><img src="/../TyporaImage/image-20240617221202148.png" alt="image-20240617221202148"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>报文交换</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%8A%A5%E6%96%87%E4%BA%A4%E6%8D%A2/</url>
    <content><![CDATA[<h1 id="报文交换"><a href="#报文交换" class="headerlink" title="报文交换"></a>报文交换</h1><h2 id="结构形式："><a href="#结构形式：" class="headerlink" title="结构形式："></a>结构形式：</h2><p><img src="/../TyporaImage/image-20240606221410890.png" alt="image-20240606221410890"></p>
<h2 id="特征："><a href="#特征：" class="headerlink" title="特征："></a>特征：</h2><p><img src="/../TyporaImage/image-20240606221425733.png" alt="image-20240606221425733"></p>
<h2 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h2><p><img src="/../TyporaImage/image-20240606221355194.png" alt="image-20240606221355194"></p>
<h2 id="相关知识点："><a href="#相关知识点：" class="headerlink" title="相关知识点："></a>相关知识点：</h2><p>报文是网络中交换与传输的数据单元，即站点一次性要发送的数据块。报文包含了将要发送的完整的数据信息，其长短不一致，长度不限且可变。交换</p>
<h2 id="结构形式：-1"><a href="#结构形式：-1" class="headerlink" title="结构形式："></a>结构形式：</h2><p><img src="/../TyporaImage/image-20240606221410890.png" alt="image-20240606221410890"></p>
<h2 id="特征：-1"><a href="#特征：-1" class="headerlink" title="特征："></a>特征：</h2><p><img src="/../TyporaImage/image-20240606221425733.png" alt="image-20240606221425733"></p>
<h2 id="原理：-1"><a href="#原理：-1" class="headerlink" title="原理："></a>原理：</h2><p><img src="/../TyporaImage/image-20240606221355194.png" alt="image-20240606221355194"></p>
<h2 id="相关知识点：-1"><a href="#相关知识点：-1" class="headerlink" title="相关知识点："></a>相关知识点：</h2><p>报文是网络中交换与传输的数据单元，即站点一次性要发送的数据块。报文包含了将要发送的完整的数据信息，其长短不一致，长度不限且可变。# 报文交换</p>
<h2 id="结构形式：-2"><a href="#结构形式：-2" class="headerlink" title="结构形式："></a>结构形式：</h2><p><img src="/../TyporaImage/image-20240606221410890.png" alt="image-20240606221410890"></p>
<h2 id="特征：-2"><a href="#特征：-2" class="headerlink" title="特征："></a>特征：</h2><p><img src="/../TyporaImage/image-20240606221425733.png" alt="image-20240606221425733"></p>
<h2 id="原理：-2"><a href="#原理：-2" class="headerlink" title="原理："></a>原理：</h2><p><img src="/../TyporaImage/image-20240606221355194.png" alt="image-20240606221355194"></p>
<h2 id="相关知识点：-2"><a href="#相关知识点：-2" class="headerlink" title="相关知识点："></a>相关知识点：</h2><p>报文是网络中交换与传输的数据单元，即站点一次性要发送的数据块。报文包含了将要发送的完整的数据信息，其长短不一致，长度不限且可变。交换</p>
<h2 id="结构形式：-3"><a href="#结构形式：-3" class="headerlink" title="结构形式："></a>结构形式：</h2><p><img src="/../TyporaImage/image-20240606221410890.png" alt="image-20240606221410890"></p>
<h2 id="特征：-3"><a href="#特征：-3" class="headerlink" title="特征："></a>特征：</h2><p><img src="/../TyporaImage/image-20240606221425733.png" alt="image-20240606221425733"></p>
<h2 id="原理：-3"><a href="#原理：-3" class="headerlink" title="原理："></a>原理：</h2><p><img src="/../TyporaImage/image-20240606221355194.png" alt="image-20240606221355194"></p>
<h2 id="相关知识点：-3"><a href="#相关知识点：-3" class="headerlink" title="相关知识点："></a>相关知识点：</h2><p>报文是网络中交换与传输的数据单元，即站点一次性要发送的数据块。报文包含了将要发送的完整的数据信息，其长短不一致，长度不限且可变。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>数据交换方式</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%95%B0%E6%8D%AE%E4%BA%A4%E6%8D%A2%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="数据交换方式"><a href="#数据交换方式" class="headerlink" title="数据交换方式"></a>数据交换方式</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-电路交换"><a href="#1-电路交换" class="headerlink" title="1.电路交换"></a>1.电路交换</h3><h3 id="2-报文交换"><a href="#2-报文交换" class="headerlink" title="2.报文交换"></a>2.报文交换</h3><h3 id="3-分组交换"><a href="#3-分组交换" class="headerlink" title="3.分组交换"></a>3.分组交换</h3><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>1.通过某些交换中心，将数据进行集中和传送。</p>
<p>由于传输线路共用，大大降低了通信线路，降低系统费用。</p>
<h2 id="三种交换方式的比较"><a href="#三种交换方式的比较" class="headerlink" title="三种交换方式的比较"></a>三种交换方式的比较</h2><p><img src="/../TyporaImage/image-20240606221709256.png" alt="image-20240606221709256"><br>方式</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-电路交换-1"><a href="#1-电路交换-1" class="headerlink" title="1.电路交换"></a>1.电路交换</h3><h3 id="2-报文交换-1"><a href="#2-报文交换-1" class="headerlink" title="2.报文交换"></a>2.报文交换</h3><h3 id="3-分组交换-1"><a href="#3-分组交换-1" class="headerlink" title="3.分组交换"></a>3.分组交换</h3><h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>1.通过某些交换中心，将数据进行集中和传送。</p>
<p>由于传输线路共用，大大降低了通信线路，降低系统费用。</p>
<h2 id="三种交换方式的比较-1"><a href="#三种交换方式的比较-1" class="headerlink" title="三种交换方式的比较"></a>三种交换方式的比较</h2><p><img src="/../TyporaImage/image-20240606221709256.png" alt="image-20240606221709256"># 数据交换方式</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-电路交换-2"><a href="#1-电路交换-2" class="headerlink" title="1.电路交换"></a>1.电路交换</h3><h3 id="2-报文交换-2"><a href="#2-报文交换-2" class="headerlink" title="2.报文交换"></a>2.报文交换</h3><h3 id="3-分组交换-2"><a href="#3-分组交换-2" class="headerlink" title="3.分组交换"></a>3.分组交换</h3><h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>1.通过某些交换中心，将数据进行集中和传送。</p>
<p>由于传输线路共用，大大降低了通信线路，降低系统费用。</p>
<h2 id="三种交换方式的比较-2"><a href="#三种交换方式的比较-2" class="headerlink" title="三种交换方式的比较"></a>三种交换方式的比较</h2><p><img src="/../TyporaImage/image-20240606221709256.png" alt="image-20240606221709256"><br>方式</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-电路交换-3"><a href="#1-电路交换-3" class="headerlink" title="1.电路交换"></a>1.电路交换</h3><h3 id="2-报文交换-3"><a href="#2-报文交换-3" class="headerlink" title="2.报文交换"></a>2.报文交换</h3><h3 id="3-分组交换-3"><a href="#3-分组交换-3" class="headerlink" title="3.分组交换"></a>3.分组交换</h3><h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>1.通过某些交换中心，将数据进行集中和传送。</p>
<p>由于传输线路共用，大大降低了通信线路，降低系统费用。</p>
<h2 id="三种交换方式的比较-3"><a href="#三种交换方式的比较-3" class="headerlink" title="三种交换方式的比较"></a>三种交换方式的比较</h2><p><img src="/../TyporaImage/image-20240606221709256.png" alt="image-20240606221709256"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>数据通信基础知识</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p>title: 数据通信基础知识</p>
<p>date: </p>
<p>updated: 2024-11-07T17:16:49.069Z</p>
<p>tags: </p>
<h1 id="数据通信基础知识"><a href="#数据通信基础知识" class="headerlink" title="数据通信基础知识"></a>数据通信基础知识</h1><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><h3 id="数据："><a href="#数据：" class="headerlink" title="数据："></a>数据：</h3><p>传送信息的实体，通常是有意义的符号序列。</p>
<h3 id="信号："><a href="#信号：" class="headerlink" title="信号："></a>信号：</h3><p>数据的电气&#x2F;电磁表现，是数据在传输过程中的存在形式。</p>
<p>数字信号&#x2F;离散信号：</p>
<p>代表消息的参数取值是离散的。</p>
<p>模拟信号&#x2F;连续信号：</p>
<p>代表消息的取值参数是连续的。</p>
<h3 id="信源："><a href="#信源：" class="headerlink" title="信源："></a>信源：</h3><p>产生和发送数据的源头</p>
<h3 id="信宿："><a href="#信宿：" class="headerlink" title="信宿："></a>信宿：</h3><p>接收数据的终点</p>
<h3 id="信道："><a href="#信道：" class="headerlink" title="信道："></a>信道：</h3><p>信号的传输媒介。一般用来表示向某一个方向传送信息的介质，因此一条通信线路往往包含一条发送信道和一条接收信道。</p>
<p>分类和组成：</p>
<p><img src="/../TyporaImage/image-20240606214604220.png" alt="image-20240606214604220"></p>
<h3 id="三种通信方式："><a href="#三种通信方式：" class="headerlink" title="三种通信方式："></a>三种通信方式：</h3><p>1.单工通信</p>
<p>只有一个方向的通信，仅需要一条信道。</p>
<p>2.半双工通信</p>
<p>通信的双方都可以发送或者接受信息，但是任何一方都不能同时发送和接收，需要两条信道。</p>
<p>3.全双工通信</p>
<p>通信的双方都可以同时发送或者接受信息，需要两条信道。</p>
<h3 id="数据传输方式"><a href="#数据传输方式" class="headerlink" title="数据传输方式:"></a>数据传输方式:</h3><p>1.串行传输：</p>
<p>将表示一个字符的8个二进制数按由低到高的顺序依次发送。</p>
<p>速度慢，费用低，适合远距离。</p>
<p><img src="/../TyporaImage/image-20240606211417955.png" alt="image-20240606211417955"></p>
<p>2.并行传输</p>
<p>将表示一个字符的8个 二进制数同时通过8条信道发送。</p>
<p><img src="/../TyporaImage/image-20240606211423280.png" alt="image-20240606211423280"></p>
<h3 id="码元："><a href="#码元：" class="headerlink" title="码元："></a>码元：</h3><p>指用一个<strong>固定时长</strong>的<strong>信号波形</strong>（数字脉冲），代表了不同离散数值的基本波形，是数字通信中数字信号的计量单位，这个时长内的信号称为K进制码元，而该时长称为码元宽度。当码元的离散状态有K个时，码元为K进制码元。</p>
<p>1码元可以携带多个比特的信息量。</p>
<h3 id="数字通信系统数据传输速率的两种表示方法："><a href="#数字通信系统数据传输速率的两种表示方法：" class="headerlink" title="数字通信系统数据传输速率的两种表示方法："></a>数字通信系统数据传输速率的两种表示方法：</h3><h4 id="1-码元传输速率："><a href="#1-码元传输速率：" class="headerlink" title="1.码元传输速率："></a>1.码元传输速率：</h4><p>表示单位时间内数字通信系统所传输码元的个数。（也可以称为脉冲个数或信号变化次数），单位是波特（Baud）。1波特表示数字通信系统每秒传输一个码元。</p>
<p>数字信号有多进制和二进制之分，但码元速率与进制无关，只与码元长度T有关。</p>
<h4 id="2-信息传输速率："><a href="#2-信息传输速率：" class="headerlink" title="2.信息传输速率："></a>2.信息传输速率：</h4><p>表示单位时间内数字通信系统传输的二进制码元个数。（即比特数）。</p>
<p>单位比特&#x2F;秒（b&#x2F;s）.</p>
<h4 id="二者关系："><a href="#二者关系：" class="headerlink" title="二者关系："></a>二者关系：</h4><p>一个码元携带n bit信息量，则M Baud的码元传输速率所对应的信息传输速率为M*n bit&#x2F;s。</p>
<h3 id="带宽："><a href="#带宽：" class="headerlink" title="带宽："></a>带宽：</h3><h4 id="1-模拟信号系统中："><a href="#1-模拟信号系统中：" class="headerlink" title="1.模拟信号系统中："></a>1.模拟信号系统中：</h4><p>当输入的信号频率最高或最低到一定程度，使系统的输出功率称为输入功率的一半时，最高频率和最低频率之间的差值就是系统的通频带宽。单位：赫兹（Hz）</p>
<h4 id="2-数字设备中："><a href="#2-数字设备中：" class="headerlink" title="2.数字设备中："></a>2.数字设备中：</h4><p>单位时间内从网络的一点到另一点，所能通过的最高数据率。</p>
<p>单位：比特每秒(bps).（b&#x2F;s）</p>
<p>知识</p>
<h2 id="相关概念-1"><a href="#相关概念-1" class="headerlink" title="相关概念"></a>相关概念</h2><h3 id="数据：-1"><a href="#数据：-1" class="headerlink" title="数据："></a>数据：</h3><p>传送信息的实体，通常是有意义的符号序列。</p>
<h3 id="信号：-1"><a href="#信号：-1" class="headerlink" title="信号："></a>信号：</h3><p>数据的电气&#x2F;电磁表现，是数据在传输过程中的存在形式。</p>
<p>数字信号&#x2F;离散信号：</p>
<p>代表消息的参数取值是离散的。</p>
<p>模拟信号&#x2F;连续信号：</p>
<p>代表消息的取值参数是连续的。</p>
<h3 id="信源：-1"><a href="#信源：-1" class="headerlink" title="信源："></a>信源：</h3><p>产生和发送数据的源头</p>
<h3 id="信宿：-1"><a href="#信宿：-1" class="headerlink" title="信宿："></a>信宿：</h3><p>接收数据的终点</p>
<h3 id="信道：-1"><a href="#信道：-1" class="headerlink" title="信道："></a>信道：</h3><p>信号的传输媒介。一般用来表示向某一个方向传送信息的介质，因此一条通信线路往往包含一条发送信道和一条接收信道。</p>
<p>分类和组成：</p>
<p><img src="/../TyporaImage/image-20240606214604220.png" alt="image-20240606214604220"></p>
<h3 id="三种通信方式：-1"><a href="#三种通信方式：-1" class="headerlink" title="三种通信方式："></a>三种通信方式：</h3><p>1.单工通信</p>
<p>只有一个方向的通信，仅需要一条信道。</p>
<p>2.半双工通信</p>
<p>通信的双方都可以发送或者接受信息，但是任何一方都不能同时发送和接收，需要两条信道。</p>
<p>3.全双工通信</p>
<p>通信的双方都可以同时发送或者接受信息，需要两条信道。</p>
<h3 id="数据传输方式-1"><a href="#数据传输方式-1" class="headerlink" title="数据传输方式:"></a>数据传输方式:</h3><p>1.串行传输：</p>
<p>将表示一个字符的8个二进制数按由低到高的顺序依次发送。</p>
<p>速度慢，费用低，适合远距离。</p>
<p><img src="/../TyporaImage/image-20240606211417955.png" alt="image-20240606211417955"></p>
<p>2.并行传输</p>
<p>将表示一个字符的8个 二进制数同时通过8条信道发送。</p>
<p><img src="/../TyporaImage/image-20240606211423280.png" alt="image-20240606211423280"></p>
<h3 id="码元：-1"><a href="#码元：-1" class="headerlink" title="码元："></a>码元：</h3><p>指用一个<strong>固定时长</strong>的<strong>信号波形</strong>（数字脉冲），代表了不同离散数值的基本波形，是数字通信中数字信号的计量单位，这个时长内的信号称为K进制码元，而该时长称为码元宽度。当码元的离散状态有K个时，码元为K进制码元。</p>
<p>1码元可以携带多个比特的信息量。</p>
<h3 id="数字通信系统数据传输速率的两种表示方法：-1"><a href="#数字通信系统数据传输速率的两种表示方法：-1" class="headerlink" title="数字通信系统数据传输速率的两种表示方法："></a>数字通信系统数据传输速率的两种表示方法：</h3><h4 id="1-码元传输速率：-1"><a href="#1-码元传输速率：-1" class="headerlink" title="1.码元传输速率："></a>1.码元传输速率：</h4><p>表示单位时间内数字通信系统所传输码元的个数。（也可以称为脉冲个数或信号变化次数），单位是波特（Baud）。1波特表示数字通信系统每秒传输一个码元。</p>
<p>数字信号有多进制和二进制之分，但码元速率与进制无关，只与码元长度T有关。</p>
<h4 id="2-信息传输速率：-1"><a href="#2-信息传输速率：-1" class="headerlink" title="2.信息传输速率："></a>2.信息传输速率：</h4><p>表示单位时间内数字通信系统传输的二进制码元个数。（即比特数）。</p>
<p>单位比特&#x2F;秒（b&#x2F;s）.</p>
<h4 id="二者关系：-1"><a href="#二者关系：-1" class="headerlink" title="二者关系："></a>二者关系：</h4><p>一个码元携带n bit信息量，则M Baud的码元传输速率所对应的信息传输速率为M*n bit&#x2F;s。</p>
<h3 id="带宽：-1"><a href="#带宽：-1" class="headerlink" title="带宽："></a>带宽：</h3><h4 id="1-模拟信号系统中：-1"><a href="#1-模拟信号系统中：-1" class="headerlink" title="1.模拟信号系统中："></a>1.模拟信号系统中：</h4><p>当输入的信号频率最高或最低到一定程度，使系统的输出功率称为输入功率的一半时，最高频率和最低频率之间的差值就是系统的通频带宽。单位：赫兹（Hz）</p>
<h4 id="2-数字设备中：-1"><a href="#2-数字设备中：-1" class="headerlink" title="2.数字设备中："></a>2.数字设备中：</h4><p>单位时间内从网络的一点到另一点，所能通过的最高数据率。</p>
<p>单位：比特每秒(bps).（b&#x2F;s）# 数据通信基础知识</p>
<h2 id="相关概念-2"><a href="#相关概念-2" class="headerlink" title="相关概念"></a>相关概念</h2><h3 id="数据：-2"><a href="#数据：-2" class="headerlink" title="数据："></a>数据：</h3><p>传送信息的实体，通常是有意义的符号序列。</p>
<h3 id="信号：-2"><a href="#信号：-2" class="headerlink" title="信号："></a>信号：</h3><p>数据的电气&#x2F;电磁表现，是数据在传输过程中的存在形式。</p>
<p>数字信号&#x2F;离散信号：</p>
<p>代表消息的参数取值是离散的。</p>
<p>模拟信号&#x2F;连续信号：</p>
<p>代表消息的取值参数是连续的。</p>
<h3 id="信源：-2"><a href="#信源：-2" class="headerlink" title="信源："></a>信源：</h3><p>产生和发送数据的源头</p>
<h3 id="信宿：-2"><a href="#信宿：-2" class="headerlink" title="信宿："></a>信宿：</h3><p>接收数据的终点</p>
<h3 id="信道：-2"><a href="#信道：-2" class="headerlink" title="信道："></a>信道：</h3><p>信号的传输媒介。一般用来表示向某一个方向传送信息的介质，因此一条通信线路往往包含一条发送信道和一条接收信道。</p>
<p>分类和组成：</p>
<p><img src="/../TyporaImage/image-20240606214604220.png" alt="image-20240606214604220"></p>
<h3 id="三种通信方式：-2"><a href="#三种通信方式：-2" class="headerlink" title="三种通信方式："></a>三种通信方式：</h3><p>1.单工通信</p>
<p>只有一个方向的通信，仅需要一条信道。</p>
<p>2.半双工通信</p>
<p>通信的双方都可以发送或者接受信息，但是任何一方都不能同时发送和接收，需要两条信道。</p>
<p>3.全双工通信</p>
<p>通信的双方都可以同时发送或者接受信息，需要两条信道。</p>
<h3 id="数据传输方式-2"><a href="#数据传输方式-2" class="headerlink" title="数据传输方式:"></a>数据传输方式:</h3><p>1.串行传输：</p>
<p>将表示一个字符的8个二进制数按由低到高的顺序依次发送。</p>
<p>速度慢，费用低，适合远距离。</p>
<p><img src="/../TyporaImage/image-20240606211417955.png" alt="image-20240606211417955"></p>
<p>2.并行传输</p>
<p>将表示一个字符的8个 二进制数同时通过8条信道发送。</p>
<p><img src="/../TyporaImage/image-20240606211423280.png" alt="image-20240606211423280"></p>
<h3 id="码元：-2"><a href="#码元：-2" class="headerlink" title="码元："></a>码元：</h3><p>指用一个<strong>固定时长</strong>的<strong>信号波形</strong>（数字脉冲），代表了不同离散数值的基本波形，是数字通信中数字信号的计量单位，这个时长内的信号称为K进制码元，而该时长称为码元宽度。当码元的离散状态有K个时，码元为K进制码元。</p>
<p>1码元可以携带多个比特的信息量。</p>
<h3 id="数字通信系统数据传输速率的两种表示方法：-2"><a href="#数字通信系统数据传输速率的两种表示方法：-2" class="headerlink" title="数字通信系统数据传输速率的两种表示方法："></a>数字通信系统数据传输速率的两种表示方法：</h3><h4 id="1-码元传输速率：-2"><a href="#1-码元传输速率：-2" class="headerlink" title="1.码元传输速率："></a>1.码元传输速率：</h4><p>表示单位时间内数字通信系统所传输码元的个数。（也可以称为脉冲个数或信号变化次数），单位是波特（Baud）。1波特表示数字通信系统每秒传输一个码元。</p>
<p>数字信号有多进制和二进制之分，但码元速率与进制无关，只与码元长度T有关。</p>
<h4 id="2-信息传输速率：-2"><a href="#2-信息传输速率：-2" class="headerlink" title="2.信息传输速率："></a>2.信息传输速率：</h4><p>表示单位时间内数字通信系统传输的二进制码元个数。（即比特数）。</p>
<p>单位比特&#x2F;秒（b&#x2F;s）.</p>
<h4 id="二者关系：-2"><a href="#二者关系：-2" class="headerlink" title="二者关系："></a>二者关系：</h4><p>一个码元携带n bit信息量，则M Baud的码元传输速率所对应的信息传输速率为M*n bit&#x2F;s。</p>
<h3 id="带宽：-2"><a href="#带宽：-2" class="headerlink" title="带宽："></a>带宽：</h3><h4 id="1-模拟信号系统中：-2"><a href="#1-模拟信号系统中：-2" class="headerlink" title="1.模拟信号系统中："></a>1.模拟信号系统中：</h4><p>当输入的信号频率最高或最低到一定程度，使系统的输出功率称为输入功率的一半时，最高频率和最低频率之间的差值就是系统的通频带宽。单位：赫兹（Hz）</p>
<h4 id="2-数字设备中：-2"><a href="#2-数字设备中：-2" class="headerlink" title="2.数字设备中："></a>2.数字设备中：</h4><p>单位时间内从网络的一点到另一点，所能通过的最高数据率。</p>
<p>单位：比特每秒(bps).（b&#x2F;s）</p>
<p>知识</p>
<h2 id="相关概念-3"><a href="#相关概念-3" class="headerlink" title="相关概念"></a>相关概念</h2><h3 id="数据：-3"><a href="#数据：-3" class="headerlink" title="数据："></a>数据：</h3><p>传送信息的实体，通常是有意义的符号序列。</p>
<h3 id="信号：-3"><a href="#信号：-3" class="headerlink" title="信号："></a>信号：</h3><p>数据的电气&#x2F;电磁表现，是数据在传输过程中的存在形式。</p>
<p>数字信号&#x2F;离散信号：</p>
<p>代表消息的参数取值是离散的。</p>
<p>模拟信号&#x2F;连续信号：</p>
<p>代表消息的取值参数是连续的。</p>
<h3 id="信源：-3"><a href="#信源：-3" class="headerlink" title="信源："></a>信源：</h3><p>产生和发送数据的源头</p>
<h3 id="信宿：-3"><a href="#信宿：-3" class="headerlink" title="信宿："></a>信宿：</h3><p>接收数据的终点</p>
<h3 id="信道：-3"><a href="#信道：-3" class="headerlink" title="信道："></a>信道：</h3><p>信号的传输媒介。一般用来表示向某一个方向传送信息的介质，因此一条通信线路往往包含一条发送信道和一条接收信道。</p>
<p>分类和组成：</p>
<p><img src="/../TyporaImage/image-20240606214604220.png" alt="image-20240606214604220"></p>
<h3 id="三种通信方式：-3"><a href="#三种通信方式：-3" class="headerlink" title="三种通信方式："></a>三种通信方式：</h3><p>1.单工通信</p>
<p>只有一个方向的通信，仅需要一条信道。</p>
<p>2.半双工通信</p>
<p>通信的双方都可以发送或者接受信息，但是任何一方都不能同时发送和接收，需要两条信道。</p>
<p>3.全双工通信</p>
<p>通信的双方都可以同时发送或者接受信息，需要两条信道。</p>
<h3 id="数据传输方式-3"><a href="#数据传输方式-3" class="headerlink" title="数据传输方式:"></a>数据传输方式:</h3><p>1.串行传输：</p>
<p>将表示一个字符的8个二进制数按由低到高的顺序依次发送。</p>
<p>速度慢，费用低，适合远距离。</p>
<p><img src="/../TyporaImage/image-20240606211417955.png" alt="image-20240606211417955"></p>
<p>2.并行传输</p>
<p>将表示一个字符的8个 二进制数同时通过8条信道发送。</p>
<p><img src="/../TyporaImage/image-20240606211423280.png" alt="image-20240606211423280"></p>
<h3 id="码元：-3"><a href="#码元：-3" class="headerlink" title="码元："></a>码元：</h3><p>指用一个<strong>固定时长</strong>的<strong>信号波形</strong>（数字脉冲），代表了不同离散数值的基本波形，是数字通信中数字信号的计量单位，这个时长内的信号称为K进制码元，而该时长称为码元宽度。当码元的离散状态有K个时，码元为K进制码元。</p>
<p>1码元可以携带多个比特的信息量。</p>
<h3 id="数字通信系统数据传输速率的两种表示方法：-3"><a href="#数字通信系统数据传输速率的两种表示方法：-3" class="headerlink" title="数字通信系统数据传输速率的两种表示方法："></a>数字通信系统数据传输速率的两种表示方法：</h3><h4 id="1-码元传输速率：-3"><a href="#1-码元传输速率：-3" class="headerlink" title="1.码元传输速率："></a>1.码元传输速率：</h4><p>表示单位时间内数字通信系统所传输码元的个数。（也可以称为脉冲个数或信号变化次数），单位是波特（Baud）。1波特表示数字通信系统每秒传输一个码元。</p>
<p>数字信号有多进制和二进制之分，但码元速率与进制无关，只与码元长度T有关。</p>
<h4 id="2-信息传输速率：-3"><a href="#2-信息传输速率：-3" class="headerlink" title="2.信息传输速率："></a>2.信息传输速率：</h4><p>表示单位时间内数字通信系统传输的二进制码元个数。（即比特数）。</p>
<p>单位比特&#x2F;秒（b&#x2F;s）.</p>
<h4 id="二者关系：-3"><a href="#二者关系：-3" class="headerlink" title="二者关系："></a>二者关系：</h4><p>一个码元携带n bit信息量，则M Baud的码元传输速率所对应的信息传输速率为M*n bit&#x2F;s。</p>
<h3 id="带宽：-3"><a href="#带宽：-3" class="headerlink" title="带宽："></a>带宽：</h3><h4 id="1-模拟信号系统中：-3"><a href="#1-模拟信号系统中：-3" class="headerlink" title="1.模拟信号系统中："></a>1.模拟信号系统中：</h4><p>当输入的信号频率最高或最低到一定程度，使系统的输出功率称为输入功率的一半时，最高频率和最低频率之间的差值就是系统的通频带宽。单位：赫兹（Hz）</p>
<h4 id="2-数字设备中：-3"><a href="#2-数字设备中：-3" class="headerlink" title="2.数字设备中："></a>2.数字设备中：</h4><p>单位时间内从网络的一点到另一点，所能通过的最高数据率。</p>
<p>单位：比特每秒(bps).（b&#x2F;s）</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>数据链路层概念</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h1 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h1><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>1.为网络层提供服务。无确认、无连接，有确认无连接，有确认面向连接服务。</p>
<p>2.链路管理</p>
<p>3.封装成帧和透明传输</p>
<p>4.流量控制</p>
<p>5.差错控制</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-结点："><a href="#1-结点：" class="headerlink" title="1.结点："></a>1.结点：</h3><p>主机、路由器</p>
<h3 id="2-链路："><a href="#2-链路：" class="headerlink" title="2.链路："></a>2.链路：</h3><p>网络中两个结点之间的物理通道。链路的传输介质主要有双绞线、光纤和微波。</p>
<p>分类和组成：</p>
<p>无线链路、有线链路。</p>
<h3 id="3-数据链路层："><a href="#3-数据链路层：" class="headerlink" title="3.数据链路层："></a>3.数据链路层：</h3><p>网络中两个结点之间的逻辑通道，把实现控制数据传输协议的硬件和软件加到链路上就构成数据链路。</p>
<h3 id="4-帧："><a href="#4-帧：" class="headerlink" title="4.帧："></a>4.帧：</h3><p>数据链路层的协议数据单元，封装网络层数据报。</p>
<p>路层</p>
<h2 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h2><p>1.为网络层提供服务。无确认、无连接，有确认无连接，有确认面向连接服务。</p>
<p>2.链路管理</p>
<p>3.封装成帧和透明传输</p>
<p>4.流量控制</p>
<p>5.差错控制</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-结点：-1"><a href="#1-结点：-1" class="headerlink" title="1.结点："></a>1.结点：</h3><p>主机、路由器</p>
<h3 id="2-链路：-1"><a href="#2-链路：-1" class="headerlink" title="2.链路："></a>2.链路：</h3><p>网络中两个结点之间的物理通道。链路的传输介质主要有双绞线、光纤和微波。</p>
<p>分类和组成：</p>
<p>无线链路、有线链路。</p>
<h3 id="3-数据链路层：-1"><a href="#3-数据链路层：-1" class="headerlink" title="3.数据链路层："></a>3.数据链路层：</h3><p>网络中两个结点之间的逻辑通道，把实现控制数据传输协议的硬件和软件加到链路上就构成数据链路。</p>
<h3 id="4-帧：-1"><a href="#4-帧：-1" class="headerlink" title="4.帧："></a>4.帧：</h3><p>数据链路层的协议数据单元，封装网络层数据报。# 数据链路层</p>
<h2 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h2><p>1.为网络层提供服务。无确认、无连接，有确认无连接，有确认面向连接服务。</p>
<p>2.链路管理</p>
<p>3.封装成帧和透明传输</p>
<p>4.流量控制</p>
<p>5.差错控制</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-结点：-2"><a href="#1-结点：-2" class="headerlink" title="1.结点："></a>1.结点：</h3><p>主机、路由器</p>
<h3 id="2-链路：-2"><a href="#2-链路：-2" class="headerlink" title="2.链路："></a>2.链路：</h3><p>网络中两个结点之间的物理通道。链路的传输介质主要有双绞线、光纤和微波。</p>
<p>分类和组成：</p>
<p>无线链路、有线链路。</p>
<h3 id="3-数据链路层：-2"><a href="#3-数据链路层：-2" class="headerlink" title="3.数据链路层："></a>3.数据链路层：</h3><p>网络中两个结点之间的逻辑通道，把实现控制数据传输协议的硬件和软件加到链路上就构成数据链路。</p>
<h3 id="4-帧：-2"><a href="#4-帧：-2" class="headerlink" title="4.帧："></a>4.帧：</h3><p>数据链路层的协议数据单元，封装网络层数据报。</p>
<p>路层</p>
<h2 id="作用-3"><a href="#作用-3" class="headerlink" title="作用"></a>作用</h2><p>1.为网络层提供服务。无确认、无连接，有确认无连接，有确认面向连接服务。</p>
<p>2.链路管理</p>
<p>3.封装成帧和透明传输</p>
<p>4.流量控制</p>
<p>5.差错控制</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-结点：-3"><a href="#1-结点：-3" class="headerlink" title="1.结点："></a>1.结点：</h3><p>主机、路由器</p>
<h3 id="2-链路：-3"><a href="#2-链路：-3" class="headerlink" title="2.链路："></a>2.链路：</h3><p>网络中两个结点之间的物理通道。链路的传输介质主要有双绞线、光纤和微波。</p>
<p>分类和组成：</p>
<p>无线链路、有线链路。</p>
<h3 id="3-数据链路层：-3"><a href="#3-数据链路层：-3" class="headerlink" title="3.数据链路层："></a>3.数据链路层：</h3><p>网络中两个结点之间的逻辑通道，把实现控制数据传输协议的硬件和软件加到链路上就构成数据链路。</p>
<h3 id="4-帧：-3"><a href="#4-帧：-3" class="headerlink" title="4.帧："></a>4.帧：</h3><p>数据链路层的协议数据单元，封装网络层数据报。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>文件传输协议FTP</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AEFTP/</url>
    <content><![CDATA[<h1 id="文件传输协议FTP"><a href="#文件传输协议FTP" class="headerlink" title="文件传输协议FTP"></a>文件传输协议FTP</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>文件传输协议（File Transfer Protocol，FTP）是一种用于在网络上进行文件传输的标准网络协议。它允许用户通过网络从一台计算机向另一台计算机传输文件。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.客户端</p>
<p>发起文件传输请求的设备或软件。</p>
<p>2.服务器</p>
<p>存储文件并提供文件传输服务的设备或软件。</p>
<p>3.控制连接</p>
<p>用于传输命令和响应的连接。</p>
<p>4.数据连接</p>
<p>用于传输文件数据的连接。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>FTP使用客户端-服务器模型，客户端通过控制连接发送命令，服务器响应命令并通过数据连接传输文件。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>FTP可以分为主动模式和被动模式。主动模式中，服务器主动建立数据连接到客户端；被动模式中，客户端主动建立数据连接到服务器。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.可靠性：FTP提供可靠的文件传输，确保文件完整性和正确性。<br>2.安全性：FTP支持多种安全机制，如SSL&#x2F;TLS加密，以保护数据传输的安全性。<br>3.灵活性：FTP支持多种文件类型和格式，适用于不同类型的文件传输。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623150326759.png" alt="image-20240623150326759"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.FTP传输模式：</p>
<p>①二进制模式：</p>
<p>BInary模式，以二进制序列传输数据。</p>
<p>②文本模式：</p>
<p>ASCII模式，以文本序列传输数据。TP</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>文件传输协议（File Transfer Protocol，FTP）是一种用于在网络上进行文件传输的标准网络协议。它允许用户通过网络从一台计算机向另一台计算机传输文件。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.客户端</p>
<p>发起文件传输请求的设备或软件。</p>
<p>2.服务器</p>
<p>存储文件并提供文件传输服务的设备或软件。</p>
<p>3.控制连接</p>
<p>用于传输命令和响应的连接。</p>
<p>4.数据连接</p>
<p>用于传输文件数据的连接。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>FTP使用客户端-服务器模型，客户端通过控制连接发送命令，服务器响应命令并通过数据连接传输文件。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>FTP可以分为主动模式和被动模式。主动模式中，服务器主动建立数据连接到客户端；被动模式中，客户端主动建立数据连接到服务器。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.可靠性：FTP提供可靠的文件传输，确保文件完整性和正确性。<br>2.安全性：FTP支持多种安全机制，如SSL&#x2F;TLS加密，以保护数据传输的安全性。<br>3.灵活性：FTP支持多种文件类型和格式，适用于不同类型的文件传输。</p>
<h2 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623150326759.png" alt="image-20240623150326759"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.FTP传输模式：</p>
<p>①二进制模式：</p>
<p>BInary模式，以二进制序列传输数据。</p>
<p>②文本模式：</p>
<p>ASCII模式，以文本序列传输数据。# 文件传输协议FTP</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>文件传输协议（File Transfer Protocol，FTP）是一种用于在网络上进行文件传输的标准网络协议。它允许用户通过网络从一台计算机向另一台计算机传输文件。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.客户端</p>
<p>发起文件传输请求的设备或软件。</p>
<p>2.服务器</p>
<p>存储文件并提供文件传输服务的设备或软件。</p>
<p>3.控制连接</p>
<p>用于传输命令和响应的连接。</p>
<p>4.数据连接</p>
<p>用于传输文件数据的连接。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>FTP使用客户端-服务器模型，客户端通过控制连接发送命令，服务器响应命令并通过数据连接传输文件。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>FTP可以分为主动模式和被动模式。主动模式中，服务器主动建立数据连接到客户端；被动模式中，客户端主动建立数据连接到服务器。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.可靠性：FTP提供可靠的文件传输，确保文件完整性和正确性。<br>2.安全性：FTP支持多种安全机制，如SSL&#x2F;TLS加密，以保护数据传输的安全性。<br>3.灵活性：FTP支持多种文件类型和格式，适用于不同类型的文件传输。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623150326759.png" alt="image-20240623150326759"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.FTP传输模式：</p>
<p>①二进制模式：</p>
<p>BInary模式，以二进制序列传输数据。</p>
<p>②文本模式：</p>
<p>ASCII模式，以文本序列传输数据。TP</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>文件传输协议（File Transfer Protocol，FTP）是一种用于在网络上进行文件传输的标准网络协议。它允许用户通过网络从一台计算机向另一台计算机传输文件。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.客户端</p>
<p>发起文件传输请求的设备或软件。</p>
<p>2.服务器</p>
<p>存储文件并提供文件传输服务的设备或软件。</p>
<p>3.控制连接</p>
<p>用于传输命令和响应的连接。</p>
<p>4.数据连接</p>
<p>用于传输文件数据的连接。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>FTP使用客户端-服务器模型，客户端通过控制连接发送命令，服务器响应命令并通过数据连接传输文件。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>FTP可以分为主动模式和被动模式。主动模式中，服务器主动建立数据连接到客户端；被动模式中，客户端主动建立数据连接到服务器。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.可靠性：FTP提供可靠的文件传输，确保文件完整性和正确性。<br>2.安全性：FTP支持多种安全机制，如SSL&#x2F;TLS加密，以保护数据传输的安全性。<br>3.灵活性：FTP支持多种文件类型和格式，适用于不同类型的文件传输。</p>
<h2 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623150326759.png" alt="image-20240623150326759"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.FTP传输模式：</p>
<p>①二进制模式：</p>
<p>BInary模式，以二进制序列传输数据。</p>
<p>②文本模式：</p>
<p>ASCII模式，以文本序列传输数据。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>无线局域网</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%97%A0%E7%BA%BF%E5%B1%80%E5%9F%9F%E7%BD%91/</url>
    <content><![CDATA[<h1 id="无线局域网"><a href="#无线局域网" class="headerlink" title="无线局域网"></a>无线局域网</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>无线局域网（Wireless Local Area Network，简称WLAN）是一种不使用物理电缆，而是通过无线电波进行数据传输的计算机网络。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.IEEE802.11标准</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>按照有无固定设置分类：</p>
<p>1.无线局域网</p>
<p>2.无线局域网的自组织网络</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.MAC帧头格式</p>
<p><img src="/../TyporaImage/image-20240617215008795.png" alt="image-20240617215008795"></p>
<p><img src="/../TyporaImage/image-20240617215017063.png" alt="image-20240617215017063">域网</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>无线局域网（Wireless Local Area Network，简称WLAN）是一种不使用物理电缆，而是通过无线电波进行数据传输的计算机网络。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.IEEE802.11标准</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>按照有无固定设置分类：</p>
<p>1.无线局域网</p>
<p>2.无线局域网的自组织网络</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.MAC帧头格式</p>
<p><img src="/../TyporaImage/image-20240617215008795.png" alt="image-20240617215008795"></p>
<p><img src="/../TyporaImage/image-20240617215017063.png" alt="image-20240617215017063"># 无线局域网</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>无线局域网（Wireless Local Area Network，简称WLAN）是一种不使用物理电缆，而是通过无线电波进行数据传输的计算机网络。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.IEEE802.11标准</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>按照有无固定设置分类：</p>
<p>1.无线局域网</p>
<p>2.无线局域网的自组织网络</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.MAC帧头格式</p>
<p><img src="/../TyporaImage/image-20240617215008795.png" alt="image-20240617215008795"></p>
<p><img src="/../TyporaImage/image-20240617215017063.png" alt="image-20240617215017063">域网</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>无线局域网（Wireless Local Area Network，简称WLAN）是一种不使用物理电缆，而是通过无线电波进行数据传输的计算机网络。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.IEEE802.11标准</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>按照有无固定设置分类：</p>
<p>1.无线局域网</p>
<p>2.无线局域网的自组织网络</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.MAC帧头格式</p>
<p><img src="/../TyporaImage/image-20240617215008795.png" alt="image-20240617215008795"></p>
<p><img src="/../TyporaImage/image-20240617215017063.png" alt="image-20240617215017063"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>标准化工作</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%A0%87%E5%87%86%E5%8C%96%E5%B7%A5%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="标准化工作及相关组织"><a href="#标准化工作及相关组织" class="headerlink" title="标准化工作及相关组织"></a>标准化工作及相关组织</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.法定标准：由权威机构制定的正式的、合法的标准。</p>
<p>2.事实标准：由于公司的产品在竞争中占据了主流，时间长了，这些产品和协议和技术就成了标准。</p>
<h2 id="制定过程"><a href="#制定过程" class="headerlink" title="制定过程"></a>制定过程</h2><p><img src="/../TyporaImage/image-20240602210358099.png" alt="image-20240602210358099"></p>
<p>现在1.2.4步就可以了。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="标准化工作的相关组织"><a href="#标准化工作的相关组织" class="headerlink" title="标准化工作的相关组织"></a>标准化工作的相关组织</h3><p><img src="/../TyporaImage/image-20240602210517148.png" alt="image-20240602210517148">组织</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.法定标准：由权威机构制定的正式的、合法的标准。</p>
<p>2.事实标准：由于公司的产品在竞争中占据了主流，时间长了，这些产品和协议和技术就成了标准。</p>
<h2 id="制定过程-1"><a href="#制定过程-1" class="headerlink" title="制定过程"></a>制定过程</h2><p><img src="/../TyporaImage/image-20240602210358099.png" alt="image-20240602210358099"></p>
<p>现在1.2.4步就可以了。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="标准化工作的相关组织-1"><a href="#标准化工作的相关组织-1" class="headerlink" title="标准化工作的相关组织"></a>标准化工作的相关组织</h3><p><img src="/../TyporaImage/image-20240602210517148.png" alt="image-20240602210517148"># 标准化工作及相关组织</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.法定标准：由权威机构制定的正式的、合法的标准。</p>
<p>2.事实标准：由于公司的产品在竞争中占据了主流，时间长了，这些产品和协议和技术就成了标准。</p>
<h2 id="制定过程-2"><a href="#制定过程-2" class="headerlink" title="制定过程"></a>制定过程</h2><p><img src="/../TyporaImage/image-20240602210358099.png" alt="image-20240602210358099"></p>
<p>现在1.2.4步就可以了。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="标准化工作的相关组织-2"><a href="#标准化工作的相关组织-2" class="headerlink" title="标准化工作的相关组织"></a>标准化工作的相关组织</h3><p><img src="/../TyporaImage/image-20240602210517148.png" alt="image-20240602210517148">组织</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.法定标准：由权威机构制定的正式的、合法的标准。</p>
<p>2.事实标准：由于公司的产品在竞争中占据了主流，时间长了，这些产品和协议和技术就成了标准。</p>
<h2 id="制定过程-3"><a href="#制定过程-3" class="headerlink" title="制定过程"></a>制定过程</h2><p><img src="/../TyporaImage/image-20240602210358099.png" alt="image-20240602210358099"></p>
<p>现在1.2.4步就可以了。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="标准化工作的相关组织-3"><a href="#标准化工作的相关组织-3" class="headerlink" title="标准化工作的相关组织"></a>标准化工作的相关组织</h3><p><img src="/../TyporaImage/image-20240602210517148.png" alt="image-20240602210517148"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>无分类编址CIDR</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%97%A0%E5%88%86%E7%B1%BB%E7%BC%96%E5%9D%80CIDR/</url>
    <content><![CDATA[<h1 id="无分类编址CIDR"><a href="#无分类编址CIDR" class="headerlink" title="无分类编址CIDR"></a>无分类编址CIDR</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>无类别域间路由（CIDR，Classless Inter-Domain Routing）是一种IP地址分配和路由方法，用于替代传统的基于类的IP地址分配方法。CIDR通过灵活的子网掩码和地址前缀长度，提供更高效和精细的IP地址管理和路由。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-IP地址前缀"><a href="#1-IP地址前缀" class="headerlink" title="1.IP地址前缀"></a>1.IP地址前缀</h3><p>CIDR地址由一个IP地址和一个斜杠后跟的前缀长度组成。例如，192.168.1.0&#x2F;24，其中&#x2F;24表示前缀长度为24位。</p>
<h3 id="2-前缀长度"><a href="#2-前缀长度" class="headerlink" title="2.前缀长度"></a>2.前缀长度</h3><p>表示网络部分的位数，范围是0到32，对于IPv4地址。</p>
<h3 id="3-子网掩码"><a href="#3-子网掩码" class="headerlink" title="3.子网掩码"></a>3.子网掩码</h3><p>由前缀长度决定的二进制数，用于划分网络部分和主机部分。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-CIDR表示法"><a href="#1-CIDR表示法" class="headerlink" title="1.CIDR表示法"></a>1.CIDR表示法</h3><p>IP地址&#x2F;前缀长度，例如192.168.1.0&#x2F;24。</p>
<h3 id="2-二进制表示"><a href="#2-二进制表示" class="headerlink" title="2.二进制表示"></a>2.二进制表示</h3><p>将前缀长度转化为二进制子网掩码，例如&#x2F;24对应的子网掩码是255.255.255.0。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.构成超网</p>
<p><img src="/../TyporaImage/image-20240622200258687.png" alt="image-20240622200258687"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-最长前缀匹配"><a href="#1-最长前缀匹配" class="headerlink" title="1.最长前缀匹配"></a>1.最长前缀匹配</h3><p>最长前缀匹配（Longest Prefix Match, LPM）是一种路由选择算法，用于在路由器中选择最合适的路由。当一个数据包到达路由器时，路由器会查找其路由表，并选择与目的地址匹配的最长前缀（子网掩码最长）的路由条目，从而决定数据包的转发路径。</p>
<h3 id="2-路由表"><a href="#2-路由表" class="headerlink" title="2.路由表"></a>2.路由表</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p>路由表（Routing Table）是网络设备（如路由器和主机）中保存的一个数据结构，用于存储网络目的地的信息和转发数据包所需的路径。它包含网络地址、子网掩码、下一跳地址和接口等信息。</p>
<h4 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h4><p>1.目的网络</p>
<p>目标网络的IP地址前缀。</p>
<p>2.子网掩码</p>
<p>用于确定目标网络的范围。</p>
<p>3.下一跳地址</p>
<p>将数据包转发到下一个网络节点的IP地址。</p>
<p>4.接口</p>
<p>通过哪个网络接口发送数据包。</p>
<h4 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h4><h5 id="1-条目"><a href="#1-条目" class="headerlink" title="1.条目"></a>1.条目</h5><p>每个路由表包含多个条目，每个条目描述一条路由。</p>
<h5 id="2-CIDR表示法"><a href="#2-CIDR表示法" class="headerlink" title="2.CIDR表示法"></a>2.CIDR表示法</h5><p>使用CIDR表示网络前缀和掩码，如192.168.1.0&#x2F;24。</p>
<h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><h5 id="1-静态路由"><a href="#1-静态路由" class="headerlink" title="1.静态路由"></a>1.静态路由</h5><p>手动配置的固定路由条目。</p>
<h5 id="2-动态路由"><a href="#2-动态路由" class="headerlink" title="2.动态路由"></a>2.动态路由</h5><p>通过路由协议动态学习和更新的路由条目。</p>
<h4 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h4><p>1.动态性：可以通过路由协议自动更新。<br>2.精确性：包含详细的网络路径信息。<br>3.高效性：通过快速查找确定数据包的转发路径。</p>
<h3 id="3-转发表"><a href="#3-转发表" class="headerlink" title="3.转发表"></a>3.转发表</h3><h4 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h4><p>转发表（Forwarding Table）是网络设备中用于数据包转发的一个数据结构。它根据路由表中的信息构建，包含具体的转发路径和接口信息，用于快速决定数据包的转发路径。</p>
<h4 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h4><h5 id="1-目的地址前缀"><a href="#1-目的地址前缀" class="headerlink" title="1.目的地址前缀"></a>1.目的地址前缀</h5><p>与路由表中的前缀一致。</p>
<h5 id="2-下一跳地址"><a href="#2-下一跳地址" class="headerlink" title="2.下一跳地址"></a>2.下一跳地址</h5><p>数据包应转发到的下一个节点。</p>
<h5 id="3-接口"><a href="#3-接口" class="headerlink" title="3.接口"></a>3.接口</h5><p>具体的物理或虚拟网络接口。</p>
<h4 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h4><h5 id="1-条目-1"><a href="#1-条目-1" class="headerlink" title="1.条目"></a>1.条目</h5><p>每个转发表包含多个条目，每个条目描述一个转发路径。</p>
<h5 id="2-直接映射"><a href="#2-直接映射" class="headerlink" title="2.直接映射"></a>2.直接映射</h5><p>通过目的地址快速查找到具体的转发路径。</p>
<h4 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h4><p>1.基于硬件</p>
<p>存储在网络设备的硬件中，提供高速转发。</p>
<p>2.基于软件</p>
<p>存储在网络设备的软件中，灵活性高。</p>
<h4 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h4><p>1.高速性：提供快速的数据包转发能力。<br>2.实时性：实时更新，反映最新的网络状态。<br>3.高效性：简化查找过程，提高数据包处理效率。</p>
<h3 id="4-转发表和路由表之间的关系"><a href="#4-转发表和路由表之间的关系" class="headerlink" title="4.转发表和路由表之间的关系"></a>4.转发表和路由表之间的关系</h3><p>转发表是基于路由表生成的。路由表中包含了详细的路由信息，转发表从中提取必要的信息来构建具体的转发路径。DR</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>无类别域间路由（CIDR，Classless Inter-Domain Routing）是一种IP地址分配和路由方法，用于替代传统的基于类的IP地址分配方法。CIDR通过灵活的子网掩码和地址前缀长度，提供更高效和精细的IP地址管理和路由。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-IP地址前缀-1"><a href="#1-IP地址前缀-1" class="headerlink" title="1.IP地址前缀"></a>1.IP地址前缀</h3><p>CIDR地址由一个IP地址和一个斜杠后跟的前缀长度组成。例如，192.168.1.0&#x2F;24，其中&#x2F;24表示前缀长度为24位。</p>
<h3 id="2-前缀长度-1"><a href="#2-前缀长度-1" class="headerlink" title="2.前缀长度"></a>2.前缀长度</h3><p>表示网络部分的位数，范围是0到32，对于IPv4地址。</p>
<h3 id="3-子网掩码-1"><a href="#3-子网掩码-1" class="headerlink" title="3.子网掩码"></a>3.子网掩码</h3><p>由前缀长度决定的二进制数，用于划分网络部分和主机部分。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-CIDR表示法-1"><a href="#1-CIDR表示法-1" class="headerlink" title="1.CIDR表示法"></a>1.CIDR表示法</h3><p>IP地址&#x2F;前缀长度，例如192.168.1.0&#x2F;24。</p>
<h3 id="2-二进制表示-1"><a href="#2-二进制表示-1" class="headerlink" title="2.二进制表示"></a>2.二进制表示</h3><p>将前缀长度转化为二进制子网掩码，例如&#x2F;24对应的子网掩码是255.255.255.0。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.构成超网</p>
<p><img src="/../TyporaImage/image-20240622200258687.png" alt="image-20240622200258687"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-最长前缀匹配-1"><a href="#1-最长前缀匹配-1" class="headerlink" title="1.最长前缀匹配"></a>1.最长前缀匹配</h3><p>最长前缀匹配（Longest Prefix Match, LPM）是一种路由选择算法，用于在路由器中选择最合适的路由。当一个数据包到达路由器时，路由器会查找其路由表，并选择与目的地址匹配的最长前缀（子网掩码最长）的路由条目，从而决定数据包的转发路径。</p>
<h3 id="2-路由表-1"><a href="#2-路由表-1" class="headerlink" title="2.路由表"></a>2.路由表</h3><h4 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h4><p>路由表（Routing Table）是网络设备（如路由器和主机）中保存的一个数据结构，用于存储网络目的地的信息和转发数据包所需的路径。它包含网络地址、子网掩码、下一跳地址和接口等信息。</p>
<h4 id="组成部分-4"><a href="#组成部分-4" class="headerlink" title="组成部分"></a>组成部分</h4><p>1.目的网络</p>
<p>目标网络的IP地址前缀。</p>
<p>2.子网掩码</p>
<p>用于确定目标网络的范围。</p>
<p>3.下一跳地址</p>
<p>将数据包转发到下一个网络节点的IP地址。</p>
<p>4.接口</p>
<p>通过哪个网络接口发送数据包。</p>
<h4 id="结构形式-4"><a href="#结构形式-4" class="headerlink" title="结构形式"></a>结构形式</h4><h5 id="1-条目-2"><a href="#1-条目-2" class="headerlink" title="1.条目"></a>1.条目</h5><p>每个路由表包含多个条目，每个条目描述一条路由。</p>
<h5 id="2-CIDR表示法-1"><a href="#2-CIDR表示法-1" class="headerlink" title="2.CIDR表示法"></a>2.CIDR表示法</h5><p>使用CIDR表示网络前缀和掩码，如192.168.1.0&#x2F;24。</p>
<h4 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h4><h5 id="1-静态路由-1"><a href="#1-静态路由-1" class="headerlink" title="1.静态路由"></a>1.静态路由</h5><p>手动配置的固定路由条目。</p>
<h5 id="2-动态路由-1"><a href="#2-动态路由-1" class="headerlink" title="2.动态路由"></a>2.动态路由</h5><p>通过路由协议动态学习和更新的路由条目。</p>
<h4 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h4><p>1.动态性：可以通过路由协议自动更新。<br>2.精确性：包含详细的网络路径信息。<br>3.高效性：通过快速查找确定数据包的转发路径。</p>
<h3 id="3-转发表-1"><a href="#3-转发表-1" class="headerlink" title="3.转发表"></a>3.转发表</h3><h4 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h4><p>转发表（Forwarding Table）是网络设备中用于数据包转发的一个数据结构。它根据路由表中的信息构建，包含具体的转发路径和接口信息，用于快速决定数据包的转发路径。</p>
<h4 id="组成部分-5"><a href="#组成部分-5" class="headerlink" title="组成部分"></a>组成部分</h4><h5 id="1-目的地址前缀-1"><a href="#1-目的地址前缀-1" class="headerlink" title="1.目的地址前缀"></a>1.目的地址前缀</h5><p>与路由表中的前缀一致。</p>
<h5 id="2-下一跳地址-1"><a href="#2-下一跳地址-1" class="headerlink" title="2.下一跳地址"></a>2.下一跳地址</h5><p>数据包应转发到的下一个节点。</p>
<h5 id="3-接口-1"><a href="#3-接口-1" class="headerlink" title="3.接口"></a>3.接口</h5><p>具体的物理或虚拟网络接口。</p>
<h4 id="结构形式-5"><a href="#结构形式-5" class="headerlink" title="结构形式"></a>结构形式</h4><h5 id="1-条目-3"><a href="#1-条目-3" class="headerlink" title="1.条目"></a>1.条目</h5><p>每个转发表包含多个条目，每个条目描述一个转发路径。</p>
<h5 id="2-直接映射-1"><a href="#2-直接映射-1" class="headerlink" title="2.直接映射"></a>2.直接映射</h5><p>通过目的地址快速查找到具体的转发路径。</p>
<h4 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h4><p>1.基于硬件</p>
<p>存储在网络设备的硬件中，提供高速转发。</p>
<p>2.基于软件</p>
<p>存储在网络设备的软件中，灵活性高。</p>
<h4 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h4><p>1.高速性：提供快速的数据包转发能力。<br>2.实时性：实时更新，反映最新的网络状态。<br>3.高效性：简化查找过程，提高数据包处理效率。</p>
<h3 id="4-转发表和路由表之间的关系-1"><a href="#4-转发表和路由表之间的关系-1" class="headerlink" title="4.转发表和路由表之间的关系"></a>4.转发表和路由表之间的关系</h3><p>转发表是基于路由表生成的。路由表中包含了详细的路由信息，转发表从中提取必要的信息来构建具体的转发路径。# 无分类编址CIDR</p>
<h2 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h2><p>无类别域间路由（CIDR，Classless Inter-Domain Routing）是一种IP地址分配和路由方法，用于替代传统的基于类的IP地址分配方法。CIDR通过灵活的子网掩码和地址前缀长度，提供更高效和精细的IP地址管理和路由。</p>
<h2 id="组成部分-6"><a href="#组成部分-6" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-IP地址前缀-2"><a href="#1-IP地址前缀-2" class="headerlink" title="1.IP地址前缀"></a>1.IP地址前缀</h3><p>CIDR地址由一个IP地址和一个斜杠后跟的前缀长度组成。例如，192.168.1.0&#x2F;24，其中&#x2F;24表示前缀长度为24位。</p>
<h3 id="2-前缀长度-2"><a href="#2-前缀长度-2" class="headerlink" title="2.前缀长度"></a>2.前缀长度</h3><p>表示网络部分的位数，范围是0到32，对于IPv4地址。</p>
<h3 id="3-子网掩码-2"><a href="#3-子网掩码-2" class="headerlink" title="3.子网掩码"></a>3.子网掩码</h3><p>由前缀长度决定的二进制数，用于划分网络部分和主机部分。</p>
<h2 id="结构形式-6"><a href="#结构形式-6" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-CIDR表示法-2"><a href="#1-CIDR表示法-2" class="headerlink" title="1.CIDR表示法"></a>1.CIDR表示法</h3><p>IP地址&#x2F;前缀长度，例如192.168.1.0&#x2F;24。</p>
<h3 id="2-二进制表示-2"><a href="#2-二进制表示-2" class="headerlink" title="2.二进制表示"></a>2.二进制表示</h3><p>将前缀长度转化为二进制子网掩码，例如&#x2F;24对应的子网掩码是255.255.255.0。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.构成超网</p>
<p><img src="/../TyporaImage/image-20240622200258687.png" alt="image-20240622200258687"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-最长前缀匹配-2"><a href="#1-最长前缀匹配-2" class="headerlink" title="1.最长前缀匹配"></a>1.最长前缀匹配</h3><p>最长前缀匹配（Longest Prefix Match, LPM）是一种路由选择算法，用于在路由器中选择最合适的路由。当一个数据包到达路由器时，路由器会查找其路由表，并选择与目的地址匹配的最长前缀（子网掩码最长）的路由条目，从而决定数据包的转发路径。</p>
<h3 id="2-路由表-2"><a href="#2-路由表-2" class="headerlink" title="2.路由表"></a>2.路由表</h3><h4 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h4><p>路由表（Routing Table）是网络设备（如路由器和主机）中保存的一个数据结构，用于存储网络目的地的信息和转发数据包所需的路径。它包含网络地址、子网掩码、下一跳地址和接口等信息。</p>
<h4 id="组成部分-7"><a href="#组成部分-7" class="headerlink" title="组成部分"></a>组成部分</h4><p>1.目的网络</p>
<p>目标网络的IP地址前缀。</p>
<p>2.子网掩码</p>
<p>用于确定目标网络的范围。</p>
<p>3.下一跳地址</p>
<p>将数据包转发到下一个网络节点的IP地址。</p>
<p>4.接口</p>
<p>通过哪个网络接口发送数据包。</p>
<h4 id="结构形式-7"><a href="#结构形式-7" class="headerlink" title="结构形式"></a>结构形式</h4><h5 id="1-条目-4"><a href="#1-条目-4" class="headerlink" title="1.条目"></a>1.条目</h5><p>每个路由表包含多个条目，每个条目描述一条路由。</p>
<h5 id="2-CIDR表示法-2"><a href="#2-CIDR表示法-2" class="headerlink" title="2.CIDR表示法"></a>2.CIDR表示法</h5><p>使用CIDR表示网络前缀和掩码，如192.168.1.0&#x2F;24。</p>
<h4 id="分类-4"><a href="#分类-4" class="headerlink" title="分类"></a>分类</h4><h5 id="1-静态路由-2"><a href="#1-静态路由-2" class="headerlink" title="1.静态路由"></a>1.静态路由</h5><p>手动配置的固定路由条目。</p>
<h5 id="2-动态路由-2"><a href="#2-动态路由-2" class="headerlink" title="2.动态路由"></a>2.动态路由</h5><p>通过路由协议动态学习和更新的路由条目。</p>
<h4 id="特征-4"><a href="#特征-4" class="headerlink" title="特征"></a>特征</h4><p>1.动态性：可以通过路由协议自动更新。<br>2.精确性：包含详细的网络路径信息。<br>3.高效性：通过快速查找确定数据包的转发路径。</p>
<h3 id="3-转发表-2"><a href="#3-转发表-2" class="headerlink" title="3.转发表"></a>3.转发表</h3><h4 id="定义-8"><a href="#定义-8" class="headerlink" title="定义"></a>定义</h4><p>转发表（Forwarding Table）是网络设备中用于数据包转发的一个数据结构。它根据路由表中的信息构建，包含具体的转发路径和接口信息，用于快速决定数据包的转发路径。</p>
<h4 id="组成部分-8"><a href="#组成部分-8" class="headerlink" title="组成部分"></a>组成部分</h4><h5 id="1-目的地址前缀-2"><a href="#1-目的地址前缀-2" class="headerlink" title="1.目的地址前缀"></a>1.目的地址前缀</h5><p>与路由表中的前缀一致。</p>
<h5 id="2-下一跳地址-2"><a href="#2-下一跳地址-2" class="headerlink" title="2.下一跳地址"></a>2.下一跳地址</h5><p>数据包应转发到的下一个节点。</p>
<h5 id="3-接口-2"><a href="#3-接口-2" class="headerlink" title="3.接口"></a>3.接口</h5><p>具体的物理或虚拟网络接口。</p>
<h4 id="结构形式-8"><a href="#结构形式-8" class="headerlink" title="结构形式"></a>结构形式</h4><h5 id="1-条目-5"><a href="#1-条目-5" class="headerlink" title="1.条目"></a>1.条目</h5><p>每个转发表包含多个条目，每个条目描述一个转发路径。</p>
<h5 id="2-直接映射-2"><a href="#2-直接映射-2" class="headerlink" title="2.直接映射"></a>2.直接映射</h5><p>通过目的地址快速查找到具体的转发路径。</p>
<h4 id="分类-5"><a href="#分类-5" class="headerlink" title="分类"></a>分类</h4><p>1.基于硬件</p>
<p>存储在网络设备的硬件中，提供高速转发。</p>
<p>2.基于软件</p>
<p>存储在网络设备的软件中，灵活性高。</p>
<h4 id="特征-5"><a href="#特征-5" class="headerlink" title="特征"></a>特征</h4><p>1.高速性：提供快速的数据包转发能力。<br>2.实时性：实时更新，反映最新的网络状态。<br>3.高效性：简化查找过程，提高数据包处理效率。</p>
<h3 id="4-转发表和路由表之间的关系-2"><a href="#4-转发表和路由表之间的关系-2" class="headerlink" title="4.转发表和路由表之间的关系"></a>4.转发表和路由表之间的关系</h3><p>转发表是基于路由表生成的。路由表中包含了详细的路由信息，转发表从中提取必要的信息来构建具体的转发路径。DR</p>
<h2 id="定义-9"><a href="#定义-9" class="headerlink" title="定义"></a>定义</h2><p>无类别域间路由（CIDR，Classless Inter-Domain Routing）是一种IP地址分配和路由方法，用于替代传统的基于类的IP地址分配方法。CIDR通过灵活的子网掩码和地址前缀长度，提供更高效和精细的IP地址管理和路由。</p>
<h2 id="组成部分-9"><a href="#组成部分-9" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-IP地址前缀-3"><a href="#1-IP地址前缀-3" class="headerlink" title="1.IP地址前缀"></a>1.IP地址前缀</h3><p>CIDR地址由一个IP地址和一个斜杠后跟的前缀长度组成。例如，192.168.1.0&#x2F;24，其中&#x2F;24表示前缀长度为24位。</p>
<h3 id="2-前缀长度-3"><a href="#2-前缀长度-3" class="headerlink" title="2.前缀长度"></a>2.前缀长度</h3><p>表示网络部分的位数，范围是0到32，对于IPv4地址。</p>
<h3 id="3-子网掩码-3"><a href="#3-子网掩码-3" class="headerlink" title="3.子网掩码"></a>3.子网掩码</h3><p>由前缀长度决定的二进制数，用于划分网络部分和主机部分。</p>
<h2 id="结构形式-9"><a href="#结构形式-9" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-CIDR表示法-3"><a href="#1-CIDR表示法-3" class="headerlink" title="1.CIDR表示法"></a>1.CIDR表示法</h3><p>IP地址&#x2F;前缀长度，例如192.168.1.0&#x2F;24。</p>
<h3 id="2-二进制表示-3"><a href="#2-二进制表示-3" class="headerlink" title="2.二进制表示"></a>2.二进制表示</h3><p>将前缀长度转化为二进制子网掩码，例如&#x2F;24对应的子网掩码是255.255.255.0。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.构成超网</p>
<p><img src="/../TyporaImage/image-20240622200258687.png" alt="image-20240622200258687"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-最长前缀匹配-3"><a href="#1-最长前缀匹配-3" class="headerlink" title="1.最长前缀匹配"></a>1.最长前缀匹配</h3><p>最长前缀匹配（Longest Prefix Match, LPM）是一种路由选择算法，用于在路由器中选择最合适的路由。当一个数据包到达路由器时，路由器会查找其路由表，并选择与目的地址匹配的最长前缀（子网掩码最长）的路由条目，从而决定数据包的转发路径。</p>
<h3 id="2-路由表-3"><a href="#2-路由表-3" class="headerlink" title="2.路由表"></a>2.路由表</h3><h4 id="定义-10"><a href="#定义-10" class="headerlink" title="定义"></a>定义</h4><p>路由表（Routing Table）是网络设备（如路由器和主机）中保存的一个数据结构，用于存储网络目的地的信息和转发数据包所需的路径。它包含网络地址、子网掩码、下一跳地址和接口等信息。</p>
<h4 id="组成部分-10"><a href="#组成部分-10" class="headerlink" title="组成部分"></a>组成部分</h4><p>1.目的网络</p>
<p>目标网络的IP地址前缀。</p>
<p>2.子网掩码</p>
<p>用于确定目标网络的范围。</p>
<p>3.下一跳地址</p>
<p>将数据包转发到下一个网络节点的IP地址。</p>
<p>4.接口</p>
<p>通过哪个网络接口发送数据包。</p>
<h4 id="结构形式-10"><a href="#结构形式-10" class="headerlink" title="结构形式"></a>结构形式</h4><h5 id="1-条目-6"><a href="#1-条目-6" class="headerlink" title="1.条目"></a>1.条目</h5><p>每个路由表包含多个条目，每个条目描述一条路由。</p>
<h5 id="2-CIDR表示法-3"><a href="#2-CIDR表示法-3" class="headerlink" title="2.CIDR表示法"></a>2.CIDR表示法</h5><p>使用CIDR表示网络前缀和掩码，如192.168.1.0&#x2F;24。</p>
<h4 id="分类-6"><a href="#分类-6" class="headerlink" title="分类"></a>分类</h4><h5 id="1-静态路由-3"><a href="#1-静态路由-3" class="headerlink" title="1.静态路由"></a>1.静态路由</h5><p>手动配置的固定路由条目。</p>
<h5 id="2-动态路由-3"><a href="#2-动态路由-3" class="headerlink" title="2.动态路由"></a>2.动态路由</h5><p>通过路由协议动态学习和更新的路由条目。</p>
<h4 id="特征-6"><a href="#特征-6" class="headerlink" title="特征"></a>特征</h4><p>1.动态性：可以通过路由协议自动更新。<br>2.精确性：包含详细的网络路径信息。<br>3.高效性：通过快速查找确定数据包的转发路径。</p>
<h3 id="3-转发表-3"><a href="#3-转发表-3" class="headerlink" title="3.转发表"></a>3.转发表</h3><h4 id="定义-11"><a href="#定义-11" class="headerlink" title="定义"></a>定义</h4><p>转发表（Forwarding Table）是网络设备中用于数据包转发的一个数据结构。它根据路由表中的信息构建，包含具体的转发路径和接口信息，用于快速决定数据包的转发路径。</p>
<h4 id="组成部分-11"><a href="#组成部分-11" class="headerlink" title="组成部分"></a>组成部分</h4><h5 id="1-目的地址前缀-3"><a href="#1-目的地址前缀-3" class="headerlink" title="1.目的地址前缀"></a>1.目的地址前缀</h5><p>与路由表中的前缀一致。</p>
<h5 id="2-下一跳地址-3"><a href="#2-下一跳地址-3" class="headerlink" title="2.下一跳地址"></a>2.下一跳地址</h5><p>数据包应转发到的下一个节点。</p>
<h5 id="3-接口-3"><a href="#3-接口-3" class="headerlink" title="3.接口"></a>3.接口</h5><p>具体的物理或虚拟网络接口。</p>
<h4 id="结构形式-11"><a href="#结构形式-11" class="headerlink" title="结构形式"></a>结构形式</h4><h5 id="1-条目-7"><a href="#1-条目-7" class="headerlink" title="1.条目"></a>1.条目</h5><p>每个转发表包含多个条目，每个条目描述一个转发路径。</p>
<h5 id="2-直接映射-3"><a href="#2-直接映射-3" class="headerlink" title="2.直接映射"></a>2.直接映射</h5><p>通过目的地址快速查找到具体的转发路径。</p>
<h4 id="分类-7"><a href="#分类-7" class="headerlink" title="分类"></a>分类</h4><p>1.基于硬件</p>
<p>存储在网络设备的硬件中，提供高速转发。</p>
<p>2.基于软件</p>
<p>存储在网络设备的软件中，灵活性高。</p>
<h4 id="特征-7"><a href="#特征-7" class="headerlink" title="特征"></a>特征</h4><p>1.高速性：提供快速的数据包转发能力。<br>2.实时性：实时更新，反映最新的网络状态。<br>3.高效性：简化查找过程，提高数据包处理效率。</p>
<h3 id="4-转发表和路由表之间的关系-3"><a href="#4-转发表和路由表之间的关系-3" class="headerlink" title="4.转发表和路由表之间的关系"></a>4.转发表和路由表之间的关系</h3><p>转发表是基于路由表生成的。路由表中包含了详细的路由信息，转发表从中提取必要的信息来构建具体的转发路径。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>流量控制和可靠传输机制</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6%E5%92%8C%E5%8F%AF%E9%9D%A0%E4%BC%A0%E8%BE%93%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<h1 id="流量控制"><a href="#流量控制" class="headerlink" title="流量控制"></a>流量控制</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>流量控制（Flow Control）是一种通信协议或技术，用于在数据传输过程中控制发送方的数据发送速率，以避免接收方处理不过来。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-停止等待协议："><a href="#1-停止等待协议：" class="headerlink" title="1.停止等待协议："></a>1.停止等待协议：</h3><p>每发送完一个帧就停止发送，等待对方的确认。在收到确认后再发送下一个帧。</p>
<p><img src="/../TyporaImage/image-20240613164254636.png" alt="image-20240613164254636"></p>
<p>特点：发送窗口大小&#x3D;1，接收窗口大小&#x3D;1.</p>
<h3 id="2-滑动窗口协议"><a href="#2-滑动窗口协议" class="headerlink" title="2.滑动窗口协议"></a>2.滑动窗口协议</h3><p>①后退N帧协议（GBN）</p>
<p>发送窗口大小&gt;1，接收窗口大小&#x3D;1.</p>
<p>②选择重传协议（SR）</p>
<p>发送窗口大小&gt;1，接收窗口大小&gt;1.</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>为了解决较高的发送速度和较低的接收能力不匹配造成的传输出错问题。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.数据链路层的流量控制：</p>
<p>接收方收不下就不回复确认。</p>
<p>传输层流量控制：</p>
<p>接收端给发送端一个窗口公告。</p>
<h1 id="可靠传输"><a href="#可靠传输" class="headerlink" title="可靠传输"></a>可靠传输</h1><h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>发送端发什么，接收端接收什么。</p>
<p>控制</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>流量控制（Flow Control）是一种通信协议或技术，用于在数据传输过程中控制发送方的数据发送速率，以避免接收方处理不过来。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-停止等待协议：-1"><a href="#1-停止等待协议：-1" class="headerlink" title="1.停止等待协议："></a>1.停止等待协议：</h3><p>每发送完一个帧就停止发送，等待对方的确认。在收到确认后再发送下一个帧。</p>
<p><img src="/../TyporaImage/image-20240613164254636.png" alt="image-20240613164254636"></p>
<p>特点：发送窗口大小&#x3D;1，接收窗口大小&#x3D;1.</p>
<h3 id="2-滑动窗口协议-1"><a href="#2-滑动窗口协议-1" class="headerlink" title="2.滑动窗口协议"></a>2.滑动窗口协议</h3><p>①后退N帧协议（GBN）</p>
<p>发送窗口大小&gt;1，接收窗口大小&#x3D;1.</p>
<p>②选择重传协议（SR）</p>
<p>发送窗口大小&gt;1，接收窗口大小&gt;1.</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>为了解决较高的发送速度和较低的接收能力不匹配造成的传输出错问题。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.数据链路层的流量控制：</p>
<p>接收方收不下就不回复确认。</p>
<p>传输层流量控制：</p>
<p>接收端给发送端一个窗口公告。</p>
<h1 id="可靠传输-1"><a href="#可靠传输-1" class="headerlink" title="可靠传输"></a>可靠传输</h1><h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>发送端发什么，接收端接收什么。# 流量控制</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>流量控制（Flow Control）是一种通信协议或技术，用于在数据传输过程中控制发送方的数据发送速率，以避免接收方处理不过来。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-停止等待协议：-2"><a href="#1-停止等待协议：-2" class="headerlink" title="1.停止等待协议："></a>1.停止等待协议：</h3><p>每发送完一个帧就停止发送，等待对方的确认。在收到确认后再发送下一个帧。</p>
<p><img src="/../TyporaImage/image-20240613164254636.png" alt="image-20240613164254636"></p>
<p>特点：发送窗口大小&#x3D;1，接收窗口大小&#x3D;1.</p>
<h3 id="2-滑动窗口协议-2"><a href="#2-滑动窗口协议-2" class="headerlink" title="2.滑动窗口协议"></a>2.滑动窗口协议</h3><p>①后退N帧协议（GBN）</p>
<p>发送窗口大小&gt;1，接收窗口大小&#x3D;1.</p>
<p>②选择重传协议（SR）</p>
<p>发送窗口大小&gt;1，接收窗口大小&gt;1.</p>
<h2 id="目的-4"><a href="#目的-4" class="headerlink" title="目的"></a>目的</h2><p>为了解决较高的发送速度和较低的接收能力不匹配造成的传输出错问题。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.数据链路层的流量控制：</p>
<p>接收方收不下就不回复确认。</p>
<p>传输层流量控制：</p>
<p>接收端给发送端一个窗口公告。</p>
<h1 id="可靠传输-2"><a href="#可靠传输-2" class="headerlink" title="可靠传输"></a>可靠传输</h1><h2 id="目的-5"><a href="#目的-5" class="headerlink" title="目的"></a>目的</h2><p>发送端发什么，接收端接收什么。</p>
<p>控制</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>流量控制（Flow Control）是一种通信协议或技术，用于在数据传输过程中控制发送方的数据发送速率，以避免接收方处理不过来。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-停止等待协议：-3"><a href="#1-停止等待协议：-3" class="headerlink" title="1.停止等待协议："></a>1.停止等待协议：</h3><p>每发送完一个帧就停止发送，等待对方的确认。在收到确认后再发送下一个帧。</p>
<p><img src="/../TyporaImage/image-20240613164254636.png" alt="image-20240613164254636"></p>
<p>特点：发送窗口大小&#x3D;1，接收窗口大小&#x3D;1.</p>
<h3 id="2-滑动窗口协议-3"><a href="#2-滑动窗口协议-3" class="headerlink" title="2.滑动窗口协议"></a>2.滑动窗口协议</h3><p>①后退N帧协议（GBN）</p>
<p>发送窗口大小&gt;1，接收窗口大小&#x3D;1.</p>
<p>②选择重传协议（SR）</p>
<p>发送窗口大小&gt;1，接收窗口大小&gt;1.</p>
<h2 id="目的-6"><a href="#目的-6" class="headerlink" title="目的"></a>目的</h2><p>为了解决较高的发送速度和较低的接收能力不匹配造成的传输出错问题。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.数据链路层的流量控制：</p>
<p>接收方收不下就不回复确认。</p>
<p>传输层流量控制：</p>
<p>接收端给发送端一个窗口公告。</p>
<h1 id="可靠传输-3"><a href="#可靠传输-3" class="headerlink" title="可靠传输"></a>可靠传输</h1><h2 id="目的-7"><a href="#目的-7" class="headerlink" title="目的"></a>目的</h2><p>发送端发什么，接收端接收什么。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>物理层</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%89%A9%E7%90%86%E5%B1%82/</url>
    <content><![CDATA[<h1 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><p>特征</p>
<p>接口特性：</p>
<p>1.机械特性</p>
<p>定义物理连接的特性，规定物理连接时所采用的规格、接口形状、引线数目、引脚数目和排列情况。</p>
<p>2.电气特性</p>
<p>规定二进制传输时，线路信号的电压范围、阻抗匹配、传输速率和距离限制等。</p>
<p>3.功能特性</p>
<p>指明某条线上出现的某一电平表示什么意义，接口部件的信号线用途。</p>
<p>4.规程特性（过程特性）</p>
<p>定义各种物理线路的工作规程和时序关系。</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h2 id="为什么理层"><a href="#为什么理层" class="headerlink" title="为什么理层"></a>为什么理层</h2><h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><p>特征</p>
<p>接口特性：</p>
<p>1.机械特性</p>
<p>定义物理连接的特性，规定物理连接时所采用的规格、接口形状、引线数目、引脚数目和排列情况。</p>
<p>2.电气特性</p>
<p>规定二进制传输时，线路信号的电压范围、阻抗匹配、传输速率和距离限制等。</p>
<p>3.功能特性</p>
<p>指明某条线上出现的某一电平表示什么意义，接口部件的信号线用途。</p>
<p>4.规程特性（过程特性）</p>
<p>定义各种物理线路的工作规程和时序关系。</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h2 id="为什么-物理层"><a href="#为什么-物理层" class="headerlink" title="为什么# 物理层"></a>为什么# 物理层</h2><h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><p>特征</p>
<p>接口特性：</p>
<p>1.机械特性</p>
<p>定义物理连接的特性，规定物理连接时所采用的规格、接口形状、引线数目、引脚数目和排列情况。</p>
<p>2.电气特性</p>
<p>规定二进制传输时，线路信号的电压范围、阻抗匹配、传输速率和距离限制等。</p>
<p>3.功能特性</p>
<p>指明某条线上出现的某一电平表示什么意义，接口部件的信号线用途。</p>
<p>4.规程特性（过程特性）</p>
<p>定义各种物理线路的工作规程和时序关系。</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h2 id="为什么理层-1"><a href="#为什么理层-1" class="headerlink" title="为什么理层"></a>为什么理层</h2><h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><p>特征</p>
<p>接口特性：</p>
<p>1.机械特性</p>
<p>定义物理连接的特性，规定物理连接时所采用的规格、接口形状、引线数目、引脚数目和排列情况。</p>
<p>2.电气特性</p>
<p>规定二进制传输时，线路信号的电压范围、阻抗匹配、传输速率和距离限制等。</p>
<p>3.功能特性</p>
<p>指明某条线上出现的某一电平表示什么意义，接口部件的信号线用途。</p>
<p>4.规程特性（过程特性）</p>
<p>定义各种物理线路的工作规程和时序关系。</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2>]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>物理层的传输介质</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%89%A9%E7%90%86%E5%B1%82%E7%9A%84%E4%BC%A0%E8%BE%93%E4%BB%8B%E8%B4%A8/</url>
    <content><![CDATA[<h1 id="传输介质"><a href="#传输介质" class="headerlink" title="传输介质"></a>传输介质</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>是数据传输系统中，在发送设备和接收设备之间的物理通路。（传输媒体不是物理层！）</p>
<h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-导向性传输介质：电磁波被导向，沿着固体媒介传输"><a href="#1-导向性传输介质：电磁波被导向，沿着固体媒介传输" class="headerlink" title="1.导向性传输介质：电磁波被导向，沿着固体媒介传输"></a>1.导向性传输介质：电磁波被导向，沿着固体媒介传输</h3><p>①双绞线</p>
<p>②同轴电缆</p>
<p>③光纤</p>
<h3 id="2-非导向性传输介质：自由介质，介质可以是空气、真空……"><a href="#2-非导向性传输介质：自由介质，介质可以是空气、真空……" class="headerlink" title="2.非导向性传输介质：自由介质，介质可以是空气、真空……"></a>2.非导向性传输介质：自由介质，介质可以是空气、真空……</h3><p> ①无线电波</p>
<p>②微波</p>
<p>③红外线、激光<br>介质</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>是数据传输系统中，在发送设备和接收设备之间的物理通路。（传输媒体不是物理层！）</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-导向性传输介质：电磁波被导向，沿着固体媒介传输-1"><a href="#1-导向性传输介质：电磁波被导向，沿着固体媒介传输-1" class="headerlink" title="1.导向性传输介质：电磁波被导向，沿着固体媒介传输"></a>1.导向性传输介质：电磁波被导向，沿着固体媒介传输</h3><p>①双绞线</p>
<p>②同轴电缆</p>
<p>③光纤</p>
<h3 id="2-非导向性传输介质：自由介质，介质可以是空气、真空……-1"><a href="#2-非导向性传输介质：自由介质，介质可以是空气、真空……-1" class="headerlink" title="2.非导向性传输介质：自由介质，介质可以是空气、真空……"></a>2.非导向性传输介质：自由介质，介质可以是空气、真空……</h3><p> ①无线电波</p>
<p>②微波</p>
<p>③红外线、激光# 传输介质</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>是数据传输系统中，在发送设备和接收设备之间的物理通路。（传输媒体不是物理层！）</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-导向性传输介质：电磁波被导向，沿着固体媒介传输-2"><a href="#1-导向性传输介质：电磁波被导向，沿着固体媒介传输-2" class="headerlink" title="1.导向性传输介质：电磁波被导向，沿着固体媒介传输"></a>1.导向性传输介质：电磁波被导向，沿着固体媒介传输</h3><p>①双绞线</p>
<p>②同轴电缆</p>
<p>③光纤</p>
<h3 id="2-非导向性传输介质：自由介质，介质可以是空气、真空……-2"><a href="#2-非导向性传输介质：自由介质，介质可以是空气、真空……-2" class="headerlink" title="2.非导向性传输介质：自由介质，介质可以是空气、真空……"></a>2.非导向性传输介质：自由介质，介质可以是空气、真空……</h3><p> ①无线电波</p>
<p>②微波</p>
<p>③红外线、激光<br>介质</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>是数据传输系统中，在发送设备和接收设备之间的物理通路。（传输媒体不是物理层！）</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-导向性传输介质：电磁波被导向，沿着固体媒介传输-3"><a href="#1-导向性传输介质：电磁波被导向，沿着固体媒介传输-3" class="headerlink" title="1.导向性传输介质：电磁波被导向，沿着固体媒介传输"></a>1.导向性传输介质：电磁波被导向，沿着固体媒介传输</h3><p>①双绞线</p>
<p>②同轴电缆</p>
<p>③光纤</p>
<h3 id="2-非导向性传输介质：自由介质，介质可以是空气、真空……-3"><a href="#2-非导向性传输介质：自由介质，介质可以是空气、真空……-3" class="headerlink" title="2.非导向性传输介质：自由介质，介质可以是空气、真空……"></a>2.非导向性传输介质：自由介质，介质可以是空气、真空……</h3><p> ①无线电波</p>
<p>②微波</p>
<p>③红外线、激光</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>电子邮件</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="电子邮件"><a href="#电子邮件" class="headerlink" title="电子邮件"></a>电子邮件</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>电子邮件（Electronic Mail，简称E-mail）是一种通过电子方式发送和接收消息的网络通信服务。它允许用户将文本、图片、音频和视频等数据作为邮件发送给其他用户。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.邮件客户端：用户用来撰写、发送、接收和管理邮件的软件或应用程序。<br>2.邮件服务器：负责存储、转发和分发邮件的服务器。<br>3.邮件地址：标识邮件发送者和接收者的唯一地址，通常格式为 <a href="mailto:&#x75;&#x73;&#101;&#114;&#110;&#x61;&#x6d;&#101;&#64;&#x65;&#x78;&#x61;&#109;&#112;&#108;&#x65;&#46;&#99;&#111;&#x6d;">&#x75;&#x73;&#101;&#114;&#110;&#x61;&#x6d;&#101;&#64;&#x65;&#x78;&#x61;&#109;&#112;&#108;&#x65;&#46;&#99;&#111;&#x6d;</a>。<br>4.邮件协议：如SMTP（Simple Mail Transfer Protocol）用于发送邮件，POP3（Post Office Protocol 3）和IMAP（Internet Message Access Protocol）用于接收邮件。</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>电子邮件系统通常包括邮件客户端、邮件服务器和邮件传输协议。用户通过邮件客户端撰写邮件，邮件通过邮件服务器转发给接收者。</p>
<p><img src="/../TyporaImage/image-20240623150939365.png" alt="image-20240623150939365"></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>电子邮件可以根据使用场景分为个人邮件和企业邮件。个人邮件通常用于私人通信，企业邮件则用于商务沟通和协作。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>1.即时性：邮件发送和接收通常很快，适合快速沟通。<br>2.可携带性：用户可以在任何有网络连接的地方发送和接收邮件。<br>3.可存储性：邮件可以存储在服务器上，方便用户随时查阅。<br>4.多媒体支持：邮件可以包含文本、图片、音频和视频等多种格式的附件。</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623150948397.png" alt="image-20240623150948397"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-简单邮件传送协议SMTP"><a href="#1-简单邮件传送协议SMTP" class="headerlink" title="1.简单邮件传送协议SMTP"></a>1.简单邮件传送协议SMTP</h3><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p><img src="/../TyporaImage/image-20240623151053130.png" alt="image-20240623151053130"></p>
<h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><p><img src="/../TyporaImage/image-20240623151129158.png" alt="image-20240623151129158"></p>
<h3 id="2-MIME"><a href="#2-MIME" class="headerlink" title="2.MIME"></a>2.MIME</h3><h4 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h4><p><img src="/../TyporaImage/image-20240623151157959.png" alt="image-20240623151157959"></p>
<h3 id="3-IMAP协议"><a href="#3-IMAP协议" class="headerlink" title="3.IMAP协议"></a>3.IMAP协议</h3><p><img src="/../TyporaImage/image-20240623151331749.png" alt="image-20240623151331749"></p>
<h3 id="4-基于万维网的电子邮件"><a href="#4-基于万维网的电子邮件" class="headerlink" title="4.基于万维网的电子邮件"></a>4.基于万维网的电子邮件</h3><p><img src="/../TyporaImage/image-20240623151400798.png" alt="image-20240623151400798">邮件</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>电子邮件（Electronic Mail，简称E-mail）是一种通过电子方式发送和接收消息的网络通信服务。它允许用户将文本、图片、音频和视频等数据作为邮件发送给其他用户。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.邮件客户端：用户用来撰写、发送、接收和管理邮件的软件或应用程序。<br>2.邮件服务器：负责存储、转发和分发邮件的服务器。<br>3.邮件地址：标识邮件发送者和接收者的唯一地址，通常格式为 <a href="mailto:&#x75;&#x73;&#101;&#114;&#110;&#97;&#x6d;&#101;&#x40;&#101;&#x78;&#x61;&#109;&#112;&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;">&#x75;&#x73;&#101;&#114;&#110;&#97;&#x6d;&#101;&#x40;&#101;&#x78;&#x61;&#109;&#112;&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;</a>。<br>4.邮件协议：如SMTP（Simple Mail Transfer Protocol）用于发送邮件，POP3（Post Office Protocol 3）和IMAP（Internet Message Access Protocol）用于接收邮件。</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>电子邮件系统通常包括邮件客户端、邮件服务器和邮件传输协议。用户通过邮件客户端撰写邮件，邮件通过邮件服务器转发给接收者。</p>
<p><img src="/../TyporaImage/image-20240623150939365.png" alt="image-20240623150939365"></p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>电子邮件可以根据使用场景分为个人邮件和企业邮件。个人邮件通常用于私人通信，企业邮件则用于商务沟通和协作。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>1.即时性：邮件发送和接收通常很快，适合快速沟通。<br>2.可携带性：用户可以在任何有网络连接的地方发送和接收邮件。<br>3.可存储性：邮件可以存储在服务器上，方便用户随时查阅。<br>4.多媒体支持：邮件可以包含文本、图片、音频和视频等多种格式的附件。</p>
<h2 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623150948397.png" alt="image-20240623150948397"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-简单邮件传送协议SMTP-1"><a href="#1-简单邮件传送协议SMTP-1" class="headerlink" title="1.简单邮件传送协议SMTP"></a>1.简单邮件传送协议SMTP</h3><h4 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h4><p><img src="/../TyporaImage/image-20240623151053130.png" alt="image-20240623151053130"></p>
<h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><p><img src="/../TyporaImage/image-20240623151129158.png" alt="image-20240623151129158"></p>
<h3 id="2-MIME-1"><a href="#2-MIME-1" class="headerlink" title="2.MIME"></a>2.MIME</h3><h4 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a>基本原理</h4><p><img src="/../TyporaImage/image-20240623151157959.png" alt="image-20240623151157959"></p>
<h3 id="3-IMAP协议-1"><a href="#3-IMAP协议-1" class="headerlink" title="3.IMAP协议"></a>3.IMAP协议</h3><p><img src="/../TyporaImage/image-20240623151331749.png" alt="image-20240623151331749"></p>
<h3 id="4-基于万维网的电子邮件-1"><a href="#4-基于万维网的电子邮件-1" class="headerlink" title="4.基于万维网的电子邮件"></a>4.基于万维网的电子邮件</h3><p><img src="/../TyporaImage/image-20240623151400798.png" alt="image-20240623151400798"># 电子邮件</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>电子邮件（Electronic Mail，简称E-mail）是一种通过电子方式发送和接收消息的网络通信服务。它允许用户将文本、图片、音频和视频等数据作为邮件发送给其他用户。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.邮件客户端：用户用来撰写、发送、接收和管理邮件的软件或应用程序。<br>2.邮件服务器：负责存储、转发和分发邮件的服务器。<br>3.邮件地址：标识邮件发送者和接收者的唯一地址，通常格式为 <a href="mailto:&#117;&#115;&#101;&#114;&#110;&#97;&#109;&#x65;&#x40;&#101;&#120;&#x61;&#109;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#109;">&#117;&#115;&#101;&#114;&#110;&#97;&#109;&#x65;&#x40;&#101;&#120;&#x61;&#109;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#109;</a>。<br>4.邮件协议：如SMTP（Simple Mail Transfer Protocol）用于发送邮件，POP3（Post Office Protocol 3）和IMAP（Internet Message Access Protocol）用于接收邮件。</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>电子邮件系统通常包括邮件客户端、邮件服务器和邮件传输协议。用户通过邮件客户端撰写邮件，邮件通过邮件服务器转发给接收者。</p>
<p><img src="/../TyporaImage/image-20240623150939365.png" alt="image-20240623150939365"></p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>电子邮件可以根据使用场景分为个人邮件和企业邮件。个人邮件通常用于私人通信，企业邮件则用于商务沟通和协作。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>1.即时性：邮件发送和接收通常很快，适合快速沟通。<br>2.可携带性：用户可以在任何有网络连接的地方发送和接收邮件。<br>3.可存储性：邮件可以存储在服务器上，方便用户随时查阅。<br>4.多媒体支持：邮件可以包含文本、图片、音频和视频等多种格式的附件。</p>
<h2 id="基本原理-4"><a href="#基本原理-4" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623150948397.png" alt="image-20240623150948397"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-简单邮件传送协议SMTP-2"><a href="#1-简单邮件传送协议SMTP-2" class="headerlink" title="1.简单邮件传送协议SMTP"></a>1.简单邮件传送协议SMTP</h3><h4 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h4><p><img src="/../TyporaImage/image-20240623151053130.png" alt="image-20240623151053130"></p>
<h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4><p><img src="/../TyporaImage/image-20240623151129158.png" alt="image-20240623151129158"></p>
<h3 id="2-MIME-2"><a href="#2-MIME-2" class="headerlink" title="2.MIME"></a>2.MIME</h3><h4 id="基本原理-5"><a href="#基本原理-5" class="headerlink" title="基本原理"></a>基本原理</h4><p><img src="/../TyporaImage/image-20240623151157959.png" alt="image-20240623151157959"></p>
<h3 id="3-IMAP协议-2"><a href="#3-IMAP协议-2" class="headerlink" title="3.IMAP协议"></a>3.IMAP协议</h3><p><img src="/../TyporaImage/image-20240623151331749.png" alt="image-20240623151331749"></p>
<h3 id="4-基于万维网的电子邮件-2"><a href="#4-基于万维网的电子邮件-2" class="headerlink" title="4.基于万维网的电子邮件"></a>4.基于万维网的电子邮件</h3><p><img src="/../TyporaImage/image-20240623151400798.png" alt="image-20240623151400798">邮件</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>电子邮件（Electronic Mail，简称E-mail）是一种通过电子方式发送和接收消息的网络通信服务。它允许用户将文本、图片、音频和视频等数据作为邮件发送给其他用户。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.邮件客户端：用户用来撰写、发送、接收和管理邮件的软件或应用程序。<br>2.邮件服务器：负责存储、转发和分发邮件的服务器。<br>3.邮件地址：标识邮件发送者和接收者的唯一地址，通常格式为 <a href="mailto:&#117;&#x73;&#101;&#x72;&#110;&#97;&#109;&#x65;&#64;&#x65;&#x78;&#97;&#x6d;&#x70;&#108;&#101;&#46;&#x63;&#x6f;&#x6d;">&#117;&#x73;&#101;&#x72;&#110;&#97;&#109;&#x65;&#64;&#x65;&#x78;&#97;&#x6d;&#x70;&#108;&#101;&#46;&#x63;&#x6f;&#x6d;</a>。<br>4.邮件协议：如SMTP（Simple Mail Transfer Protocol）用于发送邮件，POP3（Post Office Protocol 3）和IMAP（Internet Message Access Protocol）用于接收邮件。</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>电子邮件系统通常包括邮件客户端、邮件服务器和邮件传输协议。用户通过邮件客户端撰写邮件，邮件通过邮件服务器转发给接收者。</p>
<p><img src="/../TyporaImage/image-20240623150939365.png" alt="image-20240623150939365"></p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>电子邮件可以根据使用场景分为个人邮件和企业邮件。个人邮件通常用于私人通信，企业邮件则用于商务沟通和协作。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>1.即时性：邮件发送和接收通常很快，适合快速沟通。<br>2.可携带性：用户可以在任何有网络连接的地方发送和接收邮件。<br>3.可存储性：邮件可以存储在服务器上，方便用户随时查阅。<br>4.多媒体支持：邮件可以包含文本、图片、音频和视频等多种格式的附件。</p>
<h2 id="基本原理-6"><a href="#基本原理-6" class="headerlink" title="基本原理"></a>基本原理</h2><p><img src="/../TyporaImage/image-20240623150948397.png" alt="image-20240623150948397"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-简单邮件传送协议SMTP-3"><a href="#1-简单邮件传送协议SMTP-3" class="headerlink" title="1.简单邮件传送协议SMTP"></a>1.简单邮件传送协议SMTP</h3><h4 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h4><p><img src="/../TyporaImage/image-20240623151053130.png" alt="image-20240623151053130"></p>
<h4 id="缺点-3"><a href="#缺点-3" class="headerlink" title="缺点"></a>缺点</h4><p><img src="/../TyporaImage/image-20240623151129158.png" alt="image-20240623151129158"></p>
<h3 id="2-MIME-3"><a href="#2-MIME-3" class="headerlink" title="2.MIME"></a>2.MIME</h3><h4 id="基本原理-7"><a href="#基本原理-7" class="headerlink" title="基本原理"></a>基本原理</h4><p><img src="/../TyporaImage/image-20240623151157959.png" alt="image-20240623151157959"></p>
<h3 id="3-IMAP协议-3"><a href="#3-IMAP协议-3" class="headerlink" title="3.IMAP协议"></a>3.IMAP协议</h3><p><img src="/../TyporaImage/image-20240623151331749.png" alt="image-20240623151331749"></p>
<h3 id="4-基于万维网的电子邮件-3"><a href="#4-基于万维网的电子邮件-3" class="headerlink" title="4.基于万维网的电子邮件"></a>4.基于万维网的电子邮件</h3><p><img src="/../TyporaImage/image-20240623151400798.png" alt="image-20240623151400798"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>物理层设备</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%89%A9%E7%90%86%E5%B1%82%E8%AE%BE%E5%A4%87/</url>
    <content><![CDATA[<h1 id="物理层设备"><a href="#物理层设备" class="headerlink" title="物理层设备"></a>物理层设备</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.中继器</p>
<p>2.集线器</p>
<h1 id="中继器"><a href="#中继器" class="headerlink" title="中继器"></a>中继器</h1><h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240608170245389.png" alt="image-20240608170245389"></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>中继器的两端的网络部分是网段，而不是子网。</p>
<p>2.适用于完全相同的的两类网络、且两个网段速率要相同。</p>
<p>3.两个网段的协议要相同。</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>1.再生和还原数字信号，对衰减信号进行放大，保持与原数据相同，以增加信号传输距离，延长网络长度。</p>
<ol start="2">
<li></li>
</ol>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>由于存在损耗，在线路上的传输功率会逐渐衰减，衰减到一定程度时，会造成失真，因此会导致接收错误。</p>
<h1 id="集线器-多口中继器"><a href="#集线器-多口中继器" class="headerlink" title="集线器(多口中继器)"></a>集线器(多口中继器)</h1><h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240608170540334.png" alt="image-20240608170540334"></p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240608170554459.png" alt="image-20240608170554459"></p>
<h2 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h2><p>1.对信号进行再生、放大、转发。</p>
<p>设备</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.中继器</p>
<p>2.集线器</p>
<h1 id="中继器-1"><a href="#中继器-1" class="headerlink" title="中继器"></a>中继器</h1><h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240608170245389.png" alt="image-20240608170245389"></p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p>中继器的两端的网络部分是网段，而不是子网。</p>
<p>2.适用于完全相同的的两类网络、且两个网段速率要相同。</p>
<p>3.两个网段的协议要相同。</p>
<h2 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h2><p>1.再生和还原数字信号，对衰减信号进行放大，保持与原数据相同，以增加信号传输距离，延长网络长度。</p>
<ol start="2">
<li></li>
</ol>
<h2 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h2><p>由于存在损耗，在线路上的传输功率会逐渐衰减，衰减到一定程度时，会造成失真，因此会导致接收错误。</p>
<h1 id="集线器-多口中继器-1"><a href="#集线器-多口中继器-1" class="headerlink" title="集线器(多口中继器)"></a>集线器(多口中继器)</h1><h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240608170540334.png" alt="image-20240608170540334"></p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240608170554459.png" alt="image-20240608170554459"></p>
<h2 id="功能-3"><a href="#功能-3" class="headerlink" title="功能"></a>功能</h2><p>1.对信号进行再生、放大、转发。# 物理层设备</p>
<h2 id="分类和组成-4"><a href="#分类和组成-4" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.中继器</p>
<p>2.集线器</p>
<h1 id="中继器-2"><a href="#中继器-2" class="headerlink" title="中继器"></a>中继器</h1><h2 id="分类和组成-5"><a href="#分类和组成-5" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240608170245389.png" alt="image-20240608170245389"></p>
<h2 id="特点-4"><a href="#特点-4" class="headerlink" title="特点"></a>特点</h2><p>中继器的两端的网络部分是网段，而不是子网。</p>
<p>2.适用于完全相同的的两类网络、且两个网段速率要相同。</p>
<p>3.两个网段的协议要相同。</p>
<h2 id="功能-4"><a href="#功能-4" class="headerlink" title="功能"></a>功能</h2><p>1.再生和还原数字信号，对衰减信号进行放大，保持与原数据相同，以增加信号传输距离，延长网络长度。</p>
<ol start="2">
<li></li>
</ol>
<h2 id="原因-2"><a href="#原因-2" class="headerlink" title="原因"></a>原因</h2><p>由于存在损耗，在线路上的传输功率会逐渐衰减，衰减到一定程度时，会造成失真，因此会导致接收错误。</p>
<h1 id="集线器-多口中继器-2"><a href="#集线器-多口中继器-2" class="headerlink" title="集线器(多口中继器)"></a>集线器(多口中继器)</h1><h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240608170540334.png" alt="image-20240608170540334"></p>
<h2 id="特点-5"><a href="#特点-5" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240608170554459.png" alt="image-20240608170554459"></p>
<h2 id="功能-5"><a href="#功能-5" class="headerlink" title="功能"></a>功能</h2><p>1.对信号进行再生、放大、转发。</p>
<p>设备</p>
<h2 id="分类和组成-6"><a href="#分类和组成-6" class="headerlink" title="分类和组成"></a>分类和组成</h2><p>1.中继器</p>
<p>2.集线器</p>
<h1 id="中继器-3"><a href="#中继器-3" class="headerlink" title="中继器"></a>中继器</h1><h2 id="分类和组成-7"><a href="#分类和组成-7" class="headerlink" title="分类和组成"></a>分类和组成</h2><p><img src="/../TyporaImage/image-20240608170245389.png" alt="image-20240608170245389"></p>
<h2 id="特点-6"><a href="#特点-6" class="headerlink" title="特点"></a>特点</h2><p>中继器的两端的网络部分是网段，而不是子网。</p>
<p>2.适用于完全相同的的两类网络、且两个网段速率要相同。</p>
<p>3.两个网段的协议要相同。</p>
<h2 id="功能-6"><a href="#功能-6" class="headerlink" title="功能"></a>功能</h2><p>1.再生和还原数字信号，对衰减信号进行放大，保持与原数据相同，以增加信号传输距离，延长网络长度。</p>
<ol start="2">
<li></li>
</ol>
<h2 id="原因-3"><a href="#原因-3" class="headerlink" title="原因"></a>原因</h2><p>由于存在损耗，在线路上的传输功率会逐渐衰减，衰减到一定程度时，会造成失真，因此会导致接收错误。</p>
<h1 id="集线器-多口中继器-3"><a href="#集线器-多口中继器-3" class="headerlink" title="集线器(多口中继器)"></a>集线器(多口中继器)</h1><h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240608170540334.png" alt="image-20240608170540334"></p>
<h2 id="特点-7"><a href="#特点-7" class="headerlink" title="特点"></a>特点</h2><p><img src="/../TyporaImage/image-20240608170554459.png" alt="image-20240608170554459"></p>
<h2 id="功能-7"><a href="#功能-7" class="headerlink" title="功能"></a>功能</h2><p>1.对信号进行再生、放大、转发。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>电路交换</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2/</url>
    <content><![CDATA[<h1 id="电路交换"><a href="#电路交换" class="headerlink" title="电路交换"></a>电路交换</h1><h2 id="结构形式；"><a href="#结构形式；" class="headerlink" title="结构形式；"></a>结构形式；</h2><p><img src="/../TyporaImage/image-20240606221038674.png" alt="image-20240606221038674"></p>
<h2 id="特征："><a href="#特征：" class="headerlink" title="特征："></a>特征：</h2><p><img src="/../TyporaImage/image-20240606221126630.png" alt="image-20240606221126630"></p>
<h2 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h2><p><img src="/../TyporaImage/image-20240606220407786.png" alt="image-20240606220407786">交换</p>
<h2 id="结构形式；-1"><a href="#结构形式；-1" class="headerlink" title="结构形式；"></a>结构形式；</h2><p><img src="/../TyporaImage/image-20240606221038674.png" alt="image-20240606221038674"></p>
<h2 id="特征：-1"><a href="#特征：-1" class="headerlink" title="特征："></a>特征：</h2><p><img src="/../TyporaImage/image-20240606221126630.png" alt="image-20240606221126630"></p>
<h2 id="原理：-1"><a href="#原理：-1" class="headerlink" title="原理："></a>原理：</h2><p><img src="/../TyporaImage/image-20240606220407786.png" alt="image-20240606220407786"># 电路交换</p>
<h2 id="结构形式；-2"><a href="#结构形式；-2" class="headerlink" title="结构形式；"></a>结构形式；</h2><p><img src="/../TyporaImage/image-20240606221038674.png" alt="image-20240606221038674"></p>
<h2 id="特征：-2"><a href="#特征：-2" class="headerlink" title="特征："></a>特征：</h2><p><img src="/../TyporaImage/image-20240606221126630.png" alt="image-20240606221126630"></p>
<h2 id="原理：-2"><a href="#原理：-2" class="headerlink" title="原理："></a>原理：</h2><p><img src="/../TyporaImage/image-20240606220407786.png" alt="image-20240606220407786">交换</p>
<h2 id="结构形式；-3"><a href="#结构形式；-3" class="headerlink" title="结构形式；"></a>结构形式；</h2><p><img src="/../TyporaImage/image-20240606221038674.png" alt="image-20240606221038674"></p>
<h2 id="特征：-3"><a href="#特征：-3" class="headerlink" title="特征："></a>特征：</h2><p><img src="/../TyporaImage/image-20240606221126630.png" alt="image-20240606221126630"></p>
<h2 id="原理：-3"><a href="#原理：-3" class="headerlink" title="原理："></a>原理：</h2><p><img src="/../TyporaImage/image-20240606220407786.png" alt="image-20240606220407786"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>电路交换、报文交换、分组交换</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2%E3%80%81%E6%8A%A5%E6%96%87%E4%BA%A4%E6%8D%A2%E3%80%81%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2/</url>
    <content><![CDATA[<h1 id="三种交换技术"><a href="#三种交换技术" class="headerlink" title="三种交换技术"></a>三种交换技术</h1><h2 id="电路交换"><a href="#电路交换" class="headerlink" title="电路交换"></a>电路交换</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>用于电话网络的技术</p>
<h3 id="应用价值"><a href="#应用价值" class="headerlink" title="应用价值"></a>应用价值</h3><p><img src="/../TyporaImage/image-20240602170443598.png" alt="image-20240602170443598"></p>
<h2 id="报文交换"><a href="#报文交换" class="headerlink" title="报文交换"></a>报文交换</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>用于电报网络的技术</p>
<h3 id="应用价值-1"><a href="#应用价值-1" class="headerlink" title="应用价值"></a>应用价值</h3><p><img src="/../TyporaImage/image-20240602170718363.png" alt="image-20240602170718363"></p>
<h3 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h3><p>存储转发；</p>
<p>把传送的数据单元先存储进中间节点，再根据目的地址转发至下一节点。</p>
<h2 id="分组交换"><a href="#分组交换" class="headerlink" title="分组交换"></a>分组交换</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>用于现代计算机网络的作业</p>
<h3 id="应用价值-2"><a href="#应用价值-2" class="headerlink" title="应用价值"></a>应用价值</h3><p><img src="/../TyporaImage/image-20240602170828596.png" alt="image-20240602170828596"></p>
<h2 id="三种交换技术的对比"><a href="#三种交换技术的对比" class="headerlink" title="三种交换技术的对比"></a>三种交换技术的对比</h2><p><img src="/../TyporaImage/image-20240602171036850.png" alt="image-20240602171036850"><br>技术</p>
<h2 id="电路交换-1"><a href="#电路交换-1" class="headerlink" title="电路交换"></a>电路交换</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>用于电话网络的技术</p>
<h3 id="应用价值-3"><a href="#应用价值-3" class="headerlink" title="应用价值"></a>应用价值</h3><p><img src="/../TyporaImage/image-20240602170443598.png" alt="image-20240602170443598"></p>
<h2 id="报文交换-1"><a href="#报文交换-1" class="headerlink" title="报文交换"></a>报文交换</h2><h3 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h3><p>用于电报网络的技术</p>
<h3 id="应用价值-4"><a href="#应用价值-4" class="headerlink" title="应用价值"></a>应用价值</h3><p><img src="/../TyporaImage/image-20240602170718363.png" alt="image-20240602170718363"></p>
<h3 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h3><p>存储转发；</p>
<p>把传送的数据单元先存储进中间节点，再根据目的地址转发至下一节点。</p>
<h2 id="分组交换-1"><a href="#分组交换-1" class="headerlink" title="分组交换"></a>分组交换</h2><h3 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h3><p>用于现代计算机网络的作业</p>
<h3 id="应用价值-5"><a href="#应用价值-5" class="headerlink" title="应用价值"></a>应用价值</h3><p><img src="/../TyporaImage/image-20240602170828596.png" alt="image-20240602170828596"></p>
<h2 id="三种交换技术的对比-1"><a href="#三种交换技术的对比-1" class="headerlink" title="三种交换技术的对比"></a>三种交换技术的对比</h2><p><img src="/../TyporaImage/image-20240602171036850.png" alt="image-20240602171036850"># 三种交换技术</p>
<h2 id="电路交换-2"><a href="#电路交换-2" class="headerlink" title="电路交换"></a>电路交换</h2><h3 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h3><p>用于电话网络的技术</p>
<h3 id="应用价值-6"><a href="#应用价值-6" class="headerlink" title="应用价值"></a>应用价值</h3><p><img src="/../TyporaImage/image-20240602170443598.png" alt="image-20240602170443598"></p>
<h2 id="报文交换-2"><a href="#报文交换-2" class="headerlink" title="报文交换"></a>报文交换</h2><h3 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h3><p>用于电报网络的技术</p>
<h3 id="应用价值-7"><a href="#应用价值-7" class="headerlink" title="应用价值"></a>应用价值</h3><p><img src="/../TyporaImage/image-20240602170718363.png" alt="image-20240602170718363"></p>
<h3 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h3><p>存储转发；</p>
<p>把传送的数据单元先存储进中间节点，再根据目的地址转发至下一节点。</p>
<h2 id="分组交换-2"><a href="#分组交换-2" class="headerlink" title="分组交换"></a>分组交换</h2><h3 id="定义-8"><a href="#定义-8" class="headerlink" title="定义"></a>定义</h3><p>用于现代计算机网络的作业</p>
<h3 id="应用价值-8"><a href="#应用价值-8" class="headerlink" title="应用价值"></a>应用价值</h3><p><img src="/../TyporaImage/image-20240602170828596.png" alt="image-20240602170828596"></p>
<h2 id="三种交换技术的对比-2"><a href="#三种交换技术的对比-2" class="headerlink" title="三种交换技术的对比"></a>三种交换技术的对比</h2><p><img src="/../TyporaImage/image-20240602171036850.png" alt="image-20240602171036850"><br>技术</p>
<h2 id="电路交换-3"><a href="#电路交换-3" class="headerlink" title="电路交换"></a>电路交换</h2><h3 id="定义-9"><a href="#定义-9" class="headerlink" title="定义"></a>定义</h3><p>用于电话网络的技术</p>
<h3 id="应用价值-9"><a href="#应用价值-9" class="headerlink" title="应用价值"></a>应用价值</h3><p><img src="/../TyporaImage/image-20240602170443598.png" alt="image-20240602170443598"></p>
<h2 id="报文交换-3"><a href="#报文交换-3" class="headerlink" title="报文交换"></a>报文交换</h2><h3 id="定义-10"><a href="#定义-10" class="headerlink" title="定义"></a>定义</h3><p>用于电报网络的技术</p>
<h3 id="应用价值-10"><a href="#应用价值-10" class="headerlink" title="应用价值"></a>应用价值</h3><p><img src="/../TyporaImage/image-20240602170718363.png" alt="image-20240602170718363"></p>
<h3 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h3><p>存储转发；</p>
<p>把传送的数据单元先存储进中间节点，再根据目的地址转发至下一节点。</p>
<h2 id="分组交换-3"><a href="#分组交换-3" class="headerlink" title="分组交换"></a>分组交换</h2><h3 id="定义-11"><a href="#定义-11" class="headerlink" title="定义"></a>定义</h3><p>用于现代计算机网络的作业</p>
<h3 id="应用价值-11"><a href="#应用价值-11" class="headerlink" title="应用价值"></a>应用价值</h3><p><img src="/../TyporaImage/image-20240602170828596.png" alt="image-20240602170828596"></p>
<h2 id="三种交换技术的对比-3"><a href="#三种交换技术的对比-3" class="headerlink" title="三种交换技术的对比"></a>三种交换技术的对比</h2><p><img src="/../TyporaImage/image-20240602171036850.png" alt="image-20240602171036850"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>知识框架</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<h1 id="知识框架"><a href="#知识框架" class="headerlink" title="知识框架"></a>知识框架</h1><p><strong>1.是什么</strong>：</p>
<ul>
<li><p><strong>定义</strong>：对概念或技术的简洁明了的定义。(包含了本质)	</p>
</li>
<li><p><strong>组成部分</strong>：列出构成该概念或技术的各个部分或元素。（这是一种局部性思路）</p>
</li>
<li><p><strong>结构形式</strong>：根据定义，展现出这个概念的不同表现形式结构及运行过程。（这是一种系统式思路）</p>
</li>
<li><p><strong>分类</strong></p>
<p>是在一个更大的概念框架内，不同的变体或子类。这些变体具有该概念的基本属性，但在某些方面有独特的特征，是该概念的不同表现形式。</p>
</li>
<li><p><strong>所属领域</strong>：说明该概念或技术属于哪个更大的类别或领域。</p>
</li>
<li><p><strong>特征</strong>：描述概念或技术的主要特点和属性。</p>
</li>
</ul>
<h4 id="PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"><a href="#PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。" class="headerlink" title="PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"></a>PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。</h4><p><strong>2.怎么用</strong>：</p>
<ul>
<li><p><strong>作用</strong>：描述这个概念或者技术哪些作用。</p>
</li>
<li><p><strong>使用方法</strong>：列出使用该概念或技术的方法。             –  使用方法可能由逻辑性弱或者强，如果逻辑性强，则需要                                                                明确写明“步骤”，方法是由一系列有序步骤组成的。</p>
</li>
<li><p>**【应用】：概念的具体应用，可以通过提供具体的代码示例或实际应用案例等。</p>
</li>
<li><p><strong>最佳实践</strong>：①介绍在使用该概念或技术时应遵循的最佳实践或准则。</p>
<p>​                     ②经验或者建议的总结。</p>
</li>
</ul>
<p>3.<strong>为什么</strong>：</p>
<ul>
<li><strong>目的</strong>：阐述使用该技术的目的。</li>
<li><strong>应用价值</strong>：讨论技术在解决实际问题中的应用价值和重要性。</li>
<li><strong>基本原理</strong>：解释技术背后的基本原理和工作机制。</li>
<li><strong>设计理念</strong>：探讨技术设计背后的理念和哲学。</li>
</ul>
<p>4.<strong>相关知识点</strong>    </p>
<h1 id="知识框架1"><a href="#知识框架1" class="headerlink" title="知识框架1"></a>知识框架1</h1><p><strong>1.是什么</strong>：</p>
<ul>
<li><p><strong>定义</strong>：对概念或技术的简洁明了的定义。(包含了本质)	</p>
</li>
<li><p><strong>组成部分</strong>：列出构成该概念或技术的各个部分或元素。（这是一种局部性思路）</p>
</li>
<li><p><strong>结构形式</strong>：根据定义，展现出这个概念的不同表现形式结构或者组成部分对应的静态结构。（这是一种系统式思路）</p>
</li>
<li><p><strong>分类</strong></p>
<p>是在一个更大的概念框架内，不同的变体或子类。这些变体具有该概念的基本属性，但在某些方面有独特的特征，是该概念的不同表现形式。</p>
</li>
<li><p><strong>所属领域</strong>：说明该概念或技术属于哪个更大的类别或领域。</p>
</li>
<li><p><strong>特征</strong>：描述概念或技术的主要特点和属性。</p>
</li>
</ul>
<h4 id="PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-1"><a href="#PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-1" class="headerlink" title="PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"></a>PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。</h4><p><strong>2.怎么用</strong>：</p>
<ul>
<li><p><strong>作用</strong>：描述这个概念或者技术哪些作用。</p>
</li>
<li><p><strong>使用方法</strong>：列出使用该概念或技术的方法。             –  使用方法可能由逻辑性弱或者强，如果逻辑性强，则需要                                                                明确写明“步骤”，方法是由一系列有序步骤组成的。</p>
</li>
<li><p>**【应用】：概念的具体应用，可以通过提供具体的代码示例或实际应用案例等。</p>
</li>
<li><p><strong>最佳实践</strong>：①介绍在使用该概念或技术时应遵循的最佳实践或准则。</p>
<p>​                     ②经验或者建议的总结。</p>
</li>
</ul>
<p>3.<strong>为什么</strong>：</p>
<ul>
<li><strong>目的</strong>：阐述使用该技术的目的。</li>
<li><strong>应用价值</strong>：讨论技术在解决实际问题中的应用价值和重要性。</li>
<li><strong>基本原理</strong>：解释技术背后的基本原理和工作机制，即展示这个知识体系各个组成部分之间的动态变化，能让人体系化的理解这个概念。</li>
<li><strong>设计理念</strong>：探讨技术设计背后的理念和哲学。</li>
</ul>
<p>4.<strong>相关知识点</strong>    框架</p>
<p><strong>1.是什么</strong>：</p>
<ul>
<li><p><strong>定义</strong>：对概念或技术的简洁明了的定义。(包含了本质)	</p>
</li>
<li><p><strong>组成部分</strong>：列出构成该概念或技术的各个部分或元素。（这是一种局部性思路）</p>
</li>
<li><p><strong>结构形式</strong>：根据定义，展现出这个概念的不同表现形式结构及运行过程。（这是一种系统式思路）</p>
</li>
<li><p><strong>分类</strong></p>
<p>是在一个更大的概念框架内，不同的变体或子类。这些变体具有该概念的基本属性，但在某些方面有独特的特征，是该概念的不同表现形式。</p>
</li>
<li><p><strong>所属领域</strong>：说明该概念或技术属于哪个更大的类别或领域。</p>
</li>
<li><p><strong>特征</strong>：描述概念或技术的主要特点和属性。</p>
</li>
</ul>
<h4 id="PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-2"><a href="#PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-2" class="headerlink" title="PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"></a>PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。</h4><p><strong>2.怎么用</strong>：</p>
<ul>
<li><p><strong>作用</strong>：描述这个概念或者技术哪些作用。</p>
</li>
<li><p><strong>使用方法</strong>：列出使用该概念或技术的方法。             –  使用方法可能由逻辑性弱或者强，如果逻辑性强，则需要                                                                明确写明“步骤”，方法是由一系列有序步骤组成的。</p>
</li>
<li><p>**【应用】：概念的具体应用，可以通过提供具体的代码示例或实际应用案例等。</p>
</li>
<li><p><strong>最佳实践</strong>：①介绍在使用该概念或技术时应遵循的最佳实践或准则。</p>
<p>​                     ②经验或者建议的总结。</p>
</li>
</ul>
<p>3.<strong>为什么</strong>：</p>
<ul>
<li><strong>目的</strong>：阐述使用该技术的目的。</li>
<li><strong>应用价值</strong>：讨论技术在解决实际问题中的应用价值和重要性。</li>
<li><strong>基本原理</strong>：解释技术背后的基本原理和工作机制。</li>
<li><strong>设计理念</strong>：探讨技术设计背后的理念和哲学。</li>
</ul>
<p>4.<strong>相关知识点</strong>    </p>
<h1 id="知识框架1-1"><a href="#知识框架1-1" class="headerlink" title="知识框架1"></a>知识框架1</h1><p><strong>1.是什么</strong>：</p>
<ul>
<li><p><strong>定义</strong>：对概念或技术的简洁明了的定义。(包含了本质)	</p>
</li>
<li><p><strong>组成部分</strong>：列出构成该概念或技术的各个部分或元素。（这是一种局部性思路）</p>
</li>
<li><p><strong>结构形式</strong>：根据定义，展现出这个概念的不同表现形式结构或者组成部分对应的静态结构。（这是一种系统式思路）</p>
</li>
<li><p><strong>分类</strong></p>
<p>是在一个更大的概念框架内，不同的变体或子类。这些变体具有该概念的基本属性，但在某些方面有独特的特征，是该概念的不同表现形式。</p>
</li>
<li><p><strong>所属领域</strong>：说明该概念或技术属于哪个更大的类别或领域。</p>
</li>
<li><p><strong>特征</strong>：描述概念或技术的主要特点和属性。</p>
</li>
</ul>
<h4 id="PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-3"><a href="#PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-3" class="headerlink" title="PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"></a>PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。</h4><p><strong>2.怎么用</strong>：</p>
<ul>
<li><p><strong>作用</strong>：描述这个概念或者技术哪些作用。</p>
</li>
<li><p><strong>使用方法</strong>：列出使用该概念或技术的方法。             –  使用方法可能由逻辑性弱或者强，如果逻辑性强，则需要                                                                明确写明“步骤”，方法是由一系列有序步骤组成的。</p>
</li>
<li><p>**【应用】：概念的具体应用，可以通过提供具体的代码示例或实际应用案例等。</p>
</li>
<li><p><strong>最佳实践</strong>：①介绍在使用该概念或技术时应遵循的最佳实践或准则。</p>
<p>​                     ②经验或者建议的总结。</p>
</li>
</ul>
<p>3.<strong>为什么</strong>：</p>
<ul>
<li><strong>目的</strong>：阐述使用该技术的目的。</li>
<li><strong>应用价值</strong>：讨论技术在解决实际问题中的应用价值和重要性。</li>
<li><strong>基本原理</strong>：解释技术背后的基本原理和工作机制，即展示这个知识体系各个组成部分之间的动态变化，能让人体系化的理解这个概念。</li>
<li><strong>设计理念</strong>：探讨技术设计背后的理念和哲学。</li>
</ul>
<p>4.<strong>相关知识点</strong># 知识框架</p>
<p><strong>1.是什么</strong>：</p>
<ul>
<li><p><strong>定义</strong>：对概念或技术的简洁明了的定义。(包含了本质)	</p>
</li>
<li><p><strong>组成部分</strong>：列出构成该概念或技术的各个部分或元素。（这是一种局部性思路）</p>
</li>
<li><p><strong>结构形式</strong>：根据定义，展现出这个概念的不同表现形式结构及运行过程。（这是一种系统式思路）</p>
</li>
<li><p><strong>分类</strong></p>
<p>是在一个更大的概念框架内，不同的变体或子类。这些变体具有该概念的基本属性，但在某些方面有独特的特征，是该概念的不同表现形式。</p>
</li>
<li><p><strong>所属领域</strong>：说明该概念或技术属于哪个更大的类别或领域。</p>
</li>
<li><p><strong>特征</strong>：描述概念或技术的主要特点和属性。</p>
</li>
</ul>
<h4 id="PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-4"><a href="#PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-4" class="headerlink" title="PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"></a>PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。</h4><p><strong>2.怎么用</strong>：</p>
<ul>
<li><p><strong>作用</strong>：描述这个概念或者技术哪些作用。</p>
</li>
<li><p><strong>使用方法</strong>：列出使用该概念或技术的方法。             –  使用方法可能由逻辑性弱或者强，如果逻辑性强，则需要                                                                明确写明“步骤”，方法是由一系列有序步骤组成的。</p>
</li>
<li><p>**【应用】：概念的具体应用，可以通过提供具体的代码示例或实际应用案例等。</p>
</li>
<li><p><strong>最佳实践</strong>：①介绍在使用该概念或技术时应遵循的最佳实践或准则。</p>
<p>​                     ②经验或者建议的总结。</p>
</li>
</ul>
<p>3.<strong>为什么</strong>：</p>
<ul>
<li><strong>目的</strong>：阐述使用该技术的目的。</li>
<li><strong>应用价值</strong>：讨论技术在解决实际问题中的应用价值和重要性。</li>
<li><strong>基本原理</strong>：解释技术背后的基本原理和工作机制。</li>
<li><strong>设计理念</strong>：探讨技术设计背后的理念和哲学。</li>
</ul>
<p>4.<strong>相关知识点</strong>    </p>
<h1 id="知识框架1-2"><a href="#知识框架1-2" class="headerlink" title="知识框架1"></a>知识框架1</h1><p><strong>1.是什么</strong>：</p>
<ul>
<li><p><strong>定义</strong>：对概念或技术的简洁明了的定义。(包含了本质)	</p>
</li>
<li><p><strong>组成部分</strong>：列出构成该概念或技术的各个部分或元素。（这是一种局部性思路）</p>
</li>
<li><p><strong>结构形式</strong>：根据定义，展现出这个概念的不同表现形式结构或者组成部分对应的静态结构。（这是一种系统式思路）</p>
</li>
<li><p><strong>分类</strong></p>
<p>是在一个更大的概念框架内，不同的变体或子类。这些变体具有该概念的基本属性，但在某些方面有独特的特征，是该概念的不同表现形式。</p>
</li>
<li><p><strong>所属领域</strong>：说明该概念或技术属于哪个更大的类别或领域。</p>
</li>
<li><p><strong>特征</strong>：描述概念或技术的主要特点和属性。</p>
</li>
</ul>
<h4 id="PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-5"><a href="#PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-5" class="headerlink" title="PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"></a>PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。</h4><p><strong>2.怎么用</strong>：</p>
<ul>
<li><p><strong>作用</strong>：描述这个概念或者技术哪些作用。</p>
</li>
<li><p><strong>使用方法</strong>：列出使用该概念或技术的方法。             –  使用方法可能由逻辑性弱或者强，如果逻辑性强，则需要                                                                明确写明“步骤”，方法是由一系列有序步骤组成的。</p>
</li>
<li><p>**【应用】：概念的具体应用，可以通过提供具体的代码示例或实际应用案例等。</p>
</li>
<li><p><strong>最佳实践</strong>：①介绍在使用该概念或技术时应遵循的最佳实践或准则。</p>
<p>​                     ②经验或者建议的总结。</p>
</li>
</ul>
<p>3.<strong>为什么</strong>：</p>
<ul>
<li><strong>目的</strong>：阐述使用该技术的目的。</li>
<li><strong>应用价值</strong>：讨论技术在解决实际问题中的应用价值和重要性。</li>
<li><strong>基本原理</strong>：解释技术背后的基本原理和工作机制，即展示这个知识体系各个组成部分之间的动态变化，能让人体系化的理解这个概念。</li>
<li><strong>设计理念</strong>：探讨技术设计背后的理念和哲学。</li>
</ul>
<p>4.<strong>相关知识点</strong>    框架</p>
<p><strong>1.是什么</strong>：</p>
<ul>
<li><p><strong>定义</strong>：对概念或技术的简洁明了的定义。(包含了本质)	</p>
</li>
<li><p><strong>组成部分</strong>：列出构成该概念或技术的各个部分或元素。（这是一种局部性思路）</p>
</li>
<li><p><strong>结构形式</strong>：根据定义，展现出这个概念的不同表现形式结构及运行过程。（这是一种系统式思路）</p>
</li>
<li><p><strong>分类</strong></p>
<p>是在一个更大的概念框架内，不同的变体或子类。这些变体具有该概念的基本属性，但在某些方面有独特的特征，是该概念的不同表现形式。</p>
</li>
<li><p><strong>所属领域</strong>：说明该概念或技术属于哪个更大的类别或领域。</p>
</li>
<li><p><strong>特征</strong>：描述概念或技术的主要特点和属性。</p>
</li>
</ul>
<h4 id="PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-6"><a href="#PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-6" class="headerlink" title="PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"></a>PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。</h4><p><strong>2.怎么用</strong>：</p>
<ul>
<li><p><strong>作用</strong>：描述这个概念或者技术哪些作用。</p>
</li>
<li><p><strong>使用方法</strong>：列出使用该概念或技术的方法。             –  使用方法可能由逻辑性弱或者强，如果逻辑性强，则需要                                                                明确写明“步骤”，方法是由一系列有序步骤组成的。</p>
</li>
<li><p>**【应用】：概念的具体应用，可以通过提供具体的代码示例或实际应用案例等。</p>
</li>
<li><p><strong>最佳实践</strong>：①介绍在使用该概念或技术时应遵循的最佳实践或准则。</p>
<p>​                     ②经验或者建议的总结。</p>
</li>
</ul>
<p>3.<strong>为什么</strong>：</p>
<ul>
<li><strong>目的</strong>：阐述使用该技术的目的。</li>
<li><strong>应用价值</strong>：讨论技术在解决实际问题中的应用价值和重要性。</li>
<li><strong>基本原理</strong>：解释技术背后的基本原理和工作机制。</li>
<li><strong>设计理念</strong>：探讨技术设计背后的理念和哲学。</li>
</ul>
<p>4.<strong>相关知识点</strong>    </p>
<h1 id="知识框架1-3"><a href="#知识框架1-3" class="headerlink" title="知识框架1"></a>知识框架1</h1><p><strong>1.是什么</strong>：</p>
<ul>
<li><p><strong>定义</strong>：对概念或技术的简洁明了的定义。(包含了本质)	</p>
</li>
<li><p><strong>组成部分</strong>：列出构成该概念或技术的各个部分或元素。（这是一种局部性思路）</p>
</li>
<li><p><strong>结构形式</strong>：根据定义，展现出这个概念的不同表现形式结构或者组成部分对应的静态结构。（这是一种系统式思路）</p>
</li>
<li><p><strong>分类</strong></p>
<p>是在一个更大的概念框架内，不同的变体或子类。这些变体具有该概念的基本属性，但在某些方面有独特的特征，是该概念的不同表现形式。</p>
</li>
<li><p><strong>所属领域</strong>：说明该概念或技术属于哪个更大的类别或领域。</p>
</li>
<li><p><strong>特征</strong>：描述概念或技术的主要特点和属性。</p>
</li>
</ul>
<h4 id="PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-7"><a href="#PS-结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。-7" class="headerlink" title="PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。"></a>PS:结构形式和分类和组成可以灵活使用。可以只写一个，也可以都写。</h4><p><strong>2.怎么用</strong>：</p>
<ul>
<li><p><strong>作用</strong>：描述这个概念或者技术哪些作用。</p>
</li>
<li><p><strong>使用方法</strong>：列出使用该概念或技术的方法。             –  使用方法可能由逻辑性弱或者强，如果逻辑性强，则需要                                                                明确写明“步骤”，方法是由一系列有序步骤组成的。</p>
</li>
<li><p>**【应用】：概念的具体应用，可以通过提供具体的代码示例或实际应用案例等。</p>
</li>
<li><p><strong>最佳实践</strong>：①介绍在使用该概念或技术时应遵循的最佳实践或准则。</p>
<p>​                     ②经验或者建议的总结。</p>
</li>
</ul>
<p>3.<strong>为什么</strong>：</p>
<ul>
<li><strong>目的</strong>：阐述使用该技术的目的。</li>
<li><strong>应用价值</strong>：讨论技术在解决实际问题中的应用价值和重要性。</li>
<li><strong>基本原理</strong>：解释技术背后的基本原理和工作机制，即展示这个知识体系各个组成部分之间的动态变化，能让人体系化的理解这个概念。</li>
<li><strong>设计理念</strong>：探讨技术设计背后的理念和哲学。</li>
</ul>
<p>4.<strong>相关知识点</strong></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>移动IP</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%A7%BB%E5%8A%A8IP/</url>
    <content><![CDATA[<h1 id="移动IP"><a href="#移动IP" class="headerlink" title="移动IP"></a>移动IP</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>移动IP是一种通信协议，允许移动设备在不同的网络中漫游而无需改变其IP地址。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.移动节点（移动设备）</p>
<p>2.家庭代理（Home Agent）</p>
<p>3.外部代理（Foreign Agent）</p>
<p>4.认证服务器</p>
<h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p>移动IP包括注册、数据传递和维护三个主要过程，涉及移动节点在不同网络中的位置更新和数据包的转发。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>基于IPv4和IPv6有不同的移动IP实现方式，例如Mobile IPv4和Mobile IPv6。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>允许设备保持连通性而无需改变IP地址，适用于移动设备频繁切换网络的场景。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240622223229641.png" alt="image-20240622223229641"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-移动节点（Mobile-Node）："><a href="#1-移动节点（Mobile-Node）：" class="headerlink" title="1.移动节点（Mobile Node）："></a>1.移动节点（Mobile Node）：</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p>移动IP网络中的移动设备，如笔记本电脑、智能手机等，可以在不同的网络中移动，并能够保持连接而无需更改IP地址。</p>
<h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p>移动节点允许设备在漫游过程中保持通信，通过与归属代理和外部代理协作，确保数据传输的连续性。</p>
<h3 id="2-归属代理（Home-Agent）："><a href="#2-归属代理（Home-Agent）：" class="headerlink" title="2.归属代理（Home Agent）："></a>2.归属代理（Home Agent）：</h3><h4 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h4><p>归属代理是一个位于移动IP网络中的服务器，负责管理移动节点的永久地址，并处理与移动节点之间的通信。</p>
<h4 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h4><p>归属代理允许移动节点在不同的网络中保持不变的永久地址，管理移动节点的位置信息，并在需要时重定向数据流量。</p>
<h3 id="3-永久地址（Home-Address）："><a href="#3-永久地址（Home-Address）：" class="headerlink" title="3.永久地址（Home Address）："></a>3.永久地址（Home Address）：</h3><h4 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h4><p>永久地址是归属代理分配给移动节点的固定IP地址，用于唯一标识移动节点在其所属网络中的位置。</p>
<h4 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h4><p>永久地址允许其他设备和网络服务识别和定位移动节点，即使移动节点在外部网络中使用不同的转交地址。</p>
<h3 id="4-外部代理（Foreign-Agent）："><a href="#4-外部代理（Foreign-Agent）：" class="headerlink" title="4.外部代理（Foreign Agent）："></a>4.外部代理（Foreign Agent）：</h3><h4 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h4><p>外部代理是移动IP网络中的一种服务器，位于移动节点访问的外部网络中，负责向移动节点提供临时转交地址。</p>
<h4 id="作用-3"><a href="#作用-3" class="headerlink" title="作用"></a>作用</h4><p>外部代理接收移动节点的注册请求，分配和管理转交地址，同时在外部网络中转发数据流量以保证移动节点的连接。</p>
<h3 id="5-转交地址（Care-of-Address）："><a href="#5-转交地址（Care-of-Address）：" class="headerlink" title="5.转交地址（Care-of Address）："></a>5.转交地址（Care-of Address）：</h3><h4 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h4><p>转交地址是移动节点在其当前所处网络中获得的临时IP地址，由外部代理分配给移动节点。</p>
<h4 id="作用-4"><a href="#作用-4" class="headerlink" title="作用"></a>作用</h4><p>转交地址用于标识移动节点在外部网络中的当前位置，是数据包在移动节点移动时临时的接收地址。<br>IP</p>
<h2 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h2><p>移动IP是一种通信协议，允许移动设备在不同的网络中漫游而无需改变其IP地址。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.移动节点（移动设备）</p>
<p>2.家庭代理（Home Agent）</p>
<p>3.外部代理（Foreign Agent）</p>
<p>4.认证服务器</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p>移动IP包括注册、数据传递和维护三个主要过程，涉及移动节点在不同网络中的位置更新和数据包的转发。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>基于IPv4和IPv6有不同的移动IP实现方式，例如Mobile IPv4和Mobile IPv6。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><p>允许设备保持连通性而无需改变IP地址，适用于移动设备频繁切换网络的场景。</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240622223229641.png" alt="image-20240622223229641"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-移动节点（Mobile-Node）：-1"><a href="#1-移动节点（Mobile-Node）：-1" class="headerlink" title="1.移动节点（Mobile Node）："></a>1.移动节点（Mobile Node）：</h3><h4 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h4><p>移动IP网络中的移动设备，如笔记本电脑、智能手机等，可以在不同的网络中移动，并能够保持连接而无需更改IP地址。</p>
<h4 id="作用-5"><a href="#作用-5" class="headerlink" title="作用"></a>作用</h4><p>移动节点允许设备在漫游过程中保持通信，通过与归属代理和外部代理协作，确保数据传输的连续性。</p>
<h3 id="2-归属代理（Home-Agent）：-1"><a href="#2-归属代理（Home-Agent）：-1" class="headerlink" title="2.归属代理（Home Agent）："></a>2.归属代理（Home Agent）：</h3><h4 id="定义-8"><a href="#定义-8" class="headerlink" title="定义"></a>定义</h4><p>归属代理是一个位于移动IP网络中的服务器，负责管理移动节点的永久地址，并处理与移动节点之间的通信。</p>
<h4 id="作用-6"><a href="#作用-6" class="headerlink" title="作用"></a>作用</h4><p>归属代理允许移动节点在不同的网络中保持不变的永久地址，管理移动节点的位置信息，并在需要时重定向数据流量。</p>
<h3 id="3-永久地址（Home-Address）：-1"><a href="#3-永久地址（Home-Address）：-1" class="headerlink" title="3.永久地址（Home Address）："></a>3.永久地址（Home Address）：</h3><h4 id="定义-9"><a href="#定义-9" class="headerlink" title="定义"></a>定义</h4><p>永久地址是归属代理分配给移动节点的固定IP地址，用于唯一标识移动节点在其所属网络中的位置。</p>
<h4 id="作用-7"><a href="#作用-7" class="headerlink" title="作用"></a>作用</h4><p>永久地址允许其他设备和网络服务识别和定位移动节点，即使移动节点在外部网络中使用不同的转交地址。</p>
<h3 id="4-外部代理（Foreign-Agent）：-1"><a href="#4-外部代理（Foreign-Agent）：-1" class="headerlink" title="4.外部代理（Foreign Agent）："></a>4.外部代理（Foreign Agent）：</h3><h4 id="定义-10"><a href="#定义-10" class="headerlink" title="定义"></a>定义</h4><p>外部代理是移动IP网络中的一种服务器，位于移动节点访问的外部网络中，负责向移动节点提供临时转交地址。</p>
<h4 id="作用-8"><a href="#作用-8" class="headerlink" title="作用"></a>作用</h4><p>外部代理接收移动节点的注册请求，分配和管理转交地址，同时在外部网络中转发数据流量以保证移动节点的连接。</p>
<h3 id="5-转交地址（Care-of-Address）：-1"><a href="#5-转交地址（Care-of-Address）：-1" class="headerlink" title="5.转交地址（Care-of Address）："></a>5.转交地址（Care-of Address）：</h3><h4 id="定义-11"><a href="#定义-11" class="headerlink" title="定义"></a>定义</h4><p>转交地址是移动节点在其当前所处网络中获得的临时IP地址，由外部代理分配给移动节点。</p>
<h4 id="作用-9"><a href="#作用-9" class="headerlink" title="作用"></a>作用</h4><p>转交地址用于标识移动节点在外部网络中的当前位置，是数据包在移动节点移动时临时的接收地址。# 移动IP</p>
<h2 id="定义-12"><a href="#定义-12" class="headerlink" title="定义"></a>定义</h2><p>移动IP是一种通信协议，允许移动设备在不同的网络中漫游而无需改变其IP地址。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.移动节点（移动设备）</p>
<p>2.家庭代理（Home Agent）</p>
<p>3.外部代理（Foreign Agent）</p>
<p>4.认证服务器</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p>移动IP包括注册、数据传递和维护三个主要过程，涉及移动节点在不同网络中的位置更新和数据包的转发。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>基于IPv4和IPv6有不同的移动IP实现方式，例如Mobile IPv4和Mobile IPv6。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><p>允许设备保持连通性而无需改变IP地址，适用于移动设备频繁切换网络的场景。</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240622223229641.png" alt="image-20240622223229641"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-移动节点（Mobile-Node）：-2"><a href="#1-移动节点（Mobile-Node）：-2" class="headerlink" title="1.移动节点（Mobile Node）："></a>1.移动节点（Mobile Node）：</h3><h4 id="定义-13"><a href="#定义-13" class="headerlink" title="定义"></a>定义</h4><p>移动IP网络中的移动设备，如笔记本电脑、智能手机等，可以在不同的网络中移动，并能够保持连接而无需更改IP地址。</p>
<h4 id="作用-10"><a href="#作用-10" class="headerlink" title="作用"></a>作用</h4><p>移动节点允许设备在漫游过程中保持通信，通过与归属代理和外部代理协作，确保数据传输的连续性。</p>
<h3 id="2-归属代理（Home-Agent）：-2"><a href="#2-归属代理（Home-Agent）：-2" class="headerlink" title="2.归属代理（Home Agent）："></a>2.归属代理（Home Agent）：</h3><h4 id="定义-14"><a href="#定义-14" class="headerlink" title="定义"></a>定义</h4><p>归属代理是一个位于移动IP网络中的服务器，负责管理移动节点的永久地址，并处理与移动节点之间的通信。</p>
<h4 id="作用-11"><a href="#作用-11" class="headerlink" title="作用"></a>作用</h4><p>归属代理允许移动节点在不同的网络中保持不变的永久地址，管理移动节点的位置信息，并在需要时重定向数据流量。</p>
<h3 id="3-永久地址（Home-Address）：-2"><a href="#3-永久地址（Home-Address）：-2" class="headerlink" title="3.永久地址（Home Address）："></a>3.永久地址（Home Address）：</h3><h4 id="定义-15"><a href="#定义-15" class="headerlink" title="定义"></a>定义</h4><p>永久地址是归属代理分配给移动节点的固定IP地址，用于唯一标识移动节点在其所属网络中的位置。</p>
<h4 id="作用-12"><a href="#作用-12" class="headerlink" title="作用"></a>作用</h4><p>永久地址允许其他设备和网络服务识别和定位移动节点，即使移动节点在外部网络中使用不同的转交地址。</p>
<h3 id="4-外部代理（Foreign-Agent）：-2"><a href="#4-外部代理（Foreign-Agent）：-2" class="headerlink" title="4.外部代理（Foreign Agent）："></a>4.外部代理（Foreign Agent）：</h3><h4 id="定义-16"><a href="#定义-16" class="headerlink" title="定义"></a>定义</h4><p>外部代理是移动IP网络中的一种服务器，位于移动节点访问的外部网络中，负责向移动节点提供临时转交地址。</p>
<h4 id="作用-13"><a href="#作用-13" class="headerlink" title="作用"></a>作用</h4><p>外部代理接收移动节点的注册请求，分配和管理转交地址，同时在外部网络中转发数据流量以保证移动节点的连接。</p>
<h3 id="5-转交地址（Care-of-Address）：-2"><a href="#5-转交地址（Care-of-Address）：-2" class="headerlink" title="5.转交地址（Care-of Address）："></a>5.转交地址（Care-of Address）：</h3><h4 id="定义-17"><a href="#定义-17" class="headerlink" title="定义"></a>定义</h4><p>转交地址是移动节点在其当前所处网络中获得的临时IP地址，由外部代理分配给移动节点。</p>
<h4 id="作用-14"><a href="#作用-14" class="headerlink" title="作用"></a>作用</h4><p>转交地址用于标识移动节点在外部网络中的当前位置，是数据包在移动节点移动时临时的接收地址。<br>IP</p>
<h2 id="定义-18"><a href="#定义-18" class="headerlink" title="定义"></a>定义</h2><p>移动IP是一种通信协议，允许移动设备在不同的网络中漫游而无需改变其IP地址。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.移动节点（移动设备）</p>
<p>2.家庭代理（Home Agent）</p>
<p>3.外部代理（Foreign Agent）</p>
<p>4.认证服务器</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p>移动IP包括注册、数据传递和维护三个主要过程，涉及移动节点在不同网络中的位置更新和数据包的转发。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>基于IPv4和IPv6有不同的移动IP实现方式，例如Mobile IPv4和Mobile IPv6。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><p>允许设备保持连通性而无需改变IP地址，适用于移动设备频繁切换网络的场景。</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240622223229641.png" alt="image-20240622223229641"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-移动节点（Mobile-Node）：-3"><a href="#1-移动节点（Mobile-Node）：-3" class="headerlink" title="1.移动节点（Mobile Node）："></a>1.移动节点（Mobile Node）：</h3><h4 id="定义-19"><a href="#定义-19" class="headerlink" title="定义"></a>定义</h4><p>移动IP网络中的移动设备，如笔记本电脑、智能手机等，可以在不同的网络中移动，并能够保持连接而无需更改IP地址。</p>
<h4 id="作用-15"><a href="#作用-15" class="headerlink" title="作用"></a>作用</h4><p>移动节点允许设备在漫游过程中保持通信，通过与归属代理和外部代理协作，确保数据传输的连续性。</p>
<h3 id="2-归属代理（Home-Agent）：-3"><a href="#2-归属代理（Home-Agent）：-3" class="headerlink" title="2.归属代理（Home Agent）："></a>2.归属代理（Home Agent）：</h3><h4 id="定义-20"><a href="#定义-20" class="headerlink" title="定义"></a>定义</h4><p>归属代理是一个位于移动IP网络中的服务器，负责管理移动节点的永久地址，并处理与移动节点之间的通信。</p>
<h4 id="作用-16"><a href="#作用-16" class="headerlink" title="作用"></a>作用</h4><p>归属代理允许移动节点在不同的网络中保持不变的永久地址，管理移动节点的位置信息，并在需要时重定向数据流量。</p>
<h3 id="3-永久地址（Home-Address）：-3"><a href="#3-永久地址（Home-Address）：-3" class="headerlink" title="3.永久地址（Home Address）："></a>3.永久地址（Home Address）：</h3><h4 id="定义-21"><a href="#定义-21" class="headerlink" title="定义"></a>定义</h4><p>永久地址是归属代理分配给移动节点的固定IP地址，用于唯一标识移动节点在其所属网络中的位置。</p>
<h4 id="作用-17"><a href="#作用-17" class="headerlink" title="作用"></a>作用</h4><p>永久地址允许其他设备和网络服务识别和定位移动节点，即使移动节点在外部网络中使用不同的转交地址。</p>
<h3 id="4-外部代理（Foreign-Agent）：-3"><a href="#4-外部代理（Foreign-Agent）：-3" class="headerlink" title="4.外部代理（Foreign Agent）："></a>4.外部代理（Foreign Agent）：</h3><h4 id="定义-22"><a href="#定义-22" class="headerlink" title="定义"></a>定义</h4><p>外部代理是移动IP网络中的一种服务器，位于移动节点访问的外部网络中，负责向移动节点提供临时转交地址。</p>
<h4 id="作用-18"><a href="#作用-18" class="headerlink" title="作用"></a>作用</h4><p>外部代理接收移动节点的注册请求，分配和管理转交地址，同时在外部网络中转发数据流量以保证移动节点的连接。</p>
<h3 id="5-转交地址（Care-of-Address）：-3"><a href="#5-转交地址（Care-of-Address）：-3" class="headerlink" title="5.转交地址（Care-of Address）："></a>5.转交地址（Care-of Address）：</h3><h4 id="定义-23"><a href="#定义-23" class="headerlink" title="定义"></a>定义</h4><p>转交地址是移动节点在其当前所处网络中获得的临时IP地址，由外部代理分配给移动节点。</p>
<h4 id="作用-19"><a href="#作用-19" class="headerlink" title="作用"></a>作用</h4><p>转交地址用于标识移动节点在外部网络中的当前位置，是数据包在移动节点移动时临时的接收地址。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>第一章导图</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%80%E7%AB%A0%E5%AF%BC%E5%9B%BE/</url>
    <content><![CDATA[<p><img src="/../TyporaImage/image-20240602173626262.png" alt="image-20240602173626262"><img src="/../TyporaImage/image-20240602173626262.png" alt="image-20240602173626262"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>第三章导图</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%89%E7%AB%A0%E5%AF%BC%E5%9B%BE/</url>
    <content><![CDATA[<p><img src="/../TyporaImage/image-20240608173609222.png" alt="image-20240608173609222"><img src="/../TyporaImage/image-20240608173609222.png" alt="image-20240608173609222"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>第二章导图</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%BA%8C%E7%AB%A0%E5%AF%BC%E5%9B%BE/</url>
    <content><![CDATA[<p><img src="/../TyporaImage/image-20240603205219927.png" alt="image-20240603205219927"><img src="/../TyporaImage/image-20240603205219927.png" alt="image-20240603205219927"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>第五章导图</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%BA%94%E7%AB%A0%E5%AF%BC%E5%9B%BE/</url>
    <content><![CDATA[<p><img src="/../TyporaImage/image-20240622223857597.png" alt="image-20240622223857597"><img src="/../TyporaImage/image-20240622223857597.png" alt="image-20240622223857597"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>第四章导图</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E5%9B%9B%E7%AB%A0%E5%AF%BC%E5%9B%BE/</url>
    <content><![CDATA[<p><img src="/../TyporaImage/image-20240617223257828.png" alt="image-20240617223257828"></p>
<p>功能：</p>
<p>1.路由选择与分组转发</p>
<p>2.异构网络互联</p>
<p>3.拥塞控制</p>
<p>功能：</p>
<p>1.路由选择与分组转发</p>
<p>2.异构网络互联</p>
<p>3.拥塞控制<img src="/../TyporaImage/image-20240617223257828.png" alt="image-20240617223257828"></p>
<p>功能：</p>
<p>1.路由选择与分组转发</p>
<p>2.异构网络互联</p>
<p>3.拥塞控制</p>
<p>功能：</p>
<p>1.路由选择与分组转发</p>
<p>2.异构网络互联</p>
<p>3.拥塞控制</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>第六章导图</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E5%85%AD%E7%AB%A0%E5%AF%BC%E5%9B%BE/</url>
    <content><![CDATA[<p><img src="/../TyporaImage/image-20240623134112359.png" alt="image-20240623134112359"><img src="/../TyporaImage/image-20240623134112359.png" alt="image-20240623134112359"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>编码和调制</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BC%96%E7%A0%81%E5%92%8C%E8%B0%83%E5%88%B6/</url>
    <content><![CDATA[<h1 id="编码和调制"><a href="#编码和调制" class="headerlink" title="编码和调制"></a>编码和调制</h1><h2 id="编码与调制："><a href="#编码与调制：" class="headerlink" title="编码与调制："></a>编码与调制：</h2><p><img src="/../TyporaImage/image-20240606214817809.png" alt="image-20240606214817809"></p>
<h2 id="数字数据编码"><a href="#数字数据编码" class="headerlink" title="数字数据编码"></a>数字数据编码</h2><h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-非归零编码"><a href="#1-非归零编码" class="headerlink" title="1.非归零编码"></a>1.非归零编码</h4><img src="../TyporaImage/image-20240606215246656.png" alt="image-20240606215246656" style="zoom:50%;" />

<h4 id="2-归零编码"><a href="#2-归零编码" class="headerlink" title="2.归零编码"></a>2.归零编码</h4><img src="../TyporaImage/image-20240606215304702.png" alt="image-20240606215304702" style="zoom:67%;" />

<h4 id="3-反向不归零编码"><a href="#3-反向不归零编码" class="headerlink" title="3.反向不归零编码"></a>3.反向不归零编码</h4><img src="../TyporaImage/image-20240606215316683.png" alt="image-20240606215316683" style="zoom:67%;" />

<h4 id="4-曼彻斯特编码"><a href="#4-曼彻斯特编码" class="headerlink" title="4.曼彻斯特编码"></a>4.曼彻斯特编码</h4><img src="../TyporaImage/image-20240606215411681.png" alt="image-20240606215411681" style="zoom:67%;" />

<h4 id="5-差分曼彻斯特编码"><a href="#5-差分曼彻斯特编码" class="headerlink" title="5.差分曼彻斯特编码"></a>5.差分曼彻斯特编码</h4><img src="../TyporaImage/image-20240606215428477.png" alt="image-20240606215428477" style="zoom:67%;" />

<h4 id="6-4B-5B编码"><a href="#6-4B-5B编码" class="headerlink" title="6.4B&#x2F;5B编码"></a>6.4B&#x2F;5B编码</h4><img src="../TyporaImage/image-20240606215448631.png" alt="image-20240606215448631" style="zoom:67%;" />



<h2 id="数字数据调制"><a href="#数字数据调制" class="headerlink" title="数字数据调制"></a>数字数据调制</h2><p>分类和组成</p>
<p>1.调幅</p>
<p>2.调频</p>
<p>3.调相</p>
<p>4.QAM（即，调幅+调相）</p>
<h2 id="模拟信号编码"><a href="#模拟信号编码" class="headerlink" title="模拟信号编码"></a>模拟信号编码</h2><p>怎么做：</p>
<p>使用方式：</p>
<p>1.抽样</p>
<p>2.量化</p>
<p>3.编码</p>
<p><img src="/../TyporaImage/image-20240606215927596.png" alt="image-20240606215927596"></p>
<h2 id="模拟信号调制"><a href="#模拟信号调制" class="headerlink" title="模拟信号调制"></a>模拟信号调制</h2><p><img src="/../TyporaImage/image-20240606215959849.png" alt="image-20240606215959849"></p>
<h2 id="相关的知识点"><a href="#相关的知识点" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><h4 id="信道上传送的信号"><a href="#信道上传送的信号" class="headerlink" title="信道上传送的信号:"></a>信道上传送的信号:</h4><p>1.基带信号</p>
<p><img src="/../TyporaImage/image-20240606214438920.png" alt="image-20240606214438920"></p>
<p>2.宽带信号</p>
<p><img src="/../TyporaImage/image-20240606214710944.png" alt="image-20240606214710944">调制</p>
<h2 id="编码与调制：-1"><a href="#编码与调制：-1" class="headerlink" title="编码与调制："></a>编码与调制：</h2><p><img src="/../TyporaImage/image-20240606214817809.png" alt="image-20240606214817809"></p>
<h2 id="数字数据编码-1"><a href="#数字数据编码-1" class="headerlink" title="数字数据编码"></a>数字数据编码</h2><h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-非归零编码-1"><a href="#1-非归零编码-1" class="headerlink" title="1.非归零编码"></a>1.非归零编码</h4><img src="../TyporaImage/image-20240606215246656.png" alt="image-20240606215246656" style="zoom:50%;" />

<h4 id="2-归零编码-1"><a href="#2-归零编码-1" class="headerlink" title="2.归零编码"></a>2.归零编码</h4><img src="../TyporaImage/image-20240606215304702.png" alt="image-20240606215304702" style="zoom:67%;" />

<h4 id="3-反向不归零编码-1"><a href="#3-反向不归零编码-1" class="headerlink" title="3.反向不归零编码"></a>3.反向不归零编码</h4><img src="../TyporaImage/image-20240606215316683.png" alt="image-20240606215316683" style="zoom:67%;" />

<h4 id="4-曼彻斯特编码-1"><a href="#4-曼彻斯特编码-1" class="headerlink" title="4.曼彻斯特编码"></a>4.曼彻斯特编码</h4><img src="../TyporaImage/image-20240606215411681.png" alt="image-20240606215411681" style="zoom:67%;" />

<h4 id="5-差分曼彻斯特编码-1"><a href="#5-差分曼彻斯特编码-1" class="headerlink" title="5.差分曼彻斯特编码"></a>5.差分曼彻斯特编码</h4><img src="../TyporaImage/image-20240606215428477.png" alt="image-20240606215428477" style="zoom:67%;" />

<h4 id="6-4B-5B编码-1"><a href="#6-4B-5B编码-1" class="headerlink" title="6.4B&#x2F;5B编码"></a>6.4B&#x2F;5B编码</h4><img src="../TyporaImage/image-20240606215448631.png" alt="image-20240606215448631" style="zoom:67%;" />



<h2 id="数字数据调制-1"><a href="#数字数据调制-1" class="headerlink" title="数字数据调制"></a>数字数据调制</h2><p>分类和组成</p>
<p>1.调幅</p>
<p>2.调频</p>
<p>3.调相</p>
<p>4.QAM（即，调幅+调相）</p>
<h2 id="模拟信号编码-1"><a href="#模拟信号编码-1" class="headerlink" title="模拟信号编码"></a>模拟信号编码</h2><p>怎么做：</p>
<p>使用方式：</p>
<p>1.抽样</p>
<p>2.量化</p>
<p>3.编码</p>
<p><img src="/../TyporaImage/image-20240606215927596.png" alt="image-20240606215927596"></p>
<h2 id="模拟信号调制-1"><a href="#模拟信号调制-1" class="headerlink" title="模拟信号调制"></a>模拟信号调制</h2><p><img src="/../TyporaImage/image-20240606215959849.png" alt="image-20240606215959849"></p>
<h2 id="相关的知识点-1"><a href="#相关的知识点-1" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><h4 id="信道上传送的信号-1"><a href="#信道上传送的信号-1" class="headerlink" title="信道上传送的信号:"></a>信道上传送的信号:</h4><p>1.基带信号</p>
<p><img src="/../TyporaImage/image-20240606214438920.png" alt="image-20240606214438920"></p>
<p>2.宽带信号</p>
<p><img src="/../TyporaImage/image-20240606214710944.png" alt="image-20240606214710944"># 编码和调制</p>
<h2 id="编码与调制：-2"><a href="#编码与调制：-2" class="headerlink" title="编码与调制："></a>编码与调制：</h2><p><img src="/../TyporaImage/image-20240606214817809.png" alt="image-20240606214817809"></p>
<h2 id="数字数据编码-2"><a href="#数字数据编码-2" class="headerlink" title="数字数据编码"></a>数字数据编码</h2><h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-非归零编码-2"><a href="#1-非归零编码-2" class="headerlink" title="1.非归零编码"></a>1.非归零编码</h4><img src="../TyporaImage/image-20240606215246656.png" alt="image-20240606215246656" style="zoom:50%;" />

<h4 id="2-归零编码-2"><a href="#2-归零编码-2" class="headerlink" title="2.归零编码"></a>2.归零编码</h4><img src="../TyporaImage/image-20240606215304702.png" alt="image-20240606215304702" style="zoom:67%;" />

<h4 id="3-反向不归零编码-2"><a href="#3-反向不归零编码-2" class="headerlink" title="3.反向不归零编码"></a>3.反向不归零编码</h4><img src="../TyporaImage/image-20240606215316683.png" alt="image-20240606215316683" style="zoom:67%;" />

<h4 id="4-曼彻斯特编码-2"><a href="#4-曼彻斯特编码-2" class="headerlink" title="4.曼彻斯特编码"></a>4.曼彻斯特编码</h4><img src="../TyporaImage/image-20240606215411681.png" alt="image-20240606215411681" style="zoom:67%;" />

<h4 id="5-差分曼彻斯特编码-2"><a href="#5-差分曼彻斯特编码-2" class="headerlink" title="5.差分曼彻斯特编码"></a>5.差分曼彻斯特编码</h4><img src="../TyporaImage/image-20240606215428477.png" alt="image-20240606215428477" style="zoom:67%;" />

<h4 id="6-4B-5B编码-2"><a href="#6-4B-5B编码-2" class="headerlink" title="6.4B&#x2F;5B编码"></a>6.4B&#x2F;5B编码</h4><img src="../TyporaImage/image-20240606215448631.png" alt="image-20240606215448631" style="zoom:67%;" />



<h2 id="数字数据调制-2"><a href="#数字数据调制-2" class="headerlink" title="数字数据调制"></a>数字数据调制</h2><p>分类和组成</p>
<p>1.调幅</p>
<p>2.调频</p>
<p>3.调相</p>
<p>4.QAM（即，调幅+调相）</p>
<h2 id="模拟信号编码-2"><a href="#模拟信号编码-2" class="headerlink" title="模拟信号编码"></a>模拟信号编码</h2><p>怎么做：</p>
<p>使用方式：</p>
<p>1.抽样</p>
<p>2.量化</p>
<p>3.编码</p>
<p><img src="/../TyporaImage/image-20240606215927596.png" alt="image-20240606215927596"></p>
<h2 id="模拟信号调制-2"><a href="#模拟信号调制-2" class="headerlink" title="模拟信号调制"></a>模拟信号调制</h2><p><img src="/../TyporaImage/image-20240606215959849.png" alt="image-20240606215959849"></p>
<h2 id="相关的知识点-2"><a href="#相关的知识点-2" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><h4 id="信道上传送的信号-2"><a href="#信道上传送的信号-2" class="headerlink" title="信道上传送的信号:"></a>信道上传送的信号:</h4><p>1.基带信号</p>
<p><img src="/../TyporaImage/image-20240606214438920.png" alt="image-20240606214438920"></p>
<p>2.宽带信号</p>
<p><img src="/../TyporaImage/image-20240606214710944.png" alt="image-20240606214710944">调制</p>
<h2 id="编码与调制：-3"><a href="#编码与调制：-3" class="headerlink" title="编码与调制："></a>编码与调制：</h2><p><img src="/../TyporaImage/image-20240606214817809.png" alt="image-20240606214817809"></p>
<h2 id="数字数据编码-3"><a href="#数字数据编码-3" class="headerlink" title="数字数据编码"></a>数字数据编码</h2><h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><h4 id="1-非归零编码-3"><a href="#1-非归零编码-3" class="headerlink" title="1.非归零编码"></a>1.非归零编码</h4><img src="../TyporaImage/image-20240606215246656.png" alt="image-20240606215246656" style="zoom:50%;" />

<h4 id="2-归零编码-3"><a href="#2-归零编码-3" class="headerlink" title="2.归零编码"></a>2.归零编码</h4><img src="../TyporaImage/image-20240606215304702.png" alt="image-20240606215304702" style="zoom:67%;" />

<h4 id="3-反向不归零编码-3"><a href="#3-反向不归零编码-3" class="headerlink" title="3.反向不归零编码"></a>3.反向不归零编码</h4><img src="../TyporaImage/image-20240606215316683.png" alt="image-20240606215316683" style="zoom:67%;" />

<h4 id="4-曼彻斯特编码-3"><a href="#4-曼彻斯特编码-3" class="headerlink" title="4.曼彻斯特编码"></a>4.曼彻斯特编码</h4><img src="../TyporaImage/image-20240606215411681.png" alt="image-20240606215411681" style="zoom:67%;" />

<h4 id="5-差分曼彻斯特编码-3"><a href="#5-差分曼彻斯特编码-3" class="headerlink" title="5.差分曼彻斯特编码"></a>5.差分曼彻斯特编码</h4><img src="../TyporaImage/image-20240606215428477.png" alt="image-20240606215428477" style="zoom:67%;" />

<h4 id="6-4B-5B编码-3"><a href="#6-4B-5B编码-3" class="headerlink" title="6.4B&#x2F;5B编码"></a>6.4B&#x2F;5B编码</h4><img src="../TyporaImage/image-20240606215448631.png" alt="image-20240606215448631" style="zoom:67%;" />



<h2 id="数字数据调制-3"><a href="#数字数据调制-3" class="headerlink" title="数字数据调制"></a>数字数据调制</h2><p>分类和组成</p>
<p>1.调幅</p>
<p>2.调频</p>
<p>3.调相</p>
<p>4.QAM（即，调幅+调相）</p>
<h2 id="模拟信号编码-3"><a href="#模拟信号编码-3" class="headerlink" title="模拟信号编码"></a>模拟信号编码</h2><p>怎么做：</p>
<p>使用方式：</p>
<p>1.抽样</p>
<p>2.量化</p>
<p>3.编码</p>
<p><img src="/../TyporaImage/image-20240606215927596.png" alt="image-20240606215927596"></p>
<h2 id="模拟信号调制-3"><a href="#模拟信号调制-3" class="headerlink" title="模拟信号调制"></a>模拟信号调制</h2><p><img src="/../TyporaImage/image-20240606215959849.png" alt="image-20240606215959849"></p>
<h2 id="相关的知识点-3"><a href="#相关的知识点-3" class="headerlink" title="相关的知识点"></a>相关的知识点</h2><h4 id="信道上传送的信号-3"><a href="#信道上传送的信号-3" class="headerlink" title="信道上传送的信号:"></a>信道上传送的信号:</h4><p>1.基带信号</p>
<p><img src="/../TyporaImage/image-20240606214438920.png" alt="image-20240606214438920"></p>
<p>2.宽带信号</p>
<p><img src="/../TyporaImage/image-20240606214710944.png" alt="image-20240606214710944"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>网络地址转换NAT</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2NAT/</url>
    <content><![CDATA[<h1 id="网络地址转换（NAT）"><a href="#网络地址转换（NAT）" class="headerlink" title="网络地址转换（NAT）"></a>网络地址转换（NAT）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>网络地址转换（NAT，Network Address Translation）是一种用于修改网络设备中的IP地址信息的方法，通常在路由器或防火墙上实现。NAT允许多个设备共享一个公共IP地址访问外部网络，从而缓解IPv4地址短缺的问题。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-私有IP地址："><a href="#1-私有IP地址：" class="headerlink" title="1.私有IP地址："></a>1.私有IP地址：</h3><p>内部网络中使用的非公共IP地址。</p>
<h3 id="2-公共IP地址："><a href="#2-公共IP地址：" class="headerlink" title="2.公共IP地址："></a>2.公共IP地址：</h3><p>在外部网络（如互联网）中使用的全球唯一IP地址。</p>
<h3 id="3-NAT设备："><a href="#3-NAT设备：" class="headerlink" title="3.NAT设备："></a>3.NAT设备：</h3><p>执行地址转换的设备，如路由器或防火墙。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>节省和优化IP地址使用，缓解IPv4地址短缺。<br>提高网络安全性，隐藏内部网络拓扑。<br>方便内部设备访问互联网和外部服务。</p>
<p>T）</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>网络地址转换（NAT，Network Address Translation）是一种用于修改网络设备中的IP地址信息的方法，通常在路由器或防火墙上实现。NAT允许多个设备共享一个公共IP地址访问外部网络，从而缓解IPv4地址短缺的问题。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-私有IP地址：-1"><a href="#1-私有IP地址：-1" class="headerlink" title="1.私有IP地址："></a>1.私有IP地址：</h3><p>内部网络中使用的非公共IP地址。</p>
<h3 id="2-公共IP地址：-1"><a href="#2-公共IP地址：-1" class="headerlink" title="2.公共IP地址："></a>2.公共IP地址：</h3><p>在外部网络（如互联网）中使用的全球唯一IP地址。</p>
<h3 id="3-NAT设备：-1"><a href="#3-NAT设备：-1" class="headerlink" title="3.NAT设备："></a>3.NAT设备：</h3><p>执行地址转换的设备，如路由器或防火墙。</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>节省和优化IP地址使用，缓解IPv4地址短缺。<br>提高网络安全性，隐藏内部网络拓扑。<br>方便内部设备访问互联网和外部服务。# 网络地址转换（NAT）</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>网络地址转换（NAT，Network Address Translation）是一种用于修改网络设备中的IP地址信息的方法，通常在路由器或防火墙上实现。NAT允许多个设备共享一个公共IP地址访问外部网络，从而缓解IPv4地址短缺的问题。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-私有IP地址：-2"><a href="#1-私有IP地址：-2" class="headerlink" title="1.私有IP地址："></a>1.私有IP地址：</h3><p>内部网络中使用的非公共IP地址。</p>
<h3 id="2-公共IP地址：-2"><a href="#2-公共IP地址：-2" class="headerlink" title="2.公共IP地址："></a>2.公共IP地址：</h3><p>在外部网络（如互联网）中使用的全球唯一IP地址。</p>
<h3 id="3-NAT设备：-2"><a href="#3-NAT设备：-2" class="headerlink" title="3.NAT设备："></a>3.NAT设备：</h3><p>执行地址转换的设备，如路由器或防火墙。</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>节省和优化IP地址使用，缓解IPv4地址短缺。<br>提高网络安全性，隐藏内部网络拓扑。<br>方便内部设备访问互联网和外部服务。</p>
<p>T）</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>网络地址转换（NAT，Network Address Translation）是一种用于修改网络设备中的IP地址信息的方法，通常在路由器或防火墙上实现。NAT允许多个设备共享一个公共IP地址访问外部网络，从而缓解IPv4地址短缺的问题。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-私有IP地址：-3"><a href="#1-私有IP地址：-3" class="headerlink" title="1.私有IP地址："></a>1.私有IP地址：</h3><p>内部网络中使用的非公共IP地址。</p>
<h3 id="2-公共IP地址：-3"><a href="#2-公共IP地址：-3" class="headerlink" title="2.公共IP地址："></a>2.公共IP地址：</h3><p>在外部网络（如互联网）中使用的全球唯一IP地址。</p>
<h3 id="3-NAT设备：-3"><a href="#3-NAT设备：-3" class="headerlink" title="3.NAT设备："></a>3.NAT设备：</h3><p>执行地址转换的设备，如路由器或防火墙。</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>节省和优化IP地址使用，缓解IPv4地址短缺。<br>提高网络安全性，隐藏内部网络拓扑。<br>方便内部设备访问互联网和外部服务。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>网络层</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BD%91%E7%BB%9C%E5%B1%82/</url>
    <content><![CDATA[<h1 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h1><h2 id="是什么："><a href="#是什么：" class="headerlink" title="是什么："></a><strong>是什么</strong>：</h2><ul>
<li><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a><strong>定义</strong></h3><p>应用层是OSI（开放系统互连）模型的第七层，负责为应用程序提供网络服务。它是用户与网络之间的接口，允许用户通过应用程序访问网络资源和服务。</p>
</li>
<li><h3 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a><strong>组成部分</strong></h3><ul>
<li><strong>应用协议</strong>：定义应用层通信的规则和格式，如HTTP、FTP、SMTP等。</li>
<li><strong>应用程序</strong>：直接与用户交互并使用应用层协议进行通信的软件，如Web浏览器、电子邮件客户端、文件传输工具等。</li>
<li><strong>服务端程序</strong>：提供特定服务并响应客户端请求的服务器端软件，如Web服务器、邮件服务器、FTP服务器等。</li>
</ul>
</li>
<li><h3 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a><strong>结构形式</strong></h3><ul>
<li><strong>客户端-服务器结构</strong>：应用层协议通常采用客户端-服务器模式，客户端发起请求，服务器处理并返回响应。</li>
<li><strong>对等结构</strong>：在某些应用层协议中（如P2P文件共享），节点既可以作为客户端也可以作为服务器。</li>
</ul>
</li>
<li><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a><strong>分类</strong></h3><ul>
<li><strong>Web服务协议</strong>：如HTTP、HTTPS，用于浏览和传输网页内容。</li>
<li><strong>电子邮件协议</strong>：如SMTP、IMAP、POP3，用于发送和接收电子邮件。</li>
<li><strong>文件传输协议</strong>：如FTP、SFTP，用于在网络上传输文件。</li>
<li><strong>远程访问协议</strong>：如Telnet、SSH，用于远程登录和管理计算机系统。</li>
</ul>
</li>
<li><h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a><strong>特征</strong></h3><ul>
<li><strong>用户交互</strong>：直接与用户应用程序交互。</li>
<li><strong>协议多样性</strong>：包含多种不同功能的应用层协议。</li>
<li><strong>数据格式化</strong>：处理和格式化数据以便在网络上传输。</li>
<li><strong>服务导向</strong>：提供特定的网络服务，如网页浏览、电子邮件、文件传输等。</li>
</ul>
</li>
</ul>
<h2 id="怎么用："><a href="#怎么用：" class="headerlink" title="怎么用："></a><strong>怎么用</strong>：</h2><ul>
<li><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a><strong>作用</strong></h3><ul>
<li>提供用户访问网络服务的接口。</li>
<li>支持各种网络应用程序的运行和通信。</li>
<li>实现数据的格式化和传输，确保应用程序之间的互操作性。</li>
</ul>
</li>
<li><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a><strong>使用方法</strong></h3><ol>
<li><strong>选择协议</strong>：根据应用需求选择合适的应用层协议，如HTTP用于Web服务，SMTP用于电子邮件。</li>
<li><strong>开发应用</strong>：编写客户端和服务器端应用程序，使用选定的应用层协议进行通信。</li>
<li><strong>配置网络</strong>：确保网络配置支持所选协议的通信需求，如开放相应的端口。</li>
<li><strong>运行测试</strong>：运行客户端和服务器，并进行通信测试，确保应用层协议正常工作。</li>
</ol>
</li>
<li><h3 id="【应用】"><a href="#【应用】" class="headerlink" title="【应用】"></a><strong>【应用】</strong></h3><ul>
<li><strong>Web浏览</strong>：用户通过浏览器访问网页，使用HTTP&#x2F;HTTPS协议。</li>
<li><strong>电子邮件</strong>：用户通过邮件客户端发送和接收邮件，使用SMTP、IMAP或POP3协议。</li>
<li><strong>文件传输</strong>：用户通过FTP客户端上传和下载文件，使用FTP或SFTP协议。</li>
<li><strong>远程登录</strong>：管理员通过SSH客户端远程管理服务器，使用SSH协议。</li>
</ul>
</li>
<li><h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a><strong>最佳实践</strong></h3><ol>
<li><strong>安全性</strong>：使用加密协议（如HTTPS、SFTP、SSH）保护数据传输。</li>
<li><strong>标准化</strong>：遵循协议标准，确保不同应用程序之间的互操作性。</li>
<li><strong>性能优化</strong>：优化应用层协议的实现，提高数据传输效率。</li>
<li><strong>错误处理</strong>：实现健壮的错误处理机制，确保通信的可靠性。</li>
</ol>
</li>
</ul>
<h2 id="为什么："><a href="#为什么：" class="headerlink" title="为什么："></a><strong>为什么</strong>：</h2><ul>
<li><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a><strong>目的</strong></h3><p>通过应用层协议实现用户与网络服务之间的交互，使得用户能够方便地访问和使用网络资源。</p>
</li>
<li><h3 id="应用价值"><a href="#应用价值" class="headerlink" title="应用价值"></a><strong>应用价值</strong></h3><p>应用层协议和服务是构建网络应用的基础，支持各种互联网服务和应用程序，提高用户体验和生产力。</p>
</li>
<li><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a><strong>基本原理</strong></h3><p>应用层通过定义特定的协议和数据格式，确保不同应用程序之间能够进行有效的通信和数据交换。</p>
</li>
<li><h3 id="设计理念"><a href="#设计理念" class="headerlink" title="设计理念"></a><strong>设计理念</strong></h3><p>关注用户需求和应用功能，提供灵活、多样的网络服务接口，确保应用程序之间的互操作性和兼容性。</p>
</li>
</ul>
<p><strong>4. 相关知识点</strong>：</p>
<ul>
<li><strong>OSI模型</strong>：应用层是OSI模型的第七层，负责提供网络服务。</li>
<li><strong>TCP&#x2F;IP模型</strong>：对应于TCP&#x2F;IP模型的应用层，整合了OSI模型的会话层、表示层和应用层功能。</li>
<li><strong>HTTP&#x2F;HTTPS</strong>：用于Web服务的应用层协议。</li>
<li><strong>SMTP&#x2F;IMAP&#x2F;POP3</strong>：用于电子邮件服务的应用层协议。</li>
<li><strong>FTP&#x2F;SFTP</strong>：用于文件传输的应用层协议。</li>
<li><strong>Telnet&#x2F;SSH</strong>：用于远程访问的应用层协议。络层</li>
</ul>
<h2 id="是什么：-1"><a href="#是什么：-1" class="headerlink" title="是什么："></a><strong>是什么</strong>：</h2><ul>
<li><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a><strong>定义</strong></h3><p>应用层是OSI（开放系统互连）模型的第七层，负责为应用程序提供网络服务。它是用户与网络之间的接口，允许用户通过应用程序访问网络资源和服务。</p>
</li>
<li><h3 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a><strong>组成部分</strong></h3><ul>
<li><strong>应用协议</strong>：定义应用层通信的规则和格式，如HTTP、FTP、SMTP等。</li>
<li><strong>应用程序</strong>：直接与用户交互并使用应用层协议进行通信的软件，如Web浏览器、电子邮件客户端、文件传输工具等。</li>
<li><strong>服务端程序</strong>：提供特定服务并响应客户端请求的服务器端软件，如Web服务器、邮件服务器、FTP服务器等。</li>
</ul>
</li>
<li><h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a><strong>结构形式</strong></h3><ul>
<li><strong>客户端-服务器结构</strong>：应用层协议通常采用客户端-服务器模式，客户端发起请求，服务器处理并返回响应。</li>
<li><strong>对等结构</strong>：在某些应用层协议中（如P2P文件共享），节点既可以作为客户端也可以作为服务器。</li>
</ul>
</li>
<li><h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a><strong>分类</strong></h3><ul>
<li><strong>Web服务协议</strong>：如HTTP、HTTPS，用于浏览和传输网页内容。</li>
<li><strong>电子邮件协议</strong>：如SMTP、IMAP、POP3，用于发送和接收电子邮件。</li>
<li><strong>文件传输协议</strong>：如FTP、SFTP，用于在网络上传输文件。</li>
<li><strong>远程访问协议</strong>：如Telnet、SSH，用于远程登录和管理计算机系统。</li>
</ul>
</li>
<li><h3 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a><strong>特征</strong></h3><ul>
<li><strong>用户交互</strong>：直接与用户应用程序交互。</li>
<li><strong>协议多样性</strong>：包含多种不同功能的应用层协议。</li>
<li><strong>数据格式化</strong>：处理和格式化数据以便在网络上传输。</li>
<li><strong>服务导向</strong>：提供特定的网络服务，如网页浏览、电子邮件、文件传输等。</li>
</ul>
</li>
</ul>
<h2 id="怎么用：-1"><a href="#怎么用：-1" class="headerlink" title="怎么用："></a><strong>怎么用</strong>：</h2><ul>
<li><h3 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a><strong>作用</strong></h3><ul>
<li>提供用户访问网络服务的接口。</li>
<li>支持各种网络应用程序的运行和通信。</li>
<li>实现数据的格式化和传输，确保应用程序之间的互操作性。</li>
</ul>
</li>
<li><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a><strong>使用方法</strong></h3><ol>
<li><strong>选择协议</strong>：根据应用需求选择合适的应用层协议，如HTTP用于Web服务，SMTP用于电子邮件。</li>
<li><strong>开发应用</strong>：编写客户端和服务器端应用程序，使用选定的应用层协议进行通信。</li>
<li><strong>配置网络</strong>：确保网络配置支持所选协议的通信需求，如开放相应的端口。</li>
<li><strong>运行测试</strong>：运行客户端和服务器，并进行通信测试，确保应用层协议正常工作。</li>
</ol>
</li>
<li><h3 id="【应用】-1"><a href="#【应用】-1" class="headerlink" title="【应用】"></a><strong>【应用】</strong></h3><ul>
<li><strong>Web浏览</strong>：用户通过浏览器访问网页，使用HTTP&#x2F;HTTPS协议。</li>
<li><strong>电子邮件</strong>：用户通过邮件客户端发送和接收邮件，使用SMTP、IMAP或POP3协议。</li>
<li><strong>文件传输</strong>：用户通过FTP客户端上传和下载文件，使用FTP或SFTP协议。</li>
<li><strong>远程登录</strong>：管理员通过SSH客户端远程管理服务器，使用SSH协议。</li>
</ul>
</li>
<li><h3 id="最佳实践-1"><a href="#最佳实践-1" class="headerlink" title="最佳实践"></a><strong>最佳实践</strong></h3><ol>
<li><strong>安全性</strong>：使用加密协议（如HTTPS、SFTP、SSH）保护数据传输。</li>
<li><strong>标准化</strong>：遵循协议标准，确保不同应用程序之间的互操作性。</li>
<li><strong>性能优化</strong>：优化应用层协议的实现，提高数据传输效率。</li>
<li><strong>错误处理</strong>：实现健壮的错误处理机制，确保通信的可靠性。</li>
</ol>
</li>
</ul>
<h2 id="为什么：-1"><a href="#为什么：-1" class="headerlink" title="为什么："></a><strong>为什么</strong>：</h2><ul>
<li><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a><strong>目的</strong></h3><p>通过应用层协议实现用户与网络服务之间的交互，使得用户能够方便地访问和使用网络资源。</p>
</li>
<li><h3 id="应用价值-1"><a href="#应用价值-1" class="headerlink" title="应用价值"></a><strong>应用价值</strong></h3><p>应用层协议和服务是构建网络应用的基础，支持各种互联网服务和应用程序，提高用户体验和生产力。</p>
</li>
<li><h3 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a><strong>基本原理</strong></h3><p>应用层通过定义特定的协议和数据格式，确保不同应用程序之间能够进行有效的通信和数据交换。</p>
</li>
<li><h3 id="设计理念-1"><a href="#设计理念-1" class="headerlink" title="设计理念"></a><strong>设计理念</strong></h3><p>关注用户需求和应用功能，提供灵活、多样的网络服务接口，确保应用程序之间的互操作性和兼容性。</p>
</li>
</ul>
<p><strong>4. 相关知识点</strong>：</p>
<ul>
<li><strong>OSI模型</strong>：应用层是OSI模型的第七层，负责提供网络服务。</li>
<li><strong>TCP&#x2F;IP模型</strong>：对应于TCP&#x2F;IP模型的应用层，整合了OSI模型的会话层、表示层和应用层功能。</li>
<li><strong>HTTP&#x2F;HTTPS</strong>：用于Web服务的应用层协议。</li>
<li><strong>SMTP&#x2F;IMAP&#x2F;POP3</strong>：用于电子邮件服务的应用层协议。</li>
<li><strong>FTP&#x2F;SFTP</strong>：用于文件传输的应用层协议。</li>
<li><strong>Telnet&#x2F;SSH</strong>：用于远程访问的应用层协议。# 网络层</li>
</ul>
<h2 id="是什么：-2"><a href="#是什么：-2" class="headerlink" title="是什么："></a><strong>是什么</strong>：</h2><ul>
<li><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a><strong>定义</strong></h3><p>应用层是OSI（开放系统互连）模型的第七层，负责为应用程序提供网络服务。它是用户与网络之间的接口，允许用户通过应用程序访问网络资源和服务。</p>
</li>
<li><h3 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a><strong>组成部分</strong></h3><ul>
<li><strong>应用协议</strong>：定义应用层通信的规则和格式，如HTTP、FTP、SMTP等。</li>
<li><strong>应用程序</strong>：直接与用户交互并使用应用层协议进行通信的软件，如Web浏览器、电子邮件客户端、文件传输工具等。</li>
<li><strong>服务端程序</strong>：提供特定服务并响应客户端请求的服务器端软件，如Web服务器、邮件服务器、FTP服务器等。</li>
</ul>
</li>
<li><h3 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a><strong>结构形式</strong></h3><ul>
<li><strong>客户端-服务器结构</strong>：应用层协议通常采用客户端-服务器模式，客户端发起请求，服务器处理并返回响应。</li>
<li><strong>对等结构</strong>：在某些应用层协议中（如P2P文件共享），节点既可以作为客户端也可以作为服务器。</li>
</ul>
</li>
<li><h3 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a><strong>分类</strong></h3><ul>
<li><strong>Web服务协议</strong>：如HTTP、HTTPS，用于浏览和传输网页内容。</li>
<li><strong>电子邮件协议</strong>：如SMTP、IMAP、POP3，用于发送和接收电子邮件。</li>
<li><strong>文件传输协议</strong>：如FTP、SFTP，用于在网络上传输文件。</li>
<li><strong>远程访问协议</strong>：如Telnet、SSH，用于远程登录和管理计算机系统。</li>
</ul>
</li>
<li><h3 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a><strong>特征</strong></h3><ul>
<li><strong>用户交互</strong>：直接与用户应用程序交互。</li>
<li><strong>协议多样性</strong>：包含多种不同功能的应用层协议。</li>
<li><strong>数据格式化</strong>：处理和格式化数据以便在网络上传输。</li>
<li><strong>服务导向</strong>：提供特定的网络服务，如网页浏览、电子邮件、文件传输等。</li>
</ul>
</li>
</ul>
<h2 id="怎么用：-2"><a href="#怎么用：-2" class="headerlink" title="怎么用："></a><strong>怎么用</strong>：</h2><ul>
<li><h3 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a><strong>作用</strong></h3><ul>
<li>提供用户访问网络服务的接口。</li>
<li>支持各种网络应用程序的运行和通信。</li>
<li>实现数据的格式化和传输，确保应用程序之间的互操作性。</li>
</ul>
</li>
<li><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a><strong>使用方法</strong></h3><ol>
<li><strong>选择协议</strong>：根据应用需求选择合适的应用层协议，如HTTP用于Web服务，SMTP用于电子邮件。</li>
<li><strong>开发应用</strong>：编写客户端和服务器端应用程序，使用选定的应用层协议进行通信。</li>
<li><strong>配置网络</strong>：确保网络配置支持所选协议的通信需求，如开放相应的端口。</li>
<li><strong>运行测试</strong>：运行客户端和服务器，并进行通信测试，确保应用层协议正常工作。</li>
</ol>
</li>
<li><h3 id="【应用】-2"><a href="#【应用】-2" class="headerlink" title="【应用】"></a><strong>【应用】</strong></h3><ul>
<li><strong>Web浏览</strong>：用户通过浏览器访问网页，使用HTTP&#x2F;HTTPS协议。</li>
<li><strong>电子邮件</strong>：用户通过邮件客户端发送和接收邮件，使用SMTP、IMAP或POP3协议。</li>
<li><strong>文件传输</strong>：用户通过FTP客户端上传和下载文件，使用FTP或SFTP协议。</li>
<li><strong>远程登录</strong>：管理员通过SSH客户端远程管理服务器，使用SSH协议。</li>
</ul>
</li>
<li><h3 id="最佳实践-2"><a href="#最佳实践-2" class="headerlink" title="最佳实践"></a><strong>最佳实践</strong></h3><ol>
<li><strong>安全性</strong>：使用加密协议（如HTTPS、SFTP、SSH）保护数据传输。</li>
<li><strong>标准化</strong>：遵循协议标准，确保不同应用程序之间的互操作性。</li>
<li><strong>性能优化</strong>：优化应用层协议的实现，提高数据传输效率。</li>
<li><strong>错误处理</strong>：实现健壮的错误处理机制，确保通信的可靠性。</li>
</ol>
</li>
</ul>
<h2 id="为什么：-2"><a href="#为什么：-2" class="headerlink" title="为什么："></a><strong>为什么</strong>：</h2><ul>
<li><h3 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a><strong>目的</strong></h3><p>通过应用层协议实现用户与网络服务之间的交互，使得用户能够方便地访问和使用网络资源。</p>
</li>
<li><h3 id="应用价值-2"><a href="#应用价值-2" class="headerlink" title="应用价值"></a><strong>应用价值</strong></h3><p>应用层协议和服务是构建网络应用的基础，支持各种互联网服务和应用程序，提高用户体验和生产力。</p>
</li>
<li><h3 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a><strong>基本原理</strong></h3><p>应用层通过定义特定的协议和数据格式，确保不同应用程序之间能够进行有效的通信和数据交换。</p>
</li>
<li><h3 id="设计理念-2"><a href="#设计理念-2" class="headerlink" title="设计理念"></a><strong>设计理念</strong></h3><p>关注用户需求和应用功能，提供灵活、多样的网络服务接口，确保应用程序之间的互操作性和兼容性。</p>
</li>
</ul>
<p><strong>4. 相关知识点</strong>：</p>
<ul>
<li><strong>OSI模型</strong>：应用层是OSI模型的第七层，负责提供网络服务。</li>
<li><strong>TCP&#x2F;IP模型</strong>：对应于TCP&#x2F;IP模型的应用层，整合了OSI模型的会话层、表示层和应用层功能。</li>
<li><strong>HTTP&#x2F;HTTPS</strong>：用于Web服务的应用层协议。</li>
<li><strong>SMTP&#x2F;IMAP&#x2F;POP3</strong>：用于电子邮件服务的应用层协议。</li>
<li><strong>FTP&#x2F;SFTP</strong>：用于文件传输的应用层协议。</li>
<li><strong>Telnet&#x2F;SSH</strong>：用于远程访问的应用层协议。络层</li>
</ul>
<h2 id="是什么：-3"><a href="#是什么：-3" class="headerlink" title="是什么："></a><strong>是什么</strong>：</h2><ul>
<li><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a><strong>定义</strong></h3><p>应用层是OSI（开放系统互连）模型的第七层，负责为应用程序提供网络服务。它是用户与网络之间的接口，允许用户通过应用程序访问网络资源和服务。</p>
</li>
<li><h3 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a><strong>组成部分</strong></h3><ul>
<li><strong>应用协议</strong>：定义应用层通信的规则和格式，如HTTP、FTP、SMTP等。</li>
<li><strong>应用程序</strong>：直接与用户交互并使用应用层协议进行通信的软件，如Web浏览器、电子邮件客户端、文件传输工具等。</li>
<li><strong>服务端程序</strong>：提供特定服务并响应客户端请求的服务器端软件，如Web服务器、邮件服务器、FTP服务器等。</li>
</ul>
</li>
<li><h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a><strong>结构形式</strong></h3><ul>
<li><strong>客户端-服务器结构</strong>：应用层协议通常采用客户端-服务器模式，客户端发起请求，服务器处理并返回响应。</li>
<li><strong>对等结构</strong>：在某些应用层协议中（如P2P文件共享），节点既可以作为客户端也可以作为服务器。</li>
</ul>
</li>
<li><h3 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a><strong>分类</strong></h3><ul>
<li><strong>Web服务协议</strong>：如HTTP、HTTPS，用于浏览和传输网页内容。</li>
<li><strong>电子邮件协议</strong>：如SMTP、IMAP、POP3，用于发送和接收电子邮件。</li>
<li><strong>文件传输协议</strong>：如FTP、SFTP，用于在网络上传输文件。</li>
<li><strong>远程访问协议</strong>：如Telnet、SSH，用于远程登录和管理计算机系统。</li>
</ul>
</li>
<li><h3 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a><strong>特征</strong></h3><ul>
<li><strong>用户交互</strong>：直接与用户应用程序交互。</li>
<li><strong>协议多样性</strong>：包含多种不同功能的应用层协议。</li>
<li><strong>数据格式化</strong>：处理和格式化数据以便在网络上传输。</li>
<li><strong>服务导向</strong>：提供特定的网络服务，如网页浏览、电子邮件、文件传输等。</li>
</ul>
</li>
</ul>
<h2 id="怎么用：-3"><a href="#怎么用：-3" class="headerlink" title="怎么用："></a><strong>怎么用</strong>：</h2><ul>
<li><h3 id="作用-3"><a href="#作用-3" class="headerlink" title="作用"></a><strong>作用</strong></h3><ul>
<li>提供用户访问网络服务的接口。</li>
<li>支持各种网络应用程序的运行和通信。</li>
<li>实现数据的格式化和传输，确保应用程序之间的互操作性。</li>
</ul>
</li>
<li><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a><strong>使用方法</strong></h3><ol>
<li><strong>选择协议</strong>：根据应用需求选择合适的应用层协议，如HTTP用于Web服务，SMTP用于电子邮件。</li>
<li><strong>开发应用</strong>：编写客户端和服务器端应用程序，使用选定的应用层协议进行通信。</li>
<li><strong>配置网络</strong>：确保网络配置支持所选协议的通信需求，如开放相应的端口。</li>
<li><strong>运行测试</strong>：运行客户端和服务器，并进行通信测试，确保应用层协议正常工作。</li>
</ol>
</li>
<li><h3 id="【应用】-3"><a href="#【应用】-3" class="headerlink" title="【应用】"></a><strong>【应用】</strong></h3><ul>
<li><strong>Web浏览</strong>：用户通过浏览器访问网页，使用HTTP&#x2F;HTTPS协议。</li>
<li><strong>电子邮件</strong>：用户通过邮件客户端发送和接收邮件，使用SMTP、IMAP或POP3协议。</li>
<li><strong>文件传输</strong>：用户通过FTP客户端上传和下载文件，使用FTP或SFTP协议。</li>
<li><strong>远程登录</strong>：管理员通过SSH客户端远程管理服务器，使用SSH协议。</li>
</ul>
</li>
<li><h3 id="最佳实践-3"><a href="#最佳实践-3" class="headerlink" title="最佳实践"></a><strong>最佳实践</strong></h3><ol>
<li><strong>安全性</strong>：使用加密协议（如HTTPS、SFTP、SSH）保护数据传输。</li>
<li><strong>标准化</strong>：遵循协议标准，确保不同应用程序之间的互操作性。</li>
<li><strong>性能优化</strong>：优化应用层协议的实现，提高数据传输效率。</li>
<li><strong>错误处理</strong>：实现健壮的错误处理机制，确保通信的可靠性。</li>
</ol>
</li>
</ul>
<h2 id="为什么：-3"><a href="#为什么：-3" class="headerlink" title="为什么："></a><strong>为什么</strong>：</h2><ul>
<li><h3 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a><strong>目的</strong></h3><p>通过应用层协议实现用户与网络服务之间的交互，使得用户能够方便地访问和使用网络资源。</p>
</li>
<li><h3 id="应用价值-3"><a href="#应用价值-3" class="headerlink" title="应用价值"></a><strong>应用价值</strong></h3><p>应用层协议和服务是构建网络应用的基础，支持各种互联网服务和应用程序，提高用户体验和生产力。</p>
</li>
<li><h3 id="基本原理-3"><a href="#基本原理-3" class="headerlink" title="基本原理"></a><strong>基本原理</strong></h3><p>应用层通过定义特定的协议和数据格式，确保不同应用程序之间能够进行有效的通信和数据交换。</p>
</li>
<li><h3 id="设计理念-3"><a href="#设计理念-3" class="headerlink" title="设计理念"></a><strong>设计理念</strong></h3><p>关注用户需求和应用功能，提供灵活、多样的网络服务接口，确保应用程序之间的互操作性和兼容性。</p>
</li>
</ul>
<p><strong>4. 相关知识点</strong>：</p>
<ul>
<li><strong>OSI模型</strong>：应用层是OSI模型的第七层，负责提供网络服务。</li>
<li><strong>TCP&#x2F;IP模型</strong>：对应于TCP&#x2F;IP模型的应用层，整合了OSI模型的会话层、表示层和应用层功能。</li>
<li><strong>HTTP&#x2F;HTTPS</strong>：用于Web服务的应用层协议。</li>
<li><strong>SMTP&#x2F;IMAP&#x2F;POP3</strong>：用于电子邮件服务的应用层协议。</li>
<li><strong>FTP&#x2F;SFTP</strong>：用于文件传输的应用层协议。</li>
<li><strong>Telnet&#x2F;SSH</strong>：用于远程访问的应用层协议。</li>
</ul>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>网络层设备</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BD%91%E7%BB%9C%E5%B1%82%E8%AE%BE%E5%A4%87/</url>
    <content><![CDATA[<h1 id="网络层设备"><a href="#网络层设备" class="headerlink" title="网络层设备"></a>网络层设备</h1><h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.路由器</p>
<p><img src="/../TyporaImage/image-20240622223340535.png" alt="image-20240622223340535"></p>
<ol start="2">
<li></li>
</ol>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-路由器输入端口对线路上收到的分组处理"><a href="#1-路由器输入端口对线路上收到的分组处理" class="headerlink" title="1.路由器输入端口对线路上收到的分组处理"></a>1.路由器输入端口对线路上收到的分组处理</h3><p><img src="/../TyporaImage/image-20240622223505061.png" alt="image-20240622223505061"></p>
<h3 id="2-路由器输出端口"><a href="#2-路由器输出端口" class="headerlink" title="2.路由器输出端口"></a>2.路由器输出端口</h3><p><img src="/../TyporaImage/image-20240622223545035.png" alt="image-20240622223545035"></p>
<h3 id="3-物理层、数据链路层、网络层的区别"><a href="#3-物理层、数据链路层、网络层的区别" class="headerlink" title="3.物理层、数据链路层、网络层的区别"></a>3.物理层、数据链路层、网络层的区别</h3><p><img src="/../TyporaImage/image-20240622223626736.png" alt="image-20240622223626736">设备</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.路由器</p>
<p><img src="/../TyporaImage/image-20240622223340535.png" alt="image-20240622223340535"></p>
<ol start="2">
<li></li>
</ol>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-路由器输入端口对线路上收到的分组处理-1"><a href="#1-路由器输入端口对线路上收到的分组处理-1" class="headerlink" title="1.路由器输入端口对线路上收到的分组处理"></a>1.路由器输入端口对线路上收到的分组处理</h3><p><img src="/../TyporaImage/image-20240622223505061.png" alt="image-20240622223505061"></p>
<h3 id="2-路由器输出端口-1"><a href="#2-路由器输出端口-1" class="headerlink" title="2.路由器输出端口"></a>2.路由器输出端口</h3><p><img src="/../TyporaImage/image-20240622223545035.png" alt="image-20240622223545035"></p>
<h3 id="3-物理层、数据链路层、网络层的区别-1"><a href="#3-物理层、数据链路层、网络层的区别-1" class="headerlink" title="3.物理层、数据链路层、网络层的区别"></a>3.物理层、数据链路层、网络层的区别</h3><p><img src="/../TyporaImage/image-20240622223626736.png" alt="image-20240622223626736"># 网络层设备</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.路由器</p>
<p><img src="/../TyporaImage/image-20240622223340535.png" alt="image-20240622223340535"></p>
<ol start="2">
<li></li>
</ol>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-路由器输入端口对线路上收到的分组处理-2"><a href="#1-路由器输入端口对线路上收到的分组处理-2" class="headerlink" title="1.路由器输入端口对线路上收到的分组处理"></a>1.路由器输入端口对线路上收到的分组处理</h3><p><img src="/../TyporaImage/image-20240622223505061.png" alt="image-20240622223505061"></p>
<h3 id="2-路由器输出端口-2"><a href="#2-路由器输出端口-2" class="headerlink" title="2.路由器输出端口"></a>2.路由器输出端口</h3><p><img src="/../TyporaImage/image-20240622223545035.png" alt="image-20240622223545035"></p>
<h3 id="3-物理层、数据链路层、网络层的区别-2"><a href="#3-物理层、数据链路层、网络层的区别-2" class="headerlink" title="3.物理层、数据链路层、网络层的区别"></a>3.物理层、数据链路层、网络层的区别</h3><p><img src="/../TyporaImage/image-20240622223626736.png" alt="image-20240622223626736">设备</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><p>1.路由器</p>
<p><img src="/../TyporaImage/image-20240622223340535.png" alt="image-20240622223340535"></p>
<ol start="2">
<li></li>
</ol>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><h3 id="1-路由器输入端口对线路上收到的分组处理-3"><a href="#1-路由器输入端口对线路上收到的分组处理-3" class="headerlink" title="1.路由器输入端口对线路上收到的分组处理"></a>1.路由器输入端口对线路上收到的分组处理</h3><p><img src="/../TyporaImage/image-20240622223505061.png" alt="image-20240622223505061"></p>
<h3 id="2-路由器输出端口-3"><a href="#2-路由器输出端口-3" class="headerlink" title="2.路由器输出端口"></a>2.路由器输出端口</h3><p><img src="/../TyporaImage/image-20240622223545035.png" alt="image-20240622223545035"></p>
<h3 id="3-物理层、数据链路层、网络层的区别-3"><a href="#3-物理层、数据链路层、网络层的区别-3" class="headerlink" title="3.物理层、数据链路层、网络层的区别"></a>3.物理层、数据链路层、网络层的区别</h3><p><img src="/../TyporaImage/image-20240622223626736.png" alt="image-20240622223626736"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>网络应用模型</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="网络应用模型"><a href="#网络应用模型" class="headerlink" title="网络应用模型"></a>网络应用模型</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>网络应用模型是指在网络通信环境中设计和实现应用程序的逻辑架构和行为模式。它描述了如何通过网络进行数据交换和服务调用，从而实现分布式系统的协同工作。</p>
<h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-客户端"><a href="#1-客户端" class="headerlink" title="1.客户端"></a>1.客户端</h3><p>发起请求并接收服务器响应的一端。</p>
<h3 id="2-服务器"><a href="#2-服务器" class="headerlink" title="2.服务器"></a>2.服务器</h3><p>接收客户端请求，处理请求并返回响应的一端。</p>
<h3 id="3-通信协议"><a href="#3-通信协议" class="headerlink" title="3.通信协议"></a>3.通信协议</h3><p>客户端和服务器之间用于数据交换的规则和标准（如HTTP、HTTPS）。</p>
<h3 id="4-接口和API"><a href="#4-接口和API" class="headerlink" title="4.接口和API"></a>4.接口和API</h3><p>定义客户端和服务器之间交互的具体方法和数据格式。</p>
<h3 id="5-数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。"><a href="#5-数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。" class="headerlink" title="5.数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。"></a>5.数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。</h3><h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-客户-服务器模型（Client-Server-Model）"><a href="#1-客户-服务器模型（Client-Server-Model）" class="headerlink" title="1.客户-服务器模型（Client-Server Model）"></a>1.客户-服务器模型（Client-Server Model）</h3><p>客户端发起请求，服务器处理并返回响应。</p>
<h3 id="2-对等网络模型（Peer-to-Peer-Model）"><a href="#2-对等网络模型（Peer-to-Peer-Model）" class="headerlink" title="2.对等网络模型（Peer-to-Peer Model）"></a>2.对等网络模型（Peer-to-Peer Model）</h3><p>每个节点既可以作为客户端也可以作为服务器，相互之间直接通信。</p>
<h3 id="3-多层架构模型（Multi-Tier-Architecture）"><a href="#3-多层架构模型（Multi-Tier-Architecture）" class="headerlink" title="3.多层架构模型（Multi-Tier Architecture）"></a>3.多层架构模型（Multi-Tier Architecture）</h3><p>通常包括表示层、逻辑层和数据层，分别负责用户界面、业务逻辑和数据存储。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-Web应用模型"><a href="#1-Web应用模型" class="headerlink" title="1.Web应用模型"></a>1.Web应用模型</h3><p>基于浏览器-服务器（B&#x2F;S）架构，通过HTTP&#x2F;HTTPS协议进行通信。</p>
<h3 id="2-移动应用模型"><a href="#2-移动应用模型" class="headerlink" title="2.移动应用模型"></a>2.移动应用模型</h3><p>客户端通常是移动设备，通过网络与服务器通信。</p>
<h3 id="3-云应用模型"><a href="#3-云应用模型" class="headerlink" title="3.云应用模型"></a>3.云应用模型</h3><p>应用和数据存储在云端，客户端通过互联网访问。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><h3 id="1-分布式"><a href="#1-分布式" class="headerlink" title="1.分布式"></a>1.分布式</h3><p>系统组件分布在不同的网络节点上。</p>
<h3 id="2-异步通信"><a href="#2-异步通信" class="headerlink" title="2.异步通信"></a>2.异步通信</h3><p>客户端和服务器可以在不同的时间处理请求和响应。</p>
<h3 id="3-扩展性"><a href="#3-扩展性" class="headerlink" title="3.扩展性"></a>3.扩展性</h3><p>系统可以根据负载增加或减少资源。</p>
<h3 id="4-可靠性"><a href="#4-可靠性" class="headerlink" title="4.可靠性"></a>4.可靠性</h3><p>具备高可用性和容错能力。<br>模型</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>网络应用模型是指在网络通信环境中设计和实现应用程序的逻辑架构和行为模式。它描述了如何通过网络进行数据交换和服务调用，从而实现分布式系统的协同工作。</p>
<h2 id="组成部分-1"><a href="#组成部分-1" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-客户端-1"><a href="#1-客户端-1" class="headerlink" title="1.客户端"></a>1.客户端</h3><p>发起请求并接收服务器响应的一端。</p>
<h3 id="2-服务器-1"><a href="#2-服务器-1" class="headerlink" title="2.服务器"></a>2.服务器</h3><p>接收客户端请求，处理请求并返回响应的一端。</p>
<h3 id="3-通信协议-1"><a href="#3-通信协议-1" class="headerlink" title="3.通信协议"></a>3.通信协议</h3><p>客户端和服务器之间用于数据交换的规则和标准（如HTTP、HTTPS）。</p>
<h3 id="4-接口和API-1"><a href="#4-接口和API-1" class="headerlink" title="4.接口和API"></a>4.接口和API</h3><p>定义客户端和服务器之间交互的具体方法和数据格式。</p>
<h3 id="5-数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。-1"><a href="#5-数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。-1" class="headerlink" title="5.数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。"></a>5.数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。</h3><h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-客户-服务器模型（Client-Server-Model）-1"><a href="#1-客户-服务器模型（Client-Server-Model）-1" class="headerlink" title="1.客户-服务器模型（Client-Server Model）"></a>1.客户-服务器模型（Client-Server Model）</h3><p>客户端发起请求，服务器处理并返回响应。</p>
<h3 id="2-对等网络模型（Peer-to-Peer-Model）-1"><a href="#2-对等网络模型（Peer-to-Peer-Model）-1" class="headerlink" title="2.对等网络模型（Peer-to-Peer Model）"></a>2.对等网络模型（Peer-to-Peer Model）</h3><p>每个节点既可以作为客户端也可以作为服务器，相互之间直接通信。</p>
<h3 id="3-多层架构模型（Multi-Tier-Architecture）-1"><a href="#3-多层架构模型（Multi-Tier-Architecture）-1" class="headerlink" title="3.多层架构模型（Multi-Tier Architecture）"></a>3.多层架构模型（Multi-Tier Architecture）</h3><p>通常包括表示层、逻辑层和数据层，分别负责用户界面、业务逻辑和数据存储。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><h3 id="1-Web应用模型-1"><a href="#1-Web应用模型-1" class="headerlink" title="1.Web应用模型"></a>1.Web应用模型</h3><p>基于浏览器-服务器（B&#x2F;S）架构，通过HTTP&#x2F;HTTPS协议进行通信。</p>
<h3 id="2-移动应用模型-1"><a href="#2-移动应用模型-1" class="headerlink" title="2.移动应用模型"></a>2.移动应用模型</h3><p>客户端通常是移动设备，通过网络与服务器通信。</p>
<h3 id="3-云应用模型-1"><a href="#3-云应用模型-1" class="headerlink" title="3.云应用模型"></a>3.云应用模型</h3><p>应用和数据存储在云端，客户端通过互联网访问。</p>
<h2 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h2><h3 id="1-分布式-1"><a href="#1-分布式-1" class="headerlink" title="1.分布式"></a>1.分布式</h3><p>系统组件分布在不同的网络节点上。</p>
<h3 id="2-异步通信-1"><a href="#2-异步通信-1" class="headerlink" title="2.异步通信"></a>2.异步通信</h3><p>客户端和服务器可以在不同的时间处理请求和响应。</p>
<h3 id="3-扩展性-1"><a href="#3-扩展性-1" class="headerlink" title="3.扩展性"></a>3.扩展性</h3><p>系统可以根据负载增加或减少资源。</p>
<h3 id="4-可靠性-1"><a href="#4-可靠性-1" class="headerlink" title="4.可靠性"></a>4.可靠性</h3><p>具备高可用性和容错能力。# 网络应用模型</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>网络应用模型是指在网络通信环境中设计和实现应用程序的逻辑架构和行为模式。它描述了如何通过网络进行数据交换和服务调用，从而实现分布式系统的协同工作。</p>
<h2 id="组成部分-2"><a href="#组成部分-2" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-客户端-2"><a href="#1-客户端-2" class="headerlink" title="1.客户端"></a>1.客户端</h3><p>发起请求并接收服务器响应的一端。</p>
<h3 id="2-服务器-2"><a href="#2-服务器-2" class="headerlink" title="2.服务器"></a>2.服务器</h3><p>接收客户端请求，处理请求并返回响应的一端。</p>
<h3 id="3-通信协议-2"><a href="#3-通信协议-2" class="headerlink" title="3.通信协议"></a>3.通信协议</h3><p>客户端和服务器之间用于数据交换的规则和标准（如HTTP、HTTPS）。</p>
<h3 id="4-接口和API-2"><a href="#4-接口和API-2" class="headerlink" title="4.接口和API"></a>4.接口和API</h3><p>定义客户端和服务器之间交互的具体方法和数据格式。</p>
<h3 id="5-数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。-2"><a href="#5-数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。-2" class="headerlink" title="5.数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。"></a>5.数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。</h3><h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-客户-服务器模型（Client-Server-Model）-2"><a href="#1-客户-服务器模型（Client-Server-Model）-2" class="headerlink" title="1.客户-服务器模型（Client-Server Model）"></a>1.客户-服务器模型（Client-Server Model）</h3><p>客户端发起请求，服务器处理并返回响应。</p>
<h3 id="2-对等网络模型（Peer-to-Peer-Model）-2"><a href="#2-对等网络模型（Peer-to-Peer-Model）-2" class="headerlink" title="2.对等网络模型（Peer-to-Peer Model）"></a>2.对等网络模型（Peer-to-Peer Model）</h3><p>每个节点既可以作为客户端也可以作为服务器，相互之间直接通信。</p>
<h3 id="3-多层架构模型（Multi-Tier-Architecture）-2"><a href="#3-多层架构模型（Multi-Tier-Architecture）-2" class="headerlink" title="3.多层架构模型（Multi-Tier Architecture）"></a>3.多层架构模型（Multi-Tier Architecture）</h3><p>通常包括表示层、逻辑层和数据层，分别负责用户界面、业务逻辑和数据存储。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-Web应用模型-2"><a href="#1-Web应用模型-2" class="headerlink" title="1.Web应用模型"></a>1.Web应用模型</h3><p>基于浏览器-服务器（B&#x2F;S）架构，通过HTTP&#x2F;HTTPS协议进行通信。</p>
<h3 id="2-移动应用模型-2"><a href="#2-移动应用模型-2" class="headerlink" title="2.移动应用模型"></a>2.移动应用模型</h3><p>客户端通常是移动设备，通过网络与服务器通信。</p>
<h3 id="3-云应用模型-2"><a href="#3-云应用模型-2" class="headerlink" title="3.云应用模型"></a>3.云应用模型</h3><p>应用和数据存储在云端，客户端通过互联网访问。</p>
<h2 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h2><h3 id="1-分布式-2"><a href="#1-分布式-2" class="headerlink" title="1.分布式"></a>1.分布式</h3><p>系统组件分布在不同的网络节点上。</p>
<h3 id="2-异步通信-2"><a href="#2-异步通信-2" class="headerlink" title="2.异步通信"></a>2.异步通信</h3><p>客户端和服务器可以在不同的时间处理请求和响应。</p>
<h3 id="3-扩展性-2"><a href="#3-扩展性-2" class="headerlink" title="3.扩展性"></a>3.扩展性</h3><p>系统可以根据负载增加或减少资源。</p>
<h3 id="4-可靠性-2"><a href="#4-可靠性-2" class="headerlink" title="4.可靠性"></a>4.可靠性</h3><p>具备高可用性和容错能力。<br>模型</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>网络应用模型是指在网络通信环境中设计和实现应用程序的逻辑架构和行为模式。它描述了如何通过网络进行数据交换和服务调用，从而实现分布式系统的协同工作。</p>
<h2 id="组成部分-3"><a href="#组成部分-3" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="1-客户端-3"><a href="#1-客户端-3" class="headerlink" title="1.客户端"></a>1.客户端</h3><p>发起请求并接收服务器响应的一端。</p>
<h3 id="2-服务器-3"><a href="#2-服务器-3" class="headerlink" title="2.服务器"></a>2.服务器</h3><p>接收客户端请求，处理请求并返回响应的一端。</p>
<h3 id="3-通信协议-3"><a href="#3-通信协议-3" class="headerlink" title="3.通信协议"></a>3.通信协议</h3><p>客户端和服务器之间用于数据交换的规则和标准（如HTTP、HTTPS）。</p>
<h3 id="4-接口和API-3"><a href="#4-接口和API-3" class="headerlink" title="4.接口和API"></a>4.接口和API</h3><p>定义客户端和服务器之间交互的具体方法和数据格式。</p>
<h3 id="5-数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。-3"><a href="#5-数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。-3" class="headerlink" title="5.数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。"></a>5.数据存储：用于存储和管理应用数据的后端数据库或其他存储系统。</h3><h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><h3 id="1-客户-服务器模型（Client-Server-Model）-3"><a href="#1-客户-服务器模型（Client-Server-Model）-3" class="headerlink" title="1.客户-服务器模型（Client-Server Model）"></a>1.客户-服务器模型（Client-Server Model）</h3><p>客户端发起请求，服务器处理并返回响应。</p>
<h3 id="2-对等网络模型（Peer-to-Peer-Model）-3"><a href="#2-对等网络模型（Peer-to-Peer-Model）-3" class="headerlink" title="2.对等网络模型（Peer-to-Peer Model）"></a>2.对等网络模型（Peer-to-Peer Model）</h3><p>每个节点既可以作为客户端也可以作为服务器，相互之间直接通信。</p>
<h3 id="3-多层架构模型（Multi-Tier-Architecture）-3"><a href="#3-多层架构模型（Multi-Tier-Architecture）-3" class="headerlink" title="3.多层架构模型（Multi-Tier Architecture）"></a>3.多层架构模型（Multi-Tier Architecture）</h3><p>通常包括表示层、逻辑层和数据层，分别负责用户界面、业务逻辑和数据存储。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><h3 id="1-Web应用模型-3"><a href="#1-Web应用模型-3" class="headerlink" title="1.Web应用模型"></a>1.Web应用模型</h3><p>基于浏览器-服务器（B&#x2F;S）架构，通过HTTP&#x2F;HTTPS协议进行通信。</p>
<h3 id="2-移动应用模型-3"><a href="#2-移动应用模型-3" class="headerlink" title="2.移动应用模型"></a>2.移动应用模型</h3><p>客户端通常是移动设备，通过网络与服务器通信。</p>
<h3 id="3-云应用模型-3"><a href="#3-云应用模型-3" class="headerlink" title="3.云应用模型"></a>3.云应用模型</h3><p>应用和数据存储在云端，客户端通过互联网访问。</p>
<h2 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h2><h3 id="1-分布式-3"><a href="#1-分布式-3" class="headerlink" title="1.分布式"></a>1.分布式</h3><p>系统组件分布在不同的网络节点上。</p>
<h3 id="2-异步通信-3"><a href="#2-异步通信-3" class="headerlink" title="2.异步通信"></a>2.异步通信</h3><p>客户端和服务器可以在不同的时间处理请求和响应。</p>
<h3 id="3-扩展性-3"><a href="#3-扩展性-3" class="headerlink" title="3.扩展性"></a>3.扩展性</h3><p>系统可以根据负载增加或减少资源。</p>
<h3 id="4-可靠性-3"><a href="#4-可靠性-3" class="headerlink" title="4.可靠性"></a>4.可靠性</h3><p>具备高可用性和容错能力。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>虚电路交换技术</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%99%9A%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<h1 id="虚电路交换技术"><a href="#虚电路交换技术" class="headerlink" title="虚电路交换技术"></a>虚电路交换技术</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240602170911143.png" alt="image-20240602170911143">技术</p>
<h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240602170911143.png" alt="image-20240602170911143"># 虚电路交换技术</p>
<h2 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240602170911143.png" alt="image-20240602170911143">技术</p>
<h2 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="/../TyporaImage/image-20240602170911143.png" alt="image-20240602170911143"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>计算机网络的性能指标</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/</url>
    <content><![CDATA[<h1 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h1><h2 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-速率"><a href="#1-速率" class="headerlink" title="1.速率"></a>1.速率</h3><p>即数据率或者数据传输率或比特率。也就是在信道上传输<strong>数据位数</strong>的速率。</p>
<p><img src="/../TyporaImage/image-20240603194024698.png" alt="image-20240603194024698"></p>
<h3 id="2-带宽"><a href="#2-带宽" class="headerlink" title="2.带宽"></a>2.带宽</h3><p>即单位时间内从网络的某一点到另一点所能通过的“最高数据率”。</p>
<p><img src="/../TyporaImage/image-20240603194320394.png" alt="image-20240603194320394"></p>
<h3 id="3-吞吐量"><a href="#3-吞吐量" class="headerlink" title="3.吞吐量"></a>3.吞吐量</h3><p>即单位时间内，通过某个网络、信道、接口的数据量。</p>
<h3 id="4-时延"><a href="#4-时延" class="headerlink" title="4.时延"></a>4.时延</h3><p>数据（报文&#x2F;分组&#x2F;比特流）从网络的一端传输到另一端所需要的时间。也叫延迟或延时。</p>
<p>单位：s</p>
<p>分类和组成：</p>
<p><img src="/../TyporaImage/image-20240603194745228.png" alt="image-20240603194745228"></p>
<h3 id="5-时延带宽积"><a href="#5-时延带宽积" class="headerlink" title="5.时延带宽积"></a>5.时延带宽积</h3><p>即传播时延*带宽。</p>
<p>单位：bit</p>
<h3 id="6-往返时延RTT"><a href="#6-往返时延RTT" class="headerlink" title="6.往返时延RTT"></a>6.往返时延RTT</h3><p>即，从发送方发送数据开始，到发送方收到接收方的确认，总共经历的延时。</p>
<p>分类和组成：</p>
<p><img src="/../TyporaImage/image-20240603195005178.png" alt="image-20240603195005178"></p>
<h3 id="7-利用率"><a href="#7-利用率" class="headerlink" title="7.利用率"></a>7.利用率</h3><p>分类和组成：</p>
<p>1.信道利用率</p>
<p><img src="/../TyporaImage/image-20240603195239287.png" alt="image-20240603195239287"></p>
<p>与时延的关系：</p>
<p><img src="/../TyporaImage/image-20240603195315046.png" alt="image-20240603195315046"></p>
<p>2.网络利用率</p>
<p>即，信道利用率加权</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/image-20240602171534600.png" alt="image-20240602171534600"></p>
<p><img src="/../TyporaImage/image-20240602171628606.png" alt="image-20240602171628606">指标</p>
<h2 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-速率-1"><a href="#1-速率-1" class="headerlink" title="1.速率"></a>1.速率</h3><p>即数据率或者数据传输率或比特率。也就是在信道上传输<strong>数据位数</strong>的速率。</p>
<p><img src="/../TyporaImage/image-20240603194024698.png" alt="image-20240603194024698"></p>
<h3 id="2-带宽-1"><a href="#2-带宽-1" class="headerlink" title="2.带宽"></a>2.带宽</h3><p>即单位时间内从网络的某一点到另一点所能通过的“最高数据率”。</p>
<p><img src="/../TyporaImage/image-20240603194320394.png" alt="image-20240603194320394"></p>
<h3 id="3-吞吐量-1"><a href="#3-吞吐量-1" class="headerlink" title="3.吞吐量"></a>3.吞吐量</h3><p>即单位时间内，通过某个网络、信道、接口的数据量。</p>
<h3 id="4-时延-1"><a href="#4-时延-1" class="headerlink" title="4.时延"></a>4.时延</h3><p>数据（报文&#x2F;分组&#x2F;比特流）从网络的一端传输到另一端所需要的时间。也叫延迟或延时。</p>
<p>单位：s</p>
<p>分类和组成：</p>
<p><img src="/../TyporaImage/image-20240603194745228.png" alt="image-20240603194745228"></p>
<h3 id="5-时延带宽积-1"><a href="#5-时延带宽积-1" class="headerlink" title="5.时延带宽积"></a>5.时延带宽积</h3><p>即传播时延*带宽。</p>
<p>单位：bit</p>
<h3 id="6-往返时延RTT-1"><a href="#6-往返时延RTT-1" class="headerlink" title="6.往返时延RTT"></a>6.往返时延RTT</h3><p>即，从发送方发送数据开始，到发送方收到接收方的确认，总共经历的延时。</p>
<p>分类和组成：</p>
<p><img src="/../TyporaImage/image-20240603195005178.png" alt="image-20240603195005178"></p>
<h3 id="7-利用率-1"><a href="#7-利用率-1" class="headerlink" title="7.利用率"></a>7.利用率</h3><p>分类和组成：</p>
<p>1.信道利用率</p>
<p><img src="/../TyporaImage/image-20240603195239287.png" alt="image-20240603195239287"></p>
<p>与时延的关系：</p>
<p><img src="/../TyporaImage/image-20240603195315046.png" alt="image-20240603195315046"></p>
<p>2.网络利用率</p>
<p>即，信道利用率加权</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/image-20240602171534600.png" alt="image-20240602171534600"></p>
<p><img src="/../TyporaImage/image-20240602171628606.png" alt="image-20240602171628606"># 性能指标</p>
<h2 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-速率-2"><a href="#1-速率-2" class="headerlink" title="1.速率"></a>1.速率</h3><p>即数据率或者数据传输率或比特率。也就是在信道上传输<strong>数据位数</strong>的速率。</p>
<p><img src="/../TyporaImage/image-20240603194024698.png" alt="image-20240603194024698"></p>
<h3 id="2-带宽-2"><a href="#2-带宽-2" class="headerlink" title="2.带宽"></a>2.带宽</h3><p>即单位时间内从网络的某一点到另一点所能通过的“最高数据率”。</p>
<p><img src="/../TyporaImage/image-20240603194320394.png" alt="image-20240603194320394"></p>
<h3 id="3-吞吐量-2"><a href="#3-吞吐量-2" class="headerlink" title="3.吞吐量"></a>3.吞吐量</h3><p>即单位时间内，通过某个网络、信道、接口的数据量。</p>
<h3 id="4-时延-2"><a href="#4-时延-2" class="headerlink" title="4.时延"></a>4.时延</h3><p>数据（报文&#x2F;分组&#x2F;比特流）从网络的一端传输到另一端所需要的时间。也叫延迟或延时。</p>
<p>单位：s</p>
<p>分类和组成：</p>
<p><img src="/../TyporaImage/image-20240603194745228.png" alt="image-20240603194745228"></p>
<h3 id="5-时延带宽积-2"><a href="#5-时延带宽积-2" class="headerlink" title="5.时延带宽积"></a>5.时延带宽积</h3><p>即传播时延*带宽。</p>
<p>单位：bit</p>
<h3 id="6-往返时延RTT-2"><a href="#6-往返时延RTT-2" class="headerlink" title="6.往返时延RTT"></a>6.往返时延RTT</h3><p>即，从发送方发送数据开始，到发送方收到接收方的确认，总共经历的延时。</p>
<p>分类和组成：</p>
<p><img src="/../TyporaImage/image-20240603195005178.png" alt="image-20240603195005178"></p>
<h3 id="7-利用率-2"><a href="#7-利用率-2" class="headerlink" title="7.利用率"></a>7.利用率</h3><p>分类和组成：</p>
<p>1.信道利用率</p>
<p><img src="/../TyporaImage/image-20240603195239287.png" alt="image-20240603195239287"></p>
<p>与时延的关系：</p>
<p><img src="/../TyporaImage/image-20240603195315046.png" alt="image-20240603195315046"></p>
<p>2.网络利用率</p>
<p>即，信道利用率加权</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/image-20240602171534600.png" alt="image-20240602171534600"></p>
<p><img src="/../TyporaImage/image-20240602171628606.png" alt="image-20240602171628606">指标</p>
<h2 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h2><h3 id="1-速率-3"><a href="#1-速率-3" class="headerlink" title="1.速率"></a>1.速率</h3><p>即数据率或者数据传输率或比特率。也就是在信道上传输<strong>数据位数</strong>的速率。</p>
<p><img src="/../TyporaImage/image-20240603194024698.png" alt="image-20240603194024698"></p>
<h3 id="2-带宽-3"><a href="#2-带宽-3" class="headerlink" title="2.带宽"></a>2.带宽</h3><p>即单位时间内从网络的某一点到另一点所能通过的“最高数据率”。</p>
<p><img src="/../TyporaImage/image-20240603194320394.png" alt="image-20240603194320394"></p>
<h3 id="3-吞吐量-3"><a href="#3-吞吐量-3" class="headerlink" title="3.吞吐量"></a>3.吞吐量</h3><p>即单位时间内，通过某个网络、信道、接口的数据量。</p>
<h3 id="4-时延-3"><a href="#4-时延-3" class="headerlink" title="4.时延"></a>4.时延</h3><p>数据（报文&#x2F;分组&#x2F;比特流）从网络的一端传输到另一端所需要的时间。也叫延迟或延时。</p>
<p>单位：s</p>
<p>分类和组成：</p>
<p><img src="/../TyporaImage/image-20240603194745228.png" alt="image-20240603194745228"></p>
<h3 id="5-时延带宽积-3"><a href="#5-时延带宽积-3" class="headerlink" title="5.时延带宽积"></a>5.时延带宽积</h3><p>即传播时延*带宽。</p>
<p>单位：bit</p>
<h3 id="6-往返时延RTT-3"><a href="#6-往返时延RTT-3" class="headerlink" title="6.往返时延RTT"></a>6.往返时延RTT</h3><p>即，从发送方发送数据开始，到发送方收到接收方的确认，总共经历的延时。</p>
<p>分类和组成：</p>
<p><img src="/../TyporaImage/image-20240603195005178.png" alt="image-20240603195005178"></p>
<h3 id="7-利用率-3"><a href="#7-利用率-3" class="headerlink" title="7.利用率"></a>7.利用率</h3><p>分类和组成：</p>
<p>1.信道利用率</p>
<p><img src="/../TyporaImage/image-20240603195239287.png" alt="image-20240603195239287"></p>
<p>与时延的关系：</p>
<p><img src="/../TyporaImage/image-20240603195315046.png" alt="image-20240603195315046"></p>
<p>2.网络利用率</p>
<p>即，信道利用率加权</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><img src="/../TyporaImage/image-20240602171534600.png" alt="image-20240602171534600"></p>
<p><img src="/../TyporaImage/image-20240602171628606.png" alt="image-20240602171628606"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>计算机网络的概念</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>是一个将分散的、具有独立功能的计算机系统，通过通信设备和线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。</p>
<p><img src="/../TyporaImage/image-20240528205238073.png" alt="image-20240528205238073"></p>
<h3 id="分类和组成"><a href="#分类和组成" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>内部组成部分：</p>
<p><img src="/../TyporaImage/image-20240528210227886.png" alt="image-20240528210227886"></p>
<p>特殊形态：</p>
<p><img src="/../TyporaImage/image-20240602171344960.png" alt="image-20240602171344960"></p>
<h3 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h3><p>1..OSI</p>
<p><img src="/../TyporaImage/image-20240603201205896.png" alt="image-20240603201205896"></p>
<p>2.TCP&#x2F;IP</p>
<h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><p>1.速率</p>
<p>2.带宽</p>
<p>3.吞吐量</p>
<p>4.带宽</p>
<p>5.时延</p>
<p>6.时延带宽积</p>
<p>7.往返时延RTT</p>
<p>8.信道利用率</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用分类"><a href="#作用分类" class="headerlink" title="作用分类"></a>作用分类</h3><p><img src="/../TyporaImage/image-20240529212710806.png" alt="image-20240529212710806"></p>
<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><p>网络</p>
<h2 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>是一个将分散的、具有独立功能的计算机系统，通过通信设备和线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。</p>
<p><img src="/../TyporaImage/image-20240528205238073.png" alt="image-20240528205238073"></p>
<h3 id="分类和组成-1"><a href="#分类和组成-1" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>内部组成部分：</p>
<p><img src="/../TyporaImage/image-20240528210227886.png" alt="image-20240528210227886"></p>
<p>特殊形态：</p>
<p><img src="/../TyporaImage/image-20240602171344960.png" alt="image-20240602171344960"></p>
<h3 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h3><p>1..OSI</p>
<p><img src="/../TyporaImage/image-20240603201205896.png" alt="image-20240603201205896"></p>
<p>2.TCP&#x2F;IP</p>
<h3 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h3><p>1.速率</p>
<p>2.带宽</p>
<p>3.吞吐量</p>
<p>4.带宽</p>
<p>5.时延</p>
<p>6.时延带宽积</p>
<p>7.往返时延RTT</p>
<p>8.信道利用率</p>
<h2 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用分类-1"><a href="#作用分类-1" class="headerlink" title="作用分类"></a>作用分类</h3><p><img src="/../TyporaImage/image-20240529212710806.png" alt="image-20240529212710806"></p>
<h2 id="为什么-计算机网络"><a href="#为什么-计算机网络" class="headerlink" title="为什么# 计算机网络"></a>为什么# 计算机网络</h2><h2 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>是一个将分散的、具有独立功能的计算机系统，通过通信设备和线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。</p>
<p><img src="/../TyporaImage/image-20240528205238073.png" alt="image-20240528205238073"></p>
<h3 id="分类和组成-2"><a href="#分类和组成-2" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>内部组成部分：</p>
<p><img src="/../TyporaImage/image-20240528210227886.png" alt="image-20240528210227886"></p>
<p>特殊形态：</p>
<p><img src="/../TyporaImage/image-20240602171344960.png" alt="image-20240602171344960"></p>
<h3 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h3><p>1..OSI</p>
<p><img src="/../TyporaImage/image-20240603201205896.png" alt="image-20240603201205896"></p>
<p>2.TCP&#x2F;IP</p>
<h3 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h3><p>1.速率</p>
<p>2.带宽</p>
<p>3.吞吐量</p>
<p>4.带宽</p>
<p>5.时延</p>
<p>6.时延带宽积</p>
<p>7.往返时延RTT</p>
<p>8.信道利用率</p>
<h2 id="怎么做-2"><a href="#怎么做-2" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用分类-2"><a href="#作用分类-2" class="headerlink" title="作用分类"></a>作用分类</h3><p><img src="/../TyporaImage/image-20240529212710806.png" alt="image-20240529212710806"></p>
<h2 id="为什么-1"><a href="#为什么-1" class="headerlink" title="为什么"></a>为什么</h2><p>网络</p>
<h2 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><p>是一个将分散的、具有独立功能的计算机系统，通过通信设备和线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。</p>
<p><img src="/../TyporaImage/image-20240528205238073.png" alt="image-20240528205238073"></p>
<h3 id="分类和组成-3"><a href="#分类和组成-3" class="headerlink" title="分类和组成"></a>分类和组成</h3><p>内部组成部分：</p>
<p><img src="/../TyporaImage/image-20240528210227886.png" alt="image-20240528210227886"></p>
<p>特殊形态：</p>
<p><img src="/../TyporaImage/image-20240602171344960.png" alt="image-20240602171344960"></p>
<h3 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h3><p>1..OSI</p>
<p><img src="/../TyporaImage/image-20240603201205896.png" alt="image-20240603201205896"></p>
<p>2.TCP&#x2F;IP</p>
<h3 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h3><p>1.速率</p>
<p>2.带宽</p>
<p>3.吞吐量</p>
<p>4.带宽</p>
<p>5.时延</p>
<p>6.时延带宽积</p>
<p>7.往返时延RTT</p>
<p>8.信道利用率</p>
<h2 id="怎么做-3"><a href="#怎么做-3" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="作用分类-3"><a href="#作用分类-3" class="headerlink" title="作用分类"></a>作用分类</h3><p><img src="/../TyporaImage/image-20240529212710806.png" alt="image-20240529212710806"></p>
<h2 id="为什么-2"><a href="#为什么-2" class="headerlink" title="为什么"></a>为什么</h2>]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>路由算法与路由协议概述</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%B7%AF%E7%94%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="路由算法"><a href="#路由算法" class="headerlink" title="路由算法"></a>路由算法</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>路由算法是用于确定网络中数据包传输路径的一组规则和过程，确保数据从源节点有效地到达目标节点。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态路由算法"><a href="#1-静态路由算法" class="headerlink" title="1.静态路由算法"></a>1.静态路由算法</h3><p>手工配置路由信息</p>
<h3 id="2-动态路由算法"><a href="#2-动态路由算法" class="headerlink" title="2.动态路由算法"></a>2.动态路由算法</h3><p>①全局性</p>
<p>链路状态路由算法OSPF</p>
<p>②分散性</p>
<p>距离向量路由算法RIP</p>
<h1 id="路由选择协议"><a href="#路由选择协议" class="headerlink" title="路由选择协议"></a>路由选择协议</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>路由选择协议是一组用于在计算机网络中交换路由信息和更新路由表的规则和过程，帮助网络设备选择最佳路径将数据从源节点传送到目标节点。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.内部网关协议IGP（Interior Gateway Protocol）</p>
<p>一个AS内使用的RIP、OSPF</p>
<p>2.外部网关协议EGP（Exterior Gateway Protocol，EGP）</p>
<p>AS之间使用的BGP</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>1.许多单位不想让外界知道自己的路由选择协议，但是还想连入因特网</p>
<p>2.便于管理</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.AS</p>
<p>自治系统（Autonomous System，AS）是在单一技术管理下的一组网络。这些网络通常属于同一个组织，如一所大学、一个企业或一个互联网服务提供商。</p>
<p>算法</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>路由算法是用于确定网络中数据包传输路径的一组规则和过程，确保数据从源节点有效地到达目标节点。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态路由算法-1"><a href="#1-静态路由算法-1" class="headerlink" title="1.静态路由算法"></a>1.静态路由算法</h3><p>手工配置路由信息</p>
<h3 id="2-动态路由算法-1"><a href="#2-动态路由算法-1" class="headerlink" title="2.动态路由算法"></a>2.动态路由算法</h3><p>①全局性</p>
<p>链路状态路由算法OSPF</p>
<p>②分散性</p>
<p>距离向量路由算法RIP</p>
<h1 id="路由选择协议-1"><a href="#路由选择协议-1" class="headerlink" title="路由选择协议"></a>路由选择协议</h1><h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>路由选择协议是一组用于在计算机网络中交换路由信息和更新路由表的规则和过程，帮助网络设备选择最佳路径将数据从源节点传送到目标节点。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.内部网关协议IGP（Interior Gateway Protocol）</p>
<p>一个AS内使用的RIP、OSPF</p>
<p>2.外部网关协议EGP（Exterior Gateway Protocol，EGP）</p>
<p>AS之间使用的BGP</p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>1.许多单位不想让外界知道自己的路由选择协议，但是还想连入因特网</p>
<p>2.便于管理</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.AS</p>
<p>自治系统（Autonomous System，AS）是在单一技术管理下的一组网络。这些网络通常属于同一个组织，如一所大学、一个企业或一个互联网服务提供商。# 路由算法</p>
<h2 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h2><p>路由算法是用于确定网络中数据包传输路径的一组规则和过程，确保数据从源节点有效地到达目标节点。</p>
<h2 id="分类-4"><a href="#分类-4" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态路由算法-2"><a href="#1-静态路由算法-2" class="headerlink" title="1.静态路由算法"></a>1.静态路由算法</h3><p>手工配置路由信息</p>
<h3 id="2-动态路由算法-2"><a href="#2-动态路由算法-2" class="headerlink" title="2.动态路由算法"></a>2.动态路由算法</h3><p>①全局性</p>
<p>链路状态路由算法OSPF</p>
<p>②分散性</p>
<p>距离向量路由算法RIP</p>
<h1 id="路由选择协议-2"><a href="#路由选择协议-2" class="headerlink" title="路由选择协议"></a>路由选择协议</h1><h2 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h2><p>路由选择协议是一组用于在计算机网络中交换路由信息和更新路由表的规则和过程，帮助网络设备选择最佳路径将数据从源节点传送到目标节点。</p>
<h2 id="分类-5"><a href="#分类-5" class="headerlink" title="分类"></a>分类</h2><p>1.内部网关协议IGP（Interior Gateway Protocol）</p>
<p>一个AS内使用的RIP、OSPF</p>
<p>2.外部网关协议EGP（Exterior Gateway Protocol，EGP）</p>
<p>AS之间使用的BGP</p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>1.许多单位不想让外界知道自己的路由选择协议，但是还想连入因特网</p>
<p>2.便于管理</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.AS</p>
<p>自治系统（Autonomous System，AS）是在单一技术管理下的一组网络。这些网络通常属于同一个组织，如一所大学、一个企业或一个互联网服务提供商。</p>
<p>算法</p>
<h2 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h2><p>路由算法是用于确定网络中数据包传输路径的一组规则和过程，确保数据从源节点有效地到达目标节点。</p>
<h2 id="分类-6"><a href="#分类-6" class="headerlink" title="分类"></a>分类</h2><h3 id="1-静态路由算法-3"><a href="#1-静态路由算法-3" class="headerlink" title="1.静态路由算法"></a>1.静态路由算法</h3><p>手工配置路由信息</p>
<h3 id="2-动态路由算法-3"><a href="#2-动态路由算法-3" class="headerlink" title="2.动态路由算法"></a>2.动态路由算法</h3><p>①全局性</p>
<p>链路状态路由算法OSPF</p>
<p>②分散性</p>
<p>距离向量路由算法RIP</p>
<h1 id="路由选择协议-3"><a href="#路由选择协议-3" class="headerlink" title="路由选择协议"></a>路由选择协议</h1><h2 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h2><p>路由选择协议是一组用于在计算机网络中交换路由信息和更新路由表的规则和过程，帮助网络设备选择最佳路径将数据从源节点传送到目标节点。</p>
<h2 id="分类-7"><a href="#分类-7" class="headerlink" title="分类"></a>分类</h2><p>1.内部网关协议IGP（Interior Gateway Protocol）</p>
<p>一个AS内使用的RIP、OSPF</p>
<p>2.外部网关协议EGP（Exterior Gateway Protocol，EGP）</p>
<p>AS之间使用的BGP</p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>1.许多单位不想让外界知道自己的路由选择协议，但是还想连入因特网</p>
<p>2.便于管理</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.AS</p>
<p>自治系统（Autonomous System，AS）是在单一技术管理下的一组网络。这些网络通常属于同一个组织，如一所大学、一个企业或一个互联网服务提供商。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>轮询访问介质访问控制</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%BD%AE%E8%AF%A2%E8%AE%BF%E9%97%AE%E4%BB%8B%E8%B4%A8%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h1 id="轮询访问"><a href="#轮询访问" class="headerlink" title="轮询访问"></a>轮询访问</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.轮询协议</p>
<p>2.令牌传递协议</p>
<h1 id="轮询协议"><a href="#轮询协议" class="headerlink" title="轮询协议"></a>轮询协议</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>一种在计算机网络中用于数据传输的协议。它主要用于在多个设备或系统之间同步数据，确保每个设备都能接收到信息。</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ol>
<li><strong>有序性</strong>：数据传输按照预定的顺序进行，每个设备在轮到自己时才能发送数据。</li>
<li><strong>控制性</strong>：主设备控制整个数据传输过程，从设备在主设备的询问下才发送数据。</li>
<li><strong>可靠性</strong>：通过轮流询问，确保每个设备都有机会发送数据，减少了数据丢失的可能性。</li>
</ol>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>一个设备（通常是主设备）轮流询问其他设备（从设备）是否有数据要发送。从设备在接收到询问后，如果有数据要发送，就会将数据发送给主设备；如果没有数据要发送，就会告知主设备当前无数据。</p>
<h1 id="令牌传递协议"><a href="#令牌传递协议" class="headerlink" title="令牌传递协议"></a>令牌传递协议</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>令牌在网络中的各个设备之间按照预定的顺序传递，只有持有令牌的设备才能发送数据。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.令牌：</p>
<p>一个特殊格式的MAC控制帧，不含任何信息。控制信道的使用，确保同一时刻只有一个节点独占信道。访问</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.轮询协议</p>
<p>2.令牌传递协议</p>
<h1 id="轮询协议-1"><a href="#轮询协议-1" class="headerlink" title="轮询协议"></a>轮询协议</h1><h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>一种在计算机网络中用于数据传输的协议。它主要用于在多个设备或系统之间同步数据，确保每个设备都能接收到信息。</p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><ol>
<li><strong>有序性</strong>：数据传输按照预定的顺序进行，每个设备在轮到自己时才能发送数据。</li>
<li><strong>控制性</strong>：主设备控制整个数据传输过程，从设备在主设备的询问下才发送数据。</li>
<li><strong>可靠性</strong>：通过轮流询问，确保每个设备都有机会发送数据，减少了数据丢失的可能性。</li>
</ol>
<h2 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h2><p>一个设备（通常是主设备）轮流询问其他设备（从设备）是否有数据要发送。从设备在接收到询问后，如果有数据要发送，就会将数据发送给主设备；如果没有数据要发送，就会告知主设备当前无数据。</p>
<h1 id="令牌传递协议-1"><a href="#令牌传递协议-1" class="headerlink" title="令牌传递协议"></a>令牌传递协议</h1><h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>令牌在网络中的各个设备之间按照预定的顺序传递，只有持有令牌的设备才能发送数据。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.令牌：</p>
<p>一个特殊格式的MAC控制帧，不含任何信息。控制信道的使用，确保同一时刻只有一个节点独占信道。# 轮询访问</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.轮询协议</p>
<p>2.令牌传递协议</p>
<h1 id="轮询协议-2"><a href="#轮询协议-2" class="headerlink" title="轮询协议"></a>轮询协议</h1><h2 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h2><p>一种在计算机网络中用于数据传输的协议。它主要用于在多个设备或系统之间同步数据，确保每个设备都能接收到信息。</p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><ol>
<li><strong>有序性</strong>：数据传输按照预定的顺序进行，每个设备在轮到自己时才能发送数据。</li>
<li><strong>控制性</strong>：主设备控制整个数据传输过程，从设备在主设备的询问下才发送数据。</li>
<li><strong>可靠性</strong>：通过轮流询问，确保每个设备都有机会发送数据，减少了数据丢失的可能性。</li>
</ol>
<h2 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h2><p>一个设备（通常是主设备）轮流询问其他设备（从设备）是否有数据要发送。从设备在接收到询问后，如果有数据要发送，就会将数据发送给主设备；如果没有数据要发送，就会告知主设备当前无数据。</p>
<h1 id="令牌传递协议-2"><a href="#令牌传递协议-2" class="headerlink" title="令牌传递协议"></a>令牌传递协议</h1><h2 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h2><p>令牌在网络中的各个设备之间按照预定的顺序传递，只有持有令牌的设备才能发送数据。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.令牌：</p>
<p>一个特殊格式的MAC控制帧，不含任何信息。控制信道的使用，确保同一时刻只有一个节点独占信道。访问</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.轮询协议</p>
<p>2.令牌传递协议</p>
<h1 id="轮询协议-3"><a href="#轮询协议-3" class="headerlink" title="轮询协议"></a>轮询协议</h1><h2 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h2><p>一种在计算机网络中用于数据传输的协议。它主要用于在多个设备或系统之间同步数据，确保每个设备都能接收到信息。</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><ol>
<li><strong>有序性</strong>：数据传输按照预定的顺序进行，每个设备在轮到自己时才能发送数据。</li>
<li><strong>控制性</strong>：主设备控制整个数据传输过程，从设备在主设备的询问下才发送数据。</li>
<li><strong>可靠性</strong>：通过轮流询问，确保每个设备都有机会发送数据，减少了数据丢失的可能性。</li>
</ol>
<h2 id="原理-3"><a href="#原理-3" class="headerlink" title="原理"></a>原理</h2><p>一个设备（通常是主设备）轮流询问其他设备（从设备）是否有数据要发送。从设备在接收到询问后，如果有数据要发送，就会将数据发送给主设备；如果没有数据要发送，就会告知主设备当前无数据。</p>
<h1 id="令牌传递协议-3"><a href="#令牌传递协议-3" class="headerlink" title="令牌传递协议"></a>令牌传递协议</h1><h2 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h2><p>令牌在网络中的各个设备之间按照预定的顺序传递，只有持有令牌的设备才能发送数据。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.令牌：</p>
<p>一个特殊格式的MAC控制帧，不含任何信息。控制信道的使用，确保同一时刻只有一个节点独占信道。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>选择重传协议</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%80%89%E6%8B%A9%E9%87%8D%E4%BC%A0%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="选择重传协议"><a href="#选择重传协议" class="headerlink" title="选择重传协议"></a>选择重传协议</h1><h2 id="结构形式"><a href="#结构形式" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613170926877.png" alt="image-20240613170926877"></p>
<p><img src="/../TyporaImage/image-20240613171420132.png" alt="image-20240613171420132"></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><h3 id="发送方："><a href="#发送方：" class="headerlink" title="发送方："></a>发送方：</h3><p>①上层调用</p>
<p>②收到了一个ACK</p>
<p><img src="/../TyporaImage/image-20240613171042584.png" alt="image-20240613171042584"></p>
<p>③超时时间</p>
<p>每个帧都有对应的超时计时器，超时后只重传一个帧。</p>
<h3 id="接收方："><a href="#接收方：" class="headerlink" title="接收方："></a>接收方：</h3><p>接收窗口内需要的帧都可以接受：</p>
<p><img src="/../TyporaImage/image-20240613171304343.png" alt="image-20240613171304343"></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>解决后退N帧协议中的全部重传问题，这个只是为了重传出错的帧。</p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.发送窗口最好等于接收窗口</p>
<p><img src="/../TyporaImage/image-20240613171535075.png" alt="image-20240613171535075"></p>
<p>协议</p>
<h2 id="结构形式-1"><a href="#结构形式-1" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613170926877.png" alt="image-20240613170926877"></p>
<p><img src="/../TyporaImage/image-20240613171420132.png" alt="image-20240613171420132"></p>
<h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><h3 id="发送方：-1"><a href="#发送方：-1" class="headerlink" title="发送方："></a>发送方：</h3><p>①上层调用</p>
<p>②收到了一个ACK</p>
<p><img src="/../TyporaImage/image-20240613171042584.png" alt="image-20240613171042584"></p>
<p>③超时时间</p>
<p>每个帧都有对应的超时计时器，超时后只重传一个帧。</p>
<h3 id="接收方：-1"><a href="#接收方：-1" class="headerlink" title="接收方："></a>接收方：</h3><p>接收窗口内需要的帧都可以接受：</p>
<p><img src="/../TyporaImage/image-20240613171304343.png" alt="image-20240613171304343"></p>
<h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>解决后退N帧协议中的全部重传问题，这个只是为了重传出错的帧。</p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.发送窗口最好等于接收窗口</p>
<p><img src="/../TyporaImage/image-20240613171535075.png" alt="image-20240613171535075"># 选择重传协议</p>
<h2 id="结构形式-2"><a href="#结构形式-2" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613170926877.png" alt="image-20240613170926877"></p>
<p><img src="/../TyporaImage/image-20240613171420132.png" alt="image-20240613171420132"></p>
<h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><h3 id="发送方：-2"><a href="#发送方：-2" class="headerlink" title="发送方："></a>发送方：</h3><p>①上层调用</p>
<p>②收到了一个ACK</p>
<p><img src="/../TyporaImage/image-20240613171042584.png" alt="image-20240613171042584"></p>
<p>③超时时间</p>
<p>每个帧都有对应的超时计时器，超时后只重传一个帧。</p>
<h3 id="接收方：-2"><a href="#接收方：-2" class="headerlink" title="接收方："></a>接收方：</h3><p>接收窗口内需要的帧都可以接受：</p>
<p><img src="/../TyporaImage/image-20240613171304343.png" alt="image-20240613171304343"></p>
<h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>解决后退N帧协议中的全部重传问题，这个只是为了重传出错的帧。</p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.发送窗口最好等于接收窗口</p>
<p><img src="/../TyporaImage/image-20240613171535075.png" alt="image-20240613171535075"></p>
<p>协议</p>
<h2 id="结构形式-3"><a href="#结构形式-3" class="headerlink" title="结构形式"></a>结构形式</h2><p><img src="/../TyporaImage/image-20240613170926877.png" alt="image-20240613170926877"></p>
<p><img src="/../TyporaImage/image-20240613171420132.png" alt="image-20240613171420132"></p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><h3 id="发送方：-3"><a href="#发送方：-3" class="headerlink" title="发送方："></a>发送方：</h3><p>①上层调用</p>
<p>②收到了一个ACK</p>
<p><img src="/../TyporaImage/image-20240613171042584.png" alt="image-20240613171042584"></p>
<p>③超时时间</p>
<p>每个帧都有对应的超时计时器，超时后只重传一个帧。</p>
<h3 id="接收方：-3"><a href="#接收方：-3" class="headerlink" title="接收方："></a>接收方：</h3><p>接收窗口内需要的帧都可以接受：</p>
<p><img src="/../TyporaImage/image-20240613171304343.png" alt="image-20240613171304343"></p>
<h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>解决后退N帧协议中的全部重传问题，这个只是为了重传出错的帧。</p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.发送窗口最好等于接收窗口</p>
<p><img src="/../TyporaImage/image-20240613171535075.png" alt="image-20240613171535075"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>链路层设备</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%93%BE%E8%B7%AF%E5%B1%82%E8%AE%BE%E5%A4%87/</url>
    <content><![CDATA[<h1 id="数据链路层设备"><a href="#数据链路层设备" class="headerlink" title="数据链路层设备"></a>数据链路层设备</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.网桥</p>
<p>①透明网桥</p>
<p>②源路由网桥</p>
<p>2.交换机</p>
<p>①直通式交换机</p>
<p>②存储转发式交换机</p>
<h1 id="网桥"><a href="#网桥" class="headerlink" title="网桥"></a>网桥</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>网桥（Bridge）是一种网络设备，用于连接两个或多个局域网（LAN），并在这些网络之间转发数据帧。</p>
<h1 id="源路由网桥"><a href="#源路由网桥" class="headerlink" title="源路由网桥"></a>源路由网桥</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>源路由网桥（Source Routing Bridge）是一种网络设备，它允许数据帧在通过网桥时按照预先定义的路径进行传输。</p>
<h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p>以广播的方式向目的站发送一个发现帧。</p>
<h1 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h1><p><img src="/../TyporaImage/image-20240617221748831.png" alt="image-20240617221748831"></p>
<h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.冲突域和广播域</p>
<p><img src="../TyporaImage/image-20240617221817579.png" alt="image-20240617221817579" style="zoom:150%;" />设备</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>1.网桥</p>
<p>①透明网桥</p>
<p>②源路由网桥</p>
<p>2.交换机</p>
<p>①直通式交换机</p>
<p>②存储转发式交换机</p>
<h1 id="网桥-1"><a href="#网桥-1" class="headerlink" title="网桥"></a>网桥</h1><h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>网桥（Bridge）是一种网络设备，用于连接两个或多个局域网（LAN），并在这些网络之间转发数据帧。</p>
<h1 id="源路由网桥-1"><a href="#源路由网桥-1" class="headerlink" title="源路由网桥"></a>源路由网桥</h1><h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>源路由网桥（Source Routing Bridge）是一种网络设备，它允许数据帧在通过网桥时按照预先定义的路径进行传输。</p>
<h2 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h2><p>以广播的方式向目的站发送一个发现帧。</p>
<h1 id="交换机-1"><a href="#交换机-1" class="headerlink" title="交换机"></a>交换机</h1><p><img src="/../TyporaImage/image-20240617221748831.png" alt="image-20240617221748831"></p>
<h2 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.冲突域和广播域</p>
<p><img src="../TyporaImage/image-20240617221817579.png" alt="image-20240617221817579" style="zoom:150%;" /># 数据链路层设备</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>1.网桥</p>
<p>①透明网桥</p>
<p>②源路由网桥</p>
<p>2.交换机</p>
<p>①直通式交换机</p>
<p>②存储转发式交换机</p>
<h1 id="网桥-2"><a href="#网桥-2" class="headerlink" title="网桥"></a>网桥</h1><h2 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h2><p>网桥（Bridge）是一种网络设备，用于连接两个或多个局域网（LAN），并在这些网络之间转发数据帧。</p>
<h1 id="源路由网桥-2"><a href="#源路由网桥-2" class="headerlink" title="源路由网桥"></a>源路由网桥</h1><h2 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h2><p>源路由网桥（Source Routing Bridge）是一种网络设备，它允许数据帧在通过网桥时按照预先定义的路径进行传输。</p>
<h2 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h2><p>以广播的方式向目的站发送一个发现帧。</p>
<h1 id="交换机-2"><a href="#交换机-2" class="headerlink" title="交换机"></a>交换机</h1><p><img src="/../TyporaImage/image-20240617221748831.png" alt="image-20240617221748831"></p>
<h2 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.冲突域和广播域</p>
<p><img src="../TyporaImage/image-20240617221817579.png" alt="image-20240617221817579" style="zoom:150%;" />设备</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>1.网桥</p>
<p>①透明网桥</p>
<p>②源路由网桥</p>
<p>2.交换机</p>
<p>①直通式交换机</p>
<p>②存储转发式交换机</p>
<h1 id="网桥-3"><a href="#网桥-3" class="headerlink" title="网桥"></a>网桥</h1><h2 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h2><p>网桥（Bridge）是一种网络设备，用于连接两个或多个局域网（LAN），并在这些网络之间转发数据帧。</p>
<h1 id="源路由网桥-3"><a href="#源路由网桥-3" class="headerlink" title="源路由网桥"></a>源路由网桥</h1><h2 id="定义-7"><a href="#定义-7" class="headerlink" title="定义"></a>定义</h2><p>源路由网桥（Source Routing Bridge）是一种网络设备，它允许数据帧在通过网桥时按照预先定义的路径进行传输。</p>
<h2 id="使用方式-3"><a href="#使用方式-3" class="headerlink" title="使用方式"></a>使用方式</h2><p>以广播的方式向目的站发送一个发现帧。</p>
<h1 id="交换机-3"><a href="#交换机-3" class="headerlink" title="交换机"></a>交换机</h1><p><img src="/../TyporaImage/image-20240617221748831.png" alt="image-20240617221748831"></p>
<h2 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h2><p>1.冲突域和广播域</p>
<img src="../TyporaImage/image-20240617221817579.png" alt="image-20240617221817579" style="zoom:150%;" />]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>非导向性传输介质</title>
    <url>/2024/11/08/TyporaNotes/Typora_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%9D%9E%E5%AF%BC%E5%90%91%E6%80%A7%E4%BC%A0%E8%BE%93%E4%BB%8B%E8%B4%A8/</url>
    <content><![CDATA[<h1 id="无线电波"><a href="#无线电波" class="headerlink" title="无线电波"></a>无线电波</h1><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>1.较强穿透能力</p>
<p>2.可远距离传输</p>
<p>3.广泛用于通信领域</p>
<p>4.信号向所有方向传播</p>
<h1 id="微波"><a href="#微波" class="headerlink" title="微波"></a>微波</h1><h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><p>1.通信频率较高、频带范围宽，因此数据率很高。</p>
<h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p>1.地面微波接力通信</p>
<p>2.卫星通信</p>
<p><img src="/../TyporaImage/image-20240608164801988.png" alt="image-20240608164801988"></p>
<h1 id="红外线、激光"><a href="#红外线、激光" class="headerlink" title="红外线、激光"></a>红外线、激光</h1><h2 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h2><p>1.信号固定方向传播</p>
<p>2.把要传输的信号分别转换为<strong>各自的信号格式</strong>，即红外光信号和激光信号，再在空间里传播</p>
<h1 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h1><h2 id="知识导图"><a href="#知识导图" class="headerlink" title="知识导图"></a>知识导图</h2><p><img src="/../TyporaImage/image-20240608165032062.png" alt="image-20240608165032062">电波</p>
<h2 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h2><p>1.较强穿透能力</p>
<p>2.可远距离传输</p>
<p>3.广泛用于通信领域</p>
<p>4.信号向所有方向传播</p>
<h1 id="微波-1"><a href="#微波-1" class="headerlink" title="微波"></a>微波</h1><h2 id="特点-4"><a href="#特点-4" class="headerlink" title="特点"></a>特点</h2><p>1.通信频率较高、频带范围宽，因此数据率很高。</p>
<h2 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h2><p>1.地面微波接力通信</p>
<p>2.卫星通信</p>
<p><img src="/../TyporaImage/image-20240608164801988.png" alt="image-20240608164801988"></p>
<h1 id="红外线、激光-1"><a href="#红外线、激光-1" class="headerlink" title="红外线、激光"></a>红外线、激光</h1><h2 id="特点-5"><a href="#特点-5" class="headerlink" title="特点"></a>特点</h2><p>1.信号固定方向传播</p>
<p>2.把要传输的信号分别转换为<strong>各自的信号格式</strong>，即红外光信号和激光信号，再在空间里传播</p>
<h1 id="相关知识点-1"><a href="#相关知识点-1" class="headerlink" title="相关知识点"></a>相关知识点</h1><h2 id="知识导图-1"><a href="#知识导图-1" class="headerlink" title="知识导图"></a>知识导图</h2><p><img src="/../TyporaImage/image-20240608165032062.png" alt="image-20240608165032062"># 无线电波</p>
<h2 id="特点-6"><a href="#特点-6" class="headerlink" title="特点"></a>特点</h2><p>1.较强穿透能力</p>
<p>2.可远距离传输</p>
<p>3.广泛用于通信领域</p>
<p>4.信号向所有方向传播</p>
<h1 id="微波-2"><a href="#微波-2" class="headerlink" title="微波"></a>微波</h1><h2 id="特点-7"><a href="#特点-7" class="headerlink" title="特点"></a>特点</h2><p>1.通信频率较高、频带范围宽，因此数据率很高。</p>
<h2 id="应用-2"><a href="#应用-2" class="headerlink" title="应用"></a>应用</h2><p>1.地面微波接力通信</p>
<p>2.卫星通信</p>
<p><img src="/../TyporaImage/image-20240608164801988.png" alt="image-20240608164801988"></p>
<h1 id="红外线、激光-2"><a href="#红外线、激光-2" class="headerlink" title="红外线、激光"></a>红外线、激光</h1><h2 id="特点-8"><a href="#特点-8" class="headerlink" title="特点"></a>特点</h2><p>1.信号固定方向传播</p>
<p>2.把要传输的信号分别转换为<strong>各自的信号格式</strong>，即红外光信号和激光信号，再在空间里传播</p>
<h1 id="相关知识点-2"><a href="#相关知识点-2" class="headerlink" title="相关知识点"></a>相关知识点</h1><h2 id="知识导图-2"><a href="#知识导图-2" class="headerlink" title="知识导图"></a>知识导图</h2><p><img src="/../TyporaImage/image-20240608165032062.png" alt="image-20240608165032062">电波</p>
<h2 id="特点-9"><a href="#特点-9" class="headerlink" title="特点"></a>特点</h2><p>1.较强穿透能力</p>
<p>2.可远距离传输</p>
<p>3.广泛用于通信领域</p>
<p>4.信号向所有方向传播</p>
<h1 id="微波-3"><a href="#微波-3" class="headerlink" title="微波"></a>微波</h1><h2 id="特点-10"><a href="#特点-10" class="headerlink" title="特点"></a>特点</h2><p>1.通信频率较高、频带范围宽，因此数据率很高。</p>
<h2 id="应用-3"><a href="#应用-3" class="headerlink" title="应用"></a>应用</h2><p>1.地面微波接力通信</p>
<p>2.卫星通信</p>
<p><img src="/../TyporaImage/image-20240608164801988.png" alt="image-20240608164801988"></p>
<h1 id="红外线、激光-3"><a href="#红外线、激光-3" class="headerlink" title="红外线、激光"></a>红外线、激光</h1><h2 id="特点-11"><a href="#特点-11" class="headerlink" title="特点"></a>特点</h2><p>1.信号固定方向传播</p>
<p>2.把要传输的信号分别转换为<strong>各自的信号格式</strong>，即红外光信号和激光信号，再在空间里传播</p>
<h1 id="相关知识点-3"><a href="#相关知识点-3" class="headerlink" title="相关知识点"></a>相关知识点</h1><h2 id="知识导图-3"><a href="#知识导图-3" class="headerlink" title="知识导图"></a>知识导图</h2><p><img src="/../TyporaImage/image-20240608165032062.png" alt="image-20240608165032062"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>原理</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E5%BA%94%E7%94%A8-%E6%BF%80%E5%8F%91%E6%83%85%E7%BB%AA%EF%BC%88%E7%BB%99%E5%AF%B9%E6%96%B9%E5%88%BA%E6%BF%80%EF%BC%89/%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>一、人的应激情绪不能被理智左右。</p>
<p>二、情绪是人真实内心的窗口。</p>
<p>三、微表情识别的科学基础</p>
<p>四、微表情特征：</p>
<p>自动连接、难以控制、判断真伪。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124853323.png" alt="image-20240908124853323"></p>
<p>原理</p>
<p>一、人的应激情绪不能被理智左右。</p>
<p>二、情绪是人真实内心的窗口。</p>
<p>三、微表情识别的科学基础</p>
<p>四、微表情特征：</p>
<p>自动连接、难以控制、判断真伪。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124853323.png" alt="image-20240908124853323"># 原理</p>
<p>一、人的应激情绪不能被理智左右。</p>
<p>二、情绪是人真实内心的窗口。</p>
<p>三、微表情识别的科学基础</p>
<p>四、微表情特征：</p>
<p>自动连接、难以控制、判断真伪。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124853323.png" alt="image-20240908124853323"></p>
<p>原理</p>
<p>一、人的应激情绪不能被理智左右。</p>
<p>二、情绪是人真实内心的窗口。</p>
<p>三、微表情识别的科学基础</p>
<p>四、微表情特征：</p>
<p>自动连接、难以控制、判断真伪。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124853323.png" alt="image-20240908124853323"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>策略-失控</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E5%BA%94%E7%94%A8-%E6%BF%80%E5%8F%91%E6%83%85%E7%BB%AA%EF%BC%88%E7%BB%99%E5%AF%B9%E6%96%B9%E5%88%BA%E6%BF%80%EF%BC%89/%E7%AD%96%E7%95%A5-%E5%A4%B1%E6%8E%A7/</url>
    <content><![CDATA[<h1 id="策略-失控"><a href="#策略-失控" class="headerlink" title="策略-失控"></a>策略-失控</h1><p>通过主体提问节奏的变化，造成对象心态节奏的失衡，以达到对象的真实，即下意识地习惯性表达。失控</p>
<p>通过主体提问节奏的变化，造成对象心态节奏的失衡，以达到对象的真实，即下意识地习惯性表达。# 策略-失控</p>
<p>通过主体提问节奏的变化，造成对象心态节奏的失衡，以达到对象的真实，即下意识地习惯性表达。失控</p>
<p>通过主体提问节奏的变化，造成对象心态节奏的失衡，以达到对象的真实，即下意识地习惯性表达。</p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>策略-逼问</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E5%BA%94%E7%94%A8-%E6%BF%80%E5%8F%91%E6%83%85%E7%BB%AA%EF%BC%88%E7%BB%99%E5%AF%B9%E6%96%B9%E5%88%BA%E6%BF%80%EF%BC%89/%E7%AD%96%E7%95%A5-%E9%80%BC%E9%97%AE/</url>
    <content><![CDATA[<h1 id="策略-逼问"><a href="#策略-逼问" class="headerlink" title="策略-逼问"></a>策略-逼问</h1><p><img src="/./../../TyporaImage/MicroExpression/image-20240908130702845.png" alt="image-20240908130702845">逼问</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908130702845.png" alt="image-20240908130702845"># 策略-逼问</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908130702845.png" alt="image-20240908130702845">逼问</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908130702845.png" alt="image-20240908130702845"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>策略-设问</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E5%BA%94%E7%94%A8-%E6%BF%80%E5%8F%91%E6%83%85%E7%BB%AA%EF%BC%88%E7%BB%99%E5%AF%B9%E6%96%B9%E5%88%BA%E6%BF%80%EF%BC%89/%E7%AD%96%E7%95%A5-%E8%AE%BE%E9%97%AE/</url>
    <content><![CDATA[<h1 id="策略-设问"><a href="#策略-设问" class="headerlink" title="策略-设问"></a>策略-设问</h1><h2 id="设问预案"><a href="#设问预案" class="headerlink" title="设问预案"></a>设问预案</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124919389.png" alt="image-20240908124919389"></p>
<h2 id="问题分类"><a href="#问题分类" class="headerlink" title="问题分类"></a>问题分类</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124927405.png" alt="image-20240908124927405"></p>
<h2 id="提问原则"><a href="#提问原则" class="headerlink" title="提问原则"></a>提问原则</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124934849.png" alt="image-20240908124934849">设问</p>
<h2 id="设问预案-1"><a href="#设问预案-1" class="headerlink" title="设问预案"></a>设问预案</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124919389.png" alt="image-20240908124919389"></p>
<h2 id="问题分类-1"><a href="#问题分类-1" class="headerlink" title="问题分类"></a>问题分类</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124927405.png" alt="image-20240908124927405"></p>
<h2 id="提问原则-1"><a href="#提问原则-1" class="headerlink" title="提问原则"></a>提问原则</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124934849.png" alt="image-20240908124934849"># 策略-设问</p>
<h2 id="设问预案-2"><a href="#设问预案-2" class="headerlink" title="设问预案"></a>设问预案</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124919389.png" alt="image-20240908124919389"></p>
<h2 id="问题分类-2"><a href="#问题分类-2" class="headerlink" title="问题分类"></a>问题分类</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124927405.png" alt="image-20240908124927405"></p>
<h2 id="提问原则-2"><a href="#提问原则-2" class="headerlink" title="提问原则"></a>提问原则</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124934849.png" alt="image-20240908124934849">设问</p>
<h2 id="设问预案-3"><a href="#设问预案-3" class="headerlink" title="设问预案"></a>设问预案</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124919389.png" alt="image-20240908124919389"></p>
<h2 id="问题分类-3"><a href="#问题分类-3" class="headerlink" title="问题分类"></a>问题分类</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124927405.png" alt="image-20240908124927405"></p>
<h2 id="提问原则-3"><a href="#提问原则-3" class="headerlink" title="提问原则"></a>提问原则</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124934849.png" alt="image-20240908124934849"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>产生原理</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E5%8E%9F%E7%90%86%E6%84%8F%E4%B9%89/%E4%BA%A7%E7%94%9F%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="产生原理"><a href="#产生原理" class="headerlink" title="产生原理"></a>产生原理</h1><p><img src="/./../../TyporaImage/MicroExpression/image-20240908123404580.png" alt="image-20240908123404580"></p>
<p>原理</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123404580.png" alt="image-20240908123404580"># 产生原理</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123404580.png" alt="image-20240908123404580"></p>
<p>原理</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123404580.png" alt="image-20240908123404580"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>功能意义</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E5%8E%9F%E7%90%86%E6%84%8F%E4%B9%89/%E5%8A%9F%E8%83%BD%E6%84%8F%E4%B9%89/</url>
    <content><![CDATA[<h1 id="情绪的功能意义"><a href="#情绪的功能意义" class="headerlink" title="情绪的功能意义"></a>情绪的功能意义</h1><p>一、有利于生存</p>
<p>二、维持恰当的人际关系。意义</p>
<p>一、有利于生存</p>
<p>二、维持恰当的人际关系。# 情绪的功能意义</p>
<p>一、有利于生存</p>
<p>二、维持恰当的人际关系。意义</p>
<p>一、有利于生存</p>
<p>二、维持恰当的人际关系。</p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>应用领域</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E5%8E%9F%E7%90%86%E6%84%8F%E4%B9%89/%E5%BA%94%E7%94%A8%E9%A2%86%E5%9F%9F/</url>
    <content><![CDATA[<h1 id="应用领域"><a href="#应用领域" class="headerlink" title="应用领域"></a>应用领域</h1><p>一、情绪：认知个人情绪和他人情绪。</p>
<p> 二、侦查</p>
<p>领域</p>
<p>一、情绪：认知个人情绪和他人情绪。</p>
<p> 二、侦查# 应用领域</p>
<p>一、情绪：认知个人情绪和他人情绪。</p>
<p> 二、侦查</p>
<p>领域</p>
<p>一、情绪：认知个人情绪和他人情绪。</p>
<p> 二、侦查</p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>读心内涵</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E5%8E%9F%E7%90%86%E6%84%8F%E4%B9%89/%E8%AF%BB%E5%BF%83%E5%86%85%E6%B6%B5/</url>
    <content><![CDATA[<h1 id="读心内涵"><a href="#读心内涵" class="headerlink" title="读心内涵"></a>读心内涵</h1><p>心理：是指生物对客观世界的主观反映。</p>
<p> 心理的表现形式：心理现象，包括心理过程和心理特性（人格）。</p>
<p> 心理过程：认知、情感、意志。</p>
<p> 人格：人格倾向和人格心理特征。</p>
<p> 认知：是人认识外界事物的过程，是对作用于人感觉器官的外界事物进行信息加工的过程。</p>
<p> 感觉:人脑对作用于感觉器官的客观事物个别属性的反映。</p>
<p> 知觉：直接作用于感觉器官的客观事物的整体在人脑中的反映。</p>
<p> 记忆：过去的经验在头脑中的反映。</p>
<p> 思维：人脑对客观事物间接的、概括的反映，它能认识事物的本质和事物之间的内在联系。</p>
<p> 想象：对已有的表象进行加工，创造出新形象的思维过程。</p>
<p> 意识：是觉醒状态下的觉知，具有重要的心理机能，对人的身心系统骑着统合、管理和调节的作用。</p>
<p> 无意识：相对于意识而言，指个体没有没有察觉到的心理活动和心理过程。</p>
<p> 注意：是心理活动或意识活动对一定对象的指向和集中。</p>
<p>注意能使所选择的对象处于意识活动或心理活动的中心，并加以维持，从而能对其进行有效的加工。</p>
<p> 意向：人们在生活中产生的各种要求的总和。</p>
<p> 意志：人的思维决策见之于人的行动的心理过程。</p>
<p> 人格：是指个人在遗传和环境的作用下所形成的实际的和潜在的影响个体行为的心理活动的总和。</p>
<p> 人格的内涵包括人格倾向性和人格心理特征两个方面。</p>
<p>人格倾向性:是推动人从事各种活动的动力系统，包括人的需要、动机、兴趣、价值观和信念等。</p>
<p> 人格心理特征决定人的行为方式上的人格特征和个体之间的差异，包括人的能力、气质和性格。</p>
<p> 能力：是顺利、有效地完成某种活动所必须具备的心理条件。</p>
<p> 气质：是心理活动表现在强度、速度、稳定性和灵活性等方面动力性质的心理特征。</p>
<p> 性格：是一个人对现实的稳定态度和习惯的行为方式中所表现出来的人格特征。</p>
<p>内涵</p>
<p>心理：是指生物对客观世界的主观反映。</p>
<p> 心理的表现形式：心理现象，包括心理过程和心理特性（人格）。</p>
<p> 心理过程：认知、情感、意志。</p>
<p> 人格：人格倾向和人格心理特征。</p>
<p> 认知：是人认识外界事物的过程，是对作用于人感觉器官的外界事物进行信息加工的过程。</p>
<p> 感觉:人脑对作用于感觉器官的客观事物个别属性的反映。</p>
<p> 知觉：直接作用于感觉器官的客观事物的整体在人脑中的反映。</p>
<p> 记忆：过去的经验在头脑中的反映。</p>
<p> 思维：人脑对客观事物间接的、概括的反映，它能认识事物的本质和事物之间的内在联系。</p>
<p> 想象：对已有的表象进行加工，创造出新形象的思维过程。</p>
<p> 意识：是觉醒状态下的觉知，具有重要的心理机能，对人的身心系统骑着统合、管理和调节的作用。</p>
<p> 无意识：相对于意识而言，指个体没有没有察觉到的心理活动和心理过程。</p>
<p> 注意：是心理活动或意识活动对一定对象的指向和集中。</p>
<p>注意能使所选择的对象处于意识活动或心理活动的中心，并加以维持，从而能对其进行有效的加工。</p>
<p> 意向：人们在生活中产生的各种要求的总和。</p>
<p> 意志：人的思维决策见之于人的行动的心理过程。</p>
<p> 人格：是指个人在遗传和环境的作用下所形成的实际的和潜在的影响个体行为的心理活动的总和。</p>
<p> 人格的内涵包括人格倾向性和人格心理特征两个方面。</p>
<p>人格倾向性:是推动人从事各种活动的动力系统，包括人的需要、动机、兴趣、价值观和信念等。</p>
<p> 人格心理特征决定人的行为方式上的人格特征和个体之间的差异，包括人的能力、气质和性格。</p>
<p> 能力：是顺利、有效地完成某种活动所必须具备的心理条件。</p>
<p> 气质：是心理活动表现在强度、速度、稳定性和灵活性等方面动力性质的心理特征。</p>
<p> 性格：是一个人对现实的稳定态度和习惯的行为方式中所表现出来的人格特征。# 读心内涵</p>
<p>心理：是指生物对客观世界的主观反映。</p>
<p> 心理的表现形式：心理现象，包括心理过程和心理特性（人格）。</p>
<p> 心理过程：认知、情感、意志。</p>
<p> 人格：人格倾向和人格心理特征。</p>
<p> 认知：是人认识外界事物的过程，是对作用于人感觉器官的外界事物进行信息加工的过程。</p>
<p> 感觉:人脑对作用于感觉器官的客观事物个别属性的反映。</p>
<p> 知觉：直接作用于感觉器官的客观事物的整体在人脑中的反映。</p>
<p> 记忆：过去的经验在头脑中的反映。</p>
<p> 思维：人脑对客观事物间接的、概括的反映，它能认识事物的本质和事物之间的内在联系。</p>
<p> 想象：对已有的表象进行加工，创造出新形象的思维过程。</p>
<p> 意识：是觉醒状态下的觉知，具有重要的心理机能，对人的身心系统骑着统合、管理和调节的作用。</p>
<p> 无意识：相对于意识而言，指个体没有没有察觉到的心理活动和心理过程。</p>
<p> 注意：是心理活动或意识活动对一定对象的指向和集中。</p>
<p>注意能使所选择的对象处于意识活动或心理活动的中心，并加以维持，从而能对其进行有效的加工。</p>
<p> 意向：人们在生活中产生的各种要求的总和。</p>
<p> 意志：人的思维决策见之于人的行动的心理过程。</p>
<p> 人格：是指个人在遗传和环境的作用下所形成的实际的和潜在的影响个体行为的心理活动的总和。</p>
<p> 人格的内涵包括人格倾向性和人格心理特征两个方面。</p>
<p>人格倾向性:是推动人从事各种活动的动力系统，包括人的需要、动机、兴趣、价值观和信念等。</p>
<p> 人格心理特征决定人的行为方式上的人格特征和个体之间的差异，包括人的能力、气质和性格。</p>
<p> 能力：是顺利、有效地完成某种活动所必须具备的心理条件。</p>
<p> 气质：是心理活动表现在强度、速度、稳定性和灵活性等方面动力性质的心理特征。</p>
<p> 性格：是一个人对现实的稳定态度和习惯的行为方式中所表现出来的人格特征。</p>
<p>内涵</p>
<p>心理：是指生物对客观世界的主观反映。</p>
<p> 心理的表现形式：心理现象，包括心理过程和心理特性（人格）。</p>
<p> 心理过程：认知、情感、意志。</p>
<p> 人格：人格倾向和人格心理特征。</p>
<p> 认知：是人认识外界事物的过程，是对作用于人感觉器官的外界事物进行信息加工的过程。</p>
<p> 感觉:人脑对作用于感觉器官的客观事物个别属性的反映。</p>
<p> 知觉：直接作用于感觉器官的客观事物的整体在人脑中的反映。</p>
<p> 记忆：过去的经验在头脑中的反映。</p>
<p> 思维：人脑对客观事物间接的、概括的反映，它能认识事物的本质和事物之间的内在联系。</p>
<p> 想象：对已有的表象进行加工，创造出新形象的思维过程。</p>
<p> 意识：是觉醒状态下的觉知，具有重要的心理机能，对人的身心系统骑着统合、管理和调节的作用。</p>
<p> 无意识：相对于意识而言，指个体没有没有察觉到的心理活动和心理过程。</p>
<p> 注意：是心理活动或意识活动对一定对象的指向和集中。</p>
<p>注意能使所选择的对象处于意识活动或心理活动的中心，并加以维持，从而能对其进行有效的加工。</p>
<p> 意向：人们在生活中产生的各种要求的总和。</p>
<p> 意志：人的思维决策见之于人的行动的心理过程。</p>
<p> 人格：是指个人在遗传和环境的作用下所形成的实际的和潜在的影响个体行为的心理活动的总和。</p>
<p> 人格的内涵包括人格倾向性和人格心理特征两个方面。</p>
<p>人格倾向性:是推动人从事各种活动的动力系统，包括人的需要、动机、兴趣、价值观和信念等。</p>
<p> 人格心理特征决定人的行为方式上的人格特征和个体之间的差异，包括人的能力、气质和性格。</p>
<p> 能力：是顺利、有效地完成某种活动所必须具备的心理条件。</p>
<p> 气质：是心理活动表现在强度、速度、稳定性和灵活性等方面动力性质的心理特征。</p>
<p> 性格：是一个人对现实的稳定态度和习惯的行为方式中所表现出来的人格特征。</p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>形态意义</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E5%8E%9F%E7%90%86%E6%84%8F%E4%B9%89/%E5%BD%A2%E6%80%81%E6%84%8F%E4%B9%89/</url>
    <content><![CDATA[<h1 id="形态意义"><a href="#形态意义" class="headerlink" title="形态意义"></a>形态意义</h1><p>表情是人对外部刺激源的一种喜恶态度和人的抗击、进攻能力的一种自我评估。</p>
<h2 id="表现形式"><a href="#表现形式" class="headerlink" title="表现形式"></a>表现形式</h2><p>面部表情、身体姿态和微语义等副语言行为。</p>
<h2 id="人类的情绪分类"><a href="#人类的情绪分类" class="headerlink" title="人类的情绪分类"></a>人类的情绪分类</h2><p>基本情绪和次级情绪。</p>
<p> 基本情绪：快乐、悲伤、愤怒、恐惧和厌恶。</p>
<p>次级情绪是基本情绪之上的变体。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123429244.png" alt="image-20240908123429244">意义</p>
<p>表情是人对外部刺激源的一种喜恶态度和人的抗击、进攻能力的一种自我评估。</p>
<h2 id="表现形式-1"><a href="#表现形式-1" class="headerlink" title="表现形式"></a>表现形式</h2><p>面部表情、身体姿态和微语义等副语言行为。</p>
<h2 id="人类的情绪分类-1"><a href="#人类的情绪分类-1" class="headerlink" title="人类的情绪分类"></a>人类的情绪分类</h2><p>基本情绪和次级情绪。</p>
<p> 基本情绪：快乐、悲伤、愤怒、恐惧和厌恶。</p>
<p>次级情绪是基本情绪之上的变体。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123429244.png" alt="image-20240908123429244"># 形态意义</p>
<p>表情是人对外部刺激源的一种喜恶态度和人的抗击、进攻能力的一种自我评估。</p>
<h2 id="表现形式-2"><a href="#表现形式-2" class="headerlink" title="表现形式"></a>表现形式</h2><p>面部表情、身体姿态和微语义等副语言行为。</p>
<h2 id="人类的情绪分类-2"><a href="#人类的情绪分类-2" class="headerlink" title="人类的情绪分类"></a>人类的情绪分类</h2><p>基本情绪和次级情绪。</p>
<p> 基本情绪：快乐、悲伤、愤怒、恐惧和厌恶。</p>
<p>次级情绪是基本情绪之上的变体。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123429244.png" alt="image-20240908123429244">意义</p>
<p>表情是人对外部刺激源的一种喜恶态度和人的抗击、进攻能力的一种自我评估。</p>
<h2 id="表现形式-3"><a href="#表现形式-3" class="headerlink" title="表现形式"></a>表现形式</h2><p>面部表情、身体姿态和微语义等副语言行为。</p>
<h2 id="人类的情绪分类-3"><a href="#人类的情绪分类-3" class="headerlink" title="人类的情绪分类"></a>人类的情绪分类</h2><p>基本情绪和次级情绪。</p>
<p> 基本情绪：快乐、悲伤、愤怒、恐惧和厌恶。</p>
<p>次级情绪是基本情绪之上的变体。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123429244.png" alt="image-20240908123429244"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>人际策略构建</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E6%80%BB%E7%BB%93/%E4%BA%BA%E9%99%85%E7%AD%96%E7%95%A5%E6%9E%84%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="人际策略构建"><a href="#人际策略构建" class="headerlink" title="人际策略构建"></a>人际策略构建</h1><h2 id="自我"><a href="#自我" class="headerlink" title="自我"></a>自我</h2><p>通过识别自己的微表情，来帮助认识和管理自己的情绪，以激励自我。</p>
<h2 id="他人"><a href="#他人" class="headerlink" title="他人"></a>他人</h2><p>有助于认识他人的情绪，以处理人际关系。</p>
<p> 通过认识自己和他人来提高自己的情商。<br>构建</p>
<h2 id="自我-1"><a href="#自我-1" class="headerlink" title="自我"></a>自我</h2><p>通过识别自己的微表情，来帮助认识和管理自己的情绪，以激励自我。</p>
<h2 id="他人-1"><a href="#他人-1" class="headerlink" title="他人"></a>他人</h2><p>有助于认识他人的情绪，以处理人际关系。</p>
<p> 通过认识自己和他人来提高自己的情商。# 人际策略构建</p>
<h2 id="自我-2"><a href="#自我-2" class="headerlink" title="自我"></a>自我</h2><p>通过识别自己的微表情，来帮助认识和管理自己的情绪，以激励自我。</p>
<h2 id="他人-2"><a href="#他人-2" class="headerlink" title="他人"></a>他人</h2><p>有助于认识他人的情绪，以处理人际关系。</p>
<p> 通过认识自己和他人来提高自己的情商。<br>构建</p>
<h2 id="自我-3"><a href="#自我-3" class="headerlink" title="自我"></a>自我</h2><p>通过识别自己的微表情，来帮助认识和管理自己的情绪，以激励自我。</p>
<h2 id="他人-3"><a href="#他人-3" class="headerlink" title="他人"></a>他人</h2><p>有助于认识他人的情绪，以处理人际关系。</p>
<p> 通过认识自己和他人来提高自己的情商。</p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>测试与反测试</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E6%80%BB%E7%BB%93/%E6%B5%8B%E8%AF%95%E4%B8%8E%E5%8F%8D%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h1 id="测试与反测试"><a href="#测试与反测试" class="headerlink" title="测试与反测试"></a>测试与反测试</h1><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>想办法去测出真实内心的想法。</p>
<h2 id="反测试"><a href="#反测试" class="headerlink" title="反测试"></a>反测试</h2><p>通过刻意去营造虚假的想法，并把想法给对方看。测试</p>
<h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p>想办法去测出真实内心的想法。</p>
<h2 id="反测试-1"><a href="#反测试-1" class="headerlink" title="反测试"></a>反测试</h2><p>通过刻意去营造虚假的想法，并把想法给对方看。# 测试与反测试</p>
<h2 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h2><p>想办法去测出真实内心的想法。</p>
<h2 id="反测试-2"><a href="#反测试-2" class="headerlink" title="反测试"></a>反测试</h2><p>通过刻意去营造虚假的想法，并把想法给对方看。测试</p>
<h2 id="测试-3"><a href="#测试-3" class="headerlink" title="测试"></a>测试</h2><p>想办法去测出真实内心的想法。</p>
<h2 id="反测试-3"><a href="#反测试-3" class="headerlink" title="反测试"></a>反测试</h2><p>通过刻意去营造虚假的想法，并把想法给对方看。</p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>仰视反应</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BA%AB%E4%BD%93%E5%BE%AE%E5%8F%8D%E5%BA%94/%E4%BB%B0%E8%A7%86%E5%8F%8D%E5%BA%94/</url>
    <content><![CDATA[<h1 id="仰视反应"><a href="#仰视反应" class="headerlink" title="仰视反应"></a>仰视反应</h1><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>人对自己能力的高低、地位差异、胜败预测、优劣定位</p>
<p>进行判断后的反应。</p>
<p>进化的本能，使得人会仰视比自己高大的对象，蔑视比自己矮小的对象；同时，人也会本能地尽量地抬高自己的身体以建立优势，或者把自己身体放低以表示谦卑或者服从。</p>
<h2 id="类别"><a href="#类别" class="headerlink" title="类别"></a>类别</h2><p>正仰视、负仰视</p>
<h3 id="正仰视"><a href="#正仰视" class="headerlink" title="正仰视"></a>正仰视</h3><h4 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h4><p>心里强势，不认输。</p>
<h4 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h4><p>头抬高、下巴微仰、躯干挺直</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124049731.png" alt="image-20240908124049731"></p>
<h3 id="负仰视"><a href="#负仰视" class="headerlink" title="负仰视"></a>负仰视</h3><h4 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h4><p>心理弱势，认输。</p>
<h4 id="形式-1"><a href="#形式-1" class="headerlink" title="形式"></a>形式</h4><p>低头、不同程度的躯干弯曲。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124100760.png" alt="image-20240908124100760">反应</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>人对自己能力的高低、地位差异、胜败预测、优劣定位</p>
<p>进行判断后的反应。</p>
<p>进化的本能，使得人会仰视比自己高大的对象，蔑视比自己矮小的对象；同时，人也会本能地尽量地抬高自己的身体以建立优势，或者把自己身体放低以表示谦卑或者服从。</p>
<h2 id="类别-1"><a href="#类别-1" class="headerlink" title="类别"></a>类别</h2><p>正仰视、负仰视</p>
<h3 id="正仰视-1"><a href="#正仰视-1" class="headerlink" title="正仰视"></a>正仰视</h3><h4 id="本质-4"><a href="#本质-4" class="headerlink" title="本质"></a>本质</h4><p>心里强势，不认输。</p>
<h4 id="形式-2"><a href="#形式-2" class="headerlink" title="形式"></a>形式</h4><p>头抬高、下巴微仰、躯干挺直</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124049731.png" alt="image-20240908124049731"></p>
<h3 id="负仰视-1"><a href="#负仰视-1" class="headerlink" title="负仰视"></a>负仰视</h3><h4 id="本质-5"><a href="#本质-5" class="headerlink" title="本质"></a>本质</h4><p>心理弱势，认输。</p>
<h4 id="形式-3"><a href="#形式-3" class="headerlink" title="形式"></a>形式</h4><p>低头、不同程度的躯干弯曲。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124100760.png" alt="image-20240908124100760"># 仰视反应</p>
<h2 id="本质-6"><a href="#本质-6" class="headerlink" title="本质"></a>本质</h2><p>人对自己能力的高低、地位差异、胜败预测、优劣定位</p>
<p>进行判断后的反应。</p>
<p>进化的本能，使得人会仰视比自己高大的对象，蔑视比自己矮小的对象；同时，人也会本能地尽量地抬高自己的身体以建立优势，或者把自己身体放低以表示谦卑或者服从。</p>
<h2 id="类别-2"><a href="#类别-2" class="headerlink" title="类别"></a>类别</h2><p>正仰视、负仰视</p>
<h3 id="正仰视-2"><a href="#正仰视-2" class="headerlink" title="正仰视"></a>正仰视</h3><h4 id="本质-7"><a href="#本质-7" class="headerlink" title="本质"></a>本质</h4><p>心里强势，不认输。</p>
<h4 id="形式-4"><a href="#形式-4" class="headerlink" title="形式"></a>形式</h4><p>头抬高、下巴微仰、躯干挺直</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124049731.png" alt="image-20240908124049731"></p>
<h3 id="负仰视-2"><a href="#负仰视-2" class="headerlink" title="负仰视"></a>负仰视</h3><h4 id="本质-8"><a href="#本质-8" class="headerlink" title="本质"></a>本质</h4><p>心理弱势，认输。</p>
<h4 id="形式-5"><a href="#形式-5" class="headerlink" title="形式"></a>形式</h4><p>低头、不同程度的躯干弯曲。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124100760.png" alt="image-20240908124100760">反应</p>
<h2 id="本质-9"><a href="#本质-9" class="headerlink" title="本质"></a>本质</h2><p>人对自己能力的高低、地位差异、胜败预测、优劣定位</p>
<p>进行判断后的反应。</p>
<p>进化的本能，使得人会仰视比自己高大的对象，蔑视比自己矮小的对象；同时，人也会本能地尽量地抬高自己的身体以建立优势，或者把自己身体放低以表示谦卑或者服从。</p>
<h2 id="类别-3"><a href="#类别-3" class="headerlink" title="类别"></a>类别</h2><p>正仰视、负仰视</p>
<h3 id="正仰视-3"><a href="#正仰视-3" class="headerlink" title="正仰视"></a>正仰视</h3><h4 id="本质-10"><a href="#本质-10" class="headerlink" title="本质"></a>本质</h4><p>心里强势，不认输。</p>
<h4 id="形式-6"><a href="#形式-6" class="headerlink" title="形式"></a>形式</h4><p>头抬高、下巴微仰、躯干挺直</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124049731.png" alt="image-20240908124049731"></p>
<h3 id="负仰视-3"><a href="#负仰视-3" class="headerlink" title="负仰视"></a>负仰视</h3><h4 id="本质-11"><a href="#本质-11" class="headerlink" title="本质"></a>本质</h4><p>心理弱势，认输。</p>
<h4 id="形式-7"><a href="#形式-7" class="headerlink" title="形式"></a>形式</h4><p>低头、不同程度的躯干弯曲。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124100760.png" alt="image-20240908124100760"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>冻结反应</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BA%AB%E4%BD%93%E5%BE%AE%E5%8F%8D%E5%BA%94/%E5%86%BB%E7%BB%93%E5%8F%8D%E5%BA%94/</url>
    <content><![CDATA[<h1 id="冻结反应"><a href="#冻结反应" class="headerlink" title="冻结反应"></a>冻结反应</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>冻结反应是人受到意外刺激的第一反应。</p>
<h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>身体判断外界刺激情况时，内心的惊慌、紧缩。</p>
<h2 id="形态"><a href="#形态" class="headerlink" title="形态"></a>形态</h2><p>身体收缩。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124018188.png" alt="image-20240908124018188">反应</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>冻结反应是人受到意外刺激的第一反应。</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>身体判断外界刺激情况时，内心的惊慌、紧缩。</p>
<h2 id="形态-1"><a href="#形态-1" class="headerlink" title="形态"></a>形态</h2><p>身体收缩。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124018188.png" alt="image-20240908124018188"># 冻结反应</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>冻结反应是人受到意外刺激的第一反应。</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>身体判断外界刺激情况时，内心的惊慌、紧缩。</p>
<h2 id="形态-2"><a href="#形态-2" class="headerlink" title="形态"></a>形态</h2><p>身体收缩。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124018188.png" alt="image-20240908124018188">反应</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>冻结反应是人受到意外刺激的第一反应。</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>身体判断外界刺激情况时，内心的惊慌、紧缩。</p>
<h2 id="形态-3"><a href="#形态-3" class="headerlink" title="形态"></a>形态</h2><p>身体收缩。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124018188.png" alt="image-20240908124018188"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>胜败反应</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BA%AB%E4%BD%93%E5%BE%AE%E5%8F%8D%E5%BA%94/%E8%83%9C%E8%B4%A5%E5%8F%8D%E5%BA%94/</url>
    <content><![CDATA[<h1 id="胜败反应"><a href="#胜败反应" class="headerlink" title="胜败反应"></a>胜败反应</h1><h2 id="胜反应"><a href="#胜反应" class="headerlink" title="胜反应"></a>胜反应</h2><h3 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h3><p>身心喜悦、亢奋状态。</p>
<h3 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h3><p>炫耀、消耗性动作</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124241765.png" alt="image-20240908124241765"></p>
<h2 id="败反应"><a href="#败反应" class="headerlink" title="败反应"></a>败反应</h2><h3 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h3><p>颓丧、低沉状态</p>
<h3 id="形式-1"><a href="#形式-1" class="headerlink" title="形式"></a>形式</h3><p>身体无力支撑的状态</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124249694.png" alt="image-20240908124249694">反应</p>
<h2 id="胜反应-1"><a href="#胜反应-1" class="headerlink" title="胜反应"></a>胜反应</h2><h3 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h3><p>身心喜悦、亢奋状态。</p>
<h3 id="形式-2"><a href="#形式-2" class="headerlink" title="形式"></a>形式</h3><p>炫耀、消耗性动作</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124241765.png" alt="image-20240908124241765"></p>
<h2 id="败反应-1"><a href="#败反应-1" class="headerlink" title="败反应"></a>败反应</h2><h3 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h3><p>颓丧、低沉状态</p>
<h3 id="形式-3"><a href="#形式-3" class="headerlink" title="形式"></a>形式</h3><p>身体无力支撑的状态</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124249694.png" alt="image-20240908124249694"># 胜败反应</p>
<h2 id="胜反应-2"><a href="#胜反应-2" class="headerlink" title="胜反应"></a>胜反应</h2><h3 id="本质-4"><a href="#本质-4" class="headerlink" title="本质"></a>本质</h3><p>身心喜悦、亢奋状态。</p>
<h3 id="形式-4"><a href="#形式-4" class="headerlink" title="形式"></a>形式</h3><p>炫耀、消耗性动作</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124241765.png" alt="image-20240908124241765"></p>
<h2 id="败反应-2"><a href="#败反应-2" class="headerlink" title="败反应"></a>败反应</h2><h3 id="本质-5"><a href="#本质-5" class="headerlink" title="本质"></a>本质</h3><p>颓丧、低沉状态</p>
<h3 id="形式-5"><a href="#形式-5" class="headerlink" title="形式"></a>形式</h3><p>身体无力支撑的状态</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124249694.png" alt="image-20240908124249694">反应</p>
<h2 id="胜反应-3"><a href="#胜反应-3" class="headerlink" title="胜反应"></a>胜反应</h2><h3 id="本质-6"><a href="#本质-6" class="headerlink" title="本质"></a>本质</h3><p>身心喜悦、亢奋状态。</p>
<h3 id="形式-6"><a href="#形式-6" class="headerlink" title="形式"></a>形式</h3><p>炫耀、消耗性动作</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124241765.png" alt="image-20240908124241765"></p>
<h2 id="败反应-3"><a href="#败反应-3" class="headerlink" title="败反应"></a>败反应</h2><h3 id="本质-7"><a href="#本质-7" class="headerlink" title="本质"></a>本质</h3><p>颓丧、低沉状态</p>
<h3 id="形式-7"><a href="#形式-7" class="headerlink" title="形式"></a>形式</h3><p>身体无力支撑的状态</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124249694.png" alt="image-20240908124249694"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>安慰反应</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BA%AB%E4%BD%93%E5%BE%AE%E5%8F%8D%E5%BA%94/%E5%AE%89%E6%85%B0%E5%8F%8D%E5%BA%94/</url>
    <content><![CDATA[<h1 id="安慰反应"><a href="#安慰反应" class="headerlink" title="安慰反应"></a>安慰反应</h1><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>人在面临压力、否定、批评等负面刺激时，为了减少内心的不适感，</p>
<p>下意识地表现出来的一些自我抚慰的反应。</p>
<h2 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h2><p>人针对自己的触碰或者多部位的自慰动作。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124034510.png" alt="image-20240908124034510">反应</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>人在面临压力、否定、批评等负面刺激时，为了减少内心的不适感，</p>
<p>下意识地表现出来的一些自我抚慰的反应。</p>
<h2 id="形式-1"><a href="#形式-1" class="headerlink" title="形式"></a>形式</h2><p>人针对自己的触碰或者多部位的自慰动作。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124034510.png" alt="image-20240908124034510"># 安慰反应</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>人在面临压力、否定、批评等负面刺激时，为了减少内心的不适感，</p>
<p>下意识地表现出来的一些自我抚慰的反应。</p>
<h2 id="形式-2"><a href="#形式-2" class="headerlink" title="形式"></a>形式</h2><p>人针对自己的触碰或者多部位的自慰动作。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124034510.png" alt="image-20240908124034510">反应</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>人在面临压力、否定、批评等负面刺激时，为了减少内心的不适感，</p>
<p>下意识地表现出来的一些自我抚慰的反应。</p>
<h2 id="形式-3"><a href="#形式-3" class="headerlink" title="形式"></a>形式</h2><p>人针对自己的触碰或者多部位的自慰动作。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124034510.png" alt="image-20240908124034510"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>爱恨反应</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BA%AB%E4%BD%93%E5%BE%AE%E5%8F%8D%E5%BA%94/%E7%88%B1%E6%81%A8%E5%8F%8D%E5%BA%94/</url>
    <content><![CDATA[<h1 id="爱恨反应"><a href="#爱恨反应" class="headerlink" title="爱恨反应"></a>爱恨反应</h1><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>是展示心理距离的亲密程度的反应，是人际之间心理距离的两个极端（爱和恨）主导产生的反应。</p>
<h2 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h2><p>身体距离趋远或趋近</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124119261.png" alt="image-20240908124119261">反应</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>是展示心理距离的亲密程度的反应，是人际之间心理距离的两个极端（爱和恨）主导产生的反应。</p>
<h2 id="形式-1"><a href="#形式-1" class="headerlink" title="形式"></a>形式</h2><p>身体距离趋远或趋近</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124119261.png" alt="image-20240908124119261"># 爱恨反应</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>是展示心理距离的亲密程度的反应，是人际之间心理距离的两个极端（爱和恨）主导产生的反应。</p>
<h2 id="形式-2"><a href="#形式-2" class="headerlink" title="形式"></a>形式</h2><p>身体距离趋远或趋近</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124119261.png" alt="image-20240908124119261">反应</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>是展示心理距离的亲密程度的反应，是人际之间心理距离的两个极端（爱和恨）主导产生的反应。</p>
<h2 id="形式-3"><a href="#形式-3" class="headerlink" title="形式"></a>形式</h2><p>身体距离趋远或趋近</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124119261.png" alt="image-20240908124119261"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>身体微反应</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BA%AB%E4%BD%93%E5%BE%AE%E5%8F%8D%E5%BA%94/%E8%BA%AB%E4%BD%93%E5%BE%AE%E5%8F%8D%E5%BA%94/</url>
    <content><![CDATA[<h1 id="身体微反应"><a href="#身体微反应" class="headerlink" title="身体微反应"></a>身体微反应</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>人们在受到刺激源刺激的一刹那，不由自主地表现出来的不受思维控制的、瞬间真实的身体小动作。</p>
<h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><p>冻结、逃离、安慰、仰视、爱恨、领地、战斗、胜败</p>
<h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>反应内心的不同态度。反应</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>人们在受到刺激源刺激的一刹那，不由自主地表现出来的不受思维控制的、瞬间真实的身体小动作。</p>
<h2 id="类型-1"><a href="#类型-1" class="headerlink" title="类型"></a>类型</h2><p>冻结、逃离、安慰、仰视、爱恨、领地、战斗、胜败</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>反应内心的不同态度。# 身体微反应</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>人们在受到刺激源刺激的一刹那，不由自主地表现出来的不受思维控制的、瞬间真实的身体小动作。</p>
<h2 id="类型-2"><a href="#类型-2" class="headerlink" title="类型"></a>类型</h2><p>冻结、逃离、安慰、仰视、爱恨、领地、战斗、胜败</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>反应内心的不同态度。反应</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>人们在受到刺激源刺激的一刹那，不由自主地表现出来的不受思维控制的、瞬间真实的身体小动作。</p>
<h2 id="类型-3"><a href="#类型-3" class="headerlink" title="类型"></a>类型</h2><p>冻结、逃离、安慰、仰视、爱恨、领地、战斗、胜败</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>反应内心的不同态度。</p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>逃离反应</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BA%AB%E4%BD%93%E5%BE%AE%E5%8F%8D%E5%BA%94/%E9%80%83%E7%A6%BB%E5%8F%8D%E5%BA%94/</url>
    <content><![CDATA[<h1 id="逃离反应"><a href="#逃离反应" class="headerlink" title="逃离反应"></a>逃离反应</h1><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>人面临威胁性刺激源时而又无法对抗，储备逃跑的能量的反应。</p>
<h2 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h2><p>面孔、肢体与刺激源拉远。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124026658.png" alt="image-20240908124026658">反应</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>人面临威胁性刺激源时而又无法对抗，储备逃跑的能量的反应。</p>
<h2 id="形式-1"><a href="#形式-1" class="headerlink" title="形式"></a>形式</h2><p>面孔、肢体与刺激源拉远。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124026658.png" alt="image-20240908124026658"># 逃离反应</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>人面临威胁性刺激源时而又无法对抗，储备逃跑的能量的反应。</p>
<h2 id="形式-2"><a href="#形式-2" class="headerlink" title="形式"></a>形式</h2><p>面孔、肢体与刺激源拉远。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124026658.png" alt="image-20240908124026658">反应</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>人面临威胁性刺激源时而又无法对抗，储备逃跑的能量的反应。</p>
<h2 id="形式-3"><a href="#形式-3" class="headerlink" title="形式"></a>形式</h2><p>面孔、肢体与刺激源拉远。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124026658.png" alt="image-20240908124026658"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>意义</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BE%A8%E6%9E%90%E6%83%85%E7%BB%AA%E3%80%81%E5%AF%BB%E6%89%BE%E5%BC%82%E5%8A%A8/%E6%84%8F%E4%B9%89/</url>
    <content><![CDATA[<h1 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h1><h2 id="辨析情绪的要点"><a href="#辨析情绪的要点" class="headerlink" title="辨析情绪的要点"></a>辨析情绪的要点</h2><p>发现情绪、寻找异动、排除干扰</p>
<h2 id="刺激源"><a href="#刺激源" class="headerlink" title="刺激源"></a>刺激源</h2><p>对人能够产生刺激的任何信息。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125057279.png" alt="image-20240908125057279">意义</p>
<h2 id="辨析情绪的要点-1"><a href="#辨析情绪的要点-1" class="headerlink" title="辨析情绪的要点"></a>辨析情绪的要点</h2><p>发现情绪、寻找异动、排除干扰</p>
<h2 id="刺激源-1"><a href="#刺激源-1" class="headerlink" title="刺激源"></a>刺激源</h2><p>对人能够产生刺激的任何信息。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125057279.png" alt="image-20240908125057279"># 意义</p>
<h2 id="辨析情绪的要点-2"><a href="#辨析情绪的要点-2" class="headerlink" title="辨析情绪的要点"></a>辨析情绪的要点</h2><p>发现情绪、寻找异动、排除干扰</p>
<h2 id="刺激源-2"><a href="#刺激源-2" class="headerlink" title="刺激源"></a>刺激源</h2><p>对人能够产生刺激的任何信息。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125057279.png" alt="image-20240908125057279">意义</p>
<h2 id="辨析情绪的要点-3"><a href="#辨析情绪的要点-3" class="headerlink" title="辨析情绪的要点"></a>辨析情绪的要点</h2><p>发现情绪、寻找异动、排除干扰</p>
<h2 id="刺激源-3"><a href="#刺激源-3" class="headerlink" title="刺激源"></a>刺激源</h2><p>对人能够产生刺激的任何信息。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125057279.png" alt="image-20240908125057279"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>领地反应</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BA%AB%E4%BD%93%E5%BE%AE%E5%8F%8D%E5%BA%94/%E9%A2%86%E5%9C%B0%E5%8F%8D%E5%BA%94/</url>
    <content><![CDATA[<h1 id="领地反应"><a href="#领地反应" class="headerlink" title="领地反应"></a>领地反应</h1><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>呈现出强势或弱势心态</p>
<h2 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h2><p>在一定的空间范围内，扩张或收缩肢体。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124128742.png" alt="image-20240908124128742">反应</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>呈现出强势或弱势心态</p>
<h2 id="形式-1"><a href="#形式-1" class="headerlink" title="形式"></a>形式</h2><p>在一定的空间范围内，扩张或收缩肢体。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124128742.png" alt="image-20240908124128742"># 领地反应</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>呈现出强势或弱势心态</p>
<h2 id="形式-2"><a href="#形式-2" class="headerlink" title="形式"></a>形式</h2><p>在一定的空间范围内，扩张或收缩肢体。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124128742.png" alt="image-20240908124128742">反应</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>呈现出强势或弱势心态</p>
<h2 id="形式-3"><a href="#形式-3" class="headerlink" title="形式"></a>形式</h2><p>在一定的空间范围内，扩张或收缩肢体。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124128742.png" alt="image-20240908124128742"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>排除干扰点</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BE%A8%E6%9E%90%E6%83%85%E7%BB%AA%E3%80%81%E5%AF%BB%E6%89%BE%E5%BC%82%E5%8A%A8/%E6%8E%92%E9%99%A4%E5%B9%B2%E6%89%B0%E7%82%B9/</url>
    <content><![CDATA[<h1 id="排除干扰点"><a href="#排除干扰点" class="headerlink" title="排除干扰点"></a>排除干扰点</h1><p><img src="/./../../TyporaImage/MicroExpression/image-20240908125135471.png" alt="image-20240908125135471"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125139081.png" alt="image-20240908125139081">扰点</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125135471.png" alt="image-20240908125135471"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125139081.png" alt="image-20240908125139081"># 排除干扰点</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125135471.png" alt="image-20240908125135471"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125139081.png" alt="image-20240908125139081">扰点</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125135471.png" alt="image-20240908125135471"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125139081.png" alt="image-20240908125139081"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>意义_9月8日01时08分22秒</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BE%A8%E6%9E%90%E6%83%85%E7%BB%AA%E3%80%81%E5%AF%BB%E6%89%BE%E5%BC%82%E5%8A%A8/%E6%84%8F%E4%B9%89_9%E6%9C%888%E6%97%A501%E6%97%B608%E5%88%8622%E7%A7%92/</url>
    <content><![CDATA[<h1 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h1><h2 id="辨析情绪的要点"><a href="#辨析情绪的要点" class="headerlink" title="辨析情绪的要点"></a>辨析情绪的要点</h2><p>发现情绪、寻找异动、排除干扰</p>
<h2 id="刺激源"><a href="#刺激源" class="headerlink" title="刺激源"></a>刺激源</h2><p>对人能够产生刺激的任何信息。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125057279.png" alt="image-20240908125057279">意义</p>
<h2 id="辨析情绪的要点-1"><a href="#辨析情绪的要点-1" class="headerlink" title="辨析情绪的要点"></a>辨析情绪的要点</h2><p>发现情绪、寻找异动、排除干扰</p>
<h2 id="刺激源-1"><a href="#刺激源-1" class="headerlink" title="刺激源"></a>刺激源</h2><p>对人能够产生刺激的任何信息。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125057279.png" alt="image-20240908125057279"># 意义</p>
<h2 id="辨析情绪的要点-2"><a href="#辨析情绪的要点-2" class="headerlink" title="辨析情绪的要点"></a>辨析情绪的要点</h2><p>发现情绪、寻找异动、排除干扰</p>
<h2 id="刺激源-2"><a href="#刺激源-2" class="headerlink" title="刺激源"></a>刺激源</h2><p>对人能够产生刺激的任何信息。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125057279.png" alt="image-20240908125057279">意义</p>
<h2 id="辨析情绪的要点-3"><a href="#辨析情绪的要点-3" class="headerlink" title="辨析情绪的要点"></a>辨析情绪的要点</h2><p>发现情绪、寻找异动、排除干扰</p>
<h2 id="刺激源-3"><a href="#刺激源-3" class="headerlink" title="刺激源"></a>刺激源</h2><p>对人能够产生刺激的任何信息。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125057279.png" alt="image-20240908125057279"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>查找异动点</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BE%A8%E6%9E%90%E6%83%85%E7%BB%AA%E3%80%81%E5%AF%BB%E6%89%BE%E5%BC%82%E5%8A%A8/%E6%9F%A5%E6%89%BE%E5%BC%82%E5%8A%A8%E7%82%B9/</url>
    <content><![CDATA[<h1 id="查找异动点"><a href="#查找异动点" class="headerlink" title="查找异动点"></a>查找异动点</h1><h2 id="一、心口不一"><a href="#一、心口不一" class="headerlink" title="一、心口不一"></a>一、心口不一</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908125108785.png" alt="image-20240908125108785"></p>
<h2 id="二、情绪错位"><a href="#二、情绪错位" class="headerlink" title="二、情绪错位"></a>二、情绪错位</h2><p>情绪种类错位、情绪程度不符</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125116589.png" alt="image-20240908125116589"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125120540.png" alt="image-20240908125120540"></p>
<h2 id="三、异动基线反应"><a href="#三、异动基线反应" class="headerlink" title="三、异动基线反应"></a>三、异动基线反应</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908125128572.png" alt="image-20240908125128572">动点</p>
<h2 id="一、心口不一-1"><a href="#一、心口不一-1" class="headerlink" title="一、心口不一"></a>一、心口不一</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908125108785.png" alt="image-20240908125108785"></p>
<h2 id="二、情绪错位-1"><a href="#二、情绪错位-1" class="headerlink" title="二、情绪错位"></a>二、情绪错位</h2><p>情绪种类错位、情绪程度不符</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125116589.png" alt="image-20240908125116589"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125120540.png" alt="image-20240908125120540"></p>
<h2 id="三、异动基线反应-1"><a href="#三、异动基线反应-1" class="headerlink" title="三、异动基线反应"></a>三、异动基线反应</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908125128572.png" alt="image-20240908125128572"># 查找异动点</p>
<h2 id="一、心口不一-2"><a href="#一、心口不一-2" class="headerlink" title="一、心口不一"></a>一、心口不一</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908125108785.png" alt="image-20240908125108785"></p>
<h2 id="二、情绪错位-2"><a href="#二、情绪错位-2" class="headerlink" title="二、情绪错位"></a>二、情绪错位</h2><p>情绪种类错位、情绪程度不符</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125116589.png" alt="image-20240908125116589"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125120540.png" alt="image-20240908125120540"></p>
<h2 id="三、异动基线反应-2"><a href="#三、异动基线反应-2" class="headerlink" title="三、异动基线反应"></a>三、异动基线反应</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908125128572.png" alt="image-20240908125128572">动点</p>
<h2 id="一、心口不一-3"><a href="#一、心口不一-3" class="headerlink" title="一、心口不一"></a>一、心口不一</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908125108785.png" alt="image-20240908125108785"></p>
<h2 id="二、情绪错位-3"><a href="#二、情绪错位-3" class="headerlink" title="二、情绪错位"></a>二、情绪错位</h2><p>情绪种类错位、情绪程度不符</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125116589.png" alt="image-20240908125116589"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125120540.png" alt="image-20240908125120540"></p>
<h2 id="三、异动基线反应-3"><a href="#三、异动基线反应-3" class="headerlink" title="三、异动基线反应"></a>三、异动基线反应</h2><p><img src="/./../../TyporaImage/MicroExpression/image-20240908125128572.png" alt="image-20240908125128572"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>契合表达的意义</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BE%A8%E6%9E%90%E6%84%9F%E8%A7%89%E3%80%81%E5%A5%91%E5%90%88%E8%A1%A8%E8%BE%BE/%E5%A5%91%E5%90%88%E8%A1%A8%E8%BE%BE%E7%9A%84%E6%84%8F%E4%B9%89/</url>
    <content><![CDATA[<h1 id="契合表达的意义"><a href="#契合表达的意义" class="headerlink" title="契合表达的意义"></a>契合表达的意义</h1><h2 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h2><p>让辨析者的感觉与被测人的表达相契合。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125242958.png" alt="image-20240908125242958">意义</p>
<h2 id="意义-1"><a href="#意义-1" class="headerlink" title="意义"></a>意义</h2><p>让辨析者的感觉与被测人的表达相契合。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125242958.png" alt="image-20240908125242958"># 契合表达的意义</p>
<h2 id="意义-2"><a href="#意义-2" class="headerlink" title="意义"></a>意义</h2><p>让辨析者的感觉与被测人的表达相契合。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125242958.png" alt="image-20240908125242958">意义</p>
<h2 id="意义-3"><a href="#意义-3" class="headerlink" title="意义"></a>意义</h2><p>让辨析者的感觉与被测人的表达相契合。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125242958.png" alt="image-20240908125242958"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>表达者动作解析</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BE%A8%E6%9E%90%E6%84%9F%E8%A7%89%E3%80%81%E5%A5%91%E5%90%88%E8%A1%A8%E8%BE%BE/%E8%A1%A8%E8%BE%BE%E8%80%85%E5%8A%A8%E4%BD%9C%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<h1 id="表达者动作解析"><a href="#表达者动作解析" class="headerlink" title="表达者动作解析"></a>表达者动作解析</h1><p>一、详细、细致地观察表达，注意表情动作与语言相匹配。</p>
<p>二、避免对表达观察不够细致造成的误读误判。解析</p>
<p>一、详细、细致地观察表达，注意表情动作与语言相匹配。</p>
<p>二、避免对表达观察不够细致造成的误读误判。# 表达者动作解析</p>
<p>一、详细、细致地观察表达，注意表情动作与语言相匹配。</p>
<p>二、避免对表达观察不够细致造成的误读误判。解析</p>
<p>一、详细、细致地观察表达，注意表情动作与语言相匹配。</p>
<p>二、避免对表达观察不够细致造成的误读误判。</p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>表达者心理求证</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BE%A8%E6%9E%90%E6%84%9F%E8%A7%89%E3%80%81%E5%A5%91%E5%90%88%E8%A1%A8%E8%BE%BE/%E8%A1%A8%E8%BE%BE%E8%80%85%E5%BF%83%E7%90%86%E6%B1%82%E8%AF%81/</url>
    <content><![CDATA[<h1 id="表达者心理求证"><a href="#表达者心理求证" class="headerlink" title="表达者心理求证"></a>表达者心理求证</h1><p><img src="/./../../TyporaImage/MicroExpression/image-20240908125252746.png" alt="image-20240908125252746">求证</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125252746.png" alt="image-20240908125252746"># 表达者心理求证</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125252746.png" alt="image-20240908125252746">求证</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125252746.png" alt="image-20240908125252746"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>观察者感觉辨析</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BE%A8%E6%9E%90%E6%84%9F%E8%A7%89%E3%80%81%E5%A5%91%E5%90%88%E8%A1%A8%E8%BE%BE/%E8%A7%82%E5%AF%9F%E8%80%85%E6%84%9F%E8%A7%89%E8%BE%A8%E6%9E%90/</url>
    <content><![CDATA[<h1 id="观察者感觉辨析"><a href="#观察者感觉辨析" class="headerlink" title="观察者感觉辨析"></a>观察者感觉辨析</h1><p><img src="/./../../TyporaImage/MicroExpression/image-20240908125259666.png" alt="image-20240908125259666">辨析</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125259666.png" alt="image-20240908125259666"># 观察者感觉辨析</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125259666.png" alt="image-20240908125259666">辨析</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908125259666.png" alt="image-20240908125259666"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>战斗反应</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E8%BA%AB%E4%BD%93%E5%BE%AE%E5%8F%8D%E5%BA%94/%E6%88%98%E6%96%97%E5%8F%8D%E5%BA%94/</url>
    <content><![CDATA[<h1 id="战斗反应"><a href="#战斗反应" class="headerlink" title="战斗反应"></a>战斗反应</h1><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>愤怒的最强体现，是对自我进攻和抗击能力做出评估后做出的选择。</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>有战斗态和防御态</p>
<h3 id="战斗态"><a href="#战斗态" class="headerlink" title="战斗态"></a>战斗态</h3><h4 id="①战斗情绪较低"><a href="#①战斗情绪较低" class="headerlink" title="①战斗情绪较低"></a>①战斗情绪较低</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124150425.png" alt="image-20240908124150425"></p>
<h4 id="②战斗情绪较高"><a href="#②战斗情绪较高" class="headerlink" title="②战斗情绪较高"></a>②战斗情绪较高</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124200320.png" alt="image-20240908124200320"></p>
<h3 id="防御态"><a href="#防御态" class="headerlink" title="防御态"></a>防御态</h3><p>防御的姿势（双手交叉环抱住自己）</p>
<h4 id="①防御情绪较低"><a href="#①防御情绪较低" class="headerlink" title="①防御情绪较低"></a>①防御情绪较低</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124218485.png" alt="image-20240908124218485"></p>
<h4 id="②防御情绪较高"><a href="#②防御情绪较高" class="headerlink" title="②防御情绪较高"></a>②防御情绪较高</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124231410.png" alt="image-20240908124231410">反应</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>愤怒的最强体现，是对自我进攻和抗击能力做出评估后做出的选择。</p>
<h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>有战斗态和防御态</p>
<h3 id="战斗态-1"><a href="#战斗态-1" class="headerlink" title="战斗态"></a>战斗态</h3><h4 id="①战斗情绪较低-1"><a href="#①战斗情绪较低-1" class="headerlink" title="①战斗情绪较低"></a>①战斗情绪较低</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124150425.png" alt="image-20240908124150425"></p>
<h4 id="②战斗情绪较高-1"><a href="#②战斗情绪较高-1" class="headerlink" title="②战斗情绪较高"></a>②战斗情绪较高</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124200320.png" alt="image-20240908124200320"></p>
<h3 id="防御态-1"><a href="#防御态-1" class="headerlink" title="防御态"></a>防御态</h3><p>防御的姿势（双手交叉环抱住自己）</p>
<h4 id="①防御情绪较低-1"><a href="#①防御情绪较低-1" class="headerlink" title="①防御情绪较低"></a>①防御情绪较低</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124218485.png" alt="image-20240908124218485"></p>
<h4 id="②防御情绪较高-1"><a href="#②防御情绪较高-1" class="headerlink" title="②防御情绪较高"></a>②防御情绪较高</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124231410.png" alt="image-20240908124231410"># 战斗反应</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>愤怒的最强体现，是对自我进攻和抗击能力做出评估后做出的选择。</p>
<h2 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h2><p>有战斗态和防御态</p>
<h3 id="战斗态-2"><a href="#战斗态-2" class="headerlink" title="战斗态"></a>战斗态</h3><h4 id="①战斗情绪较低-2"><a href="#①战斗情绪较低-2" class="headerlink" title="①战斗情绪较低"></a>①战斗情绪较低</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124150425.png" alt="image-20240908124150425"></p>
<h4 id="②战斗情绪较高-2"><a href="#②战斗情绪较高-2" class="headerlink" title="②战斗情绪较高"></a>②战斗情绪较高</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124200320.png" alt="image-20240908124200320"></p>
<h3 id="防御态-2"><a href="#防御态-2" class="headerlink" title="防御态"></a>防御态</h3><p>防御的姿势（双手交叉环抱住自己）</p>
<h4 id="①防御情绪较低-2"><a href="#①防御情绪较低-2" class="headerlink" title="①防御情绪较低"></a>①防御情绪较低</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124218485.png" alt="image-20240908124218485"></p>
<h4 id="②防御情绪较高-2"><a href="#②防御情绪较高-2" class="headerlink" title="②防御情绪较高"></a>②防御情绪较高</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124231410.png" alt="image-20240908124231410">反应</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>愤怒的最强体现，是对自我进攻和抗击能力做出评估后做出的选择。</p>
<h2 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h2><p>有战斗态和防御态</p>
<h3 id="战斗态-3"><a href="#战斗态-3" class="headerlink" title="战斗态"></a>战斗态</h3><h4 id="①战斗情绪较低-3"><a href="#①战斗情绪较低-3" class="headerlink" title="①战斗情绪较低"></a>①战斗情绪较低</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124150425.png" alt="image-20240908124150425"></p>
<h4 id="②战斗情绪较高-3"><a href="#②战斗情绪较高-3" class="headerlink" title="②战斗情绪较高"></a>②战斗情绪较高</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124200320.png" alt="image-20240908124200320"></p>
<h3 id="防御态-3"><a href="#防御态-3" class="headerlink" title="防御态"></a>防御态</h3><p>防御的姿势（双手交叉环抱住自己）</p>
<h4 id="①防御情绪较低-3"><a href="#①防御情绪较低-3" class="headerlink" title="①防御情绪较低"></a>①防御情绪较低</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124218485.png" alt="image-20240908124218485"></p>
<h4 id="②防御情绪较高-3"><a href="#②防御情绪较高-3" class="headerlink" title="②防御情绪较高"></a>②防御情绪较高</h4><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124231410.png" alt="image-20240908124231410"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>反应性行为的特征和意义</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E9%9D%9E%E8%A8%80%E8%AF%AD%E8%A1%8C%E4%B8%BA/%E5%8F%8D%E5%BA%94%E6%80%A7%E8%A1%8C%E4%B8%BA%E7%9A%84%E7%89%B9%E5%BE%81%E5%92%8C%E6%84%8F%E4%B9%89/</url>
    <content><![CDATA[<h1 id="反应性行为的特征和意义"><a href="#反应性行为的特征和意义" class="headerlink" title="反应性行为的特征和意义"></a>反应性行为的特征和意义</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>指的是反射性的生理反应，难以控制的生理反应。</p>
<h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><p>副语言行为、头部反应</p>
<h3 id="副语言行为"><a href="#副语言行为" class="headerlink" title="副语言行为"></a>副语言行为</h3><p>有声音而没有固定语义的“语言”，是指说话言语内容之外的语言特征</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124546090.png" alt="image-20240908124546090"></p>
<h3 id="头部反应"><a href="#头部反应" class="headerlink" title="头部反应"></a>头部反应</h3><p>指头部反射性的生理反应，难以自主控制的生理反应。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124558402.png" alt="image-20240908124558402">意义</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>指的是反射性的生理反应，难以控制的生理反应。</p>
<h2 id="类型-1"><a href="#类型-1" class="headerlink" title="类型"></a>类型</h2><p>副语言行为、头部反应</p>
<h3 id="副语言行为-1"><a href="#副语言行为-1" class="headerlink" title="副语言行为"></a>副语言行为</h3><p>有声音而没有固定语义的“语言”，是指说话言语内容之外的语言特征</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124546090.png" alt="image-20240908124546090"></p>
<h3 id="头部反应-1"><a href="#头部反应-1" class="headerlink" title="头部反应"></a>头部反应</h3><p>指头部反射性的生理反应，难以自主控制的生理反应。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124558402.png" alt="image-20240908124558402"># 反应性行为的特征和意义</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>指的是反射性的生理反应，难以控制的生理反应。</p>
<h2 id="类型-2"><a href="#类型-2" class="headerlink" title="类型"></a>类型</h2><p>副语言行为、头部反应</p>
<h3 id="副语言行为-2"><a href="#副语言行为-2" class="headerlink" title="副语言行为"></a>副语言行为</h3><p>有声音而没有固定语义的“语言”，是指说话言语内容之外的语言特征</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124546090.png" alt="image-20240908124546090"></p>
<h3 id="头部反应-2"><a href="#头部反应-2" class="headerlink" title="头部反应"></a>头部反应</h3><p>指头部反射性的生理反应，难以自主控制的生理反应。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124558402.png" alt="image-20240908124558402">意义</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>指的是反射性的生理反应，难以控制的生理反应。</p>
<h2 id="类型-3"><a href="#类型-3" class="headerlink" title="类型"></a>类型</h2><p>副语言行为、头部反应</p>
<h3 id="副语言行为-3"><a href="#副语言行为-3" class="headerlink" title="副语言行为"></a>副语言行为</h3><p>有声音而没有固定语义的“语言”，是指说话言语内容之外的语言特征</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124546090.png" alt="image-20240908124546090"></p>
<h3 id="头部反应-3"><a href="#头部反应-3" class="headerlink" title="头部反应"></a>头部反应</h3><p>指头部反射性的生理反应，难以自主控制的生理反应。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124558402.png" alt="image-20240908124558402"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>无意控制的肢体动作的特征和意义</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E9%9D%9E%E8%A8%80%E8%AF%AD%E8%A1%8C%E4%B8%BA/%E6%97%A0%E6%84%8F%E6%8E%A7%E5%88%B6%E7%9A%84%E8%82%A2%E4%BD%93%E5%8A%A8%E4%BD%9C%E7%9A%84%E7%89%B9%E5%BE%81%E5%92%8C%E6%84%8F%E4%B9%89/</url>
    <content><![CDATA[<h1 id="无意控制的肢体动作的特征和意义"><a href="#无意控制的肢体动作的特征和意义" class="headerlink" title="无意控制的肢体动作的特征和意义"></a>无意控制的肢体动作的特征和意义</h1><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><h3 id="面部表情"><a href="#面部表情" class="headerlink" title="面部表情"></a>面部表情</h3><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124610061.png" alt="image-20240908124610061"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124613788.png" alt="image-20240908124613788"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124618184.png" alt="image-20240908124618184"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124621974.png" alt="image-20240908124621974"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124625943.png" alt="image-20240908124625943"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124630560.png" alt="image-20240908124630560"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124639647.png" alt="image-20240908124639647"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124646290.png" alt="image-20240908124646290"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124650471.png" alt="image-20240908124650471"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124655530.png" alt="image-20240908124655530"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124702715.png" alt="image-20240908124702715"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124707448.png" alt="image-20240908124707448">意义</p>
<h2 id="类型-1"><a href="#类型-1" class="headerlink" title="类型"></a>类型</h2><h3 id="面部表情-1"><a href="#面部表情-1" class="headerlink" title="面部表情"></a>面部表情</h3><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124610061.png" alt="image-20240908124610061"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124613788.png" alt="image-20240908124613788"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124618184.png" alt="image-20240908124618184"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124621974.png" alt="image-20240908124621974"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124625943.png" alt="image-20240908124625943"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124630560.png" alt="image-20240908124630560"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124639647.png" alt="image-20240908124639647"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124646290.png" alt="image-20240908124646290"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124650471.png" alt="image-20240908124650471"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124655530.png" alt="image-20240908124655530"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124702715.png" alt="image-20240908124702715"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124707448.png" alt="image-20240908124707448"># 无意控制的肢体动作的特征和意义</p>
<h2 id="类型-2"><a href="#类型-2" class="headerlink" title="类型"></a>类型</h2><h3 id="面部表情-2"><a href="#面部表情-2" class="headerlink" title="面部表情"></a>面部表情</h3><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124610061.png" alt="image-20240908124610061"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124613788.png" alt="image-20240908124613788"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124618184.png" alt="image-20240908124618184"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124621974.png" alt="image-20240908124621974"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124625943.png" alt="image-20240908124625943"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124630560.png" alt="image-20240908124630560"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124639647.png" alt="image-20240908124639647"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124646290.png" alt="image-20240908124646290"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124650471.png" alt="image-20240908124650471"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124655530.png" alt="image-20240908124655530"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124702715.png" alt="image-20240908124702715"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124707448.png" alt="image-20240908124707448">意义</p>
<h2 id="类型-3"><a href="#类型-3" class="headerlink" title="类型"></a>类型</h2><h3 id="面部表情-3"><a href="#面部表情-3" class="headerlink" title="面部表情"></a>面部表情</h3><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124610061.png" alt="image-20240908124610061"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124613788.png" alt="image-20240908124613788"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124618184.png" alt="image-20240908124618184"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124621974.png" alt="image-20240908124621974"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124625943.png" alt="image-20240908124625943"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124630560.png" alt="image-20240908124630560"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124639647.png" alt="image-20240908124639647"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124646290.png" alt="image-20240908124646290"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124650471.png" alt="image-20240908124650471"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124655530.png" alt="image-20240908124655530"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124702715.png" alt="image-20240908124702715"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124707448.png" alt="image-20240908124707448"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>有意控制的动作的特征和意义</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E9%9D%9E%E8%A8%80%E8%AF%AD%E8%A1%8C%E4%B8%BA/%E6%9C%89%E6%84%8F%E6%8E%A7%E5%88%B6%E7%9A%84%E5%8A%A8%E4%BD%9C%E7%9A%84%E7%89%B9%E5%BE%81%E5%92%8C%E6%84%8F%E4%B9%89/</url>
    <content><![CDATA[<h1 id="有意控制的动作的特征和意义"><a href="#有意控制的动作的特征和意义" class="headerlink" title="有意控制的动作的特征和意义"></a>有意控制的动作的特征和意义</h1><p><img src="/./../../TyporaImage/MicroExpression/image-20240908124714083.png" alt="image-20240908124714083"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124720354.png" alt="image-20240908124720354">意义</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124714083.png" alt="image-20240908124714083"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124720354.png" alt="image-20240908124720354"># 有意控制的动作的特征和意义</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124714083.png" alt="image-20240908124714083"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124720354.png" alt="image-20240908124720354">意义</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124714083.png" alt="image-20240908124714083"></p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124720354.png" alt="image-20240908124720354"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>非言语行为</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E9%9D%9E%E8%A8%80%E8%AF%AD%E8%A1%8C%E4%B8%BA/%E9%9D%9E%E8%A8%80%E8%AF%AD%E8%A1%8C%E4%B8%BA/</url>
    <content><![CDATA[<h1 id="非言语行为"><a href="#非言语行为" class="headerlink" title="非言语行为"></a>非言语行为</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>是指与说话者言语行为相伴而产生的表情、动作、颜色、姿势、以及副语言行为等等。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124505443.png" alt="image-20240908124505443">语行为</p>
<h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><p>是指与说话者言语行为相伴而产生的表情、动作、颜色、姿势、以及副语言行为等等。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124505443.png" alt="image-20240908124505443">#  非言语行为</p>
<h2 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h2><p>是指与说话者言语行为相伴而产生的表情、动作、颜色、姿势、以及副语言行为等等。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124505443.png" alt="image-20240908124505443">语行为</p>
<h2 id="概念-3"><a href="#概念-3" class="headerlink" title="概念"></a>概念</h2><p>是指与说话者言语行为相伴而产生的表情、动作、颜色、姿势、以及副语言行为等等。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908124505443.png" alt="image-20240908124505443"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>基线反应</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E9%9D%A2%E9%83%A8%E5%BE%AE%E8%A1%A8%E6%83%85/%E5%9F%BA%E7%BA%BF%E5%8F%8D%E5%BA%94/</url>
    <content><![CDATA[<h1 id="基线反应"><a href="#基线反应" class="headerlink" title="基线反应"></a>基线反应</h1><h2 id="基线"><a href="#基线" class="headerlink" title="基线"></a>基线</h2><p>基本表情线。正常状态下，一个人肌肉的位置和形态。</p>
<h2 id="基线反应-1"><a href="#基线反应-1" class="headerlink" title="基线反应"></a>基线反应</h2><p>习惯性的表情反应特点。由于肌肉的生长与表达习惯而形成的情绪反应特点。基线反应，因人而异。反应</p>
<h2 id="基线-1"><a href="#基线-1" class="headerlink" title="基线"></a>基线</h2><p>基本表情线。正常状态下，一个人肌肉的位置和形态。</p>
<h2 id="基线反应-2"><a href="#基线反应-2" class="headerlink" title="基线反应"></a>基线反应</h2><p>习惯性的表情反应特点。由于肌肉的生长与表达习惯而形成的情绪反应特点。基线反应，因人而异。# 基线反应</p>
<h2 id="基线-2"><a href="#基线-2" class="headerlink" title="基线"></a>基线</h2><p>基本表情线。正常状态下，一个人肌肉的位置和形态。</p>
<h2 id="基线反应-3"><a href="#基线反应-3" class="headerlink" title="基线反应"></a>基线反应</h2><p>习惯性的表情反应特点。由于肌肉的生长与表达习惯而形成的情绪反应特点。基线反应，因人而异。反应</p>
<h2 id="基线-3"><a href="#基线-3" class="headerlink" title="基线"></a>基线</h2><p>基本表情线。正常状态下，一个人肌肉的位置和形态。</p>
<h2 id="基线反应-4"><a href="#基线反应-4" class="headerlink" title="基线反应"></a>基线反应</h2><p>习惯性的表情反应特点。由于肌肉的生长与表达习惯而形成的情绪反应特点。基线反应，因人而异。</p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>厌恶、轻蔑</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E9%9D%A2%E9%83%A8%E5%BE%AE%E8%A1%A8%E6%83%85/%E5%8E%8C%E6%81%B6%E3%80%81%E8%BD%BB%E8%94%91/</url>
    <content><![CDATA[<h1 id="厌恶、轻蔑"><a href="#厌恶、轻蔑" class="headerlink" title="厌恶、轻蔑"></a>厌恶、轻蔑</h1><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>对刺激源的否定和趋远。</p>
<h2 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h2><p>皱眉、闭眼、上唇提升。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123723576.png" alt="image-20240908123723576">轻蔑</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>对刺激源的否定和趋远。</p>
<h2 id="形式-1"><a href="#形式-1" class="headerlink" title="形式"></a>形式</h2><p>皱眉、闭眼、上唇提升。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123723576.png" alt="image-20240908123723576"># 厌恶、轻蔑</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>对刺激源的否定和趋远。</p>
<h2 id="形式-2"><a href="#形式-2" class="headerlink" title="形式"></a>形式</h2><p>皱眉、闭眼、上唇提升。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123723576.png" alt="image-20240908123723576">轻蔑</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>对刺激源的否定和趋远。</p>
<h2 id="形式-3"><a href="#形式-3" class="headerlink" title="形式"></a>形式</h2><p>皱眉、闭眼、上唇提升。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123723576.png" alt="image-20240908123723576"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>悲伤</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E9%9D%A2%E9%83%A8%E5%BE%AE%E8%A1%A8%E6%83%85/%E6%82%B2%E4%BC%A4/</url>
    <content><![CDATA[<h1 id="悲伤"><a href="#悲伤" class="headerlink" title="悲伤"></a>悲伤</h1><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>面临具有威胁和伤害的不利结果时，激发出来的伤心难过的情绪状态。</p>
<h2 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h2><p>眉头上扬、闭眼、咧嘴</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123802940.png" alt="image-20240908123802940">悲伤</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>面临具有威胁和伤害的不利结果时，激发出来的伤心难过的情绪状态。</p>
<h2 id="形式-1"><a href="#形式-1" class="headerlink" title="形式"></a>形式</h2><p>眉头上扬、闭眼、咧嘴</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123802940.png" alt="image-20240908123802940"># 悲伤</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>面临具有威胁和伤害的不利结果时，激发出来的伤心难过的情绪状态。</p>
<h2 id="形式-2"><a href="#形式-2" class="headerlink" title="形式"></a>形式</h2><p>眉头上扬、闭眼、咧嘴</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123802940.png" alt="image-20240908123802940">悲伤</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>面临具有威胁和伤害的不利结果时，激发出来的伤心难过的情绪状态。</p>
<h2 id="形式-3"><a href="#形式-3" class="headerlink" title="形式"></a>形式</h2><p>眉头上扬、闭眼、咧嘴</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123802940.png" alt="image-20240908123802940"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>恐惧</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E9%9D%A2%E9%83%A8%E5%BE%AE%E8%A1%A8%E6%83%85/%E6%81%90%E6%83%A7/</url>
    <content><![CDATA[<h1 id="恐惧"><a href="#恐惧" class="headerlink" title="恐惧"></a>恐惧</h1><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>面临刺激源的时，产生的一种无力面对的惊慌不安的情绪状态。</p>
<h2 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h2><p>皱眉、眉头抬高、瞪大警觉的眼睛</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123752032.png" alt="image-20240908123752032">恐惧</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>面临刺激源的时，产生的一种无力面对的惊慌不安的情绪状态。</p>
<h2 id="形式-1"><a href="#形式-1" class="headerlink" title="形式"></a>形式</h2><p>皱眉、眉头抬高、瞪大警觉的眼睛</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123752032.png" alt="image-20240908123752032"># 恐惧</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>面临刺激源的时，产生的一种无力面对的惊慌不安的情绪状态。</p>
<h2 id="形式-2"><a href="#形式-2" class="headerlink" title="形式"></a>形式</h2><p>皱眉、眉头抬高、瞪大警觉的眼睛</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123752032.png" alt="image-20240908123752032">恐惧</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>面临刺激源的时，产生的一种无力面对的惊慌不安的情绪状态。</p>
<h2 id="形式-3"><a href="#形式-3" class="headerlink" title="形式"></a>形式</h2><p>皱眉、眉头抬高、瞪大警觉的眼睛</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123752032.png" alt="image-20240908123752032"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>惊讶</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E9%9D%A2%E9%83%A8%E5%BE%AE%E8%A1%A8%E6%83%85/%E6%83%8A%E8%AE%B6/</url>
    <content><![CDATA[<h1 id="惊讶"><a href="#惊讶" class="headerlink" title="惊讶"></a>惊讶</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>惊讶是面临外部刺激时最刚开始时出现的情绪状态。</p>
<h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>对刺激源的意外和关注。</p>
<h2 id="形态"><a href="#形态" class="headerlink" title="形态"></a>形态</h2><p>抬起眉毛、睁大眼睛、张口吸气</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123712217.png" alt="image-20240908123712217">惊讶</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>惊讶是面临外部刺激时最刚开始时出现的情绪状态。</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>对刺激源的意外和关注。</p>
<h2 id="形态-1"><a href="#形态-1" class="headerlink" title="形态"></a>形态</h2><p>抬起眉毛、睁大眼睛、张口吸气</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123712217.png" alt="image-20240908123712217"># 惊讶</p>
<h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>惊讶是面临外部刺激时最刚开始时出现的情绪状态。</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>对刺激源的意外和关注。</p>
<h2 id="形态-2"><a href="#形态-2" class="headerlink" title="形态"></a>形态</h2><p>抬起眉毛、睁大眼睛、张口吸气</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123712217.png" alt="image-20240908123712217">惊讶</p>
<h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><p>惊讶是面临外部刺激时最刚开始时出现的情绪状态。</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>对刺激源的意外和关注。</p>
<h2 id="形态-3"><a href="#形态-3" class="headerlink" title="形态"></a>形态</h2><p>抬起眉毛、睁大眼睛、张口吸气</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123712217.png" alt="image-20240908123712217"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>愤怒</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E9%9D%A2%E9%83%A8%E5%BE%AE%E8%A1%A8%E6%83%85/%E6%84%A4%E6%80%92/</url>
    <content><![CDATA[<h1 id="愤怒"><a href="#愤怒" class="headerlink" title="愤怒"></a>愤怒</h1><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>是面临威胁和伤害刺激源时，激发出的一种通过攻击来消除危险的情绪状态。</p>
<h2 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h2><p>皱眉、瞪眼、闭嘴鼓腮或龇牙咧嘴。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123739429.png" alt="image-20240908123739429">愤怒</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>是面临威胁和伤害刺激源时，激发出的一种通过攻击来消除危险的情绪状态。</p>
<h2 id="形式-1"><a href="#形式-1" class="headerlink" title="形式"></a>形式</h2><p>皱眉、瞪眼、闭嘴鼓腮或龇牙咧嘴。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123739429.png" alt="image-20240908123739429"># 愤怒</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>是面临威胁和伤害刺激源时，激发出的一种通过攻击来消除危险的情绪状态。</p>
<h2 id="形式-2"><a href="#形式-2" class="headerlink" title="形式"></a>形式</h2><p>皱眉、瞪眼、闭嘴鼓腮或龇牙咧嘴。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123739429.png" alt="image-20240908123739429">愤怒</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>是面临威胁和伤害刺激源时，激发出的一种通过攻击来消除危险的情绪状态。</p>
<h2 id="形式-3"><a href="#形式-3" class="headerlink" title="形式"></a>形式</h2><p>皱眉、瞪眼、闭嘴鼓腮或龇牙咧嘴。</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123739429.png" alt="image-20240908123739429"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>愉悦</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E9%9D%A2%E9%83%A8%E5%BE%AE%E8%A1%A8%E6%83%85/%E6%84%89%E6%82%A6/</url>
    <content><![CDATA[<h1 id="愉悦"><a href="#愉悦" class="headerlink" title="愉悦"></a>愉悦</h1><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>刺激源高于主观预期时，激发出来的一种自我满足和超越自我满足的情绪状态。</p>
<h2 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h2><p>眯眼、咧嘴、嘴角上扬</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123811975.png" alt="image-20240908123811975">愉悦</p>
<h2 id="本质-1"><a href="#本质-1" class="headerlink" title="本质"></a>本质</h2><p>刺激源高于主观预期时，激发出来的一种自我满足和超越自我满足的情绪状态。</p>
<h2 id="形式-1"><a href="#形式-1" class="headerlink" title="形式"></a>形式</h2><p>眯眼、咧嘴、嘴角上扬</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123811975.png" alt="image-20240908123811975"># 愉悦</p>
<h2 id="本质-2"><a href="#本质-2" class="headerlink" title="本质"></a>本质</h2><p>刺激源高于主观预期时，激发出来的一种自我满足和超越自我满足的情绪状态。</p>
<h2 id="形式-2"><a href="#形式-2" class="headerlink" title="形式"></a>形式</h2><p>眯眼、咧嘴、嘴角上扬</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123811975.png" alt="image-20240908123811975">愉悦</p>
<h2 id="本质-3"><a href="#本质-3" class="headerlink" title="本质"></a>本质</h2><p>刺激源高于主观预期时，激发出来的一种自我满足和超越自我满足的情绪状态。</p>
<h2 id="形式-3"><a href="#形式-3" class="headerlink" title="形式"></a>形式</h2><p>眯眼、咧嘴、嘴角上扬</p>
<p><img src="/./../../TyporaImage/MicroExpression/image-20240908123811975.png" alt="image-20240908123811975"></p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>面部表情基本形态</title>
    <url>/2024/11/08/TyporaNotes/Typora_MicroExpression/%E9%9D%A2%E9%83%A8%E5%BE%AE%E8%A1%A8%E6%83%85/%E9%9D%A2%E9%83%A8%E8%A1%A8%E6%83%85%E5%9F%BA%E6%9C%AC%E5%BD%A2%E6%80%81/</url>
    <content><![CDATA[<h1 id="面部表情基本形态"><a href="#面部表情基本形态" class="headerlink" title="面部表情基本形态"></a>面部表情基本形态</h1><p>惊讶、恐惧、厌恶、轻蔑、愤怒、悲伤、快乐。形态</p>
<p>惊讶、恐惧、厌恶、轻蔑、愤怒、悲伤、快乐。# 面部表情基本形态</p>
<p>惊讶、恐惧、厌恶、轻蔑、愤怒、悲伤、快乐。形态</p>
<p>惊讶、恐惧、厌恶、轻蔑、愤怒、悲伤、快乐。</p>
]]></content>
      <categories>
        <category>微表情</category>
      </categories>
  </entry>
  <entry>
    <title>JavaScript _注释</title>
    <url>/2024/11/08/TyporaNotes/Typora_JavaWeb/JavaScript%20_%E6%B3%A8%E9%87%8A/</url>
    <content><![CDATA[<h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><img src="/../TyporaImage/image-20240514220043774.png" alt="image-20240514220043774"></p>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
</search>
