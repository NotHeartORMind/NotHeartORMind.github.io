# 反射

## 定义

反射（Reflection）是计算机科学中的一种机制，它允许程序在运行时检查和修改自身的结构和行为。这包括获取类的名称、方法、字段和构造函数等信息，并可以动态地调用方法和访问字段。

## 组成部分

### 1.类对象

反射的基础，通过类对象可以获取类的详细信息。

### 2.字段（Field）

类中的变量，通过反射可以访问和修改字段的值。

### 3.方法（Method）

类中的函数，通过反射可以调用方法。

### 4.构造函数（Constructor）

用于创建类的实例，通过反射可以调用构造函数来创建对象。

### 5.注解（Annotation）

反射可以用来检查类、方法和字段上的注解。

## 结构形式

### 1.静态反射

在编译时就已经知道和定义好的反射。

### 2.动态反射

在运行时才确定的反射，主要是Java中的反射机制。

## 分类

### 1.类反射

获取类的信息，如类名、修饰符、父类、接口等。

### 2.成员反射

获取类的成员信息，如字段、方法、构造函数等。

### 3.行为反射

调用类的方法或构造函数，修改类的字段值。

## 目的

反射的主要目的是提供一种动态访问和操作类及其成员的机制，使得程序在运行时能够灵活地处理不同的类和对象，适应各种动态变化的需求。

## 基本原理

### 物理描述

反射通过Java提供的反射API来实现。程序在运行时可以加载类，通过类对象获取类的详细信息，并可以动态地调用类的方法、访问和修改类的字段。

### 数学描述

在运行时，通过Class类和相关反射API（如Method、Field、Constructor）实现对类的动态操作。
